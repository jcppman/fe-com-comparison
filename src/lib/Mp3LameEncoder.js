module.exports = function(Mp3LameEncoderConfig) {
var Module = Mp3LameEncoderConfig;

// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;

// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)

    ENVIRONMENT_IS_WEB = true;
if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function shell_read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (ENVIRONMENT_IS_WORKER) {
    Module['readBinary'] = function readBinary(url) {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', url, false);
      xhr.responseType = 'arraybuffer';
      xhr.send(null);
      return new Uint8Array(xhr.response);
    };
  }

  Module['readAsync'] = function readAsync(url, onload, onerror) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function xhr_onload() {
      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
        onload(xhr.response);
      } else {
        onerror();
      }
    };
    xhr.onerror = onerror;
    xhr.send(null);
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function shell_print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function shell_printErr(x) {
      console.warn(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}
if (!Module['quit']) {
  Module['quit'] = function(status, toThrow) {
    throw toThrow;
  }
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides = undefined;



// {{PREAMBLE_ADDITIONS}}

// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
    return value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      return Module['dynCall_' + sig].apply(null, [ptr].concat(args));
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      // optimize away arguments usage in common cases
      if (sig.length === 1) {
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func);
        };
      } else if (sig.length === 2) {
        sigCache[func] = function dynCall_wrapper(arg) {
          return Runtime.dynCall(sig, func, [arg]);
        };
      } else {
        // general case
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func, Array.prototype.slice.call(arguments));
        };
      }
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = HEAP32[DYNAMICTOP_PTR>>2];var end = (((ret + size + 15)|0) & -16);HEAP32[DYNAMICTOP_PTR>>2] = end;if (end >= TOTAL_MEMORY) {var success = enlargeMemory();if (!success) {HEAP32[DYNAMICTOP_PTR>>2] = ret;return 0;}}return ret;},
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



Module["Runtime"] = Runtime;



//========================================
// Runtime essentials
//========================================

var ABORT = 0; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

/** @type {function(*, string=)} */
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try { func = eval('_' + ident); } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        var len = (str.length << 2) + 1;
        ret = Runtime.stackAlloc(len);
        stringToUTF8(str, ret, len);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface.
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*[a-zA-Z$_0-9]*\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }

  // sources of useful functions. we create this lazily as it can trigger a source decompression on this entire file
  var JSsource = null;
  function ensureJSsource() {
    if (!JSsource) {
      JSsource = {};
      for (var fun in JSfuncs) {
        if (JSfuncs.hasOwnProperty(fun)) {
          // Elements of toCsource are arrays of three items:
          // the code, and the return value
          JSsource[fun] = parseJSFunc(JSfuncs[fun]);
        }
      }
    }
  }

  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      ensureJSsource();
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=(' + convertCode.returnValue + ');';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    if (!numericArgs) {
      // If we had a stack, restore it
      ensureJSsource();
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;

/** @type {function(number, number, string, boolean=)} */
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module["setValue"] = setValue;

/** @type {function(number, string, boolean=)} */
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module["getValue"] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
/** @type {function((TypedArray|Array<number>|number), string, number, number=)} */
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [typeof _malloc === 'function' ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(/** @type {!Uint8Array} */ (slab), ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module["allocate"] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if (!runtimeInitialized) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}
Module["getMemory"] = getMemory;

/** @type {function(number, number=)} */
function Pointer_stringify(ptr, length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module["AsciiToString"] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

var UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;
function UTF8ArrayToString(u8Array, idx) {
  var endPtr = idx;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  while (u8Array[endPtr]) ++endPtr;

  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
  } else {
    var u0, u1, u2, u3, u4, u5;

    var str = '';
    while (1) {
      // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
      u0 = u8Array[idx++];
      if (!u0) return str;
      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
      u1 = u8Array[idx++] & 63;
      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
      u2 = u8Array[idx++] & 63;
      if ((u0 & 0xF0) == 0xE0) {
        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
      } else {
        u3 = u8Array[idx++] & 63;
        if ((u0 & 0xF8) == 0xF0) {
          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
        } else {
          u4 = u8Array[idx++] & 63;
          if ((u0 & 0xFC) == 0xF8) {
            u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
          } else {
            u5 = u8Array[idx++] & 63;
            u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
          }
        }
      }
      if (u0 < 0x10000) {
        str += String.fromCharCode(u0);
      } else {
        var ch = u0 - 0x10000;
        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
      }
    }
  }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8,ptr);
}
Module["UTF8ToString"] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

var UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;
function UTF16ToString(ptr) {
  var endPtr = ptr;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  var idx = endPtr >> 1;
  while (HEAP16[idx]) ++idx;
  endPtr = idx << 1;

  if (endPtr - ptr > 32 && UTF16Decoder) {
    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));
  } else {
    var i = 0;

    var str = '';
    while (1) {
      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
      if (codeUnit == 0) return str;
      ++i;
      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
      str += String.fromCharCode(codeUnit);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}


function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}


function demangle(func) {
  var __cxa_demangle_func = Module['___cxa_demangle'] || Module['__cxa_demangle'];
  if (__cxa_demangle_func) {
    try {
      var s =
        func.substr(1);
      var len = lengthBytesUTF8(s)+1;
      var buf = _malloc(len);
      stringToUTF8(s, buf, len);
      var status = _malloc(4);
      var ret = __cxa_demangle_func(buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed
    } catch(e) {
      // ignore problems here
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
    // failure when using libcxxabi, don't demangle
    return func;
  }
  Runtime.warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  return func;
}

function demangleAll(text) {
  var regex =
    /__Z[\w\d_]+/g;
  return text.replace(regex,
    function(x) {
      var y = demangle(x);
      return x === y ? x : (x + ' [' + y + ']');
    });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  var js = jsStackTrace();
  if (Module['extraStackTrace']) js += '\n' + Module['extraStackTrace']();
  return demangleAll(js);
}
Module["stackTrace"] = stackTrace;

// Memory management

var PAGE_SIZE = 16384;
var WASM_PAGE_SIZE = 65536;
var ASMJS_PAGE_SIZE = 16777216;
var MIN_TOTAL_MEMORY = 16777216;

function alignUp(x, multiple) {
  if (x % multiple > 0) {
    x += multiple - (x % multiple);
  }
  return x;
}

var HEAP,
/** @type {ArrayBuffer} */
  buffer,
/** @type {Int8Array} */
  HEAP8,
/** @type {Uint8Array} */
  HEAPU8,
/** @type {Int16Array} */
  HEAP16,
/** @type {Uint16Array} */
  HEAPU16,
/** @type {Int32Array} */
  HEAP32,
/** @type {Uint32Array} */
  HEAPU32,
/** @type {Float32Array} */
  HEAPF32,
/** @type {Float64Array} */
  HEAPF64;

function updateGlobalBuffer(buf) {
  Module['buffer'] = buffer = buf;
}

function updateGlobalBufferViews() {
  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);
  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);
  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);
}

var STATIC_BASE, STATICTOP, staticSealed; // static area
var STACK_BASE, STACKTOP, STACK_MAX; // stack area
var DYNAMIC_BASE, DYNAMICTOP_PTR; // dynamic area handled by sbrk

  STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;
  staticSealed = false;



function abortOnCannotGrowMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or (4) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
}


function enlargeMemory() {
  abortOnCannotGrowMemory();
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 134217728;
if (TOTAL_MEMORY < TOTAL_STACK) Module.printErr('TOTAL_MEMORY should be larger than TOTAL_STACK, was ' + TOTAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');

// Initialize the runtime's memory



// Use a provided buffer, if there is one, or else allocate a new one
if (Module['buffer']) {
  buffer = Module['buffer'];
} else {
  // Use a WebAssembly memory where available
  {
    buffer = new ArrayBuffer(TOTAL_MEMORY);
  }
}
updateGlobalBufferViews();


function getTotalMemory() {
  return TOTAL_MEMORY;
}

// Endianness check (note: assumes compiler arch was little-endian)
  HEAP32[0] = 0x63736d65; /* 'emsc' */
HEAP16[1] = 0x6373;
if (HEAPU8[2] !== 0x73 || HEAPU8[3] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Module['dynCall_v'](func);
      } else {
        Module['dynCall_vi'](func, callback.arg);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;

// Tools

/** @type {function(string, boolean=, number=)} */
function intArrayFromString(stringy, dontAddNull, length) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module["intArrayFromString"] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module["intArrayToString"] = intArrayToString;

// Deprecated: This function should not be called because it is unsafe and does not provide
// a maximum length limit of how many bytes it is allowed to write. Prefer calling the
// function stringToUTF8Array() instead, which takes in a maximum length that can be used
// to be secure from out of bounds writes.
/** @deprecated */
function writeStringToMemory(string, buffer, dontAddNull) {
  Runtime.warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');

  var /** @type {number} */ lastChar, /** @type {number} */ end;
  if (dontAddNull) {
    // stringToUTF8Array always appends null. If we don't want to do that, remember the
    // character that existed at the location where the null will be placed, and restore
    // that after the write (below).
    end = buffer + lengthBytesUTF8(string);
    lastChar = HEAP8[end];
  }
  stringToUTF8(string, buffer, Infinity);
  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.
}
Module["writeStringToMemory"] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  HEAP8.set(array, buffer);
}
Module["writeArrayToMemory"] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}


// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

if (!Math['trunc']) Math['trunc'] = function(x) {
  return x < 0 ? Math.ceil(x) : Math.floor(x);
};
Math.trunc = Math['trunc'];

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_round = Math.round;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;
var Math_trunc = Math.trunc;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function getUniqueRunDependency(id) {
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module["addRunDependency"] = addRunDependency;

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module["removeRunDependency"] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;






// === Body ===

var ASM_CONSTS = [];




STATIC_BASE = Runtime.GLOBAL_BASE;

STATICTOP = STATIC_BASE + 96192;
/* global initializers */  __ATINIT__.push();


/* memory initializer */ allocate([0,0,0,0,193,192,0,0,129,193,0,0,64,1,0,0,1,195,0,0,192,3,0,0,128,2,0,0,65,194,0,0,1,198,0,0,192,6,0,0,128,7,0,0,65,199,0,0,0,5,0,0,193,197,0,0,129,196,0,0,64,4,0,0,1,204,0,0,192,12,0,0,128,13,0,0,65,205,0,0,0,15,0,0,193,207,0,0,129,206,0,0,64,14,0,0,0,10,0,0,193,202,0,0,129,203,0,0,64,11,0,0,1,201,0,0,192,9,0,0,128,8,0,0,65,200,0,0,1,216,0,0,192,24,0,0,128,25,0,0,65,217,0,0,0,27,0,0,193,219,0,0,129,218,0,0,64,26,0,0,0,30,0,0,193,222,0,0,129,223,0,0,64,31,0,0,1,221,0,0,192,29,0,0,128,28,0,0,65,220,0,0,0,20,0,0,193,212,0,0,129,213,0,0,64,21,0,0,1,215,0,0,192,23,0,0,128,22,0,0,65,214,0,0,1,210,0,0,192,18,0,0,128,19,0,0,65,211,0,0,0,17,0,0,193,209,0,0,129,208,0,0,64,16,0,0,1,240,0,0,192,48,0,0,128,49,0,0,65,241,0,0,0,51,0,0,193,243,0,0,129,242,0,0,64,50,0,0,0,54,0,0,193,246,0,0,129,247,0,0,64,55,0,0,1,245,0,0,192,53,0,0,128,52,0,0,65,244,0,0,0,60,0,0,193,252,0,0,129,253,0,0,64,61,0,0,1,255,0,0,192,63,0,0,128,62,0,0,65,254,0,0,1,250,0,0,192,58,0,0,128,59,0,0,65,251,0,0,0,57,0,0,193,249,0,0,129,248,0,0,64,56,0,0,0,40,0,0,193,232,0,0,129,233,0,0,64,41,0,0,1,235,0,0,192,43,0,0,128,42,0,0,65,234,0,0,1,238,0,0,192,46,0,0,128,47,0,0,65,239,0,0,0,45,0,0,193,237,0,0,129,236,0,0,64,44,0,0,1,228,0,0,192,36,0,0,128,37,0,0,65,229,0,0,0,39,0,0,193,231,0,0,129,230,0,0,64,38,0,0,0,34,0,0,193,226,0,0,129,227,0,0,64,35,0,0,1,225,0,0,192,33,0,0,128,32,0,0,65,224,0,0,1,160,0,0,192,96,0,0,128,97,0,0,65,161,0,0,0,99,0,0,193,163,0,0,129,162,0,0,64,98,0,0,0,102,0,0,193,166,0,0,129,167,0,0,64,103,0,0,1,165,0,0,192,101,0,0,128,100,0,0,65,164,0,0,0,108,0,0,193,172,0,0,129,173,0,0,64,109,0,0,1,175,0,0,192,111,0,0,128,110,0,0,65,174,0,0,1,170,0,0,192,106,0,0,128,107,0,0,65,171,0,0,0,105,0,0,193,169,0,0,129,168,0,0,64,104,0,0,0,120,0,0,193,184,0,0,129,185,0,0,64,121,0,0,1,187,0,0,192,123,0,0,128,122,0,0,65,186,0,0,1,190,0,0,192,126,0,0,128,127,0,0,65,191,0,0,0,125,0,0,193,189,0,0,129,188,0,0,64,124,0,0,1,180,0,0,192,116,0,0,128,117,0,0,65,181,0,0,0,119,0,0,193,183,0,0,129,182,0,0,64,118,0,0,0,114,0,0,193,178,0,0,129,179,0,0,64,115,0,0,1,177,0,0,192,113,0,0,128,112,0,0,65,176,0,0,0,80,0,0,193,144,0,0,129,145,0,0,64,81,0,0,1,147,0,0,192,83,0,0,128,82,0,0,65,146,0,0,1,150,0,0,192,86,0,0,128,87,0,0,65,151,0,0,0,85,0,0,193,149,0,0,129,148,0,0,64,84,0,0,1,156,0,0,192,92,0,0,128,93,0,0,65,157,0,0,0,95,0,0,193,159,0,0,129,158,0,0,64,94,0,0,0,90,0,0,193,154,0,0,129,155,0,0,64,91,0,0,1,153,0,0,192,89,0,0,128,88,0,0,65,152,0,0,1,136,0,0,192,72,0,0,128,73,0,0,65,137,0,0,0,75,0,0,193,139,0,0,129,138,0,0,64,74,0,0,0,78,0,0,193,142,0,0,129,143,0,0,64,79,0,0,1,141,0,0,192,77,0,0,128,76,0,0,65,140,0,0,0,68,0,0,193,132,0,0,129,133,0,0,64,69,0,0,1,135,0,0,192,71,0,0,128,70,0,0,65,134,0,0,1,130,0,0,192,66,0,0,128,67,0,0,65,131,0,0,0,65,0,0,193,129,0,0,129,128,0,0,64,64,0,0,94,131,108,63,21,239,195,62,109,196,126,63,54,189,200,61,67,236,127,63,176,10,201,60,196,254,127,63,136,15,201,59,128,187,0,0,0,0,0,0,0,0,208,64,0,0,0,0,0,0,208,64,148,92,0,0,68,172,0,0,0,0,0,0,0,0,208,64,0,0,0,0,0,0,208,64,20,85,0,0,0,125,0,0,0,0,208,64,0,0,0,65,102,102,166,64,0,0,208,64,184,61,0,0,192,93,0,0,0,0,0,65,0,0,8,65,102,102,166,64,0,0,192,64,74,46,0,0,34,86,0,0,0,0,8,65,246,40,16,65,102,102,166,64,0,0,208,64,140,42,0,0,128,62,0,0,246,40,16,65,102,102,22,65,205,204,156,64,0,0,208,64,223,30,0,0,224,46,0,0,102,102,22,65,154,153,25,65,0,0,144,64,0,0,192,64,40,23,0,0,17,43,0,0,154,153,25,65,102,102,30,65,51,51,163,64,0,0,208,64,70,21,0,0,64,31,0,0,102,102,30,65,0,0,32,65,205,204,156,64,0,0,208,64,112,15,0,0,8,0,0,0,208,7,0,0,16,0,0,0,116,14,0,0,24,0,0,0,60,15,0,0,32,0,0,0,124,21,0,0,40,0,0,0,88,27,0,0,48,0,0,0,76,29,0,0,56,0,0,0,16,39,0,0,64,0,0,0,248,42,0,0,80,0,0,0,188,52,0,0,96,0,0,0,252,58,0,0,112,0,0,0,240,60,0,0,128,0,0,0,104,66,0,0,160,0,0,0,92,68,0,0,192,0,0,0,168,72,0,0,224,0,0,0,200,75,0,0,0,1,0,0,244,76,0,0,64,1,0,0,20,80,0,0,44,76,0,0,56,74,0,0,168,72,0,0,80,70,0,0,92,68,0,0,128,62,0,0,240,60,0,0,52,58,0,0,212,48,0,0,16,39,0,0,110,15,0,0,192,93,0,0,44,76,0,0,68,72,0,0,80,70,0,0,92,68,0,0,104,66,0,0,116,64,0,0,240,60,0,0,96,59,0,0,62,28,0,0,110,15,0,0,44,76,0,0,56,74,0,0,68,72,0,0,80,70,0,0,92,68,0,0,116,64,0,0,140,60,0,0,164,56,0,0,212,48,0,0,28,37,0,0,110,15,0,0,102,102,182,64,0,0,208,64,154,153,233,64,51,51,3,65,0,0,32,65,102,102,62,65,0,0,80,65,0,0,96,65,0,0,112,65,0,0,132,65,0,0,0,0,1,0,0,0,16,0,0,0,17,0,0,0,8,0,0,0,9,0,0,0,24,0,0,0,25,0,0,0,4,0,0,0,5,0,0,0,20,0,0,0,21,0,0,0,12,0,0,0,13,0,0,0,28,0,0,0,29,0,0,0,2,0,0,0,3,0,0,0,18,0,0,0,19,0,0,0,10,0,0,0,11,0,0,0,26,0,0,0,27,0,0,0,6,0,0,0,7,0,0,0,22,0,0,0,23,0,0,0,14,0,0,0,15,0,0,0,30,0,0,0,31,0,0,0,0,27,134,42,204,204,52,43,33,78,132,43,252,247,157,43,88,156,166,43,252,247,157,43,33,78,132,43,204,204,52,43,0,27,134,42,83,248,191,44,254,169,171,44,146,50,149,44,159,129,122,44,239,29,73,44,62,186,23,44,116,173,207,43,133,159,107,43,183,89,146,42,83,248,191,172,254,169,171,172,146,50,149,172,159,129,122,172,239,29,73,172,62,186,23,172,116,173,207,171,133,159,107,171,183,89,146,170,0,27,134,170,204,204,52,171,33,78,132,171,252,247,157,171,88,156,166,171,252,247,157,171,33,78,132,171,204,204,52,171,0,27,134,170,0,27,134,42,204,204,52,43,33,78,132,43,252,247,157,43,88,156,166,43,252,247,157,43,33,78,132,43,204,204,52,43,0,27,134,42,83,248,191,44,254,169,171,44,146,50,149,44,159,129,122,44,239,29,73,44,62,186,23,44,116,173,207,43,133,159,107,43,183,89,146,42,37,39,192,172,51,37,173,172,234,209,152,172,227,84,131,172,249,175,89,172,11,14,43,172,102,34,244,171,201,49,137,171,74,123,157,170,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,144,128,170,174,79,227,170,5,174,113,170,234,207,6,62,205,19,212,62,139,111,68,63,255,175,139,63,23,208,166,63,117,235,200,63,190,226,245,63,122,130,26,64,105,251,74,64,185,87,144,64,107,16,243,64,233,58,183,65,92,28,124,63,187,141,36,63,68,29,175,62,178,143,112,63,212,208,49,190,125,27,68,191,215,179,93,63,0,0,0,63,254,181,3,191,218,134,241,190,2,115,160,190,116,71,58,190,29,176,193,189,135,203,39,189,29,161,104,188,70,123,114,187,168,132,91,63,216,185,97,63,221,26,115,63,129,186,123,63,65,218,126,63,253,200,127,63,101,249,127,63,141,255,127,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,144,128,42,174,79,227,42,5,174,113,42,37,39,192,44,51,37,173,44,234,209,152,44,227,84,131,44,249,175,89,44,11,14,43,44,102,34,244,43,201,49,137,43,74,123,157,42,83,248,191,172,254,169,171,172,146,50,149,172,159,129,122,172,239,29,73,172,62,186,23,172,116,173,207,171,133,159,107,171,183,89,146,170,0,27,134,170,204,204,52,171,33,78,132,171,252,247,157,171,88,156,166,171,252,247,157,171,33,78,132,171,204,204,52,171,0,27,134,170,121,207,23,190,138,59,1,66,164,51,148,67,155,200,92,68,202,167,45,70,175,40,132,68,192,222,152,67,129,155,246,65,199,156,118,64,77,183,109,66,194,101,49,68,74,15,165,69,82,45,182,197,71,104,76,196,73,213,153,194,66,4,147,192,94,6,104,63,54,189,72,62,3,97,30,190,44,76,9,66,68,231,150,67,96,102,76,68,47,215,52,70,17,168,147,68,117,204,160,67,46,219,249,65,68,124,109,64,146,154,86,66,183,10,43,68,136,68,163,69,35,243,198,197,129,62,99,196,80,169,179,194,43,42,173,192,1,24,82,63,194,197,199,62,223,144,36,190,144,150,16,66,32,15,152,67,140,47,55,68,113,86,59,70,101,128,162,68,120,164,167,67,193,231,251,65,149,237,87,64,209,237,60,66,46,47,35,68,80,99,160,69,178,232,215,197,240,127,122,196,100,62,207,194,121,91,195,192,207,220,61,63,49,160,20,63,61,91,42,190,177,1,23,66,106,129,151,67,98,254,28,68,14,27,65,70,229,136,176,68,246,95,173,67,75,201,252,65,52,59,74,64,173,80,34,66,178,10,26,68,170,126,156,69,83,240,232,197,121,249,136,196,253,124,236,194,231,48,218,192,193,13,43,63,21,239,67,63,139,188,47,190,75,118,28,66,177,43,149,67,81,195,251,67,92,30,70,70,161,146,189,68,23,254,177,67,116,41,251,65,165,166,58,64,77,48,7,66,62,185,15,68,225,169,151,69,144,236,249,197,102,184,148,196,253,164,5,195,130,12,247,192,196,112,25,63,234,90,113,63,120,177,52,190,11,224,32,66,197,255,144,67,75,169,179,67,9,89,74,70,63,131,201,68,227,108,181,67,12,94,248,65,73,159,52,64,49,233,215,65,148,121,4,68,250,250,145,69,153,95,5,198,224,82,160,196,230,149,21,195,193,75,10,193,185,213,8,63,218,57,142,63,244,54,185,190,93,45,36,66,238,197,138,67,123,163,67,67,193,197,77,70,150,52,212,68,118,180,183,67,208,116,244,65,169,3,34,64,173,143,160,65,68,192,240,67,195,135,139,69,122,165,13,198,28,180,171,196,130,42,38,195,136,83,25,193,112,40,242,62,153,103,162,63,55,74,189,190,167,146,37,66,148,165,130,67,182,247,78,65,135,96,80,70,71,144,221,68,247,225,184,67,182,2,238,65,153,191,25,64,113,224,84,65,226,71,215,67,116,104,132,69,186,183,21,198,32,182,182,196,153,32,55,195,248,124,43,193,205,19,212,62,243,4,181,63,187,232,192,190,91,122,38,66,227,13,113,67,88,242,59,195,65,40,82,70,237,132,229,68,213,190,184,67,201,3,232,65,16,147,4,64,105,242,216,64,110,227,188,67,47,102,121,69,214,134,29,198,81,62,193,196,85,96,72,195,235,212,61,193,80,50,183,62,3,228,197,63,71,16,196,190,73,155,36,66,18,122,88,67,23,20,203,195,140,28,83,70,216,249,235,68,185,166,183,67,247,22,225,65,11,250,244,63,71,16,196,62,69,237,161,67,91,2,105,69,239,4,37,198,124,38,203,196,16,160,89,195,54,63,80,193,66,80,155,62,49,219,212,63,46,15,21,191,242,108,33,66,98,51,60,67,83,17,32,196,220,60,83,70,70,243,240,68,238,104,181,67,38,192,215,65,112,137,223,63,88,12,180,192,157,166,134,67,47,214,87,69,149,32,44,198,6,85,212,196,16,196,106,195,193,157,98,193,212,63,128,62,152,197,225,63,57,182,22,191,234,239,28,66,206,194,27,67,244,79,94,196,226,141,82,70,182,97,244,68,249,56,178,67,221,40,207,65,124,229,200,63,57,233,50,193,16,207,86,67,160,18,70,69,73,205,50,198,21,165,220,196,104,176,123,195,1,246,119,193,175,175,75,62,94,131,236,63,230,143,74,191,36,147,21,66,35,102,239,66,16,227,143,196,201,17,81,70,166,76,246,68,130,2,174,67,22,218,197,65,28,72,177,63,12,95,131,193,224,12,33,67,81,229,51,69,247,251,56,198,140,255,227,196,139,36,134,195,184,137,134,193,100,229,23,62,11,250,244,63,223,202,75,191,201,237,12,66,223,9,160,66,174,0,178,196,45,207,78,70,187,185,246,68,213,254,168,67,51,80,186,65,197,91,178,63,32,204,168,193,139,247,216,66,54,123,33,69,232,158,62,198,230,72,234,196,148,31,142,195,218,232,144,193,220,181,201,61,190,20,251,63,15,177,127,191,152,64,2,66,94,213,19,66,106,66,213,196,38,205,75,70,66,172,245,68,70,55,163,67,112,102,177,65,251,108,153,63,81,248,202,193,231,35,102,66,180,6,15,69,179,170,67,198,226,90,239,196,151,161,149,195,66,6,155,193,60,57,73,61,109,196,254,63,54,211,37,70,68,177,165,69,175,113,104,68,69,51,54,68,128,12,144,67,180,213,129,66,2,0,241,65,34,63,131,64,49,19,72,70,167,49,243,68,86,182,156,67,170,105,166,65,251,100,249,68,112,3,16,65,17,158,233,193,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,102,102,166,64,0,0,250,66,102,102,134,192,154,153,201,192,154,153,153,64,0,0,128,63,0,0,0,0,0,0,0,0,2,0,0,0,21,0,0,0,236,81,120,63,0,0,160,64,0,0,200,66,1,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,154,153,169,64,0,0,250,66,102,102,102,192,51,51,179,192,0,0,144,64,0,0,192,63,0,0,0,0,0,0,0,0,2,0,0,0,21,0,0,0,205,204,172,63,0,0,160,64,0,0,200,66,2,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,51,51,179,64,0,0,250,66,205,204,12,192,0,0,96,192,51,51,51,64,0,0,0,64,0,0,0,0,0,0,0,0,2,0,0,0,21,0,0,0,82,184,190,63,0,0,160,64,0,0,200,66,3,0,0,0,9,0,0,0,9,0,0,0,1,0,0,0,154,153,185,64,0,0,2,67,102,102,230,191,51,51,51,192,102,102,38,64,0,0,64,64,0,0,128,192,0,0,0,0,2,0,0,0,20,0,0,0,133,235,209,63,0,0,160,64,0,0,200,66,4,0,0,0,9,0,0,0,9,0,0,0,1,0,0,0,0,0,192,64,0,0,7,67,51,51,51,191,205,204,140,191,205,204,140,63,0,0,96,64,0,0,0,193,0,0,0,0,2,0,0,0,0,0,0,0,184,30,229,63,0,0,160,64,0,0,200,66,5,0,0,0,9,0,0,0,9,0,0,0,1,0,0,0,205,204,204,64,0,0,12,67,0,0,0,63,205,204,204,62,0,0,240,192,0,0,128,64,0,0,64,193,23,183,81,57,0,0,0,0,0,0,0,0,154,153,249,63,0,0,160,64,0,0,200,66,6,0,0,0,9,0,0,0,9,0,0,0,1,0,0,0,51,51,211,64,0,0,17,67,31,133,43,63,102,102,38,63,51,51,107,193,0,0,208,64,0,0,152,193,23,183,209,57,0,0,0,0,0,0,0,0,51,51,19,64,0,0,160,64,0,0,200,66,7,0,0,0,9,0,0,0,9,0,0,0,1,0,0,0,51,51,211,64,0,0,17,67,205,204,76,63,0,0,64,63,154,153,157,193,0,0,0,65,0,0,176,193,82,73,29,58,0,0,0,0,0,0,0,0,205,204,44,64,0,0,160,64,0,0,200,66,8,0,0,0,9,0,0,0,9,0,0,0,1,0,0,0,51,51,211,64,0,0,17,67,154,153,153,63,51,51,147,63,0,0,220,193,0,0,32,65,0,0,184,193,52,128,55,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,64,0,0,200,66,9,0,0,0,9,0,0,0,9,0,0,0,1,0,0,0,51,51,211,64,0,0,17,67,205,204,204,63,205,204,204,63,0,0,16,194,0,0,48,65,0,0,200,193,23,183,81,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,64,0,0,200,66,10,0,0,0,9,0,0,0,9,0,0,0,1,0,0,0,51,51,211,64,0,0,17,67,0,0,0,64,0,0,0,64,0,0,16,194,0,0,64,65,0,0,200,193,23,183,81,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,64,0,0,200,66,0,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,102,102,134,64,0,0,200,65,154,153,217,192,154,153,217,192,51,51,227,64,0,0,128,63,0,0,0,0,0,0,0,0,2,0,0,0,31,0,0,0,0,0,128,63,0,0,160,64,0,0,200,66,1,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,102,102,134,64,0,0,200,65,154,153,153,192,154,153,153,192,205,204,172,64,51,51,179,63,0,0,128,191,0,0,0,0,2,0,0,0,27,0,0,0,178,157,143,63,0,0,160,64,0,0,196,66,2,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,102,102,134,64,0,0,200,65,102,102,38,192,102,102,38,192,205,204,108,64,0,0,0,64,0,0,64,192,0,0,0,0,2,0,0,0,23,0,0,0,47,221,164,63,0,0,160,64,0,0,194,66,3,0,0,0,9,0,0,0,9,0,0,0,1,0,0,0,102,102,134,64,0,0,200,65,205,204,204,191,205,204,204,191,0,0,0,64,0,0,0,64,0,0,160,192,0,0,0,0,2,0,0,0,18,0,0,0,223,79,189,63,0,0,160,64,0,0,192,66,4,0,0,0,9,0,0,0,9,0,0,0,1,0,0,0,102,102,134,64,0,0,200,65,0,0,0,128,0,0,0,128,0,0,0,0,0,0,0,64,0,0,0,193,0,0,0,0,2,0,0,0,12,0,0,0,16,88,217,63,0,0,160,64,0,0,190,66,5,0,0,0,9,0,0,0,9,0,0,0,1,0,0,0,102,102,134,64,0,0,200,65,102,102,166,63,102,102,166,63,0,0,192,192,0,0,96,64,0,0,48,193,0,0,0,0,2,0,0,0,8,0,0,0,154,153,249,63,0,0,160,64,102,102,188,66,6,0,0,0,9,0,0,0,9,0,0,0,1,0,0,0,0,0,144,64,0,0,200,66,205,204,12,64,51,51,19,64,0,0,64,193,0,0,192,64,0,0,96,193,0,0,0,0,2,0,0,0,4,0,0,0,199,75,15,64,0,0,64,64,205,204,187,66,7,0,0,0,9,0,0,0,9,0,0,0,1,0,0,0,154,153,153,64,0,0,72,67,205,204,44,64,205,204,44,64,0,0,144,193,0,0,16,65,0,0,136,193,0,0,0,0,2,0,0,0,0,0,0,0,225,122,36,64,0,0,128,63,51,51,187,66,8,0,0,0,9,0,0,0,9,0,0,0,1,0,0,0,154,153,169,64,0,0,150,67,51,51,51,64,51,51,51,64,0,0,168,193,0,0,32,65,0,0,184,193,23,183,81,57,0,0,0,0,0,0,0,0,47,221,60,64,0,0,0,0,154,153,186,66,9,0,0,0,9,0,0,0,9,0,0,0,1,0,0,0,51,51,211,64,0,0,150,67,51,51,51,64,51,51,51,64,0,0,184,193,0,0,48,65,0,0,200,193,82,73,29,58,0,0,0,0,0,0,0,0,254,212,88,64,0,0,0,0,154,153,186,66,10,0,0,0,9,0,0,0,9,0,0,0,1,0,0,0,0,0,200,65,0,0,150,67,51,51,51,64,51,51,51,64,0,0,200,193,0,0,64,65,0,0,216,193,10,215,35,59,0,0,0,0,0,0,0,0,0,0,96,64,0,0,0,0,154,153,186,66,8,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,51,51,211,64,0,0,17,67,51,51,115,63,0,0,0,0,0,0,240,193,0,0,48,65,82,73,157,58,1,0,0,0,16,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,51,51,211,64,0,0,17,67,51,51,115,63,0,0,0,0,0,0,200,193,0,0,48,65,111,18,131,58,1,0,0,0,24,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,51,51,211,64,0,0,17,67,51,51,115,63,0,0,0,0,0,0,160,193,0,0,48,65,111,18,131,58,1,0,0,0,32,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,51,51,211,64,0,0,17,67,51,51,115,63,0,0,0,0,0,0,112,193,0,0,48,65,111,18,131,58,1,0,0,0,40,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,51,51,211,64,0,0,17,67,51,51,115,63,0,0,0,0,0,0,32,193,0,0,48,65,250,237,107,58,1,0,0,0,48,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,51,51,211,64,0,0,17,67,51,51,115,63,0,0,0,0,0,0,32,193,0,0,48,65,250,237,107,58,1,0,0,0,56,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,51,51,211,64,0,0,17,67,51,51,115,63,0,0,0,0,0,0,192,192,0,0,48,65,23,183,81,58,1,0,0,0,64,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,51,51,211,64,0,0,17,67,51,51,115,63,0,0,0,0,0,0,0,192,0,0,48,65,23,183,81,58,1,0,0,0,80,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,51,51,211,64,0,0,17,67,51,51,115,63,0,0,0,0,0,0,0,0,0,0,0,65,52,128,55,58,1,0,0,0,96,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,32,64,51,51,211,64,0,0,17,67,51,51,115,63,0,0,0,0,0,0,128,63,0,0,176,64,82,73,29,58,1,0,0,0,112,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,0,0,16,64,51,51,211,64,0,0,17,67,51,51,115,63,0,0,0,0,0,0,0,64,0,0,144,64,111,18,3,58,1,0,0,0,128,0,0,0,9,0,0,0,9,0,0,0,0,0,0,0,154,153,249,63,205,204,204,64,0,0,12,67,51,51,115,63,0,0,0,0,0,0,64,64,0,0,128,64,23,183,81,57,1,0,0,0,160,0,0,0,9,0,0,0,9,0,0,0,1,0,0,0,184,30,229,63,0,0,192,64,0,0,7,67,51,51,115,63,0,0,0,192,0,0,160,64,0,0,96,64,0,0,0,0,1,0,0,0,192,0,0,0,9,0,0,0,9,0,0,0,1,0,0,0,82,184,190,63,51,51,179,64,0,0,250,66,236,81,120,63,0,0,128,192,0,0,224,64,0,0,64,64,0,0,0,0,0,0,0,0,224,0,0,0,9,0,0,0,9,0,0,0,1,0,0,0,0,0,160,63,102,102,166,64,0,0,250,66,72,225,122,63,0,0,192,192,0,0,16,65,0,0,0,64,0,0,0,0,0,0,0,0,0,1,0,0,9,0,0,0,9,0,0,0,1,0,0,0,236,81,120,63,102,102,166,64,0,0,250,66,0,0,128,63,0,0,0,193,0,0,32,65,0,0,128,63,0,0,0,0,0,0,0,0,64,1,0,0,9,0,0,0,9,0,0,0,1,0,0,0,102,102,102,63,102,102,166,64,0,0,250,66,0,0,128,63,0,0,32,193,0,0,64,65,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,128,63,54,89,75,63,152,134,33,63,152,134,33,63,152,134,33,63,152,134,33,63,152,134,33,63,250,155,128,62,153,158,240,61,137,158,227,63,229,83,236,63,167,94,245,63,155,20,249,63,14,217,252,63,123,143,234,63,218,151,217,63,226,132,191,63,124,145,168,63,0,0,128,63,205,204,60,65,154,153,89,65,154,153,137,65,0,0,0,66,0,0,58,66,51,51,77,66,0,0,102,66,51,51,134,66,0,0,143,66,51,51,169,66,51,51,195,66,0,0,2,67,154,153,217,64,154,153,185,64,154,153,185,64,205,204,204,64,0,0,208,64,102,102,30,65,154,153,65,65,102,102,102,65,0,0,112,65,51,51,151,65,205,204,172,65,51,51,215,65,205,204,8,66,205,204,32,66,51,51,59,66,0,0,98,66,205,204,114,66,205,204,147,66,102,102,171,66,205,204,186,66,51,51,252,66,205,204,236,192,205,204,236,192,205,204,236,192,0,0,24,193,205,204,236,192,51,51,195,192,0,0,176,192,102,102,150,192,102,102,150,192,102,102,150,192,102,102,150,192,6,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,6,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,3,0,0,0,9,0,0,0,9,0,0,0,12,0,0,0,6,0,0,0,6,0,0,0,9,0,0,0,12,0,0,0,6,0,0,0,11,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,0,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,0,0,0,0,6,0,0,0,15,0,0,0,12,0,0,0,0,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,3,0,0,0,12,0,0,0,9,0,0,0,9,0,0,0,6,0,0,0,6,0,0,0,12,0,0,0,9,0,0,0,6,0,0,0,8,0,0,0,8,0,0,0,5,0,0,0,0,0,0,0,15,0,0,0,12,0,0,0,9,0,0,0,0,0,0,0,6,0,0,0,18,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,12,0,0,0,18,0,0,0,24,0,0,0,30,0,0,0,36,0,0,0,44,0,0,0,54,0,0,0,66,0,0,0,80,0,0,0,96,0,0,0,116,0,0,0,140,0,0,0,168,0,0,0,200,0,0,0,238,0,0,0,28,1,0,0,80,1,0,0,140,1,0,0,208,1,0,0,10,2,0,0,64,2,0,0,0,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,18,0,0,0,24,0,0,0,32,0,0,0,42,0,0,0,56,0,0,0,74,0,0,0,100,0,0,0,132,0,0,0,174,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,12,0,0,0,18,0,0,0,24,0,0,0,30,0,0,0,36,0,0,0,44,0,0,0,54,0,0,0,66,0,0,0,80,0,0,0,96,0,0,0,114,0,0,0,136,0,0,0,162,0,0,0,194,0,0,0,232,0,0,0,22,1,0,0,76,1,0,0,138,1,0,0,208,1,0,0,28,2,0,0,64,2,0,0,0,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,18,0,0,0,26,0,0,0,36,0,0,0,48,0,0,0,62,0,0,0,80,0,0,0,104,0,0,0,136,0,0,0,180,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,12,0,0,0,18,0,0,0,24,0,0,0,30,0,0,0,36,0,0,0,44,0,0,0,54,0,0,0,66,0,0,0,80,0,0,0,96,0,0,0,116,0,0,0,140,0,0,0,168,0,0,0,200,0,0,0,238,0,0,0,28,1,0,0,80,1,0,0,140,1,0,0,208,1,0,0,10,2,0,0,64,2,0,0,0,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,18,0,0,0,26,0,0,0,36,0,0,0,48,0,0,0,62,0,0,0,80,0,0,0,104,0,0,0,134,0,0,0,174,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,16,0,0,0,20,0,0,0,24,0,0,0,30,0,0,0,36,0,0,0,44,0,0,0,52,0,0,0,62,0,0,0,74,0,0,0,90,0,0,0,110,0,0,0,134,0,0,0,162,0,0,0,196,0,0,0,238,0,0,0,32,1,0,0,86,1,0,0,162,1,0,0,64,2,0,0,0,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,16,0,0,0,22,0,0,0,30,0,0,0,40,0,0,0,52,0,0,0,66,0,0,0,84,0,0,0,106,0,0,0,136,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,16,0,0,0,20,0,0,0,24,0,0,0,30,0,0,0,36,0,0,0,42,0,0,0,50,0,0,0,60,0,0,0,72,0,0,0,88,0,0,0,106,0,0,0,128,0,0,0,156,0,0,0,190,0,0,0,230,0,0,0,20,1,0,0,74,1,0,0,128,1,0,0,64,2,0,0,0,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,16,0,0,0,22,0,0,0,28,0,0,0,38,0,0,0,50,0,0,0,64,0,0,0,80,0,0,0,100,0,0,0,126,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,16,0,0,0,20,0,0,0,24,0,0,0,30,0,0,0,36,0,0,0,44,0,0,0,54,0,0,0,66,0,0,0,82,0,0,0,102,0,0,0,126,0,0,0,156,0,0,0,194,0,0,0,240,0,0,0,40,1,0,0,108,1,0,0,192,1,0,0,38,2,0,0,64,2,0,0,0,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,16,0,0,0,22,0,0,0,30,0,0,0,42,0,0,0,58,0,0,0,78,0,0,0,104,0,0,0,138,0,0,0,180,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,12,0,0,0,18,0,0,0,24,0,0,0,30,0,0,0,36,0,0,0,44,0,0,0,54,0,0,0,66,0,0,0,80,0,0,0,96,0,0,0,116,0,0,0,140,0,0,0,168,0,0,0,200,0,0,0,238,0,0,0,28,1,0,0,80,1,0,0,140,1,0,0,208,1,0,0,10,2,0,0,64,2,0,0,0,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,18,0,0,0,26,0,0,0,36,0,0,0,48,0,0,0,62,0,0,0,80,0,0,0,104,0,0,0,134,0,0,0,174,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,12,0,0,0,18,0,0,0,24,0,0,0,30,0,0,0,36,0,0,0,44,0,0,0,54,0,0,0,66,0,0,0,80,0,0,0,96,0,0,0,116,0,0,0,140,0,0,0,168,0,0,0,200,0,0,0,238,0,0,0,28,1,0,0,80,1,0,0,140,1,0,0,208,1,0,0,10,2,0,0,64,2,0,0,0,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,18,0,0,0,26,0,0,0,36,0,0,0,48,0,0,0,62,0,0,0,80,0,0,0,104,0,0,0,134,0,0,0,174,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,24,0,0,0,36,0,0,0,48,0,0,0,60,0,0,0,72,0,0,0,88,0,0,0,108,0,0,0,132,0,0,0,160,0,0,0,192,0,0,0,232,0,0,0,24,1,0,0,80,1,0,0,144,1,0,0,220,1,0,0,54,2,0,0,56,2,0,0,58,2,0,0,60,2,0,0,62,2,0,0,64,2,0,0,0,0,0,0,8,0,0,0,16,0,0,0,24,0,0,0,36,0,0,0,52,0,0,0,72,0,0,0,96,0,0,0,124,0,0,0,160,0,0,0,162,0,0,0,164,0,0,0,166,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,24,46,0,0,248,60,0,0,3,0,0,0,0,0,0,0,32,46,0,0,28,61,0,0,3,0,0,0,0,0,0,0,50,46,0,0,37,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,68,46,0,0,46,61,0,0,4,0,0,0,0,0,0,0,100,46,0,0,62,61,0,0,6,0,0,0,0,0,0,0,132,46,0,0,78,61,0,0,6,0,0,0,0,0,0,0,204,46,0,0,114,61,0,0,6,0,0,0,0,0,0,0,20,47,0,0,150,61,0,0,8,0,0,0,0,0,0,0,92,47,0,0,186,61,0,0,8,0,0,0,0,0,0,0,220,47,0,0,250,61,0,0,8,0,0,0,0,0,0,0,92,48,0,0,58,62,0,0,16,0,0,0,0,0,0,0,220,48,0,0,122,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,122,63,0,0,16,0,0,0,0,0,0,0,220,50,0,0,122,64,0,0,1,0,0,0,1,0,0,0,220,52,0,0,122,65,0,0,2,0,0,0,3,0,0,0,220,52,0,0,122,65,0,0,3,0,0,0,7,0,0,0,220,52,0,0,122,65,0,0,4,0,0,0,15,0,0,0,220,52,0,0,122,65,0,0,6,0,0,0,63,0,0,0,220,52,0,0,122,65,0,0,8,0,0,0,255,0,0,0,220,52,0,0,122,65,0,0,10,0,0,0,255,3,0,0,220,52,0,0,122,65,0,0,13,0,0,0,255,31,0,0,220,52,0,0,122,65,0,0,4,0,0,0,15,0,0,0,220,54,0,0,122,66,0,0,5,0,0,0,31,0,0,0,220,54,0,0,122,66,0,0,6,0,0,0,63,0,0,0,220,54,0,0,122,66,0,0,7,0,0,0,127,0,0,0,220,54,0,0,122,66,0,0,8,0,0,0,255,0,0,0,220,54,0,0,122,66,0,0,9,0,0,0,255,1,0,0,220,54,0,0,122,66,0,0,11,0,0,0,255,7,0,0,220,54,0,0,122,66,0,0,13,0,0,0,255,31,0,0,220,54,0,0,122,66,0,0,0,0,0,0,0,0,0,0,220,56,0,0,252,60,0,0,0,0,0,0,0,0,0,0,252,56,0,0,12,61,0,0,4,0,1,0,5,0,5,0,7,0,7,0,8,0,9,0,9,0,10,0,10,0,10,0,10,0,11,0,11,0,11,0,11,0,12,0,12,0,12,0,12,0,12,0,12,0,13,0,12,0,13,0,12,0,13,0,13,0,14,0,10,0,10,0,5,0,4,0,6,0,6,0,7,0,8,0,8,0,9,0,9,0,10,0,10,0,11,0,10,0,11,0,11,0,11,0,11,0,12,0,11,0,12,0,12,0,12,0,12,0,13,0,12,0,14,0,12,0,13,0,12,0,14,0,10,0,10,0,7,0,7,0,7,0,8,0,8,0,9,0,9,0,10,0,9,0,11,0,10,0,11,0,10,0,12,0,11,0,12,0,11,0,13,0,11,0,12,0,11,0,13,0,12,0,13,0,12,0,13,0,12,0,14,0,13,0,14,0,9,0,11,0,8,0,9,0,8,0,9,0,9,0,10,0,9,0,11,0,10,0,11,0,10,0,12,0,10,0,12,0,11,0,12,0,11,0,13,0,11,0,13,0,11,0,14,0,12,0,14,0,12,0,14,0,12,0,15,0,12,0,15,0,9,0,12,0,9,0,10,0,9,0,10,0,9,0,11,0,10,0,11,0,10,0,12,0,10,0,12,0,10,0,13,0,11,0,13,0,11,0,13,0,11,0,14,0,12,0,14,0,12,0,14,0,12,0,15,0,12,0,15,0,13,0,15,0,9,0,11,0,10,0,10,0,9,0,10,0,10,0,11,0,10,0,11,0,10,0,12,0,10,0,13,0,11,0,13,0,11,0,14,0,11,0,13,0,11,0,14,0,12,0,14,0,12,0,15,0,12,0,15,0,12,0,15,0,12,0,16,0,9,0,12,0,10,0,11,0,10,0,11,0,10,0,11,0,10,0,12,0,10,0,13,0,11,0,13,0,11,0,13,0,11,0,13,0,11,0,14,0,12,0,14,0,12,0,14,0,12,0,14,0,12,0,15,0,12,0,15,0,13,0,16,0,9,0,12,0,11,0,11,0,10,0,11,0,10,0,12,0,10,0,12,0,11,0,13,0,11,0,13,0,11,0,13,0,11,0,14,0,12,0,14,0,12,0,15,0,12,0,15,0,12,0,15,0,12,0,15,0,13,0,17,0,13,0,17,0,10,0,12,0,11,0,11,0,11,0,12,0,11,0,12,0,11,0,13,0,11,0,13,0,11,0,13,0,11,0,14,0,11,0,14,0,11,0,15,0,12,0,15,0,12,0,15,0,12,0,15,0,12,0,16,0,13,0,16,0,13,0,16,0,10,0,12,0,11,0,12,0,11,0,12,0,11,0,12,0,11,0,13,0,11,0,13,0,11,0,14,0,11,0,14,0,12,0,15,0,12,0,15,0,12,0,15,0,12,0,15,0,12,0,16,0,13,0,15,0,13,0,16,0,13,0,15,0,10,0,13,0,12,0,12,0,11,0,13,0,11,0,12,0,11,0,13,0,11,0,14,0,12,0,14,0,12,0,14,0,12,0,14,0,12,0,15,0,12,0,16,0,12,0,16,0,13,0,16,0,13,0,17,0,13,0,17,0,13,0,16,0,10,0,12,0,12,0,13,0,12,0,13,0,11,0,13,0,11,0,13,0,11,0,14,0,12,0,14,0,12,0,15,0,12,0,16,0,12,0,16,0,12,0,16,0,12,0,16,0,13,0,16,0,13,0,16,0,13,0,15,0,13,0,16,0,10,0,13,0,12,0,13,0,12,0,14,0,12,0,14,0,12,0,14,0,12,0,14,0,12,0,15,0,12,0,15,0,12,0,15,0,12,0,15,0,12,0,17,0,13,0,16,0,13,0,16,0,13,0,16,0,13,0,16,0,13,0,18,0,10,0,13,0,12,0,15,0,12,0,14,0,12,0,14,0,12,0,14,0,12,0,15,0,12,0,15,0,12,0,16,0,12,0,16,0,13,0,16,0,13,0,18,0,13,0,17,0,13,0,17,0,13,0,17,0,13,0,19,0,13,0,17,0,10,0,13,0,13,0,14,0,12,0,15,0,12,0,13,0,12,0,14,0,12,0,16,0,12,0,16,0,12,0,15,0,13,0,16,0,13,0,16,0,13,0,17,0,13,0,18,0,13,0,17,0,13,0,19,0,13,0,17,0,13,0,16,0,10,0,13,0,9,0,10,0,9,0,10,0,9,0,10,0,9,0,11,0,9,0,11,0,9,0,12,0,9,0,12,0,9,0,12,0,9,0,13,0,9,0,13,0,9,0,13,0,10,0,13,0,10,0,13,0,10,0,13,0,10,0,13,0,6,0,10,0,2,0,1,0,3,0,4,0,7,0,7,0,4,0,4,0,4,0,5,0,7,0,7,0,6,0,6,0,7,0,7,0,8,0,8,0,3,0,1,0,4,0,4,0,6,0,7,0,8,0,8,0,4,0,4,0,4,0,5,0,6,0,8,0,7,0,9,0,5,0,7,0,6,0,8,0,7,0,9,0,8,0,10,0,7,0,8,0,7,0,8,0,8,0,9,0,9,0,10,0,0,0,0,0,8,0,0,0,16,0,0,0,24,0,0,0,32,0,0,0,40,0,0,0,48,0,0,0,56,0,0,0,64,0,0,0,80,0,0,0,96,0,0,0,112,0,0,0,128,0,0,0,144,0,0,0,160,0,0,0,255,255,255,255,0,0,0,0,32,0,0,0,40,0,0,0,48,0,0,0,56,0,0,0,64,0,0,0,80,0,0,0,96,0,0,0,112,0,0,0,128,0,0,0,160,0,0,0,192,0,0,0,224,0,0,0,0,1,0,0,64,1,0,0,255,255,255,255,0,0,0,0,8,0,0,0,16,0,0,0,24,0,0,0,32,0,0,0,40,0,0,0,48,0,0,0,56,0,0,0,64,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,6,0,0,0,11,0,0,0,16,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,3], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([4,0,0,0,4,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,8,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,16,0,0,0,16,0,0,0,1,0,0,0,2,0,0,0,4,0,0,0,8,0,0,0,1,0,0,0,2,0,0,0,4,0,0,0,8,0,0,0,2,0,0,0,4,0,0,0,8,0,0,0,2,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,8,0,0,0,0,0,0,0,18,0,0,0,36,0,0,0,54,0,0,0,51,0,0,0,35,0,0,0,53,0,0,0,71,0,0,0,52,0,0,0,70,0,0,0,88,0,0,0,69,0,0,0,87,0,0,0,105,0,0,0,104,0,0,0,122,0,0,0,0,0,0,0,18,0,0,0,36,0,0,0,54,0,0,0,54,0,0,0,36,0,0,0,54,0,0,0,72,0,0,0,54,0,0,0,72,0,0,0,90,0,0,0,72,0,0,0,90,0,0,0,108,0,0,0,108,0,0,0,126,0,0,0,0,0,0,0,10,0,0,0,20,0,0,0,30,0,0,0,33,0,0,0,21,0,0,0,31,0,0,0,41,0,0,0,32,0,0,0,42,0,0,0,52,0,0,0,43,0,0,0,53,0,0,0,63,0,0,0,64,0,0,0,74,0,0,0,15,0,0,0,15,0,0,0,7,0,0,0,7,0,0,0,15,0,0,0,15,0,0,0,7,0,0,0,0,0,0,0,7,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,31,0,0,0,31,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,0,0,0,0,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,6,0,0,0,5,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,6,0,0,0,7,0,0,0,6,0,0,0,7,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,1,0,0,0,2,0,0,0,5,0,0,0,7,0,0,0,7,0,0,0,10,0,0,0,10,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,8,0,0,0,16,0,0,0,24,0,0,0,32,0,0,0,40,0,0,0,48,0,0,0,56,0,0,0,64,0,0,0,80,0,0,0,96,0,0,0,112,0,0,0,128,0,0,0,160,0,0,0,192,0,0,0,224,0,0,0,0,1,0,0,64,1,0,0,172,43,0,0,5,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,172,115,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,115,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,2,0,0,0,180,115,1,0,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,0,2,0,1,0,3,0,1,0,1,0,3,0,2,0,0,0,3,0,2,0,1,0,1,0,1,0,1,0,3,0,2,0,0,0,1,0,2,0,6,0,5,0,3,0,1,0,4,0,4,0,7,0,5,0,7,0,1,0,6,0,1,0,1,0,0,0,7,0,3,0,5,0,1,0,6,0,2,0,3,0,2,0,5,0,4,0,4,0,1,0,3,0,3,0,2,0,0,0,1,0,2,0,10,0,19,0,16,0,10,0,3,0,3,0,7,0,10,0,5,0,3,0,11,0,4,0,13,0,17,0,8,0,4,0,12,0,11,0,18,0,15,0,11,0,2,0,7,0,6,0,9,0,14,0,3,0,1,0,6,0,4,0,5,0,3,0,2,0,0,0,3,0,4,0,6,0,18,0,12,0,5,0,5,0,1,0,2,0,16,0,9,0,3,0,7,0,3,0,5,0,14,0,7,0,3,0,19,0,17,0,15,0,13,0,10,0,4,0,13,0,5,0,8,0,11,0,5,0,1,0,12,0,4,0,4,0,1,0,1,0,0,0,7,0,5,0,9,0,14,0,15,0,7,0,6,0,4,0,5,0,5,0,6,0,7,0,7,0,6,0,8,0,8,0,8,0,5,0,15,0,6,0,9,0,10,0,5,0,1,0,11,0,7,0,9,0,6,0,4,0,1,0,14,0,4,0,6,0,2,0,6,0,0,0,1,0,2,0,10,0,23,0,35,0,30,0,12,0,17,0,3,0,3,0,8,0,12,0,18,0,21,0,12,0,7,0,11,0,9,0,15,0,21,0,32,0,40,0,19,0,6,0,14,0,13,0,22,0,34,0,46,0,23,0,18,0,7,0,20,0,19,0,33,0,47,0,27,0,22,0,9,0,3,0,31,0,22,0,41,0,26,0,21,0,20,0,5,0,3,0,14,0,13,0,10,0,11,0,16,0,6,0,5,0,1,0,9,0,8,0,7,0,8,0,4,0,4,0,2,0,0,0,3,0,4,0,10,0,24,0,34,0,33,0,21,0,15,0,5,0,3,0,4,0,10,0,32,0,17,0,11,0,10,0,11,0,7,0,13,0,18,0,30,0,31,0,20,0,5,0,25,0,11,0,19,0,59,0,27,0,18,0,12,0,5,0,35,0,33,0,31,0,58,0,30,0,16,0,7,0,5,0,28,0,26,0,32,0,19,0,17,0,15,0,8,0,14,0,14,0,12,0,9,0,13,0,14,0,9,0,4,0,1,0,11,0,4,0,6,0,6,0,6,0,3,0,2,0,0,0,9,0,6,0,16,0,33,0,41,0,39,0,38,0,26,0,7,0,5,0,6,0,9,0,23,0,16,0,26,0,11,0,17,0,7,0,11,0,14,0,21,0,30,0,10,0,7,0,17,0,10,0,15,0,12,0,18,0,28,0,14,0,5,0,32,0,13,0,22,0,19,0,18,0,16,0,9,0,5,0,40,0,17,0,31,0,29,0,17,0,13,0,4,0,2,0,27,0,12,0,11,0,15,0,10,0,7,0,4,0,1,0,27,0,12,0,8,0,12,0,6,0,3,0,1,0,0,0,1,0,5,0,14,0,21,0,34,0,51,0,46,0,71,0,42,0,52,0,68,0,52,0,67,0,44,0,43,0,19,0,3,0,4,0,12,0,19,0,31,0,26,0,44,0,33,0,31,0,24,0,32,0,24,0,31,0,35,0,22,0,14,0,15,0,13,0,23,0,36,0,59,0,49,0,77,0,65,0,29,0,40,0,30,0,40,0,27,0,33,0,42,0,16,0,22,0,20,0,37,0,61,0,56,0,79,0,73,0,64,0,43,0,76,0,56,0,37,0,26,0,31,0,25,0,14,0,35,0,16,0,60,0,57,0,97,0,75,0,114,0,91,0,54,0,73,0,55,0,41,0,48,0,53,0,23,0,24,0,58,0,27,0,50,0,96,0,76,0,70,0,93,0,84,0,77,0,58,0,79,0,29,0,74,0,49,0,41,0,17,0,47,0,45,0,78,0,74,0,115,0,94,0,90,0,79,0,69,0,83,0,71,0,50,0,59,0,38,0,36,0,15,0,72,0,34,0,56,0,95,0,92,0,85,0,91,0,90,0,86,0,73,0,77,0,65,0,51,0,44,0,43,0,42,0,43,0,20,0,30,0,44,0,55,0,78,0,72,0,87,0,78,0,61,0,46,0,54,0,37,0,30,0,20,0,16,0,53,0,25,0,41,0,37,0,44,0,59,0,54,0,81,0,66,0,76,0,57,0,54,0,37,0,18,0,39,0,11,0,35,0,33,0,31,0,57,0,42,0,82,0,72,0,80,0,47,0,58,0,55,0,21,0,22,0,26,0,38,0,22,0,53,0,25,0,23,0,38,0,70,0,60,0,51,0,36,0,55,0,26,0,34,0,23,0,27,0,14,0,9,0,7,0,34,0,32,0,28,0,39,0,49,0,75,0,30,0,52,0,48,0,40,0,52,0,28,0,18,0,17,0,9,0,5,0,45,0,21,0,34,0,64,0,56,0,50,0,49,0,45,0,31,0,19,0,12,0,15,0,10,0,7,0,6,0,3,0,48,0,23,0,20,0,39,0,36,0,35,0,53,0,21,0,16,0,23,0,13,0,10,0,6,0,1,0,4,0,2,0,16,0,15,0,17,0,27,0,25,0,20,0,29,0,11,0,17,0,12,0,16,0,8,0,1,0,1,0,0,0,1,0,7,0,12,0,18,0,53,0,47,0,76,0,124,0,108,0,89,0,123,0,108,0,119,0,107,0,81,0,122,0,63,0,13,0,5,0,16,0,27,0,46,0,36,0,61,0,51,0,42,0,70,0,52,0,83,0,65,0,41,0,59,0,36,0,19,0,17,0,15,0,24,0,41,0,34,0,59,0,48,0,40,0,64,0,50,0,78,0,62,0,80,0,56,0,33,0,29,0,28,0,25,0,43,0,39,0,63,0,55,0,93,0,76,0,59,0,93,0,72,0,54,0,75,0,50,0,29,0,52,0,22,0,42,0,40,0,67,0,57,0,95,0,79,0,72,0,57,0,89,0,69,0,49,0,66,0,46,0,27,0,77,0,37,0,35,0,66,0,58,0,52,0,91,0,74,0,62,0,48,0,79,0,63,0,90,0,62,0,40,0,38,0,125,0,32,0,60,0,56,0,50,0,92,0,78,0,65,0,55,0,87,0,71,0,51,0,73,0,51,0,70,0,30,0,109,0,53,0,49,0,94,0,88,0,75,0,66,0,122,0,91,0,73,0,56,0,42,0,64,0,44,0,21,0,25,0,90,0,43,0,41,0,77,0,73,0,63,0,56,0,92,0,77,0,66,0,47,0,67,0,48,0,53,0,36,0,20,0,71,0,34,0,67,0,60,0,58,0,49,0,88,0,76,0,67,0,106,0,71,0,54,0,38,0,39,0,23,0,15,0,109,0,53,0,51,0,47,0,90,0,82,0,58,0,57,0,48,0,72,0,57,0,41,0,23,0,27,0,62,0,9,0,86,0,42,0,40,0,37,0,70,0,64,0,52,0,43,0,70,0,55,0,42,0,25,0,29,0,18,0,11,0,11,0,118,0,68,0,30,0,55,0,50,0,46,0,74,0,65,0,49,0,39,0,24,0,16,0,22,0,13,0,14,0,7,0,91,0,44,0,39,0,38,0,34,0,63,0,52,0,45,0,31,0,52,0,28,0,19,0,14,0,8,0,9,0,3,0,123,0,60,0,58,0,53,0,47,0,43,0,32,0,22,0,37,0,24,0,17,0,12,0,15,0,10,0,2,0,1,0,71,0,37,0,34,0,30,0,28,0,20,0,17,0,26,0,21,0,16,0,10,0,6,0,8,0,6,0,2,0,0,0,1,0,5,0,14,0,44,0,74,0,63,0,110,0,93,0,172,0,149,0,138,0,242,0,225,0,195,0,120,1,17,0,3,0,4,0,12,0,20,0,35,0,62,0,53,0,47,0,83,0,75,0,68,0,119,0,201,0,107,0,207,0,9,0,15,0,13,0,23,0,38,0,67,0,58,0,103,0,90,0,161,0,72,0,127,0,117,0,110,0,209,0,206,0,16,0,45,0,21,0,39,0,69,0,64,0,114,0,99,0,87,0,158,0,140,0,252,0,212,0,199,0,131,1,109,1,26,0,75,0,36,0,68,0,65,0,115,0,101,0,179,0,164,0,155,0,8,1,246,0,226,0,139,1,126,1,106,1,9,0,66,0,30,0,59,0,56,0,102,0,185,0,173,0,9,1,142,0,253,0,232,0,144,1,132,1,122,1,189,1,16,0,111,0,54,0,52,0,100,0,184,0,178,0,160,0,133,0,1,1,244,0,228,0,217,0,129,1,110,1,203,2,10,0,98,0,48,0,91,0,88,0,165,0,157,0,148,0,5,1,248,0,151,1,141,1,116,1,124,1,121,3,116,3,8,0,85,0,84,0,81,0,159,0,156,0,143,0,4,1,249,0,171,1,145,1,136,1,127,1,215,2,201,2,196,2,7,0,154,0,76,0,73,0,141,0,131,0,0,1,245,0,170,1,150,1,138,1,128,1,223,2,103,1,198,2,96,1,11,0,139,0,129,0,67,0,125,0,247,0,233,0,229,0,219,0,137,1,231,2,225,2,208,2,117,3,114,3,183,1,4,0,243,0,120,0,118,0,115,0,227,0,223,0,140,1,234,2,230,2,224,2,209,2,200,2,194,2,223,0,180,1,6,0,202,0,224,0,222,0,218,0,216,0,133,1,130,1,125,1,108,1,120,3,187,1,195,2,184,1,181,1,192,6,4,0,235,2,211,0,210,0,208,0,114,1,123,1,222,2,211,2,202,2,199,6,115,3,109,3,108,3,131,13,97,3,2,0,121,1,113,1,102,0,187,0,214,2,210,2,102,1,199,2,197,2,98,3,198,6,103,3,130,13,102,3,178,1,0,0,12,0,10,0,7,0,11,0,10,0,17,0,11,0,9,0,13,0,12,0,10,0,7,0,5,0,3,0,1,0,3,0,15,0,13,0,46,0,80,0,146,0,6,1,248,0,178,1,170,1,157,2,141,2,137,2,109,2,5,2,8,4,88,0,14,0,12,0,21,0,38,0,71,0,130,0,122,0,216,0,209,0,198,0,71,1,89,1,63,1,41,1,23,1,42,0,47,0,22,0,41,0,74,0,68,0,128,0,120,0,221,0,207,0,194,0,182,0,84,1,59,1,39,1,29,2,18,0,81,0,39,0,75,0,70,0,134,0,125,0,116,0,220,0,204,0,190,0,178,0,69,1,55,1,37,1,15,1,16,0,147,0,72,0,69,0,135,0,127,0,118,0,112,0,210,0,200,0,188,0,96,1,67,1,50,1,29,1,28,2,14,0,7,1,66,0,129,0,126,0,119,0,114,0,214,0,202,0,192,0,180,0,85,1,61,1,45,1,25,1,6,1,12,0,249,0,123,0,121,0,117,0,113,0,215,0,206,0,195,0,185,0,91,1,74,1,52,1,35,1,16,1,8,2,10,0,179,1,115,0,111,0,109,0,211,0,203,0,196,0,187,0,97,1,76,1,57,1,42,1,27,1,19,2,125,1,17,0,171,1,212,0,208,0,205,0,201,0,193,0,186,0,177,0,169,0,64,1,47,1,30,1,12,1,2,2,121,1,16,0,79,1,199,0,197,0,191,0,189,0,181,0,174,0,77,1,65,1,49,1,33,1,19,1,9,2,123,1,115,1,11,0,156,2,184,0,183,0,179,0,175,0,88,1,75,1,58,1,48,1,34,1,21,1,18,2,127,1,117,1,110,1,10,0,140,2,90,1,171,0,168,0,164,0,62,1,53,1,43,1,31,1,20,1,7,1,1,2,119,1,112,1,106,1,6,0,136,2,66,1,60,1,56,1,51,1,46,1,36,1,28,1,13,1,5,1,0,2,120,1,114,1,108,1,103,1,4,0,108,2,44,1,40,1,38,1,32,1,26,1,17,1,10,1,3,2,124,1,118,1,113,1,109,1,105,1,101,1,2,0,9,4,24,1,22,1,18,1,11,1,8,1,3,1,126,1,122,1,116,1,111,1,107,1,104,1,102,1,100,1,0,0,43,0,20,0,19,0,17,0,15,0,13,0,11,0,9,0,7,0,6,0,4,0,7,0,5,0,3,0,1,0,3,0,1,0,10,0,8,0,20,0,12,0,20,0,16,0,32,0,14,0,12,0,24,0,0,0,28,0,16,0,24,0,16,0,15,0,28,0,26,0,48,0,22,0,40,0,36,0,64,0,14,0,24,0,20,0,32,0,12,0,16,0,8,0,0,0,69,114,114,111,114,58,32,99,97,110,39,116,32,97,108,108,111,99,97,116,101,32,86,98,114,70,114,97,109,101,115,32,98,117,102,102,101,114,10,0,115,116,114,97,110,103,101,32,101,114,114,111,114,32,102,108,117,115,104,105,110,103,32,98,117,102,102,101,114,32,46,46,46,32,10,0,69,114,114,111,114,58,32,77,65,88,95,72,69,65,68,69,82,95,66,85,70,32,116,111,111,32,115,109,97,108,108,32,105,110,32,98,105,116,115,116,114,101,97,109,46,99,32,10,0,73,110,116,101,114,110,97,108,32,98,117,102,102,101,114,32,105,110,99,111,110,115,105,115,116,101,110,99,121,46,32,102,108,117,115,104,98,105,116,115,32,60,62,32,82,101,115,118,83,105,122,101,0,98,105,116,32,114,101,115,101,114,118,111,105,114,32,101,114,114,111,114,58,32,10,108,51,95,115,105,100,101,45,62,109,97,105,110,95,100,97,116,97,95,98,101,103,105,110,58,32,37,105,32,10,82,101,115,118,111,105,114,32,115,105,122,101,58,32,32,32,32,32,32,32,32,32,32,32,32,32,37,105,32,10,114,101,115,118,32,100,114,97,105,110,32,40,112,111,115,116,41,32,32,32,32,32,32,32,32,32,37,105,32,10,114,101,115,118,32,100,114,97,105,110,32,40,112,114,101,41,32,32,32,32,32,32,32,32,32,32,37,105,32,10,104,101,97,100,101,114,32,97,110,100,32,115,105,100,101,105,110,102,111,58,32,32,32,32,32,32,37,105,32,10,100,97,116,97,32,98,105,116,115,58,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,37,105,32,10,116,111,116,97,108,32,98,105,116,115,58,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,37,105,32,40,114,101,109,97,105,110,100,101,114,58,32,37,105,41,32,10,98,105,116,115,112,101,114,102,114,97,109,101,58,32,32,32,32,32,32,32,32,32,32,32,32,32,37,105,32,10,0,84,104,105,115,32,105,115,32,97,32,102,97,116,97,108,32,101,114,114,111,114,46,32,32,73,116,32,104,97,115,32,115,101,118,101,114,97,108,32,112,111,115,115,105,98,108,101,32,99,97,117,115,101,115,58,0,57,48,37,37,32,32,76,65,77,69,32,99,111,109,112,105,108,101,100,32,119,105,116,104,32,98,117,103,103,121,32,118,101,114,115,105,111,110,32,111,102,32,103,99,99,32,117,115,105,110,103,32,97,100,118,97,110,99,101,100,32,111,112,116,105,109,105,122,97,116,105,111,110,115,0,32,57,37,37,32,32,89,111,117,114,32,115,121,115,116,101,109,32,105,115,32,111,118,101,114,99,108,111,99,107,101,100,0,32,49,37,37,32,32,98,117,103,32,105,110,32,76,65,77,69,32,101,110,99,111,100,105,110,103,32,108,105,98,114,97,114,121,0,0,128,64,192,32,160,96,224,16,144,80,208,48,176,112,240,8,136,72,200,40,168,104,232,24,152,88,216,56,184,120,248,4,132,68,196,36,164,100,228,20,148,84,212,52,180,116,244,12,140,76,204,44,172,108,236,28,156,92,220,60,188,124,252,2,130,66,194,34,162,98,226,18,146,82,210,50,178,114,242,10,138,74,202,42,170,106,234,26,154,90,218,58,186,122,250,6,134,70,198,38,166,102,230,22,150,86,214,54,182,118,246,14,142,78,206,46,174,110,238,30,158,94,222,62,190,126,254,88,88,88,0,37,108,117,0,105,109,97,103,101,47,112,110,103,0,105,109,97,103,101,47,103,105,102,0,105,109,97,103,101,47,106,112,101,103,0,37,100,0,87,97,114,110,105,110,103,58,32,104,105,103,104,112,97,115,115,32,102,105,108,116,101,114,32,100,105,115,97,98,108,101,100,46,32,32,104,105,103,104,112,97,115,115,32,102,114,101,113,117,101,110,99,121,32,116,111,111,32,115,109,97,108,108,10,0,69,114,114,111,114,58,32,99,97,110,39,116,32,97,108,108,111,99,97,116,101,32,105,110,95,98,117,102,102,101,114,32,98,117,102,102,101,114,10,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,32,73,78,32,86,66,82,32,78,69,87,32,67,79,68,69,44,32,112,108,101,97,115,101,32,115,101,110,100,32,98,117,103,32,114,101,112,111,114,116,10,0,1,4,3,5,1,5,5,7,5,8,7,9,5,7,7,9,7,9,9,10,4,5,5,6,5,6,6,7,5,6,6,7,6,7,7,8,1,4,7,4,5,7,6,7,8,2,3,7,4,4,7,6,7,8,1,4,7,8,4,5,8,9,7,8,9,10,8,8,9,10,3,4,6,8,4,4,6,7,5,6,7,8,7,7,8,9,1,4,7,9,9,10,4,6,8,9,9,10,7,7,9,10,10,11,8,9,10,11,11,11,8,9,10,11,11,12,9,10,11,12,12,12,2,4,7,9,9,10,4,4,6,10,10,10,7,6,8,10,10,11,9,10,10,11,11,12,9,9,10,11,12,12,10,10,11,11,13,13,3,4,6,7,9,10,4,5,6,7,8,10,5,6,7,8,9,10,7,7,8,9,9,10,8,8,9,9,10,11,9,9,10,10,11,11,1,4,7,9,10,10,10,11,4,6,8,9,10,11,10,10,7,8,9,10,11,12,11,11,8,9,10,11,12,12,11,12,9,10,11,12,12,12,12,12,10,11,12,12,13,13,12,13,9,10,11,12,12,12,13,13,10,10,11,12,12,13,13,13,2,4,6,8,9,10,9,10,4,5,6,8,10,10,9,10,6,7,8,9,10,11,10,10,8,8,9,11,10,12,10,11,9,10,10,11,11,12,11,12,9,10,11,12,12,13,12,13,9,9,9,10,11,12,12,12,9,9,10,11,12,12,12,12,4,4,6,8,9,10,10,10,4,5,6,7,9,9,10,10,6,6,7,8,9,10,9,10,7,7,8,8,9,10,10,10,8,8,9,9,10,10,10,11,9,9,10,10,10,11,10,11,9,9,9,10,10,11,11,12,10,10,10,11,11,11,11,12,1,5,7,8,9,10,10,11,10,11,12,12,13,13,14,14,4,6,8,9,10,10,11,11,11,11,12,12,13,14,14,14,7,8,9,10,11,11,12,12,11,12,12,13,13,14,15,15,8,9,10,11,11,12,12,12,12,13,13,13,13,14,15,15,9,9,11,11,12,12,13,13,12,13,13,14,14,15,15,16,10,10,11,12,12,12,13,13,13,13,14,13,15,15,16,16,10,11,12,12,13,13,13,13,13,14,14,14,15,15,16,16,11,11,12,13,13,13,14,14,14,14,15,15,15,16,18,18,10,10,11,12,12,13,13,14,14,14,14,15,15,16,17,17,11,11,12,12,13,13,13,15,14,15,15,16,16,16,18,17,11,12,12,13,13,14,14,15,14,15,16,15,16,17,18,19,12,12,12,13,14,14,14,14,15,15,15,16,17,17,17,18,12,13,13,14,14,15,14,15,16,16,17,17,17,18,18,18,13,13,14,15,15,15,16,16,16,16,16,17,18,17,18,18,14,14,14,15,15,15,17,16,16,19,17,17,17,19,18,18,13,14,15,16,16,16,17,16,17,17,18,18,21,20,21,18,1,5,7,9,10,10,11,11,12,12,12,13,13,13,14,11,4,6,8,9,10,11,11,11,12,12,12,13,14,13,14,11,7,8,9,10,11,11,12,12,13,12,13,13,13,14,14,12,9,9,10,11,11,12,12,12,13,13,14,14,14,15,15,13,10,10,11,11,12,12,13,13,13,14,14,14,15,15,15,12,10,10,11,11,12,13,13,14,13,14,14,15,15,15,16,13,11,11,11,12,13,13,13,13,14,14,14,14,15,15,16,13,11,11,12,12,13,13,13,14,14,15,15,15,15,17,17,13,11,12,12,13,13,13,14,14,15,15,15,15,16,16,16,13,12,12,12,13,13,14,14,15,15,15,15,16,15,16,15,14,12,13,12,13,14,14,14,14,15,16,16,16,17,17,16,13,13,13,13,13,14,14,15,16,16,16,16,16,16,15,16,14,13,14,14,14,14,15,15,15,15,17,16,16,16,16,18,14,15,14,14,14,15,15,16,16,16,18,17,17,17,19,17,14,14,15,13,14,16,16,15,16,16,17,18,17,19,17,16,14,11,11,11,12,12,13,13,13,14,14,14,14,14,14,14,12,3,5,6,8,8,9,10,10,10,11,11,12,12,12,13,14,5,5,7,8,9,9,10,10,10,11,11,12,12,12,13,13,6,7,7,8,9,9,10,10,10,11,11,12,12,13,13,13,7,8,8,9,9,10,10,11,11,11,12,12,12,13,13,13,8,8,9,9,10,10,11,11,11,11,12,12,12,13,13,13,9,9,9,10,10,10,11,11,11,11,12,12,13,13,13,14,10,9,10,10,10,11,11,11,11,12,12,12,13,13,14,14,10,10,10,11,11,11,11,12,12,12,12,12,13,13,13,14,10,10,10,11,11,11,11,12,12,12,12,13,13,14,14,14,10,10,11,11,11,11,12,12,12,13,13,13,13,14,14,14,11,11,11,11,12,12,12,12,12,13,13,13,13,14,15,14,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,15,12,12,11,12,12,12,13,13,13,13,13,13,14,14,15,15,12,12,12,12,12,13,13,13,13,14,14,14,14,14,15,15,13,13,13,13,13,13,13,13,14,14,14,14,15,15,14,15,13,13,13,13,13,13,13,14,14,14,14,14,15,15,15,15,1,5,7,9,10,10,11,11,12,12,12,13,13,13,14,10,4,6,8,9,10,11,11,11,12,12,12,13,14,13,14,10,7,8,9,10,11,11,12,12,13,12,13,13,13,14,14,11,9,9,10,11,11,12,12,12,13,13,14,14,14,15,15,12,10,10,11,11,12,12,13,13,13,14,14,14,15,15,15,11,10,10,11,11,12,13,13,14,13,14,14,15,15,15,16,12,11,11,11,12,13,13,13,13,14,14,14,14,15,15,16,12,11,11,12,12,13,13,13,14,14,15,15,15,15,17,17,12,11,12,12,13,13,13,14,14,15,15,15,15,16,16,16,12,12,12,12,13,13,14,14,15,15,15,15,16,15,16,15,13,12,13,12,13,14,14,14,14,15,16,16,16,17,17,16,12,13,13,13,13,14,14,15,16,16,16,16,16,16,15,16,13,13,14,14,14,14,15,15,15,15,17,16,16,16,16,18,13,15,14,14,14,15,15,16,16,16,18,17,17,17,19,17,13,14,15,13,14,16,16,15,16,16,17,18,17,19,17,16,13,10,10,10,11,11,12,12,12,13,13,13,13,13,13,13,10,4,5,7,8,9,10,10,11,11,12,12,12,12,12,13,10,5,6,7,8,9,10,10,11,11,11,12,12,12,12,12,10,7,7,8,9,9,10,10,11,11,11,11,12,12,12,13,9,8,8,9,9,10,10,10,11,11,11,11,12,12,12,12,9,9,9,9,10,10,10,10,11,11,11,12,12,12,12,13,9,10,9,10,10,10,10,11,11,11,11,12,12,12,12,12,9,10,10,10,10,10,11,11,11,11,12,12,12,12,12,13,9,11,10,10,10,11,11,11,11,12,12,12,12,12,13,13,10,11,11,11,11,11,11,11,11,11,12,12,12,12,13,13,10,11,11,11,11,11,11,11,12,12,12,12,12,13,13,13,10,12,11,11,11,11,12,12,12,12,12,12,13,13,13,13,10,12,12,11,11,11,12,12,12,12,12,12,13,13,13,13,10,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,10,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,10,13,12,12,12,12,12,12,13,13,13,13,13,13,13,13,10,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,6,51,46,57,57,46,53,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,45,43,32,32,32,48,88,48,120,0,40,110,117,108,108,41,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,105,110,102,0,73,78,70,0,110,97,110,0,78,65,78,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,46,0,84,33,34,25,13,1,2,3,17,75,28,12,16,4,11,29,18,30,39,104,110,111,112,113,98,32,5,6,15,19,20,21,26,8,22,7,40,36,23,24,9,10,14,27,31,37,35,131,130,125,38,42,43,60,61,62,63,67,71,74,77,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,108,114,115,116,121,122,123,124,0,73,108,108,101,103,97,108,32,98,121,116,101,32,115,101,113,117,101,110,99,101,0,68,111,109,97,105,110,32,101,114,114,111,114,0,82,101,115,117,108,116,32,110,111,116,32,114,101,112,114,101,115,101,110,116,97,98,108,101,0,78,111,116,32,97,32,116,116,121,0,80,101,114,109,105,115,115,105,111,110,32,100,101,110,105,101,100,0,79,112,101,114,97,116,105,111,110,32,110,111,116,32,112,101,114,109,105,116,116,101,100,0,78,111,32,115,117,99,104,32,102,105,108,101,32,111,114,32,100,105,114,101,99,116,111,114,121,0,78,111,32,115,117,99,104,32,112,114,111,99,101,115,115,0,70,105,108,101,32,101,120,105,115,116,115,0,86,97,108,117,101,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,100,97,116,97,32,116,121,112,101,0,78,111,32,115,112,97,99,101,32,108,101,102,116,32,111,110,32,100,101,118,105,99,101,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,82,101,115,111,117,114,99,101,32,98,117,115,121,0,73,110,116,101,114,114,117,112,116,101,100,32,115,121,115,116,101,109,32,99,97,108,108,0,82,101,115,111,117,114,99,101,32,116,101,109,112,111,114,97,114,105,108,121,32,117,110,97,118,97,105,108,97,98,108,101,0,73,110,118,97,108,105,100,32,115,101,101,107,0,67,114,111,115,115,45,100,101,118,105,99,101,32,108,105,110,107,0,82,101,97,100,45,111,110,108,121,32,102,105,108,101,32,115,121,115,116,101,109,0,68,105,114,101,99,116,111,114,121,32,110,111,116,32,101,109,112,116,121,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,112,101,101,114,0,79,112,101,114,97,116,105,111,110,32,116,105,109,101,100,32,111,117,116,0,67,111,110,110,101,99,116,105,111,110,32,114,101,102,117,115,101,100,0,72,111,115,116,32,105,115,32,100,111,119,110,0,72,111,115,116,32,105,115,32,117,110,114,101,97,99,104,97,98,108,101,0,65,100,100,114,101,115,115,32,105,110,32,117,115,101,0,66,114,111,107,101,110,32,112,105,112,101,0,73,47,79,32,101,114,114,111,114,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,32,111,114,32,97,100,100,114,101,115,115,0,66,108,111,99,107,32,100,101,118,105,99,101,32,114,101,113,117,105,114,101,100,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,0,78,111,116,32,97,32,100,105,114,101,99,116,111,114,121,0,73,115,32,97,32,100,105,114,101,99,116,111,114,121,0,84,101,120,116,32,102,105,108,101,32,98,117,115,121,0,69,120,101,99,32,102,111,114,109,97,116,32,101,114,114,111,114,0,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,0,65,114,103,117,109,101,110,116,32,108,105,115,116,32,116,111,111,32,108,111,110,103,0,83,121,109,98,111,108,105,99,32,108,105,110,107,32,108,111,111,112,0,70,105,108,101,110,97,109,101,32,116,111,111,32,108,111,110,103,0,84,111,111,32,109,97,110,121,32,111,112,101,110,32,102,105,108,101,115,32,105,110,32,115,121,115,116,101,109,0,78,111,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,115,32,97,118,97,105,108,97,98,108,101,0,66,97,100,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,0,78,111,32,99,104,105,108,100,32,112,114,111,99,101,115,115,0,66,97,100,32,97,100,100,114,101,115,115,0,70,105,108,101,32,116,111,111,32,108,97,114,103,101,0,84,111,111,32,109,97,110,121,32,108,105,110,107,115,0,78,111,32,108,111,99,107,115,32,97,118,97,105,108,97,98,108,101,0,82,101,115,111,117,114,99,101,32,100,101,97,100,108,111,99,107,32,119,111,117,108,100,32,111,99,99,117,114,0,83,116,97,116,101,32,110,111,116,32,114,101,99,111,118,101,114,97,98,108,101,0,80,114,101,118,105,111,117,115,32,111,119,110,101,114,32,100,105,101,100,0,79,112,101,114,97,116,105,111,110,32,99,97,110,99,101,108,101,100,0,70,117,110,99,116,105,111,110,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,78,111,32,109,101,115,115,97,103,101,32,111,102,32,100,101,115,105,114,101,100,32,116,121,112,101,0,73,100,101,110,116,105,102,105,101,114,32,114,101,109,111,118,101,100,0,68,101,118,105,99,101,32,110,111,116,32,97,32,115,116,114,101,97,109,0,78,111,32,100,97,116,97,32,97,118,97,105,108,97,98,108,101,0,68,101,118,105,99,101,32,116,105,109,101,111,117,116,0,79,117,116,32,111,102,32,115,116,114,101,97,109,115,32,114,101,115,111,117,114,99,101,115,0,76,105,110,107,32,104,97,115,32,98,101,101,110,32,115,101,118,101,114,101,100,0,80,114,111,116,111,99,111,108,32,101,114,114,111,114,0,66,97,100,32,109,101,115,115,97,103,101,0,70,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,105,110,32,98,97,100,32,115,116,97,116,101,0,78,111,116,32,97,32,115,111,99,107,101,116,0,68,101,115,116,105,110,97,116,105,111,110,32,97,100,100,114,101,115,115,32,114,101,113,117,105,114,101,100,0,77,101,115,115,97,103,101,32,116,111,111,32,108,97,114,103,101,0,80,114,111,116,111,99,111,108,32,119,114,111,110,103,32,116,121,112,101,32,102,111,114,32,115,111,99,107,101,116,0,80,114,111,116,111,99,111,108,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,80,114,111,116,111,99,111,108,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,83,111,99,107,101,116,32,116,121,112,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,78,111,116,32,115,117,112,112,111,114,116,101,100,0,80,114,111,116,111,99,111,108,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,65,100,100,114,101,115,115,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,112,114,111,116,111,99,111,108,0,65,100,100,114,101,115,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,78,101,116,119,111,114,107,32,105,115,32,100,111,119,110,0,78,101,116,119,111,114,107,32,117,110,114,101,97,99,104,97,98,108,101,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,110,101,116,119,111,114,107,0,67,111,110,110,101,99,116,105,111,110,32,97,98,111,114,116,101,100,0,78,111,32,98,117,102,102,101,114,32,115,112,97,99,101,32,97,118,97,105,108,97,98,108,101,0,83,111,99,107,101,116,32,105,115,32,99,111,110,110,101,99,116,101,100,0,83,111,99,107,101,116,32,110,111,116,32,99,111,110,110,101,99,116,101,100,0,67,97,110,110,111,116,32,115,101,110,100,32,97,102,116,101,114,32,115,111,99,107,101,116,32,115,104,117,116,100,111,119,110,0,79,112,101,114,97,116,105,111,110,32,97,108,114,101,97,100,121,32,105,110,32,112,114,111,103,114,101,115,115,0,79,112,101,114,97,116,105,111,110,32,105,110,32,112,114,111,103,114,101,115,115,0,83,116,97,108,101,32,102,105,108,101,32,104,97,110,100,108,101,0,82,101,109,111,116,101,32,73,47,79,32,101,114,114,111,114,0,81,117,111,116,97,32,101,120,99,101,101,100,101,100,0,78,111,32,109,101,100,105,117,109,32,102,111,117,110,100,0,87,114,111,110,103,32,109,101,100,105,117,109,32,116,121,112,101,0,78,111,32,101,114,114,111,114,32,105,110,102,111,114,109,97,116,105,111,110,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);





/* no memory initializer */
var tempDoublePtr = STATICTOP; STATICTOP += 16;

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


  function _InitGainAnalysis() {
  Module['printErr']('missing function: InitGainAnalysis'); abort(-1);
  }

  function _AnalyzeSamples() {
  Module['printErr']('missing function: AnalyzeSamples'); abort(-1);
  }

   
  Module["_i64Subtract"] = _i64Subtract;

   
  Module["_i64Add"] = _i64Add;

   
  Module["_memset"] = _memset;

  function _VBR_encode_frame() {
  Module['printErr']('missing function: VBR_encode_frame'); abort(-1);
  }

  function _hip_set_debugf() {
  Module['printErr']('missing function: hip_set_debugf'); abort(-1);
  }

  function _init_xrpow_core_sse() {
  Module['printErr']('missing function: init_xrpow_core_sse'); abort(-1);
  }

  function ___lock() {}

  function ___unlock() {}

  function _GetTitleGain() {
  Module['printErr']('missing function: GetTitleGain'); abort(-1);
  }

  function _hip_set_errorf() {
  Module['printErr']('missing function: hip_set_errorf'); abort(-1);
  }

  var _llvm_pow_f32=Math_pow;

  
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }

  var _llvm_sqrt_f64=Math_sqrt;

  function _hip_decode_init() {
  Module['printErr']('missing function: hip_decode_init'); abort(-1);
  }

  function _hip_set_msgf() {
  Module['printErr']('missing function: hip_set_msgf'); abort(-1);
  }

  
  var SYSCALLS={varargs:0,get:function (varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
        return ret;
      },getStr:function () {
        var ret = Pointer_stringify(SYSCALLS.get());
        return ret;
      },get64:function () {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        if (low >= 0) assert(high === 0);
        else assert(high === -1);
        return low;
      },getZero:function () {
        assert(SYSCALLS.get() === 0);
      }};function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // ioctl
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  function _hip_decode_exit() {
  Module['printErr']('missing function: hip_decode_exit'); abort(-1);
  }

  
  function _llvm_exp2_f32(x) {
      return Math.pow(2, x);
    }function _llvm_exp2_f64() {
  return _llvm_exp2_f32.apply(null, arguments)
  }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // close
      var stream = SYSCALLS.getStreamFromFD();
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  
  
  var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_STATIC); 
  Module["_llvm_cttz_i32"] = _llvm_cttz_i32; 
  Module["___udivmoddi4"] = ___udivmoddi4; 
  Module["___udivdi3"] = ___udivdi3;

  var _llvm_pow_f64=Math_pow;

  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      return value;
    } 
  Module["_sbrk"] = _sbrk;

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

   
  Module["___uremdi3"] = ___uremdi3;

   
  Module["_llvm_bswap_i32"] = _llvm_bswap_i32;

   
  Module["_llvm_bswap_i16"] = _llvm_bswap_i16;

  function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // llseek
      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
      // NOTE: offset_high is unused - Emscripten's off_t is 32-bit
      var offset = offset_low;
      FS.llseek(stream, offset, whence);
      HEAP32[((result)>>2)]=stream.position;
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // writev
      // hack to support printf in NO_FILESYSTEM
      var stream = SYSCALLS.get(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      var ret = 0;
      if (!___syscall146.buffer) {
        ___syscall146.buffers = [null, [], []]; // 1 => stdout, 2 => stderr
        ___syscall146.printChar = function(stream, curr) {
          var buffer = ___syscall146.buffers[stream];
          assert(buffer);
          if (curr === 0 || curr === 10) {
            (stream === 1 ? Module['print'] : Module['printErr'])(UTF8ArrayToString(buffer, 0));
            buffer.length = 0;
          } else {
            buffer.push(curr);
          }
        };
      }
      for (var i = 0; i < iovcnt; i++) {
        var ptr = HEAP32[(((iov)+(i*8))>>2)];
        var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
        for (var j = 0; j < len; j++) {
          ___syscall146.printChar(stream, HEAPU8[ptr+j]);
        }
        ret += len;
      }
      return ret;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function _hip_decode1_unclipped() {
  Module['printErr']('missing function: hip_decode1_unclipped'); abort(-1);
  }
/* flush anything remaining in the buffer during shutdown */ __ATEXIT__.push(function() { var fflush = Module["_fflush"]; if (fflush) fflush(0); var printChar = ___syscall146.printChar; if (!printChar) return; var buffers = ___syscall146.buffers; if (buffers[1].length) printChar(1, 10); if (buffers[2].length) printChar(2, 10); });;
DYNAMICTOP_PTR = allocate(1, "i32", ALLOC_STATIC);

STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = Runtime.alignMemory(STACK_MAX);

HEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;

staticSealed = true; // seal the static portion of memory


function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };

Module.asmLibraryArg = { "abort": abort, "assert": assert, "enlargeMemory": enlargeMemory, "getTotalMemory": getTotalMemory, "abortOnCannotGrowMemory": abortOnCannotGrowMemory, "invoke_iiii": invoke_iiii, "invoke_vii": invoke_vii, "invoke_ii": invoke_ii, "invoke_iiiii": invoke_iiiii, "invoke_iii": invoke_iii, "invoke_viiii": invoke_viiii, "_llvm_pow_f64": _llvm_pow_f64, "_VBR_encode_frame": _VBR_encode_frame, "___syscall6": ___syscall6, "_hip_set_debugf": _hip_set_debugf, "_llvm_exp2_f64": _llvm_exp2_f64, "_llvm_sqrt_f64": _llvm_sqrt_f64, "_GetTitleGain": _GetTitleGain, "___setErrNo": ___setErrNo, "_AnalyzeSamples": _AnalyzeSamples, "_llvm_pow_f32": _llvm_pow_f32, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_hip_decode_exit": _hip_decode_exit, "__exit": __exit, "_hip_decode_init": _hip_decode_init, "___syscall54": ___syscall54, "___unlock": ___unlock, "_hip_set_errorf": _hip_set_errorf, "_init_xrpow_core_sse": _init_xrpow_core_sse, "_hip_set_msgf": _hip_set_msgf, "___lock": ___lock, "_llvm_exp2_f32": _llvm_exp2_f32, "_hip_decode1_unclipped": _hip_decode1_unclipped, "_InitGainAnalysis": _InitGainAnalysis, "___syscall140": ___syscall140, "_exit": _exit, "___syscall146": ___syscall146, "DYNAMICTOP_PTR": DYNAMICTOP_PTR, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "cttz_i8": cttz_i8 };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
'use asm';


  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);

  var DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var cttz_i8=env.cttz_i8|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntS = 0, tempValue = 0, tempDouble = 0.0;
  var tempRet0 = 0;

  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_max=global.Math.max;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var enlargeMemory=env.enlargeMemory;
  var getTotalMemory=env.getTotalMemory;
  var abortOnCannotGrowMemory=env.abortOnCannotGrowMemory;
  var invoke_iiii=env.invoke_iiii;
  var invoke_vii=env.invoke_vii;
  var invoke_ii=env.invoke_ii;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_viiii=env.invoke_viiii;
  var _llvm_pow_f64=env._llvm_pow_f64;
  var _VBR_encode_frame=env._VBR_encode_frame;
  var ___syscall6=env.___syscall6;
  var _hip_set_debugf=env._hip_set_debugf;
  var _llvm_exp2_f64=env._llvm_exp2_f64;
  var _llvm_sqrt_f64=env._llvm_sqrt_f64;
  var _GetTitleGain=env._GetTitleGain;
  var ___setErrNo=env.___setErrNo;
  var _AnalyzeSamples=env._AnalyzeSamples;
  var _llvm_pow_f32=env._llvm_pow_f32;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _hip_decode_exit=env._hip_decode_exit;
  var __exit=env.__exit;
  var _hip_decode_init=env._hip_decode_init;
  var ___syscall54=env.___syscall54;
  var ___unlock=env.___unlock;
  var _hip_set_errorf=env._hip_set_errorf;
  var _init_xrpow_core_sse=env._init_xrpow_core_sse;
  var _hip_set_msgf=env._hip_set_msgf;
  var ___lock=env.___lock;
  var _llvm_exp2_f32=env._llvm_exp2_f32;
  var _hip_decode1_unclipped=env._hip_decode1_unclipped;
  var _InitGainAnalysis=env._InitGainAnalysis;
  var ___syscall140=env.___syscall140;
  var _exit=env._exit;
  var ___syscall146=env.___syscall146;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS

function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function establishStackSpace(stackBase, stackMax) {
  stackBase = stackBase|0;
  stackMax = stackMax|0;
  STACKTOP = stackBase;
  STACK_MAX = stackMax;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function _AddVbrFrame($gfc) {
 $gfc = $gfc|0;
 var $$pre$i = 0, $$pre24$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $add$i = 0, $add21$i = 0, $arrayidx$i = 0, $arrayidx1 = 0, $arrayidx18$i = 0, $arrayidx20$i = 0, $bag$i = 0, $bag17$i = 0, $bitrate_index = 0, $cmp$i = 0, $cmp13$i = 0, $cmp16$i = 0, $cmp1622$i = 0, $cmp3$i = 0, $div$i = 0, $div24$i = 0, $i$023$i = 0, $inc$i = 0, $inc1$i = 0, $inc8$i = 0;
 var $mul$i = 0, $nVbrNumFrames$i = 0, $pos$i = 0, $seen$i = 0, $size$i = 0, $sum$i = 0, $version = 0, $want$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $version = ((($gfc)) + 16|0);
 $0 = HEAP32[$version>>2]|0;
 $bitrate_index = ((($gfc)) + 84744|0);
 $1 = HEAP32[$bitrate_index>>2]|0;
 $arrayidx1 = ((9980 + ($0<<6)|0) + ($1<<2)|0);
 $2 = HEAP32[$arrayidx1>>2]|0;
 $nVbrNumFrames$i = ((($gfc)) + 85784|0);
 $3 = HEAP32[$nVbrNumFrames$i>>2]|0;
 $inc$i = (($3) + 1)|0;
 HEAP32[$nVbrNumFrames$i>>2] = $inc$i;
 $sum$i = ((($gfc)) + 85760|0);
 $4 = HEAP32[$sum$i>>2]|0;
 $add$i = (($4) + ($2))|0;
 HEAP32[$sum$i>>2] = $add$i;
 $seen$i = ((($gfc)) + 85764|0);
 $5 = HEAP32[$seen$i>>2]|0;
 $inc1$i = (($5) + 1)|0;
 HEAP32[$seen$i>>2] = $inc1$i;
 $want$i = ((($gfc)) + 85768|0);
 $6 = HEAP32[$want$i>>2]|0;
 $cmp$i = ($inc1$i|0)<($6|0);
 if ($cmp$i) {
  return;
 }
 $pos$i = ((($gfc)) + 85772|0);
 $7 = HEAP32[$pos$i>>2]|0;
 $size$i = ((($gfc)) + 85776|0);
 $8 = HEAP32[$size$i>>2]|0;
 $cmp3$i = ($7|0)<($8|0);
 if ($cmp3$i) {
  $bag$i = ((($gfc)) + 85780|0);
  $9 = HEAP32[$bag$i>>2]|0;
  $arrayidx$i = (($9) + ($7<<2)|0);
  HEAP32[$arrayidx$i>>2] = $add$i;
  $10 = HEAP32[$pos$i>>2]|0;
  $inc8$i = (($10) + 1)|0;
  HEAP32[$pos$i>>2] = $inc8$i;
  HEAP32[$seen$i>>2] = 0;
  $$pre$i = HEAP32[$size$i>>2]|0;
  $11 = $inc8$i;$12 = $$pre$i;
 } else {
  $11 = $7;$12 = $8;
 }
 $cmp13$i = ($11|0)==($12|0);
 if (!($cmp13$i)) {
  return;
 }
 $cmp1622$i = ($12|0)>(1);
 if ($cmp1622$i) {
  $bag17$i = ((($gfc)) + 85780|0);
  $13 = HEAP32[$bag17$i>>2]|0;
  $i$023$i = 1;
  while(1) {
   $arrayidx18$i = (($13) + ($i$023$i<<2)|0);
   $14 = HEAP32[$arrayidx18$i>>2]|0;
   $div$i = (($i$023$i|0) / 2)&-1;
   $arrayidx20$i = (($13) + ($div$i<<2)|0);
   HEAP32[$arrayidx20$i>>2] = $14;
   $add21$i = (($i$023$i) + 2)|0;
   $15 = HEAP32[$size$i>>2]|0;
   $cmp16$i = ($add21$i|0)<($15|0);
   if ($cmp16$i) {
    $i$023$i = $add21$i;
   } else {
    break;
   }
  }
  $$pre24$i = HEAP32[$pos$i>>2]|0;
  $17 = $$pre24$i;
 } else {
  $17 = $12;
 }
 $16 = HEAP32[$want$i>>2]|0;
 $mul$i = $16 << 1;
 HEAP32[$want$i>>2] = $mul$i;
 $div24$i = (($17|0) / 2)&-1;
 HEAP32[$pos$i>>2] = $div24$i;
 return;
}
function _InitVbrTag($gfp) {
 $gfp = $gfp|0;
 var $$ = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $TotalFrameSize = 0, $add12 = 0, $arrayidx = 0, $avg_bitrate = 0, $bag = 0, $buffer = 0, $call = 0, $cmp = 0;
 var $cmp13 = 0, $cmp14 = 0, $cmp2 = 0, $cmp26 = 0, $cmp32 = 0, $cmp4535 = 0, $cmp6 = 0, $div = 0, $exitcond = 0, $i$036 = 0, $inc = 0, $internal_flags = 0, $kbps_header$0 = 0, $kbps_header$1 = 0, $mul = 0, $mul10 = 0, $nBytesWritten = 0, $nVbrNumFrames = 0, $or$cond = 0, $pos = 0;
 var $retval$1 = 0, $samplerate_out = 0, $samplerate_out11 = 0, $seen = 0, $sideinfo_len = 0, $size = 0, $sum = 0, $vararg_buffer = 0, $vbr = 0, $version = 0, $want = 0, $write_lame_tag = 0, $write_lame_tag39 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2896|0;
 $vararg_buffer = sp;
 $buffer = sp + 8|0;
 $internal_flags = ((($gfp)) + 288|0);
 $0 = HEAP32[$internal_flags>>2]|0;
 $version = ((($0)) + 16|0);
 $1 = HEAP32[$version>>2]|0;
 $cmp = ($1|0)==(1);
 if ($cmp) {
  $kbps_header$0 = 128;
 } else {
  $samplerate_out = ((($0)) + 64|0);
  $2 = HEAP32[$samplerate_out>>2]|0;
  $cmp2 = ($2|0)<(16000);
  $$ = $cmp2 ? 32 : 64;
  $kbps_header$0 = $$;
 }
 $vbr = ((($0)) + 104|0);
 $3 = HEAP32[$vbr>>2]|0;
 $cmp6 = ($3|0)==(0);
 if ($cmp6) {
  $avg_bitrate = ((($0)) + 120|0);
  $4 = HEAP32[$avg_bitrate>>2]|0;
  $kbps_header$1 = $4;
 } else {
  $kbps_header$1 = $kbps_header$0;
 }
 $5 = ($1*72000)|0;
 $mul = (($5) + 72000)|0;
 $mul10 = Math_imul($mul, $kbps_header$1)|0;
 $samplerate_out11 = ((($0)) + 64|0);
 $6 = HEAP32[$samplerate_out11>>2]|0;
 $div = (($mul10|0) / ($6|0))&-1;
 $sideinfo_len = ((($0)) + 24|0);
 $7 = HEAP32[$sideinfo_len>>2]|0;
 $add12 = (($7) + 156)|0;
 $TotalFrameSize = ((($0)) + 85792|0);
 HEAP32[$TotalFrameSize>>2] = $div;
 $cmp13 = ($div|0)<($add12|0);
 $cmp14 = ($div|0)>(2880);
 $or$cond = $cmp14 | $cmp13;
 if ($or$cond) {
  $write_lame_tag = ((($0)) + 156|0);
  HEAP32[$write_lame_tag>>2] = 0;
  $retval$1 = 0;
  STACKTOP = sp;return ($retval$1|0);
 }
 $nVbrNumFrames = ((($0)) + 85784|0);
 HEAP32[$nVbrNumFrames>>2] = 0;
 $nBytesWritten = ((($0)) + 85788|0);
 HEAP32[$nBytesWritten>>2] = 0;
 $sum = ((($0)) + 85760|0);
 HEAP32[$sum>>2] = 0;
 $seen = ((($0)) + 85764|0);
 HEAP32[$seen>>2] = 0;
 $want = ((($0)) + 85768|0);
 HEAP32[$want>>2] = 1;
 $pos = ((($0)) + 85772|0);
 HEAP32[$pos>>2] = 0;
 $bag = ((($0)) + 85780|0);
 $8 = HEAP32[$bag>>2]|0;
 $cmp26 = ($8|0)==(0|0);
 do {
  if ($cmp26) {
   $call = (_malloc(1600)|0);
   HEAP32[$bag>>2] = $call;
   $cmp32 = ($call|0)==(0|0);
   $size = ((($0)) + 85776|0);
   if (!($cmp32)) {
    HEAP32[$size>>2] = 400;
    break;
   }
   HEAP32[$size>>2] = 0;
   _lame_errorf($0,14620,$vararg_buffer);
   $write_lame_tag39 = ((($0)) + 156|0);
   HEAP32[$write_lame_tag39>>2] = 0;
   $retval$1 = -1;
   STACKTOP = sp;return ($retval$1|0);
  }
 } while(0);
 _memset(($buffer|0),0,2880)|0;
 _setLameTagFrameHeader($0,$buffer);
 $9 = HEAP32[$TotalFrameSize>>2]|0;
 $cmp4535 = ($9|0)==(0);
 if (!($cmp4535)) {
  $i$036 = 0;
  while(1) {
   $arrayidx = (($buffer) + ($i$036)|0);
   $10 = HEAP8[$arrayidx>>0]|0;
   _add_dummy_byte($0,$10,1);
   $inc = (($i$036) + 1)|0;
   $exitcond = ($inc|0)==($9|0);
   if ($exitcond) {
    break;
   } else {
    $i$036 = $inc;
   }
  }
 }
 $retval$1 = 0;
 STACKTOP = sp;return ($retval$1|0);
}
function _setLameTagFrameHeader($gfc,$buffer) {
 $gfc = $gfc|0;
 $buffer = $buffer|0;
 var $$ = 0, $$pre = 0, $$pre64 = 0, $$sink = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $and20 = 0, $and41 = 0, $and48 = 0, $and60 = 0, $and67 = 0, $and74 = 0, $and81 = 0, $and88 = 0, $and95 = 0, $arrayidx38 = 0, $arrayidx4 = 0, $arrayidx64 = 0;
 var $avg_bitrate = 0, $bbyte$0 = 0, $bitrate$0 = 0, $bitrate$1 = 0, $bitrate_index = 0, $call = 0, $cmp105 = 0, $cmp108 = 0, $cmp113 = 0, $cmp125 = 0, $cond = 0, $cond33 = 0, $conv11 = 0, $conv13762 = 0, $conv139 = 0, $conv15 = 0, $conv18 = 0, $conv18$masked = 0, $conv25 = 0, $conv28 = 0;
 var $conv36 = 0, $conv39 = 0, $conv43 = 0, $conv46 = 0, $conv46$masked = 0, $conv5 = 0, $conv53 = 0, $conv55 = 0, $conv62 = 0, $conv65 = 0, $conv69 = 0, $conv72 = 0, $conv76 = 0, $conv79 = 0, $conv8 = 0, $conv83 = 0, $conv86 = 0, $conv90 = 0, $conv93 = 0, $conv97 = 0;
 var $copyright = 0, $emphasis = 0, $error_protection = 0, $extension = 0, $free_format = 0, $lnot = 0, $mode = 0, $mode_ext = 0, $mul = 0, $not$cmp = 0, $or138 = 0, $or14 = 0, $or143 = 0, $or27 = 0, $or35 = 0, $or42 = 0, $or61 = 0, $or68 = 0, $or7 = 0, $or75 = 0;
 var $or82 = 0, $or89 = 0, $or96 = 0, $original = 0, $phitmp = 0, $samplerate_index = 0, $samplerate_out = 0, $shl26 = 0, $shl32 = 0, $shl40 = 0, $shl54 = 0, $shl59 = 0, $shl6 = 0, $shl66 = 0, $storemerge = 0, $tobool117 = 0, $vbr = 0, $version = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$buffer>>0] = -1;
 $arrayidx4 = ((($buffer)) + 1|0);
 $0 = HEAP8[$arrayidx4>>0]|0;
 $conv5 = $0&255;
 $shl6 = $conv5 << 3;
 $or7 = $shl6 | 7;
 $conv8 = $or7&255;
 HEAP8[$arrayidx4>>0] = $conv8;
 $conv11 = $or7 << 1;
 $samplerate_out = ((($gfc)) + 64|0);
 $1 = HEAP32[$samplerate_out>>2]|0;
 $not$cmp = ($1|0)>(15999);
 $cond = $not$cmp&1;
 $or14 = $conv11 | $cond;
 $conv15 = $or14&255;
 HEAP8[$arrayidx4>>0] = $conv15;
 $conv18 = $or14 << 1;
 $version = ((($gfc)) + 16|0);
 $2 = HEAP32[$version>>2]|0;
 $and20 = $2 & 1;
 $conv18$masked = $conv18 & 62;
 $conv25 = $conv18$masked | $and20;
 $shl26 = $conv25 << 2;
 $or27 = $shl26 | 1;
 $conv28 = $or27&255;
 HEAP8[$arrayidx4>>0] = $conv28;
 $shl32 = $or27 << 1;
 $error_protection = ((($gfc)) + 160|0);
 $3 = HEAP32[$error_protection>>2]|0;
 $lnot = ($3|0)==(0);
 $cond33 = $lnot&1;
 $or35 = $shl32 | $cond33;
 $conv36 = $or35&255;
 HEAP8[$arrayidx4>>0] = $conv36;
 $arrayidx38 = ((($buffer)) + 2|0);
 $4 = HEAP8[$arrayidx38>>0]|0;
 $conv39 = $4&255;
 $shl40 = $conv39 << 4;
 $bitrate_index = ((($gfc)) + 84744|0);
 $5 = HEAP32[$bitrate_index>>2]|0;
 $and41 = $5 & 15;
 $or42 = $shl40 | $and41;
 $conv43 = $or42&255;
 HEAP8[$arrayidx38>>0] = $conv43;
 $conv46 = $or42 << 2;
 $samplerate_index = ((($gfc)) + 20|0);
 $6 = HEAP32[$samplerate_index>>2]|0;
 $and48 = $6 & 3;
 $conv46$masked = $conv46 & 124;
 $conv53 = $conv46$masked | $and48;
 $shl54 = $conv53 << 1;
 $conv55 = $shl54&255;
 HEAP8[$arrayidx38>>0] = $conv55;
 $shl59 = $conv53 << 2;
 $extension = ((($gfc)) + 172|0);
 $7 = HEAP32[$extension>>2]|0;
 $and60 = $7 & 1;
 $or61 = $shl59 | $and60;
 $conv62 = $or61&255;
 HEAP8[$arrayidx38>>0] = $conv62;
 $arrayidx64 = ((($buffer)) + 3|0);
 $8 = HEAP8[$arrayidx64>>0]|0;
 $conv65 = $8&255;
 $shl66 = $conv65 << 2;
 $mode = ((($gfc)) + 180|0);
 $9 = HEAP32[$mode>>2]|0;
 $and67 = $9 & 3;
 $or68 = $shl66 | $and67;
 $conv69 = $or68&255;
 HEAP8[$arrayidx64>>0] = $conv69;
 $conv72 = $or68 << 2;
 $mode_ext = ((($gfc)) + 84756|0);
 $10 = HEAP32[$mode_ext>>2]|0;
 $and74 = $10 & 3;
 $or75 = $conv72 | $and74;
 $conv76 = $or75&255;
 HEAP8[$arrayidx64>>0] = $conv76;
 $conv79 = $or75 << 1;
 $copyright = ((($gfc)) + 164|0);
 $11 = HEAP32[$copyright>>2]|0;
 $and81 = $11 & 1;
 $or82 = $conv79 | $and81;
 $conv83 = $or82&255;
 HEAP8[$arrayidx64>>0] = $conv83;
 $conv86 = $or82 << 1;
 $original = ((($gfc)) + 168|0);
 $12 = HEAP32[$original>>2]|0;
 $and88 = $12 & 1;
 $or89 = $conv86 | $and88;
 $conv90 = $or89&255;
 HEAP8[$arrayidx64>>0] = $conv90;
 $conv93 = $or89 << 2;
 $emphasis = ((($gfc)) + 176|0);
 $13 = HEAP32[$emphasis>>2]|0;
 $and95 = $13 & 3;
 $or96 = $conv93 | $and95;
 $conv97 = $or96&255;
 HEAP8[$arrayidx64>>0] = $conv97;
 HEAP8[$buffer>>0] = -1;
 $14 = $or35 & 241;
 $15 = HEAP32[$version>>2]|0;
 $cmp105 = ($15|0)==(1);
 if ($cmp105) {
  $bitrate$0 = 128;
 } else {
  $16 = HEAP32[$samplerate_out>>2]|0;
  $cmp108 = ($16|0)<(16000);
  $$ = $cmp108 ? 32 : 64;
  $bitrate$0 = $$;
 }
 $vbr = ((($gfc)) + 104|0);
 $17 = HEAP32[$vbr>>2]|0;
 $cmp113 = ($17|0)==(0);
 if ($cmp113) {
  $avg_bitrate = ((($gfc)) + 120|0);
  $18 = HEAP32[$avg_bitrate>>2]|0;
  $bitrate$1 = $18;
 } else {
  $bitrate$1 = $bitrate$0;
 }
 $free_format = ((($gfc)) + 152|0);
 $19 = HEAP32[$free_format>>2]|0;
 $tobool117 = ($19|0)==(0);
 if (!($tobool117)) {
  $21 = $15;$23 = $conv62;$bbyte$0 = 0;
  $cmp125 = ($21|0)==(1);
  $22 = $23 & 13;
  $conv13762 = $22&255;
  $or138 = $conv13762 | $bbyte$0;
  $conv139 = $or138&255;
  $$sink = $cmp125 ? 10 : 2;
  $or143 = $$sink | $14;
  $storemerge = $or143&255;
  HEAP8[$arrayidx4>>0] = $storemerge;
  HEAP8[$arrayidx38>>0] = $conv139;
  return;
 }
 $20 = HEAP32[$samplerate_out>>2]|0;
 $call = (_BitrateIndex($bitrate$1,$15,$20)|0);
 $mul = $call << 28;
 $phitmp = $mul >> 24;
 $$pre = HEAP32[$version>>2]|0;
 $$pre64 = HEAP8[$arrayidx38>>0]|0;
 $21 = $$pre;$23 = $$pre64;$bbyte$0 = $phitmp;
 $cmp125 = ($21|0)==(1);
 $22 = $23 & 13;
 $conv13762 = $22&255;
 $or138 = $conv13762 | $bbyte$0;
 $conv139 = $or138&255;
 $$sink = $cmp125 ? 10 : 2;
 $or143 = $$sink | $14;
 $storemerge = $or143&255;
 HEAP8[$arrayidx4>>0] = $storemerge;
 HEAP8[$arrayidx38>>0] = $conv139;
 return;
}
function _UpdateMusicCRC($crc,$buffer,$size) {
 $crc = $crc|0;
 $buffer = $buffer|0;
 $size = $size|0;
 var $$masked = 0, $$pre = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $and$i = 0, $arrayidx = 0, $arrayidx$i = 0, $cmp5 = 0, $conv = 0, $conv$i = 0, $conv6$i = 0, $exitcond = 0, $i$06 = 0, $inc = 0, $shr5$i = 0, $xor5$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp5 = ($size|0)>(0);
 if (!($cmp5)) {
  return;
 }
 $$pre = HEAP16[$crc>>1]|0;
 $1 = $$pre;$i$06 = 0;
 while(1) {
  $arrayidx = (($buffer) + ($i$06)|0);
  $0 = HEAP8[$arrayidx>>0]|0;
  $conv = $0&255;
  $conv$i = $1&65535;
  $shr5$i = $conv$i >>> 8;
  $$masked = $1 & 255;
  $2 = $$masked ^ $conv;
  $and$i = $2&65535;
  $arrayidx$i = (8 + ($and$i<<2)|0);
  $3 = HEAP32[$arrayidx$i>>2]|0;
  $xor5$i = $shr5$i ^ $3;
  $conv6$i = $xor5$i&65535;
  HEAP16[$crc>>1] = $conv6$i;
  $inc = (($i$06) + 1)|0;
  $exitcond = ($inc|0)==($size|0);
  if ($exitcond) {
   break;
  } else {
   $1 = $conv6$i;$i$06 = $inc;
  }
 }
 return;
}
function _getframebits($gfc) {
 $gfc = $gfc|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $add2$i = 0, $arrayidx3 = 0, $avg_bitrate = 0, $bit_rate$0 = 0, $bit_rate$0$in = 0, $bitrate_index = 0, $cfg1 = 0, $cfg1$idx$val = 0, $cfg1$idx$val$pre = 0, $cfg1$idx8 = 0, $cfg1$idx8$val = 0, $div$i = 0, $mul$i = 0, $mul1$i = 0, $mul3$i = 0, $padding = 0;
 var $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cfg1 = ((($gfc)) + 16|0);
 $bitrate_index = ((($gfc)) + 84744|0);
 $0 = HEAP32[$bitrate_index>>2]|0;
 $tobool = ($0|0)==(0);
 if ($tobool) {
  $avg_bitrate = ((($gfc)) + 120|0);
  $cfg1$idx$val$pre = HEAP32[$cfg1>>2]|0;
  $bit_rate$0$in = $avg_bitrate;$cfg1$idx$val = $cfg1$idx$val$pre;
 } else {
  $1 = HEAP32[$cfg1>>2]|0;
  $arrayidx3 = ((9980 + ($1<<6)|0) + ($0<<2)|0);
  $bit_rate$0$in = $arrayidx3;$cfg1$idx$val = $1;
 }
 $bit_rate$0 = HEAP32[$bit_rate$0$in>>2]|0;
 $padding = ((($gfc)) + 84752|0);
 $2 = HEAP32[$padding>>2]|0;
 $cfg1$idx8 = ((($gfc)) + 64|0);
 $cfg1$idx8$val = HEAP32[$cfg1$idx8>>2]|0;
 $3 = ($cfg1$idx$val*72000)|0;
 $mul$i = (($3) + 72000)|0;
 $mul1$i = Math_imul($mul$i, $bit_rate$0)|0;
 $div$i = (($mul1$i|0) / ($cfg1$idx8$val|0))&-1;
 $add2$i = (($div$i) + ($2))|0;
 $mul3$i = $add2$i << 3;
 return ($mul3$i|0);
}
function _get_max_frame_buffer_size_by_constraint($cfg,$constraint) {
 $cfg = $cfg|0;
 $constraint = $constraint|0;
 var $$sink = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $arrayidx12 = 0, $avg_bitrate = 0, $cfg$idx11$val = 0, $cfg$idx12 = 0, $cfg$idx12$val = 0, $cmp = 0, $cmp1 = 0, $cmp5 = 0, $div$i = 0, $div$i15 = 0, $max_kbps$0 = 0, $maxmp3buf$1 = 0;
 var $mul = 0, $mul$i = 0, $mul$i13 = 0, $mul1$i = 0, $mul1$i14 = 0, $mul19 = 0, $mul3$i = 0, $mul3$i16 = 0, $samplerate_out = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $avg_bitrate = ((($cfg)) + 104|0);
 $0 = HEAP32[$avg_bitrate>>2]|0;
 $cmp = ($0|0)>(320);
 if ($cmp) {
  $cmp1 = ($constraint|0)==(1);
  $cfg$idx11$val = HEAP32[$cfg>>2]|0;
  if ($cmp1) {
   $cfg$idx12 = ((($cfg)) + 48|0);
   $cfg$idx12$val = HEAP32[$cfg$idx12>>2]|0;
   $1 = ($cfg$idx11$val*72000)|0;
   $mul$i = (($1) + 72000)|0;
   $mul1$i = Math_imul($mul$i, $0)|0;
   $div$i = (($mul1$i|0) / ($cfg$idx12$val|0))&-1;
   $mul3$i = $div$i << 3;
   $maxmp3buf$1 = $mul3$i;
   return ($maxmp3buf$1|0);
  } else {
   $2 = ($cfg$idx11$val*7680)|0;
   $mul = (($2) + 7680)|0;
   $maxmp3buf$1 = $mul;
   return ($maxmp3buf$1|0);
  }
 }
 $3 = HEAP32[$cfg>>2]|0;
 switch ($constraint|0) {
 case 2:  {
  $6 = ($3*7680)|0;
  $mul19 = (($6) + 7680)|0;
  $maxmp3buf$1 = $mul19;
  return ($maxmp3buf$1|0);
  break;
 }
 case 1:  {
  $samplerate_out = ((($cfg)) + 48|0);
  $4 = HEAP32[$samplerate_out>>2]|0;
  $cmp5 = ($4|0)<(16000);
  $$sink = $cmp5 ? 8 : 14;
  $arrayidx12 = ((9980 + ($3<<6)|0) + ($$sink<<2)|0);
  $max_kbps$0 = HEAP32[$arrayidx12>>2]|0;
  $5 = ($3*72000)|0;
  $mul$i13 = (($5) + 72000)|0;
  $mul1$i14 = Math_imul($mul$i13, $max_kbps$0)|0;
  $div$i15 = (($mul1$i14|0) / ($4|0))&-1;
  $mul3$i16 = $div$i15 << 3;
  $maxmp3buf$1 = $mul3$i16;
  return ($maxmp3buf$1|0);
  break;
 }
 default: {
  $maxmp3buf$1 = 11520;
  return ($maxmp3buf$1|0);
 }
 }
 return (0)|0;
}
function _CRC_writeheader($gfc,$header) {
 $gfc = $gfc|0;
 $header = $header|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $and$1$i = 0, $and$1$i23 = 0, $and$1$i79 = 0, $and$2$i = 0, $and$2$i30 = 0, $and$2$i86 = 0, $and$3$i = 0, $and$3$i37 = 0, $and$3$i93 = 0, $and$4$i = 0, $and$4$i100 = 0, $and$4$i44 = 0, $and$5$i = 0, $and$5$i107 = 0, $and$5$i51 = 0, $and$6$i = 0;
 var $and$6$i114 = 0, $and$6$i58 = 0, $and$7$i = 0, $and$7$i121 = 0, $and$7$i65 = 0, $and$i17 = 0, $and$i72 = 0, $arrayidx = 0, $arrayidx10 = 0, $arrayidx12 = 0, $arrayidx2 = 0, $arrayidx6 = 0, $cmp = 0, $cmp125 = 0, $conv = 0, $conv11 = 0, $conv3 = 0, $conv7 = 0, $conv9 = 0, $crc$0$lcssa = 0;
 var $crc$0126 = 0, $i$0127 = 0, $inc = 0, $shl$i15 = 0, $shl$i69 = 0, $shl1$1$i = 0, $shl1$1$i20 = 0, $shl1$1$i76 = 0, $shl1$2$i = 0, $shl1$2$i27 = 0, $shl1$2$i83 = 0, $shl1$3$i = 0, $shl1$3$i34 = 0, $shl1$3$i90 = 0, $shl1$4$i = 0, $shl1$4$i41 = 0, $shl1$4$i97 = 0, $shl1$5$i = 0, $shl1$5$i104 = 0, $shl1$5$i48 = 0;
 var $shl1$6$i = 0, $shl1$6$i111 = 0, $shl1$6$i55 = 0, $shl1$7$i = 0, $shl1$7$i118 = 0, $shl1$7$i62 = 0, $shl2$1$i21 = 0, $shl2$1$i77 = 0, $shl2$2$i = 0, $shl2$2$i28 = 0, $shl2$2$i84 = 0, $shl2$3$i = 0, $shl2$3$i35 = 0, $shl2$3$i91 = 0, $shl2$4$i = 0, $shl2$4$i42 = 0, $shl2$4$i98 = 0, $shl2$5$i = 0, $shl2$5$i105 = 0, $shl2$5$i49 = 0;
 var $shl2$6$i = 0, $shl2$6$i112 = 0, $shl2$6$i56 = 0, $shl2$7$i = 0, $shl2$7$i119 = 0, $shl2$7$i63 = 0, $shl2$i = 0, $shl2$i70 = 0, $shl2$xor3$1$i = 0, $shl2$xor3$1$i26 = 0, $shl2$xor3$1$i82 = 0, $shl2$xor3$2$i = 0, $shl2$xor3$2$i33 = 0, $shl2$xor3$2$i89 = 0, $shl2$xor3$3$i = 0, $shl2$xor3$3$i40 = 0, $shl2$xor3$3$i96 = 0, $shl2$xor3$4$i = 0, $shl2$xor3$4$i103 = 0, $shl2$xor3$4$i47 = 0;
 var $shl2$xor3$5$i = 0, $shl2$xor3$5$i110 = 0, $shl2$xor3$5$i54 = 0, $shl2$xor3$6$i = 0, $shl2$xor3$6$i117 = 0, $shl2$xor3$6$i61 = 0, $shl2$xor3$7$i = 0, $shl2$xor3$7$i124 = 0, $shl2$xor3$7$i68 = 0, $shl2$xor3$i = 0, $shl2$xor3$i19 = 0, $shl2$xor3$i75 = 0, $shr14 = 0, $sideinfo_len = 0, $tobool$1$i = 0, $tobool$1$i24 = 0, $tobool$1$i80 = 0, $tobool$2$i = 0, $tobool$2$i31 = 0, $tobool$2$i87 = 0;
 var $tobool$3$i = 0, $tobool$3$i38 = 0, $tobool$3$i94 = 0, $tobool$4$i = 0, $tobool$4$i101 = 0, $tobool$4$i45 = 0, $tobool$5$i = 0, $tobool$5$i108 = 0, $tobool$5$i52 = 0, $tobool$6$i = 0, $tobool$6$i115 = 0, $tobool$6$i59 = 0, $tobool$7$i = 0, $tobool$7$i122 = 0, $tobool$7$i66 = 0, $tobool$i = 0, $tobool$i18 = 0, $tobool$i73 = 0, $xor$1$i = 0, $xor$1$i22 = 0;
 var $xor$1$i78 = 0, $xor$2$i = 0, $xor$2$i29 = 0, $xor$2$i85 = 0, $xor$3$i = 0, $xor$3$i36 = 0, $xor$3$i92 = 0, $xor$4$i = 0, $xor$4$i43 = 0, $xor$4$i99 = 0, $xor$5$i = 0, $xor$5$i106 = 0, $xor$5$i50 = 0, $xor$6$i = 0, $xor$6$i113 = 0, $xor$6$i57 = 0, $xor$7$i = 0, $xor$7$i120 = 0, $xor$7$i64 = 0, $xor$i = 0;
 var $xor$i16 = 0, $xor$i71 = 0, $xor3$1$i = 0, $xor3$1$i25 = 0, $xor3$1$i81 = 0, $xor3$2$i = 0, $xor3$2$i32 = 0, $xor3$2$i88 = 0, $xor3$3$i = 0, $xor3$3$i39 = 0, $xor3$3$i95 = 0, $xor3$4$i = 0, $xor3$4$i102 = 0, $xor3$4$i46 = 0, $xor3$5$i = 0, $xor3$5$i109 = 0, $xor3$5$i53 = 0, $xor3$6$i = 0, $xor3$6$i116 = 0, $xor3$6$i60 = 0;
 var $xor3$7$i = 0, $xor3$7$i123 = 0, $xor3$7$i67 = 0, $xor3$i = 0, $xor3$i74 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $arrayidx = ((($header)) + 2|0);
 $0 = HEAP8[$arrayidx>>0]|0;
 $conv = $0&255;
 $xor$i = $conv & 128;
 $tobool$i = ($xor$i|0)!=(0);
 $shl2$xor3$i = $tobool$i ? 262140 : 196598;
 $shl1$1$i = $conv << 10;
 $xor$1$i = $shl2$xor3$i ^ $shl1$1$i;
 $and$1$i = $xor$1$i & 65536;
 $tobool$1$i = ($and$1$i|0)==(0);
 $xor3$1$i = $shl2$xor3$i ^ 32773;
 $shl2$xor3$1$i = $tobool$1$i ? $shl2$xor3$i : $xor3$1$i;
 $shl1$2$i = $conv << 11;
 $shl2$2$i = $shl2$xor3$1$i << 1;
 $xor$2$i = $shl2$2$i ^ $shl1$2$i;
 $and$2$i = $xor$2$i & 65536;
 $tobool$2$i = ($and$2$i|0)==(0);
 $xor3$2$i = $shl2$2$i ^ 32773;
 $shl2$xor3$2$i = $tobool$2$i ? $shl2$2$i : $xor3$2$i;
 $shl1$3$i = $conv << 12;
 $shl2$3$i = $shl2$xor3$2$i << 1;
 $xor$3$i = $shl2$3$i ^ $shl1$3$i;
 $and$3$i = $xor$3$i & 65536;
 $tobool$3$i = ($and$3$i|0)==(0);
 $xor3$3$i = $shl2$3$i ^ 32773;
 $shl2$xor3$3$i = $tobool$3$i ? $shl2$3$i : $xor3$3$i;
 $shl1$4$i = $conv << 13;
 $shl2$4$i = $shl2$xor3$3$i << 1;
 $xor$4$i = $shl2$4$i ^ $shl1$4$i;
 $and$4$i = $xor$4$i & 65536;
 $tobool$4$i = ($and$4$i|0)==(0);
 $xor3$4$i = $shl2$4$i ^ 32773;
 $shl2$xor3$4$i = $tobool$4$i ? $shl2$4$i : $xor3$4$i;
 $shl1$5$i = $conv << 14;
 $shl2$5$i = $shl2$xor3$4$i << 1;
 $xor$5$i = $shl2$5$i ^ $shl1$5$i;
 $and$5$i = $xor$5$i & 65536;
 $tobool$5$i = ($and$5$i|0)==(0);
 $xor3$5$i = $shl2$5$i ^ 32773;
 $shl2$xor3$5$i = $tobool$5$i ? $shl2$5$i : $xor3$5$i;
 $shl1$6$i = $conv << 15;
 $shl2$6$i = $shl2$xor3$5$i << 1;
 $xor$6$i = $shl2$6$i ^ $shl1$6$i;
 $and$6$i = $xor$6$i & 65536;
 $tobool$6$i = ($and$6$i|0)==(0);
 $xor3$6$i = $shl2$6$i ^ 32773;
 $shl2$xor3$6$i = $tobool$6$i ? $shl2$6$i : $xor3$6$i;
 $shl1$7$i = $conv << 16;
 $shl2$7$i = $shl2$xor3$6$i << 1;
 $xor$7$i = $shl2$7$i ^ $shl1$7$i;
 $and$7$i = $xor$7$i & 65536;
 $tobool$7$i = ($and$7$i|0)==(0);
 $xor3$7$i = $shl2$7$i ^ 32773;
 $shl2$xor3$7$i = $tobool$7$i ? $shl2$7$i : $xor3$7$i;
 $arrayidx2 = ((($header)) + 3|0);
 $1 = HEAP8[$arrayidx2>>0]|0;
 $conv3 = $1&255;
 $shl$i69 = $conv3 << 9;
 $shl2$i70 = $shl2$xor3$7$i << 1;
 $xor$i71 = $shl2$i70 ^ $shl$i69;
 $and$i72 = $xor$i71 & 65536;
 $tobool$i73 = ($and$i72|0)==(0);
 $xor3$i74 = $shl2$i70 ^ 32773;
 $shl2$xor3$i75 = $tobool$i73 ? $shl2$i70 : $xor3$i74;
 $shl1$1$i76 = $conv3 << 10;
 $shl2$1$i77 = $shl2$xor3$i75 << 1;
 $xor$1$i78 = $shl2$1$i77 ^ $shl1$1$i76;
 $and$1$i79 = $xor$1$i78 & 65536;
 $tobool$1$i80 = ($and$1$i79|0)==(0);
 $xor3$1$i81 = $shl2$1$i77 ^ 32773;
 $shl2$xor3$1$i82 = $tobool$1$i80 ? $shl2$1$i77 : $xor3$1$i81;
 $shl1$2$i83 = $conv3 << 11;
 $shl2$2$i84 = $shl2$xor3$1$i82 << 1;
 $xor$2$i85 = $shl2$2$i84 ^ $shl1$2$i83;
 $and$2$i86 = $xor$2$i85 & 65536;
 $tobool$2$i87 = ($and$2$i86|0)==(0);
 $xor3$2$i88 = $shl2$2$i84 ^ 32773;
 $shl2$xor3$2$i89 = $tobool$2$i87 ? $shl2$2$i84 : $xor3$2$i88;
 $shl1$3$i90 = $conv3 << 12;
 $shl2$3$i91 = $shl2$xor3$2$i89 << 1;
 $xor$3$i92 = $shl2$3$i91 ^ $shl1$3$i90;
 $and$3$i93 = $xor$3$i92 & 65536;
 $tobool$3$i94 = ($and$3$i93|0)==(0);
 $xor3$3$i95 = $shl2$3$i91 ^ 32773;
 $shl2$xor3$3$i96 = $tobool$3$i94 ? $shl2$3$i91 : $xor3$3$i95;
 $shl1$4$i97 = $conv3 << 13;
 $shl2$4$i98 = $shl2$xor3$3$i96 << 1;
 $xor$4$i99 = $shl2$4$i98 ^ $shl1$4$i97;
 $and$4$i100 = $xor$4$i99 & 65536;
 $tobool$4$i101 = ($and$4$i100|0)==(0);
 $xor3$4$i102 = $shl2$4$i98 ^ 32773;
 $shl2$xor3$4$i103 = $tobool$4$i101 ? $shl2$4$i98 : $xor3$4$i102;
 $shl1$5$i104 = $conv3 << 14;
 $shl2$5$i105 = $shl2$xor3$4$i103 << 1;
 $xor$5$i106 = $shl2$5$i105 ^ $shl1$5$i104;
 $and$5$i107 = $xor$5$i106 & 65536;
 $tobool$5$i108 = ($and$5$i107|0)==(0);
 $xor3$5$i109 = $shl2$5$i105 ^ 32773;
 $shl2$xor3$5$i110 = $tobool$5$i108 ? $shl2$5$i105 : $xor3$5$i109;
 $shl1$6$i111 = $conv3 << 15;
 $shl2$6$i112 = $shl2$xor3$5$i110 << 1;
 $xor$6$i113 = $shl2$6$i112 ^ $shl1$6$i111;
 $and$6$i114 = $xor$6$i113 & 65536;
 $tobool$6$i115 = ($and$6$i114|0)==(0);
 $xor3$6$i116 = $shl2$6$i112 ^ 32773;
 $shl2$xor3$6$i117 = $tobool$6$i115 ? $shl2$6$i112 : $xor3$6$i116;
 $shl1$7$i118 = $conv3 << 16;
 $shl2$7$i119 = $shl2$xor3$6$i117 << 1;
 $xor$7$i120 = $shl2$7$i119 ^ $shl1$7$i118;
 $and$7$i121 = $xor$7$i120 & 65536;
 $tobool$7$i122 = ($and$7$i121|0)==(0);
 $xor3$7$i123 = $shl2$7$i119 ^ 32773;
 $shl2$xor3$7$i124 = $tobool$7$i122 ? $shl2$7$i119 : $xor3$7$i123;
 $sideinfo_len = ((($gfc)) + 24|0);
 $2 = HEAP32[$sideinfo_len>>2]|0;
 $cmp125 = ($2|0)>(6);
 if ($cmp125) {
  $crc$0126 = $shl2$xor3$7$i124;$i$0127 = 6;
 } else {
  $crc$0$lcssa = $shl2$xor3$7$i124;
  $shr14 = $crc$0$lcssa >>> 8;
  $conv9 = $shr14&255;
  $arrayidx10 = ((($header)) + 4|0);
  HEAP8[$arrayidx10>>0] = $conv9;
  $conv11 = $crc$0$lcssa&255;
  $arrayidx12 = ((($header)) + 5|0);
  HEAP8[$arrayidx12>>0] = $conv11;
  return;
 }
 while(1) {
  $arrayidx6 = (($header) + ($i$0127)|0);
  $3 = HEAP8[$arrayidx6>>0]|0;
  $conv7 = $3&255;
  $shl$i15 = $conv7 << 9;
  $shl2$i = $crc$0126 << 1;
  $xor$i16 = $shl$i15 ^ $shl2$i;
  $and$i17 = $xor$i16 & 65536;
  $tobool$i18 = ($and$i17|0)==(0);
  $xor3$i = $shl2$i ^ 32773;
  $shl2$xor3$i19 = $tobool$i18 ? $shl2$i : $xor3$i;
  $shl1$1$i20 = $conv7 << 10;
  $shl2$1$i21 = $shl2$xor3$i19 << 1;
  $xor$1$i22 = $shl2$1$i21 ^ $shl1$1$i20;
  $and$1$i23 = $xor$1$i22 & 65536;
  $tobool$1$i24 = ($and$1$i23|0)==(0);
  $xor3$1$i25 = $shl2$1$i21 ^ 32773;
  $shl2$xor3$1$i26 = $tobool$1$i24 ? $shl2$1$i21 : $xor3$1$i25;
  $shl1$2$i27 = $conv7 << 11;
  $shl2$2$i28 = $shl2$xor3$1$i26 << 1;
  $xor$2$i29 = $shl2$2$i28 ^ $shl1$2$i27;
  $and$2$i30 = $xor$2$i29 & 65536;
  $tobool$2$i31 = ($and$2$i30|0)==(0);
  $xor3$2$i32 = $shl2$2$i28 ^ 32773;
  $shl2$xor3$2$i33 = $tobool$2$i31 ? $shl2$2$i28 : $xor3$2$i32;
  $shl1$3$i34 = $conv7 << 12;
  $shl2$3$i35 = $shl2$xor3$2$i33 << 1;
  $xor$3$i36 = $shl2$3$i35 ^ $shl1$3$i34;
  $and$3$i37 = $xor$3$i36 & 65536;
  $tobool$3$i38 = ($and$3$i37|0)==(0);
  $xor3$3$i39 = $shl2$3$i35 ^ 32773;
  $shl2$xor3$3$i40 = $tobool$3$i38 ? $shl2$3$i35 : $xor3$3$i39;
  $shl1$4$i41 = $conv7 << 13;
  $shl2$4$i42 = $shl2$xor3$3$i40 << 1;
  $xor$4$i43 = $shl2$4$i42 ^ $shl1$4$i41;
  $and$4$i44 = $xor$4$i43 & 65536;
  $tobool$4$i45 = ($and$4$i44|0)==(0);
  $xor3$4$i46 = $shl2$4$i42 ^ 32773;
  $shl2$xor3$4$i47 = $tobool$4$i45 ? $shl2$4$i42 : $xor3$4$i46;
  $shl1$5$i48 = $conv7 << 14;
  $shl2$5$i49 = $shl2$xor3$4$i47 << 1;
  $xor$5$i50 = $shl2$5$i49 ^ $shl1$5$i48;
  $and$5$i51 = $xor$5$i50 & 65536;
  $tobool$5$i52 = ($and$5$i51|0)==(0);
  $xor3$5$i53 = $shl2$5$i49 ^ 32773;
  $shl2$xor3$5$i54 = $tobool$5$i52 ? $shl2$5$i49 : $xor3$5$i53;
  $shl1$6$i55 = $conv7 << 15;
  $shl2$6$i56 = $shl2$xor3$5$i54 << 1;
  $xor$6$i57 = $shl2$6$i56 ^ $shl1$6$i55;
  $and$6$i58 = $xor$6$i57 & 65536;
  $tobool$6$i59 = ($and$6$i58|0)==(0);
  $xor3$6$i60 = $shl2$6$i56 ^ 32773;
  $shl2$xor3$6$i61 = $tobool$6$i59 ? $shl2$6$i56 : $xor3$6$i60;
  $shl1$7$i62 = $conv7 << 16;
  $shl2$7$i63 = $shl2$xor3$6$i61 << 1;
  $xor$7$i64 = $shl2$7$i63 ^ $shl1$7$i62;
  $and$7$i65 = $xor$7$i64 & 65536;
  $tobool$7$i66 = ($and$7$i65|0)==(0);
  $xor3$7$i67 = $shl2$7$i63 ^ 32773;
  $shl2$xor3$7$i68 = $tobool$7$i66 ? $shl2$7$i63 : $xor3$7$i67;
  $inc = (($i$0127) + 1)|0;
  $cmp = ($inc|0)<($2|0);
  if ($cmp) {
   $crc$0126 = $shl2$xor3$7$i68;$i$0127 = $inc;
  } else {
   $crc$0$lcssa = $shl2$xor3$7$i68;
   break;
  }
 }
 $shr14 = $crc$0$lcssa >>> 8;
 $conv9 = $shr14&255;
 $arrayidx10 = ((($header)) + 4|0);
 HEAP8[$arrayidx10>>0] = $conv9;
 $conv11 = $crc$0$lcssa&255;
 $arrayidx12 = ((($header)) + 5|0);
 HEAP8[$arrayidx12>>0] = $conv11;
 return;
}
function _flush_bitstream($gfc) {
 $gfc = $gfc|0;
 var $$sub$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $ResvSize = 0, $add$i = 0, $add10$i = 0, $add10$sub5$i = 0, $add15$i = 0, $add2$i$i$i = 0, $arrayidx3$i$i = 0, $avg_bitrate$i$i = 0, $bit_rate$0$i$i = 0, $bit_rate$0$in$i$i = 0;
 var $bitrate_index$i$i = 0, $cfg1$i$i = 0, $cfg1$idx$val$i$i = 0, $cfg1$idx$val$pre$i$i = 0, $cfg1$idx8$i$i = 0, $cfg1$idx8$val$i$i = 0, $cmp$i = 0, $cmp24$i = 0, $cmp3$i = 0, $cmp6$i = 0, $div$i$i$i = 0, $flushbits$0$i = 0, $h_ptr$i = 0, $main_data_begin = 0, $mul$i = 0, $mul$i$i$i = 0, $mul1$i$i$i = 0, $mul12$i = 0, $mul3$i$i$i = 0, $padding$i$i = 0;
 var $sideinfo_len$i = 0, $sub$i = 0, $sub13$i = 0, $sub2$i = 0, $sub5$i = 0, $tobool$i$i = 0, $totbit$i = 0, $vararg_buffer = 0, $w_ptr$i = 0, $write_timing$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $w_ptr$i = ((($gfc)) + 52132|0);
 $0 = HEAP32[$w_ptr$i>>2]|0;
 $h_ptr$i = ((($gfc)) + 52128|0);
 $1 = HEAP32[$h_ptr$i>>2]|0;
 $sub$i = (($1) + -1)|0;
 $cmp$i = ($1|0)==(0);
 $$sub$i = $cmp$i ? 255 : $sub$i;
 $write_timing$i = (((($gfc)) + 39840|0) + (($$sub$i*48)|0)|0);
 $2 = HEAP32[$write_timing$i>>2]|0;
 $totbit$i = ((($gfc)) + 292|0);
 $3 = HEAP32[$totbit$i>>2]|0;
 $sub2$i = (($2) - ($3))|0;
 $cmp3$i = ($sub2$i|0)>(-1);
 $add$i = (1 - ($0))|0;
 $sub5$i = (($$sub$i) + ($add$i))|0;
 if ($cmp3$i) {
  $cmp6$i = ($$sub$i|0)<($0|0);
  $add10$i = (($sub5$i) + 256)|0;
  $add10$sub5$i = $cmp6$i ? $add10$i : $sub5$i;
  $mul$i = $add10$sub5$i << 3;
  $sideinfo_len$i = ((($gfc)) + 24|0);
  $4 = HEAP32[$sideinfo_len$i>>2]|0;
  $mul12$i = Math_imul($mul$i, $4)|0;
  $sub13$i = (($sub2$i) - ($mul12$i))|0;
  $flushbits$0$i = $sub13$i;
 } else {
  $flushbits$0$i = $sub2$i;
 }
 $cfg1$i$i = ((($gfc)) + 16|0);
 $bitrate_index$i$i = ((($gfc)) + 84744|0);
 $5 = HEAP32[$bitrate_index$i$i>>2]|0;
 $tobool$i$i = ($5|0)==(0);
 if ($tobool$i$i) {
  $avg_bitrate$i$i = ((($gfc)) + 120|0);
  $cfg1$idx$val$pre$i$i = HEAP32[$cfg1$i$i>>2]|0;
  $bit_rate$0$in$i$i = $avg_bitrate$i$i;$cfg1$idx$val$i$i = $cfg1$idx$val$pre$i$i;
 } else {
  $6 = HEAP32[$cfg1$i$i>>2]|0;
  $arrayidx3$i$i = ((9980 + ($6<<6)|0) + ($5<<2)|0);
  $bit_rate$0$in$i$i = $arrayidx3$i$i;$cfg1$idx$val$i$i = $6;
 }
 $bit_rate$0$i$i = HEAP32[$bit_rate$0$in$i$i>>2]|0;
 $padding$i$i = ((($gfc)) + 84752|0);
 $7 = HEAP32[$padding$i$i>>2]|0;
 $cfg1$idx8$i$i = ((($gfc)) + 64|0);
 $cfg1$idx8$val$i$i = HEAP32[$cfg1$idx8$i$i>>2]|0;
 $8 = ($cfg1$idx$val$i$i*72000)|0;
 $mul$i$i$i = (($8) + 72000)|0;
 $mul1$i$i$i = Math_imul($mul$i$i$i, $bit_rate$0$i$i)|0;
 $div$i$i$i = (($mul1$i$i$i|0) / ($cfg1$idx8$val$i$i|0))&-1;
 $add2$i$i$i = (($div$i$i$i) + ($7))|0;
 $mul3$i$i$i = $add2$i$i$i << 3;
 $add15$i = (($mul3$i$i$i) + ($flushbits$0$i))|0;
 $cmp24$i = ($add15$i|0)<(0);
 if ($cmp24$i) {
  _lame_errorf($gfc,14660,$vararg_buffer);
  STACKTOP = sp;return;
 } else {
  _drain_into_ancillary($gfc,$add15$i);
  $ResvSize = ((($gfc)) + 52140|0);
  HEAP32[$ResvSize>>2] = 0;
  $main_data_begin = ((($gfc)) + 21312|0);
  HEAP32[$main_data_begin>>2] = 0;
  STACKTOP = sp;return;
 }
}
function _drain_into_ancillary($gfc,$remainingBits) {
 $gfc = $gfc|0;
 $remainingBits = $remainingBits|0;
 var $$pre = 0, $$pre$i = 0, $$pre$i130 = 0, $$pre$i169 = 0, $$pre$i208 = 0, $$pre$i52 = 0, $$pre$i91 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $add$i = 0, $add$i$i = 0, $add$i$i123 = 0, $add$i$i162 = 0, $add$i$i201 = 0, $add$i$i45 = 0, $add$i$i84 = 0, $add$i103 = 0, $add$i142 = 0, $add$i181 = 0, $add$i220 = 0, $add$i64 = 0, $add10$i$i = 0, $add10$i$i126 = 0, $add10$i$i165 = 0, $add10$i$i204 = 0, $add10$i$i48 = 0, $add10$i$i87 = 0, $add8$i$i = 0, $add8$i$i125 = 0;
 var $add8$i$i164 = 0, $add8$i$i203 = 0, $add8$i$i47 = 0, $add8$i$i86 = 0, $ancillary_flag = 0, $and$i$i = 0, $and$i$i127 = 0, $and$i$i166 = 0, $and$i$i205 = 0, $and$i$i49 = 0, $and$i$i88 = 0, $arraydecay$i$i = 0, $arraydecay$i$i122 = 0, $arraydecay$i$i161 = 0, $arraydecay$i$i200 = 0, $arraydecay$i$i44 = 0, $arraydecay$i$i83 = 0, $arrayidx = 0, $arrayidx$i$i = 0, $arrayidx$i$i121 = 0;
 var $arrayidx$i$i160 = 0, $arrayidx$i$i199 = 0, $arrayidx$i$i43 = 0, $arrayidx$i$i82 = 0, $arrayidx17$i = 0, $arrayidx17$i138 = 0, $arrayidx17$i177 = 0, $arrayidx17$i216 = 0, $arrayidx17$i60 = 0, $arrayidx17$i99 = 0, $arrayidx7$i = 0, $arrayidx7$i129 = 0, $arrayidx7$i168 = 0, $arrayidx7$i207 = 0, $arrayidx7$i51 = 0, $arrayidx7$i90 = 0, $buf$i$i = 0, $buf$i$i33 = 0, $buf_bit_idx$i = 0, $buf_bit_idx$i29 = 0;
 var $buf_byte_idx$i = 0, $buf_byte_idx$i30 = 0, $call = 0, $call18 = 0, $call18230 = 0, $cmp = 0, $cmp$i = 0, $cmp$i104 = 0, $cmp$i143 = 0, $cmp$i182 = 0, $cmp$i221 = 0, $cmp$i65 = 0, $cmp10 = 0, $cmp10$i = 0, $cmp10$i132 = 0, $cmp10$i171 = 0, $cmp10$i210 = 0, $cmp10$i54 = 0, $cmp10$i93 = 0, $cmp14 = 0;
 var $cmp19 = 0, $cmp19231 = 0, $cmp2 = 0, $cmp2$i = 0, $cmp2$i115 = 0, $cmp2$i154 = 0, $cmp2$i193 = 0, $cmp2$i37 = 0, $cmp2$i76 = 0, $cmp20 = 0, $cmp25 = 0, $cmp25228 = 0, $cmp4$i = 0, $cmp4$i119 = 0, $cmp4$i158 = 0, $cmp4$i197 = 0, $cmp4$i41 = 0, $cmp4$i80 = 0, $cmp6 = 0, $conv = 0;
 var $conv$i = 0, $conv$i100 = 0, $conv$i139 = 0, $conv$i178 = 0, $conv$i217 = 0, $conv$i61 = 0, $conv18$i = 0, $conv18$i102 = 0, $conv18$i141 = 0, $conv18$i180 = 0, $conv18$i219 = 0, $conv18$i63 = 0, $disable_reservoir = 0, $i$0233 = 0, $inc = 0, $inc$i = 0, $inc$i117 = 0, $inc$i156 = 0, $inc$i195 = 0, $inc$i39 = 0;
 var $inc$i78 = 0, $j$addr$0$$i = 0, $j$addr$0$$i133 = 0, $j$addr$0$$i172 = 0, $j$addr$0$$i211 = 0, $j$addr$0$$i55 = 0, $j$addr$0$$i94 = 0, $j$addr$026$i = 0, $j$addr$026$i114 = 0, $j$addr$026$i153 = 0, $j$addr$026$i192 = 0, $j$addr$026$i36 = 0, $j$addr$026$i75 = 0, $lnot = 0, $lnot$ext = 0, $mul$i$i = 0, $mul$i$i124 = 0, $mul$i$i163 = 0, $mul$i$i202 = 0, $mul$i$i46 = 0;
 var $mul$i$i85 = 0, $or$i = 0, $or$i101 = 0, $or$i140 = 0, $or$i179 = 0, $or$i218 = 0, $or$i62 = 0, $remainingBits$addr$4234 = 0, $remainingBits$addr$6$ph = 0, $remainingBits$addr$6$ph236 = 0, $remainingBits$addr$6229 = 0, $shl$i = 0, $shl$i137 = 0, $shl$i176 = 0, $shl$i215 = 0, $shl$i59 = 0, $shl$i98 = 0, $shr$i = 0, $shr$i136 = 0, $shr$i175 = 0;
 var $shr$i214 = 0, $shr$i58 = 0, $shr$i97 = 0, $sideinfo_len$i$i = 0, $sideinfo_len$i$i34 = 0, $sub = 0, $sub$i = 0, $sub$i134 = 0, $sub$i173 = 0, $sub$i212 = 0, $sub$i56 = 0, $sub$i95 = 0, $sub12 = 0, $sub13$i = 0, $sub13$i135 = 0, $sub13$i174 = 0, $sub13$i213 = 0, $sub13$i57 = 0, $sub13$i96 = 0, $sub21 = 0;
 var $sub30 = 0, $sub4 = 0, $sub8 = 0, $totbit$i = 0, $totbit$i32 = 0, $w_ptr$i = 0, $w_ptr$i31 = 0, $write_timing$i = 0, $write_timing$i118 = 0, $write_timing$i157 = 0, $write_timing$i196 = 0, $write_timing$i40 = 0, $write_timing$i79 = 0, $xor = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($remainingBits|0)>(7);
 if ($cmp) {
  $buf_bit_idx$i = ((($gfc)) + 300|0);
  $buf_byte_idx$i = ((($gfc)) + 296|0);
  $w_ptr$i = ((($gfc)) + 52132|0);
  $totbit$i = ((($gfc)) + 292|0);
  $buf$i$i = ((($gfc)) + 284|0);
  $sideinfo_len$i$i = ((($gfc)) + 24|0);
  $j$addr$026$i = 8;
  while(1) {
   $0 = HEAP32[$buf_bit_idx$i>>2]|0;
   $cmp2$i = ($0|0)==(0);
   if ($cmp2$i) {
    HEAP32[$buf_bit_idx$i>>2] = 8;
    $1 = HEAP32[$buf_byte_idx$i>>2]|0;
    $inc$i = (($1) + 1)|0;
    HEAP32[$buf_byte_idx$i>>2] = $inc$i;
    $2 = HEAP32[$w_ptr$i>>2]|0;
    $write_timing$i = (((($gfc)) + 39840|0) + (($2*48)|0)|0);
    $3 = HEAP32[$write_timing$i>>2]|0;
    $4 = HEAP32[$totbit$i>>2]|0;
    $cmp4$i = ($3|0)==($4|0);
    if ($cmp4$i) {
     $5 = HEAP32[$buf$i$i>>2]|0;
     $arrayidx$i$i = (($5) + ($inc$i)|0);
     $arraydecay$i$i = (((((($gfc)) + 39840|0) + (($2*48)|0)|0)) + 8|0);
     $6 = HEAP32[$sideinfo_len$i$i>>2]|0;
     _memcpy(($arrayidx$i$i|0),($arraydecay$i$i|0),($6|0))|0;
     $7 = HEAP32[$sideinfo_len$i$i>>2]|0;
     $8 = HEAP32[$buf_byte_idx$i>>2]|0;
     $add$i$i = (($8) + ($7))|0;
     HEAP32[$buf_byte_idx$i>>2] = $add$i$i;
     $mul$i$i = $7 << 3;
     $9 = HEAP32[$totbit$i>>2]|0;
     $add8$i$i = (($9) + ($mul$i$i))|0;
     HEAP32[$totbit$i>>2] = $add8$i$i;
     $10 = HEAP32[$w_ptr$i>>2]|0;
     $add10$i$i = (($10) + 1)|0;
     $and$i$i = $add10$i$i & 255;
     HEAP32[$w_ptr$i>>2] = $and$i$i;
     $12 = $add$i$i;
    } else {
     $12 = $inc$i;
    }
    $11 = HEAP32[$buf$i$i>>2]|0;
    $arrayidx7$i = (($11) + ($12)|0);
    HEAP8[$arrayidx7$i>>0] = 0;
    $$pre$i = HEAP32[$buf_bit_idx$i>>2]|0;
    $13 = $$pre$i;
   } else {
    $13 = $0;
   }
   $cmp10$i = ($j$addr$026$i|0)<($13|0);
   $j$addr$0$$i = $cmp10$i ? $j$addr$026$i : $13;
   $sub$i = (($j$addr$026$i) - ($j$addr$0$$i))|0;
   $sub13$i = (($13) - ($j$addr$0$$i))|0;
   HEAP32[$buf_bit_idx$i>>2] = $sub13$i;
   $shr$i = 76 >>> $sub$i;
   $shl$i = $shr$i << $sub13$i;
   $14 = HEAP32[$buf$i$i>>2]|0;
   $15 = HEAP32[$buf_byte_idx$i>>2]|0;
   $arrayidx17$i = (($14) + ($15)|0);
   $16 = HEAP8[$arrayidx17$i>>0]|0;
   $conv$i = $16&255;
   $or$i = $conv$i | $shl$i;
   $conv18$i = $or$i&255;
   HEAP8[$arrayidx17$i>>0] = $conv18$i;
   $17 = HEAP32[$totbit$i>>2]|0;
   $add$i = (($17) + ($j$addr$0$$i))|0;
   HEAP32[$totbit$i>>2] = $add$i;
   $cmp$i = ($sub$i|0)>(0);
   if ($cmp$i) {
    $j$addr$026$i = $sub$i;
   } else {
    break;
   }
  }
  $sub = (($remainingBits) + -8)|0;
  $cmp2 = ($sub|0)>(7);
  if ($cmp2) {
   $22 = $add$i;$j$addr$026$i192 = 8;
   while(1) {
    $18 = HEAP32[$buf_bit_idx$i>>2]|0;
    $cmp2$i193 = ($18|0)==(0);
    if ($cmp2$i193) {
     HEAP32[$buf_bit_idx$i>>2] = 8;
     $19 = HEAP32[$buf_byte_idx$i>>2]|0;
     $inc$i195 = (($19) + 1)|0;
     HEAP32[$buf_byte_idx$i>>2] = $inc$i195;
     $20 = HEAP32[$w_ptr$i>>2]|0;
     $write_timing$i196 = (((($gfc)) + 39840|0) + (($20*48)|0)|0);
     $21 = HEAP32[$write_timing$i196>>2]|0;
     $cmp4$i197 = ($21|0)==($22|0);
     if ($cmp4$i197) {
      $23 = HEAP32[$buf$i$i>>2]|0;
      $arrayidx$i$i199 = (($23) + ($inc$i195)|0);
      $arraydecay$i$i200 = (((((($gfc)) + 39840|0) + (($20*48)|0)|0)) + 8|0);
      $24 = HEAP32[$sideinfo_len$i$i>>2]|0;
      _memcpy(($arrayidx$i$i199|0),($arraydecay$i$i200|0),($24|0))|0;
      $25 = HEAP32[$sideinfo_len$i$i>>2]|0;
      $26 = HEAP32[$buf_byte_idx$i>>2]|0;
      $add$i$i201 = (($26) + ($25))|0;
      HEAP32[$buf_byte_idx$i>>2] = $add$i$i201;
      $mul$i$i202 = $25 << 3;
      $27 = HEAP32[$totbit$i>>2]|0;
      $add8$i$i203 = (($27) + ($mul$i$i202))|0;
      HEAP32[$totbit$i>>2] = $add8$i$i203;
      $28 = HEAP32[$w_ptr$i>>2]|0;
      $add10$i$i204 = (($28) + 1)|0;
      $and$i$i205 = $add10$i$i204 & 255;
      HEAP32[$w_ptr$i>>2] = $and$i$i205;
      $30 = $add$i$i201;
     } else {
      $30 = $inc$i195;
     }
     $29 = HEAP32[$buf$i$i>>2]|0;
     $arrayidx7$i207 = (($29) + ($30)|0);
     HEAP8[$arrayidx7$i207>>0] = 0;
     $$pre$i208 = HEAP32[$buf_bit_idx$i>>2]|0;
     $31 = $$pre$i208;
    } else {
     $31 = $18;
    }
    $cmp10$i210 = ($j$addr$026$i192|0)<($31|0);
    $j$addr$0$$i211 = $cmp10$i210 ? $j$addr$026$i192 : $31;
    $sub$i212 = (($j$addr$026$i192) - ($j$addr$0$$i211))|0;
    $sub13$i213 = (($31) - ($j$addr$0$$i211))|0;
    HEAP32[$buf_bit_idx$i>>2] = $sub13$i213;
    $shr$i214 = 65 >>> $sub$i212;
    $shl$i215 = $shr$i214 << $sub13$i213;
    $32 = HEAP32[$buf$i$i>>2]|0;
    $33 = HEAP32[$buf_byte_idx$i>>2]|0;
    $arrayidx17$i216 = (($32) + ($33)|0);
    $34 = HEAP8[$arrayidx17$i216>>0]|0;
    $conv$i217 = $34&255;
    $or$i218 = $conv$i217 | $shl$i215;
    $conv18$i219 = $or$i218&255;
    HEAP8[$arrayidx17$i216>>0] = $conv18$i219;
    $35 = HEAP32[$totbit$i>>2]|0;
    $add$i220 = (($35) + ($j$addr$0$$i211))|0;
    HEAP32[$totbit$i>>2] = $add$i220;
    $cmp$i221 = ($sub$i212|0)>(0);
    if ($cmp$i221) {
     $22 = $add$i220;$j$addr$026$i192 = $sub$i212;
    } else {
     break;
    }
   }
   $sub4 = (($remainingBits) + -16)|0;
   $cmp6 = ($sub4|0)>(7);
   if ($cmp6) {
    $40 = $add$i220;$j$addr$026$i153 = 8;
    while(1) {
     $36 = HEAP32[$buf_bit_idx$i>>2]|0;
     $cmp2$i154 = ($36|0)==(0);
     if ($cmp2$i154) {
      HEAP32[$buf_bit_idx$i>>2] = 8;
      $37 = HEAP32[$buf_byte_idx$i>>2]|0;
      $inc$i156 = (($37) + 1)|0;
      HEAP32[$buf_byte_idx$i>>2] = $inc$i156;
      $38 = HEAP32[$w_ptr$i>>2]|0;
      $write_timing$i157 = (((($gfc)) + 39840|0) + (($38*48)|0)|0);
      $39 = HEAP32[$write_timing$i157>>2]|0;
      $cmp4$i158 = ($39|0)==($40|0);
      if ($cmp4$i158) {
       $41 = HEAP32[$buf$i$i>>2]|0;
       $arrayidx$i$i160 = (($41) + ($inc$i156)|0);
       $arraydecay$i$i161 = (((((($gfc)) + 39840|0) + (($38*48)|0)|0)) + 8|0);
       $42 = HEAP32[$sideinfo_len$i$i>>2]|0;
       _memcpy(($arrayidx$i$i160|0),($arraydecay$i$i161|0),($42|0))|0;
       $43 = HEAP32[$sideinfo_len$i$i>>2]|0;
       $44 = HEAP32[$buf_byte_idx$i>>2]|0;
       $add$i$i162 = (($44) + ($43))|0;
       HEAP32[$buf_byte_idx$i>>2] = $add$i$i162;
       $mul$i$i163 = $43 << 3;
       $45 = HEAP32[$totbit$i>>2]|0;
       $add8$i$i164 = (($45) + ($mul$i$i163))|0;
       HEAP32[$totbit$i>>2] = $add8$i$i164;
       $46 = HEAP32[$w_ptr$i>>2]|0;
       $add10$i$i165 = (($46) + 1)|0;
       $and$i$i166 = $add10$i$i165 & 255;
       HEAP32[$w_ptr$i>>2] = $and$i$i166;
       $48 = $add$i$i162;
      } else {
       $48 = $inc$i156;
      }
      $47 = HEAP32[$buf$i$i>>2]|0;
      $arrayidx7$i168 = (($47) + ($48)|0);
      HEAP8[$arrayidx7$i168>>0] = 0;
      $$pre$i169 = HEAP32[$buf_bit_idx$i>>2]|0;
      $49 = $$pre$i169;
     } else {
      $49 = $36;
     }
     $cmp10$i171 = ($j$addr$026$i153|0)<($49|0);
     $j$addr$0$$i172 = $cmp10$i171 ? $j$addr$026$i153 : $49;
     $sub$i173 = (($j$addr$026$i153) - ($j$addr$0$$i172))|0;
     $sub13$i174 = (($49) - ($j$addr$0$$i172))|0;
     HEAP32[$buf_bit_idx$i>>2] = $sub13$i174;
     $shr$i175 = 77 >>> $sub$i173;
     $shl$i176 = $shr$i175 << $sub13$i174;
     $50 = HEAP32[$buf$i$i>>2]|0;
     $51 = HEAP32[$buf_byte_idx$i>>2]|0;
     $arrayidx17$i177 = (($50) + ($51)|0);
     $52 = HEAP8[$arrayidx17$i177>>0]|0;
     $conv$i178 = $52&255;
     $or$i179 = $conv$i178 | $shl$i176;
     $conv18$i180 = $or$i179&255;
     HEAP8[$arrayidx17$i177>>0] = $conv18$i180;
     $53 = HEAP32[$totbit$i>>2]|0;
     $add$i181 = (($53) + ($j$addr$0$$i172))|0;
     HEAP32[$totbit$i>>2] = $add$i181;
     $cmp$i182 = ($sub$i173|0)>(0);
     if ($cmp$i182) {
      $40 = $add$i181;$j$addr$026$i153 = $sub$i173;
     } else {
      break;
     }
    }
    $sub8 = (($remainingBits) + -24)|0;
    $cmp10 = ($sub8|0)>(7);
    if ($cmp10) {
     $58 = $add$i181;$j$addr$026$i114 = 8;
     while(1) {
      $54 = HEAP32[$buf_bit_idx$i>>2]|0;
      $cmp2$i115 = ($54|0)==(0);
      if ($cmp2$i115) {
       HEAP32[$buf_bit_idx$i>>2] = 8;
       $55 = HEAP32[$buf_byte_idx$i>>2]|0;
       $inc$i117 = (($55) + 1)|0;
       HEAP32[$buf_byte_idx$i>>2] = $inc$i117;
       $56 = HEAP32[$w_ptr$i>>2]|0;
       $write_timing$i118 = (((($gfc)) + 39840|0) + (($56*48)|0)|0);
       $57 = HEAP32[$write_timing$i118>>2]|0;
       $cmp4$i119 = ($57|0)==($58|0);
       if ($cmp4$i119) {
        $59 = HEAP32[$buf$i$i>>2]|0;
        $arrayidx$i$i121 = (($59) + ($inc$i117)|0);
        $arraydecay$i$i122 = (((((($gfc)) + 39840|0) + (($56*48)|0)|0)) + 8|0);
        $60 = HEAP32[$sideinfo_len$i$i>>2]|0;
        _memcpy(($arrayidx$i$i121|0),($arraydecay$i$i122|0),($60|0))|0;
        $61 = HEAP32[$sideinfo_len$i$i>>2]|0;
        $62 = HEAP32[$buf_byte_idx$i>>2]|0;
        $add$i$i123 = (($62) + ($61))|0;
        HEAP32[$buf_byte_idx$i>>2] = $add$i$i123;
        $mul$i$i124 = $61 << 3;
        $63 = HEAP32[$totbit$i>>2]|0;
        $add8$i$i125 = (($63) + ($mul$i$i124))|0;
        HEAP32[$totbit$i>>2] = $add8$i$i125;
        $64 = HEAP32[$w_ptr$i>>2]|0;
        $add10$i$i126 = (($64) + 1)|0;
        $and$i$i127 = $add10$i$i126 & 255;
        HEAP32[$w_ptr$i>>2] = $and$i$i127;
        $66 = $add$i$i123;
       } else {
        $66 = $inc$i117;
       }
       $65 = HEAP32[$buf$i$i>>2]|0;
       $arrayidx7$i129 = (($65) + ($66)|0);
       HEAP8[$arrayidx7$i129>>0] = 0;
       $$pre$i130 = HEAP32[$buf_bit_idx$i>>2]|0;
       $67 = $$pre$i130;
      } else {
       $67 = $54;
      }
      $cmp10$i132 = ($j$addr$026$i114|0)<($67|0);
      $j$addr$0$$i133 = $cmp10$i132 ? $j$addr$026$i114 : $67;
      $sub$i134 = (($j$addr$026$i114) - ($j$addr$0$$i133))|0;
      $sub13$i135 = (($67) - ($j$addr$0$$i133))|0;
      HEAP32[$buf_bit_idx$i>>2] = $sub13$i135;
      $shr$i136 = 69 >>> $sub$i134;
      $shl$i137 = $shr$i136 << $sub13$i135;
      $68 = HEAP32[$buf$i$i>>2]|0;
      $69 = HEAP32[$buf_byte_idx$i>>2]|0;
      $arrayidx17$i138 = (($68) + ($69)|0);
      $70 = HEAP8[$arrayidx17$i138>>0]|0;
      $conv$i139 = $70&255;
      $or$i140 = $conv$i139 | $shl$i137;
      $conv18$i141 = $or$i140&255;
      HEAP8[$arrayidx17$i138>>0] = $conv18$i141;
      $71 = HEAP32[$totbit$i>>2]|0;
      $add$i142 = (($71) + ($j$addr$0$$i133))|0;
      HEAP32[$totbit$i>>2] = $add$i142;
      $cmp$i143 = ($sub$i134|0)>(0);
      if ($cmp$i143) {
       $58 = $add$i142;$j$addr$026$i114 = $sub$i134;
      } else {
       break;
      }
     }
     $sub12 = (($remainingBits) + -32)|0;
     $cmp14 = ($sub12|0)>(31);
     if ($cmp14) {
      $call = (_get_lame_short_version()|0);
      $call18230 = (_strlen($call)|0);
      $cmp19231 = ($call18230|0)>(0);
      if ($cmp19231) {
       $i$0233 = 0;$remainingBits$addr$4234 = $sub12;
       while(1) {
        $arrayidx = (($call) + ($i$0233)|0);
        $72 = HEAP8[$arrayidx>>0]|0;
        $conv = $72 << 24 >> 24;
        $j$addr$026$i75 = 8;
        while(1) {
         $73 = HEAP32[$buf_bit_idx$i>>2]|0;
         $cmp2$i76 = ($73|0)==(0);
         if ($cmp2$i76) {
          HEAP32[$buf_bit_idx$i>>2] = 8;
          $74 = HEAP32[$buf_byte_idx$i>>2]|0;
          $inc$i78 = (($74) + 1)|0;
          HEAP32[$buf_byte_idx$i>>2] = $inc$i78;
          $75 = HEAP32[$w_ptr$i>>2]|0;
          $write_timing$i79 = (((($gfc)) + 39840|0) + (($75*48)|0)|0);
          $76 = HEAP32[$write_timing$i79>>2]|0;
          $77 = HEAP32[$totbit$i>>2]|0;
          $cmp4$i80 = ($76|0)==($77|0);
          if ($cmp4$i80) {
           $78 = HEAP32[$buf$i$i>>2]|0;
           $arrayidx$i$i82 = (($78) + ($inc$i78)|0);
           $arraydecay$i$i83 = (((((($gfc)) + 39840|0) + (($75*48)|0)|0)) + 8|0);
           $79 = HEAP32[$sideinfo_len$i$i>>2]|0;
           _memcpy(($arrayidx$i$i82|0),($arraydecay$i$i83|0),($79|0))|0;
           $80 = HEAP32[$sideinfo_len$i$i>>2]|0;
           $81 = HEAP32[$buf_byte_idx$i>>2]|0;
           $add$i$i84 = (($81) + ($80))|0;
           HEAP32[$buf_byte_idx$i>>2] = $add$i$i84;
           $mul$i$i85 = $80 << 3;
           $82 = HEAP32[$totbit$i>>2]|0;
           $add8$i$i86 = (($82) + ($mul$i$i85))|0;
           HEAP32[$totbit$i>>2] = $add8$i$i86;
           $83 = HEAP32[$w_ptr$i>>2]|0;
           $add10$i$i87 = (($83) + 1)|0;
           $and$i$i88 = $add10$i$i87 & 255;
           HEAP32[$w_ptr$i>>2] = $and$i$i88;
           $85 = $add$i$i84;
          } else {
           $85 = $inc$i78;
          }
          $84 = HEAP32[$buf$i$i>>2]|0;
          $arrayidx7$i90 = (($84) + ($85)|0);
          HEAP8[$arrayidx7$i90>>0] = 0;
          $$pre$i91 = HEAP32[$buf_bit_idx$i>>2]|0;
          $86 = $$pre$i91;
         } else {
          $86 = $73;
         }
         $cmp10$i93 = ($j$addr$026$i75|0)<($86|0);
         $j$addr$0$$i94 = $cmp10$i93 ? $j$addr$026$i75 : $86;
         $sub$i95 = (($j$addr$026$i75) - ($j$addr$0$$i94))|0;
         $sub13$i96 = (($86) - ($j$addr$0$$i94))|0;
         HEAP32[$buf_bit_idx$i>>2] = $sub13$i96;
         $shr$i97 = $conv >> $sub$i95;
         $shl$i98 = $shr$i97 << $sub13$i96;
         $87 = HEAP32[$buf$i$i>>2]|0;
         $88 = HEAP32[$buf_byte_idx$i>>2]|0;
         $arrayidx17$i99 = (($87) + ($88)|0);
         $89 = HEAP8[$arrayidx17$i99>>0]|0;
         $conv$i100 = $89&255;
         $or$i101 = $conv$i100 | $shl$i98;
         $conv18$i102 = $or$i101&255;
         HEAP8[$arrayidx17$i99>>0] = $conv18$i102;
         $90 = HEAP32[$totbit$i>>2]|0;
         $add$i103 = (($90) + ($j$addr$0$$i94))|0;
         HEAP32[$totbit$i>>2] = $add$i103;
         $cmp$i104 = ($sub$i95|0)>(0);
         if ($cmp$i104) {
          $j$addr$026$i75 = $sub$i95;
         } else {
          break;
         }
        }
        $sub21 = (($remainingBits$addr$4234) + -8)|0;
        $inc = (($i$0233) + 1)|0;
        $call18 = (_strlen($call)|0);
        $cmp19 = ($inc|0)<($call18|0);
        $cmp20 = ($sub21|0)>(7);
        $91 = $cmp20 & $cmp19;
        if ($91) {
         $i$0233 = $inc;$remainingBits$addr$4234 = $sub21;
        } else {
         $remainingBits$addr$6$ph = $sub21;
         label = 2;
         break;
        }
       }
      } else {
       $remainingBits$addr$6$ph236 = $sub12;
      }
     } else {
      $remainingBits$addr$6$ph = $sub12;
      label = 2;
     }
    } else {
     $remainingBits$addr$6$ph = $sub8;
     label = 2;
    }
   } else {
    $remainingBits$addr$6$ph = $sub4;
    label = 2;
   }
  } else {
   $remainingBits$addr$6$ph = $sub;
   label = 2;
  }
 } else {
  $remainingBits$addr$6$ph = $remainingBits;
  label = 2;
 }
 if ((label|0) == 2) {
  $cmp25228 = ($remainingBits$addr$6$ph|0)>(0);
  if ($cmp25228) {
   $remainingBits$addr$6$ph236 = $remainingBits$addr$6$ph;
  } else {
   return;
  }
 }
 $ancillary_flag = ((($gfc)) + 52136|0);
 $buf_bit_idx$i29 = ((($gfc)) + 300|0);
 $buf_byte_idx$i30 = ((($gfc)) + 296|0);
 $w_ptr$i31 = ((($gfc)) + 52132|0);
 $totbit$i32 = ((($gfc)) + 292|0);
 $buf$i$i33 = ((($gfc)) + 284|0);
 $sideinfo_len$i$i34 = ((($gfc)) + 24|0);
 $disable_reservoir = ((($gfc)) + 144|0);
 $$pre = HEAP32[$ancillary_flag>>2]|0;
 $106 = $$pre;$remainingBits$addr$6229 = $remainingBits$addr$6$ph236;
 while(1) {
  $j$addr$026$i36 = 1;
  while(1) {
   $92 = HEAP32[$buf_bit_idx$i29>>2]|0;
   $cmp2$i37 = ($92|0)==(0);
   if ($cmp2$i37) {
    HEAP32[$buf_bit_idx$i29>>2] = 8;
    $93 = HEAP32[$buf_byte_idx$i30>>2]|0;
    $inc$i39 = (($93) + 1)|0;
    HEAP32[$buf_byte_idx$i30>>2] = $inc$i39;
    $94 = HEAP32[$w_ptr$i31>>2]|0;
    $write_timing$i40 = (((($gfc)) + 39840|0) + (($94*48)|0)|0);
    $95 = HEAP32[$write_timing$i40>>2]|0;
    $96 = HEAP32[$totbit$i32>>2]|0;
    $cmp4$i41 = ($95|0)==($96|0);
    if ($cmp4$i41) {
     $97 = HEAP32[$buf$i$i33>>2]|0;
     $arrayidx$i$i43 = (($97) + ($inc$i39)|0);
     $arraydecay$i$i44 = (((((($gfc)) + 39840|0) + (($94*48)|0)|0)) + 8|0);
     $98 = HEAP32[$sideinfo_len$i$i34>>2]|0;
     _memcpy(($arrayidx$i$i43|0),($arraydecay$i$i44|0),($98|0))|0;
     $99 = HEAP32[$sideinfo_len$i$i34>>2]|0;
     $100 = HEAP32[$buf_byte_idx$i30>>2]|0;
     $add$i$i45 = (($100) + ($99))|0;
     HEAP32[$buf_byte_idx$i30>>2] = $add$i$i45;
     $mul$i$i46 = $99 << 3;
     $101 = HEAP32[$totbit$i32>>2]|0;
     $add8$i$i47 = (($101) + ($mul$i$i46))|0;
     HEAP32[$totbit$i32>>2] = $add8$i$i47;
     $102 = HEAP32[$w_ptr$i31>>2]|0;
     $add10$i$i48 = (($102) + 1)|0;
     $and$i$i49 = $add10$i$i48 & 255;
     HEAP32[$w_ptr$i31>>2] = $and$i$i49;
     $104 = $add$i$i45;
    } else {
     $104 = $inc$i39;
    }
    $103 = HEAP32[$buf$i$i33>>2]|0;
    $arrayidx7$i51 = (($103) + ($104)|0);
    HEAP8[$arrayidx7$i51>>0] = 0;
    $$pre$i52 = HEAP32[$buf_bit_idx$i29>>2]|0;
    $105 = $$pre$i52;
   } else {
    $105 = $92;
   }
   $cmp10$i54 = ($j$addr$026$i36|0)<($105|0);
   $j$addr$0$$i55 = $cmp10$i54 ? $j$addr$026$i36 : $105;
   $sub$i56 = (($j$addr$026$i36) - ($j$addr$0$$i55))|0;
   $sub13$i57 = (($105) - ($j$addr$0$$i55))|0;
   HEAP32[$buf_bit_idx$i29>>2] = $sub13$i57;
   $shr$i58 = $106 >> $sub$i56;
   $shl$i59 = $shr$i58 << $sub13$i57;
   $107 = HEAP32[$buf$i$i33>>2]|0;
   $108 = HEAP32[$buf_byte_idx$i30>>2]|0;
   $arrayidx17$i60 = (($107) + ($108)|0);
   $109 = HEAP8[$arrayidx17$i60>>0]|0;
   $conv$i61 = $109&255;
   $or$i62 = $conv$i61 | $shl$i59;
   $conv18$i63 = $or$i62&255;
   HEAP8[$arrayidx17$i60>>0] = $conv18$i63;
   $110 = HEAP32[$totbit$i32>>2]|0;
   $add$i64 = (($110) + ($j$addr$0$$i55))|0;
   HEAP32[$totbit$i32>>2] = $add$i64;
   $cmp$i65 = ($sub$i56|0)>(0);
   if ($cmp$i65) {
    $j$addr$026$i36 = $sub$i56;
   } else {
    break;
   }
  }
  $111 = HEAP32[$disable_reservoir>>2]|0;
  $lnot = ($111|0)==(0);
  $lnot$ext = $lnot&1;
  $112 = HEAP32[$ancillary_flag>>2]|0;
  $xor = $lnot$ext ^ $112;
  HEAP32[$ancillary_flag>>2] = $xor;
  $sub30 = (($remainingBits$addr$6229) + -1)|0;
  $cmp25 = ($remainingBits$addr$6229|0)>(1);
  if ($cmp25) {
   $106 = $xor;$remainingBits$addr$6229 = $sub30;
  } else {
   break;
  }
 }
 return;
}
function _add_dummy_byte($gfc,$val,$n) {
 $gfc = $gfc|0;
 $val = $val|0;
 $n = $n|0;
 var $$pre$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $add = 0, $add$i = 0, $arrayidx$i = 0, $arrayidx13$i = 0, $buf$i = 0, $buf_bit_idx$i = 0, $buf_byte_idx$i = 0, $cmp = 0, $cmp$i = 0, $cmp2$i = 0;
 var $cmp6$i = 0, $cmp8 = 0, $conv = 0, $conv$i = 0, $conv14$i = 0, $dec9 = 0, $dec9$in = 0, $exitcond = 0, $i$06 = 0, $inc = 0, $inc$i = 0, $j$addr$0$$i = 0, $j$addr$01$i = 0, $or$i = 0, $shl$i = 0, $shr$i = 0, $sub$i = 0, $sub9$i = 0, $totbit$i = 0, $write_timing = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $cmp8 = ($n|0)==(0);
 if ($cmp8) {
  return;
 }
 $conv = $val&255;
 $buf_bit_idx$i = ((($gfc)) + 300|0);
 $buf_byte_idx$i = ((($gfc)) + 296|0);
 $buf$i = ((($gfc)) + 284|0);
 $totbit$i = ((($gfc)) + 292|0);
 $dec9$in = $n;
 while(1) {
  $j$addr$01$i = 8;
  while(1) {
   $0 = HEAP32[$buf_bit_idx$i>>2]|0;
   $cmp2$i = ($0|0)==(0);
   if ($cmp2$i) {
    HEAP32[$buf_bit_idx$i>>2] = 8;
    $1 = HEAP32[$buf_byte_idx$i>>2]|0;
    $inc$i = (($1) + 1)|0;
    HEAP32[$buf_byte_idx$i>>2] = $inc$i;
    $2 = HEAP32[$buf$i>>2]|0;
    $arrayidx$i = (($2) + ($inc$i)|0);
    HEAP8[$arrayidx$i>>0] = 0;
    $$pre$i = HEAP32[$buf_bit_idx$i>>2]|0;
    $3 = $$pre$i;
   } else {
    $3 = $0;
   }
   $cmp6$i = ($j$addr$01$i|0)<($3|0);
   $j$addr$0$$i = $cmp6$i ? $j$addr$01$i : $3;
   $sub$i = (($j$addr$01$i) - ($j$addr$0$$i))|0;
   $sub9$i = (($3) - ($j$addr$0$$i))|0;
   HEAP32[$buf_bit_idx$i>>2] = $sub9$i;
   $shr$i = $conv >>> $sub$i;
   $shl$i = $shr$i << $sub9$i;
   $4 = HEAP32[$buf$i>>2]|0;
   $5 = HEAP32[$buf_byte_idx$i>>2]|0;
   $arrayidx13$i = (($4) + ($5)|0);
   $6 = HEAP8[$arrayidx13$i>>0]|0;
   $conv$i = $6&255;
   $or$i = $conv$i | $shl$i;
   $conv14$i = $or$i&255;
   HEAP8[$arrayidx13$i>>0] = $conv14$i;
   $7 = HEAP32[$totbit$i>>2]|0;
   $add$i = (($7) + ($j$addr$0$$i))|0;
   HEAP32[$totbit$i>>2] = $add$i;
   $cmp$i = ($sub$i|0)>(0);
   if ($cmp$i) {
    $j$addr$01$i = $sub$i;
   } else {
    $i$06 = 0;
    break;
   }
  }
  while(1) {
   $write_timing = (((($gfc)) + 39840|0) + (($i$06*48)|0)|0);
   $8 = HEAP32[$write_timing>>2]|0;
   $add = (($8) + 8)|0;
   HEAP32[$write_timing>>2] = $add;
   $inc = (($i$06) + 1)|0;
   $exitcond = ($inc|0)==(256);
   if ($exitcond) {
    break;
   } else {
    $i$06 = $inc;
   }
  }
  $dec9 = (($dec9$in) + -1)|0;
  $cmp = ($dec9|0)==(0);
  if ($cmp) {
   break;
  } else {
   $dec9$in = $dec9;
  }
 }
 return;
}
function _format_bitstream($gfc) {
 $gfc = $gfc|0;
 var $$$i = 0, $$$i$i = 0, $$$i220$i = 0, $$112$i = 0, $$113$us$i = 0, $$mul$i$i = 0, $$mul$i472$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i$us$i = 0, $$pre$i1014$i = 0, $$pre$i1041$i = 0, $$pre$i1068$i = 0, $$pre$i1095$i = 0, $$pre$i1122$i = 0, $$pre$i1149$i = 0, $$pre$i1176$i = 0, $$pre$i1203$i = 0, $$pre$i1230$i = 0;
 var $$pre$i1257$i = 0, $$pre$i1284$i = 0, $$pre$i1311$i = 0, $$pre$i1338$1$i = 0, $$pre$i1338$2$i = 0, $$pre$i1338$3$i = 0, $$pre$i1338$i = 0, $$pre$i1365$i = 0, $$pre$i1365$lcssa$sink$i = 0, $$pre$i1392$i = 0, $$pre$i1419$i = 0, $$pre$i144$i = 0, $$pre$i1469$i = 0, $$pre$i1496$i = 0, $$pre$i1523$i = 0, $$pre$i1550$i = 0, $$pre$i1577$i = 0, $$pre$i1604$i = 0, $$pre$i1631$i = 0, $$pre$i1658$i = 0;
 var $$pre$i1685$i = 0, $$pre$i1712$i = 0, $$pre$i1739$i = 0, $$pre$i1766$i = 0, $$pre$i188$us$i = 0, $$pre$i202$i = 0, $$pre$i227$i = 0, $$pre$i252$i = 0, $$pre$i277$i = 0, $$pre$i302$i = 0, $$pre$i327$i = 0, $$pre$i329$i = 0, $$pre$i352$i = 0, $$pre$i370$i = 0, $$pre$i377$i = 0, $$pre$i411$i = 0, $$pre$i423$i = 0, $$pre$i448$i = 0, $$pre$i452$i = 0, $$pre$i473$i = 0;
 var $$pre$i498$i = 0, $$pre$i503$us$i = 0, $$pre$i523$i = 0, $$pre$i548$i = 0, $$pre$i573$i = 0, $$pre$i598$i = 0, $$pre$i623$i = 0, $$pre$i648$i = 0, $$pre$i673$i = 0, $$pre$i698$i = 0, $$pre$i723$i = 0, $$pre$i748$i = 0, $$pre$i76 = 0, $$pre$i775$i = 0, $$pre$i802$i = 0, $$pre$i829$i = 0, $$pre$i856$i = 0, $$pre$i883$i = 0, $$pre$i910$i = 0, $$pre$i937$i = 0;
 var $$pre$i964$i = 0, $$pre105 = 0, $$pre1795$i = 0, $$pre1796$i = 0, $$pre1797$i = 0, $$pre1798$i = 0, $$pre1799$i = 0, $$pre1800$i = 0, $$pre1801$i = 0, $$pre1802$i = 0, $$pre1803$i = 0, $$pre1804$i = 0, $$pre1806$i = 0, $$pre1807$i = 0, $$pre1808$i = 0, $$pre1809$i = 0, $$pre1810$i = 0, $$pre1811$i = 0, $$pre1812$i = 0, $$pre1813$i = 0;
 var $$pre1814$i = 0, $$pre1815$i = 0, $$pre1816$i = 0, $$pre1817$i = 0, $$pre576$i = 0, $$pre577$i = 0, $$pre578$i = 0, $$pre579$i = 0, $$sub$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0;
 var $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0;
 var $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0;
 var $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0;
 var $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0;
 var $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0;
 var $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0;
 var $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0.0, $294 = 0, $295 = 0.0, $296 = 0, $297 = 0.0, $298 = 0, $299 = 0.0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0;
 var $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0;
 var $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0;
 var $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0;
 var $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0;
 var $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0;
 var $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0;
 var $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0.0, $429 = 0, $43 = 0, $430 = 0.0, $431 = 0;
 var $432 = 0.0, $433 = 0, $434 = 0.0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0;
 var $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0;
 var $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0;
 var $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0;
 var $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ResvSize = 0;
 var $add = 0, $add$i = 0, $add$i$i = 0, $add$i$i$us$i = 0, $add$i$i137$i = 0, $add$i$i181$us$i = 0, $add$i$i322$i = 0, $add$i$i363$i = 0, $add$i$i404$i = 0, $add$i$i445$i = 0, $add$i$i496$us$i = 0, $add$i$us$i = 0, $add$i1011$i = 0, $add$i1038$i = 0, $add$i1065$i = 0, $add$i1092$i = 0, $add$i1119$i = 0, $add$i114$i = 0, $add$i1146$i = 0, $add$i1173$i = 0;
 var $add$i1200$i = 0, $add$i1227$i = 0, $add$i1254$i = 0, $add$i1281$i = 0, $add$i1308$i = 0, $add$i1335$1$i = 0, $add$i1335$2$i = 0, $add$i1335$3$i = 0, $add$i1335$i = 0, $add$i1362$i = 0, $add$i1362$lcssa$sink$i = 0, $add$i1389$i = 0, $add$i1416$i = 0, $add$i1439$i = 0, $add$i1466$i = 0, $add$i1493$i = 0, $add$i1520$i = 0, $add$i1547$i = 0, $add$i156$i = 0, $add$i1574$i = 0;
 var $add$i1601$i = 0, $add$i161$i = 0, $add$i1628$i = 0, $add$i1655$i = 0, $add$i1682$i = 0, $add$i1709$i = 0, $add$i1736$i = 0, $add$i1763$i = 0, $add$i199$i = 0, $add$i199$sink$i = 0, $add$i200$us$i = 0, $add$i213$i = 0, $add$i224$i = 0, $add$i232$i = 0, $add$i249$i = 0, $add$i274$i = 0, $add$i274$sink$i = 0, $add$i299$i = 0, $add$i324$i = 0, $add$i341$i = 0;
 var $add$i349$i = 0, $add$i374$i = 0, $add$i382$i = 0, $add$i395$i = 0, $add$i420$i = 0, $add$i423$i = 0, $add$i445$i = 0, $add$i464$i = 0, $add$i470$i = 0, $add$i495$i = 0, $add$i515$us$i = 0, $add$i520$i = 0, $add$i53 = 0, $add$i545$i = 0, $add$i570$i = 0, $add$i595$i = 0, $add$i62 = 0, $add$i620$i = 0, $add$i645$i = 0, $add$i670$i = 0;
 var $add$i695$i = 0, $add$i720$i = 0, $add$i745$i = 0, $add$i772$i = 0, $add$i799$i = 0, $add$i826$i = 0, $add$i853$i = 0, $add$i853$sink$i = 0, $add$i880$i = 0, $add$i907$i = 0, $add$i934$i = 0, $add$i961$i = 0, $add$i984$i = 0, $add$ptr$i$i = 0, $add$ptr$i290$i = 0, $add$ptr44$i$i = 0, $add$ptr44$i291$i = 0, $add$us$i = 0, $add1$i$i = 0, $add1$i216$i = 0;
 var $add10$i = 0, $add10$i$i$us$i = 0, $add10$i$i140$i = 0, $add10$i$i184$us$i = 0, $add10$i$i325$i = 0, $add10$i$i366$i = 0, $add10$i$i407$i = 0, $add10$i$i448$i = 0, $add10$i$i499$us$i = 0, $add10$sub5$i = 0, $add104$i = 0, $add111$i = 0, $add13$i$i = 0, $add13$i$sink$i = 0, $add13$i227$i = 0, $add13$i227$sink$i = 0, $add148$i = 0, $add149$i = 0, $add15$i = 0, $add15$i$i = 0;
 var $add15$i257$i = 0, $add150$i = 0, $add17$i$i = 0, $add17$i230$i = 0, $add192$i = 0, $add196$i = 0, $add2$i$i = 0, $add2$i$i$i = 0, $add2$i$i73 = 0, $add2$i217$i = 0, $add25$i$i = 0, $add25$i269$i = 0, $add29$i = 0, $add29$us$i = 0, $add40$i = 0, $add41$i = 0, $add46$i$i = 0, $add46$i294$i = 0, $add5 = 0, $add52$i$i = 0;
 var $add52$i298$i = 0, $add6 = 0, $add79$i = 0, $add8$i$i$us$i = 0, $add8$i$i139$i = 0, $add8$i$i183$us$i = 0, $add8$i$i324$i = 0, $add8$i$i365$i = 0, $add8$i$i406$i = 0, $add8$i$i447$i = 0, $add8$i$i498$us$i = 0, $add92$i = 0, $and$i = 0, $and$i$i = 0, $and$i$i$us$i = 0, $and$i$i141$i = 0, $and$i$i185$us$i = 0, $and$i$i326$i = 0, $and$i$i367$i = 0, $and$i$i408$i = 0;
 var $and$i$i449$i = 0, $and$i$i500$us$i = 0, $and$i1025$i = 0, $and$i1052$i = 0, $and$i1079$i = 0, $and$i1106$i = 0, $and$i1133$i = 0, $and$i1160$i = 0, $and$i1187$i = 0, $and$i1214$i = 0, $and$i1241$i = 0, $and$i1268$i = 0, $and$i1295$i = 0, $and$i1322$1$i = 0, $and$i1322$2$i = 0, $and$i1322$3$i = 0, $and$i1322$i = 0, $and$i1349$i = 0, $and$i1376$i = 0, $and$i1403$i = 0;
 var $and$i1430$i = 0, $and$i1453$i = 0, $and$i1480$i = 0, $and$i1507$i = 0, $and$i1534$i = 0, $and$i1561$i = 0, $and$i1588$i = 0, $and$i1615$i = 0, $and$i1642$i = 0, $and$i1669$i = 0, $and$i1696$i = 0, $and$i1723$i = 0, $and$i1750$i = 0, $and$i186$i = 0, $and$i211$i = 0, $and$i236$i = 0, $and$i261$i = 0, $and$i286$i = 0, $and$i311$i = 0, $and$i336$i = 0;
 var $and$i361$i = 0, $and$i386$i = 0, $and$i407$i = 0, $and$i432$i = 0, $and$i457$i = 0, $and$i482$i = 0, $and$i507$i = 0, $and$i532$i = 0, $and$i557$i = 0, $and$i582$i = 0, $and$i607$i = 0, $and$i632$i = 0, $and$i657$i = 0, $and$i682$i = 0, $and$i707$i = 0, $and$i732$i = 0, $and$i759$i = 0, $and$i786$i = 0, $and$i813$i = 0, $and$i840$i = 0;
 var $and$i867$i = 0, $and$i894$i = 0, $and$i921$i = 0, $and$i948$i = 0, $and$i975$i = 0, $and$i998$i = 0, $arraydecay$i = 0, $arraydecay$i$i$us$i = 0, $arraydecay$i$i136$i = 0, $arraydecay$i$i180$us$i = 0, $arraydecay$i$i321$i = 0, $arraydecay$i$i362$i = 0, $arraydecay$i$i403$i = 0, $arraydecay$i$i444$i = 0, $arraydecay$i$i495$us$i = 0, $arraydecay189$i = 0, $arrayidx$i$i = 0, $arrayidx$i$i$us$i = 0, $arrayidx$i$i135$i = 0, $arrayidx$i$i179$us$i = 0;
 var $arrayidx$i$i320$i = 0, $arrayidx$i$i361$i = 0, $arrayidx$i$i402$i = 0, $arrayidx$i$i443$i = 0, $arrayidx$i$i494$us$i = 0, $arrayidx$i204$i = 0, $arrayidx$i214$i = 0, $arrayidx$i468$i = 0, $arrayidx1$i$i = 0, $arrayidx1$i239$i = 0, $arrayidx10$i = 0, $arrayidx11$i$i = 0, $arrayidx11$i225$i = 0, $arrayidx12$i$i = 0, $arrayidx12$i254$i = 0, $arrayidx120$i = 0, $arrayidx122$i = 0, $arrayidx123$i = 0, $arrayidx128$us$i = 0, $arrayidx13$i$i = 0;
 var $arrayidx13$i1007$i = 0, $arrayidx13$i1034$i = 0, $arrayidx13$i1061$i = 0, $arrayidx13$i1088$i = 0, $arrayidx13$i1115$i = 0, $arrayidx13$i1142$i = 0, $arrayidx13$i1169$i = 0, $arrayidx13$i1196$i = 0, $arrayidx13$i1223$i = 0, $arrayidx13$i1250$i = 0, $arrayidx13$i1277$i = 0, $arrayidx13$i1304$i = 0, $arrayidx13$i1331$1$i = 0, $arrayidx13$i1331$2$i = 0, $arrayidx13$i1331$3$i = 0, $arrayidx13$i1331$i = 0, $arrayidx13$i1358$i = 0, $arrayidx13$i1385$i = 0, $arrayidx13$i1412$i = 0, $arrayidx13$i1462$i = 0;
 var $arrayidx13$i1489$i = 0, $arrayidx13$i1516$i = 0, $arrayidx13$i1543$i = 0, $arrayidx13$i1570$i = 0, $arrayidx13$i1597$i = 0, $arrayidx13$i1624$i = 0, $arrayidx13$i1651$i = 0, $arrayidx13$i1678$i = 0, $arrayidx13$i1705$i = 0, $arrayidx13$i1732$i = 0, $arrayidx13$i1759$i = 0, $arrayidx13$i195$i = 0, $arrayidx13$i220$i = 0, $arrayidx13$i245$i = 0, $arrayidx13$i270$i = 0, $arrayidx13$i295$i = 0, $arrayidx13$i320$i = 0, $arrayidx13$i345$i = 0, $arrayidx13$i370$i = 0, $arrayidx13$i416$i = 0;
 var $arrayidx13$i441$i = 0, $arrayidx13$i466$i = 0, $arrayidx13$i491$i = 0, $arrayidx13$i516$i = 0, $arrayidx13$i541$i = 0, $arrayidx13$i566$i = 0, $arrayidx13$i591$i = 0, $arrayidx13$i616$i = 0, $arrayidx13$i641$i = 0, $arrayidx13$i666$i = 0, $arrayidx13$i691$i = 0, $arrayidx13$i716$i = 0, $arrayidx13$i741$i = 0, $arrayidx13$i768$i = 0, $arrayidx13$i795$i = 0, $arrayidx13$i822$i = 0, $arrayidx13$i849$i = 0, $arrayidx13$i876$i = 0, $arrayidx13$i903$i = 0, $arrayidx13$i930$i = 0;
 var $arrayidx13$i957$i = 0, $arrayidx131$i = 0, $arrayidx14$i = 0, $arrayidx14$us$i = 0, $arrayidx140$i = 0, $arrayidx142$i = 0, $arrayidx144$i = 0, $arrayidx147$i = 0, $arrayidx15$i$i = 0, $arrayidx15$i228$i = 0, $arrayidx156$i = 0, $arrayidx16$i$i = 0, $arrayidx16$i259$i = 0, $arrayidx165$i = 0, $arrayidx17$i$us$i = 0, $arrayidx17$i152$i = 0, $arrayidx17$i196$us$i = 0, $arrayidx17$i337$i = 0, $arrayidx17$i378$i = 0, $arrayidx17$i419$i = 0;
 var $arrayidx17$i460$i = 0, $arrayidx17$i511$us$i = 0, $arrayidx2$i$i = 0, $arrayidx2$i473$i = 0, $arrayidx22$i$i = 0, $arrayidx22$i266$i = 0, $arrayidx23$i = 0, $arrayidx23$us$i = 0, $arrayidx24$1$i = 0, $arrayidx24$2$i = 0, $arrayidx24$3$i = 0, $arrayidx24$i = 0, $arrayidx27$i$i = 0, $arrayidx27$i271$i = 0, $arrayidx3$i = 0, $arrayidx3$i$i = 0, $arrayidx33$i$i = 0, $arrayidx33$i278$i = 0, $arrayidx38$i$i = 0, $arrayidx38$i283$i = 0;
 var $arrayidx4$i$i = 0, $arrayidx4$i209$i = 0, $arrayidx4$i238$i = 0, $arrayidx4$i475$i = 0, $arrayidx40$i = 0, $arrayidx45$i$i = 0, $arrayidx45$i292$i = 0, $arrayidx47$i$i = 0, $arrayidx47$i295$i = 0, $arrayidx49$i = 0, $arrayidx5$i$i = 0, $arrayidx5$i218$i = 0, $arrayidx56$i = 0, $arrayidx57$i = 0, $arrayidx59$i = 0, $arrayidx61$i = 0, $arrayidx63$i = 0, $arrayidx64$i = 0, $arrayidx65$i = 0, $arrayidx7$i = 0;
 var $arrayidx7$i$us$i = 0, $arrayidx7$i143$i = 0, $arrayidx7$i187$us$i = 0, $arrayidx7$i328$i = 0, $arrayidx7$i369$i = 0, $arrayidx7$i410$i = 0, $arrayidx7$i451$i = 0, $arrayidx7$i502$us$i = 0, $arrayidx71$i = 0, $arrayidx73$i = 0, $arrayidx8$i = 0, $arrayidx80$i = 0, $arrayidx82$i = 0, $arrayidx9$i$i = 0, $arrayidx9$i223$i = 0, $arrayidx93$i = 0, $avg_bitrate$i = 0, $avg_bitrate$i$i = 0, $big_values$i = 0, $big_values$i$pre$phi$iZZ2D = 0;
 var $big_values$i160$i = 0, $big_values$i206$i = 0, $big_values$i211$i = 0, $big_values$i233$pre$phi$iZZ2D = 0, $big_values$i470$i = 0, $big_values112$i = 0, $bit_rate$0$i = 0, $bit_rate$0$i$i = 0, $bit_rate$0$in$i = 0, $bit_rate$0$in$i$i = 0, $bitrate_index$i = 0, $bits$0$lcssa$i$i = 0, $bits$0$lcssa$i302$i = 0, $bits$045$i$i = 0, $bits$045$i245$i = 0, $block_type$i = 0, $block_type$i64 = 0, $block_type116$i = 0, $block_type57$i = 0, $buf$i$i$i = 0;
 var $buf$i$i350$i = 0, $buf_bit_idx$i$i = 0, $buf_bit_idx$i346$i = 0, $buf_byte_idx$i$i = 0, $buf_byte_idx$i347$i = 0, $call$i$i = 0, $call$i208$i = 0, $call$i224$i = 0, $call$i474$i = 0, $call12$i$i = 0, $call12$i226$i = 0, $call16$i$i = 0, $call16$i$sink$i = 0, $call16$i229$i = 0, $call16$i229$sink$i = 0, $call6$i$i = 0, $call6$i476$i = 0, $cfg1$i = 0, $cfg1$idx$val$i = 0, $cfg1$idx$val$i$i = 0;
 var $cfg1$idx$val$pre$i = 0, $cfg1$idx$val$pre$i$i = 0, $cfg1$idx8$i = 0, $cfg1$idx8$val$i = 0, $cfg1$idx8$val$i$i = 0, $ch$01784$i = 0, $ch$0538$i = 0, $ch$11778$i = 0, $ch$1565$i = 0, $ch$21786$i = 0, $channels_out$i = 0, $channels_out$i59 = 0, $channels_out100$i = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i = 0, $cmp$i$us$i = 0, $cmp$i1012$i = 0, $cmp$i1039$i = 0, $cmp$i1066$i = 0;
 var $cmp$i1093$i = 0, $cmp$i1120$i = 0, $cmp$i1147$i = 0, $cmp$i1174$i = 0, $cmp$i118$i = 0, $cmp$i1201$i = 0, $cmp$i1228$i = 0, $cmp$i1255$i = 0, $cmp$i1282$i = 0, $cmp$i1309$i = 0, $cmp$i1336$1$i = 0, $cmp$i1336$2$i = 0, $cmp$i1336$3$i = 0, $cmp$i1336$i = 0, $cmp$i1363$i = 0, $cmp$i1390$i = 0, $cmp$i1417$i = 0, $cmp$i1440$i = 0, $cmp$i1467$i = 0, $cmp$i1494$i = 0;
 var $cmp$i1521$i = 0, $cmp$i1548$i = 0, $cmp$i157$i = 0, $cmp$i1575$i = 0, $cmp$i1602$i = 0, $cmp$i162$i = 0, $cmp$i1629$i = 0, $cmp$i1656$i = 0, $cmp$i1683$i = 0, $cmp$i1710$i = 0, $cmp$i1737$i = 0, $cmp$i1764$i = 0, $cmp$i200$i = 0, $cmp$i201$us$i = 0, $cmp$i207$i = 0, $cmp$i219$i = 0, $cmp$i225$i = 0, $cmp$i250$i = 0, $cmp$i275$i = 0, $cmp$i300$i = 0;
 var $cmp$i300$i67 = 0, $cmp$i325$i = 0, $cmp$i342$i = 0, $cmp$i350$i = 0, $cmp$i375$i = 0, $cmp$i383$i = 0, $cmp$i396$i = 0, $cmp$i421$i = 0, $cmp$i424$i = 0, $cmp$i446$i = 0, $cmp$i465$i = 0, $cmp$i471$i = 0, $cmp$i471$i72 = 0, $cmp$i49 = 0, $cmp$i496$i = 0, $cmp$i516$us$i = 0, $cmp$i521$i = 0, $cmp$i546$i = 0, $cmp$i571$i = 0, $cmp$i58 = 0;
 var $cmp$i596$i = 0, $cmp$i621$i = 0, $cmp$i646$i = 0, $cmp$i671$i = 0, $cmp$i696$i = 0, $cmp$i721$i = 0, $cmp$i746$i = 0, $cmp$i773$i = 0, $cmp$i800$i = 0, $cmp$i827$i = 0, $cmp$i854$i = 0, $cmp$i881$i = 0, $cmp$i908$i = 0, $cmp$i935$i = 0, $cmp$i962$i = 0, $cmp$i985$i = 0, $cmp10$i$us$i = 0, $cmp10$i146$i = 0, $cmp10$i190$us$i = 0, $cmp10$i331$i = 0;
 var $cmp10$i372$i = 0, $cmp10$i413$i = 0, $cmp10$i454$i = 0, $cmp10$i505$us$i = 0, $cmp103$i = 0, $cmp1031785$i = 0, $cmp11 = 0, $cmp11$i = 0, $cmp117$i = 0, $cmp12$us$i = 0, $cmp123$i = 0, $cmp12528$i = 0, $cmp125545$i = 0, $cmp129$us$i = 0, $cmp13$i = 0, $cmp132$i = 0, $cmp148$i = 0, $cmp15$i = 0, $cmp15$us$i = 0, $cmp157$i = 0;
 var $cmp166$i = 0, $cmp17$i$i = 0, $cmp17$i260$i = 0, $cmp19$i = 0, $cmp191783$i = 0, $cmp2$i$i = 0, $cmp2$i$us$i = 0, $cmp2$i1000$i = 0, $cmp2$i1027$i = 0, $cmp2$i1054$i = 0, $cmp2$i1081$i = 0, $cmp2$i1108$i = 0, $cmp2$i1135$i = 0, $cmp2$i1162$i = 0, $cmp2$i1189$i = 0, $cmp2$i1216$i = 0, $cmp2$i1243$i = 0, $cmp2$i1270$i = 0, $cmp2$i129$i = 0, $cmp2$i1297$i = 0;
 var $cmp2$i1324$1$i = 0, $cmp2$i1324$2$i = 0, $cmp2$i1324$3$i = 0, $cmp2$i1324$i = 0, $cmp2$i1351$i = 0, $cmp2$i1378$i = 0, $cmp2$i1405$i = 0, $cmp2$i1432$i = 0, $cmp2$i1455$i = 0, $cmp2$i1482$i = 0, $cmp2$i1509$i = 0, $cmp2$i1536$i = 0, $cmp2$i1563$i = 0, $cmp2$i1590$i = 0, $cmp2$i1617$i = 0, $cmp2$i1644$i = 0, $cmp2$i1671$i = 0, $cmp2$i1698$i = 0, $cmp2$i1725$i = 0, $cmp2$i173$us$i = 0;
 var $cmp2$i1752$i = 0, $cmp2$i188$i = 0, $cmp2$i213$i = 0, $cmp2$i238$i = 0, $cmp2$i263$i = 0, $cmp2$i288$i = 0, $cmp2$i313$i = 0, $cmp2$i314$i = 0, $cmp2$i338$i = 0, $cmp2$i355$i = 0, $cmp2$i363$i = 0, $cmp2$i388$i = 0, $cmp2$i396$i = 0, $cmp2$i409$i = 0, $cmp2$i434$i = 0, $cmp2$i437$i = 0, $cmp2$i459$i = 0, $cmp2$i484$i = 0, $cmp2$i488$us$i = 0, $cmp2$i509$i = 0;
 var $cmp2$i534$i = 0, $cmp2$i559$i = 0, $cmp2$i584$i = 0, $cmp2$i609$i = 0, $cmp2$i634$i = 0, $cmp2$i659$i = 0, $cmp2$i684$i = 0, $cmp2$i709$i = 0, $cmp2$i734$i = 0, $cmp2$i761$i = 0, $cmp2$i788$i = 0, $cmp2$i815$i = 0, $cmp2$i842$i = 0, $cmp2$i869$i = 0, $cmp2$i896$i = 0, $cmp2$i923$i = 0, $cmp2$i950$i = 0, $cmp2$i977$i = 0, $cmp20$us$i = 0, $cmp202$i = 0;
 var $cmp20532$i = 0, $cmp21$i$i = 0, $cmp24$i = 0, $cmp24$i63 = 0, $cmp24$us$i = 0, $cmp25$i$i = 0, $cmp25$i119$i = 0, $cmp25$i163$i = 0, $cmp25$i304$i = 0, $cmp25$i345$i = 0, $cmp25$i478$i = 0, $cmp28$i$i = 0, $cmp28$i272$i = 0, $cmp29 = 0, $cmp3$i = 0, $cmp33$i = 0, $cmp33$i65 = 0, $cmp331777$i = 0, $cmp37$i = 0, $cmp39$i$i = 0;
 var $cmp39$i284$i = 0, $cmp4$i$us$i = 0, $cmp4$i133$i = 0, $cmp4$i177$us$i = 0, $cmp4$i318$i = 0, $cmp4$i359$i = 0, $cmp4$i400$i = 0, $cmp4$i441$i = 0, $cmp4$i492$us$i = 0, $cmp41$i = 0, $cmp43$i$i = 0, $cmp43$i236$i = 0, $cmp5$i = 0, $cmp50$i = 0, $cmp51$i = 0, $cmp51563$i = 0, $cmp5536$i = 0, $cmp58$i = 0, $cmp6$i = 0, $cmp6$i$i = 0;
 var $cmp6$i221$i = 0, $cmp65$i = 0, $cmp67$i = 0, $cmp67554$i = 0, $cmp72$i = 0, $cmp74$i = 0, $cmp81$i = 0, $cmp83$i = 0, $cmp9$i$i = 0, $cmp9$i249$i = 0, $cmp94$i = 0, $cond89$i = 0, $conv$i$us$i = 0, $conv$i117$i = 0, $conv$i153$i = 0, $conv$i197$us$i = 0, $conv$i293$i = 0, $conv$i338$i = 0, $conv$i379$i = 0, $conv$i420$i = 0;
 var $conv$i461$i = 0, $conv$i512$us$i = 0, $conv14$i$i = 0, $conv14$i1010$i = 0, $conv14$i1037$i = 0, $conv14$i1064$i = 0, $conv14$i1091$i = 0, $conv14$i1118$i = 0, $conv14$i1145$i = 0, $conv14$i1172$i = 0, $conv14$i1199$i = 0, $conv14$i1226$i = 0, $conv14$i1253$i = 0, $conv14$i1280$i = 0, $conv14$i1307$i = 0, $conv14$i1334$1$i = 0, $conv14$i1334$2$i = 0, $conv14$i1334$3$i = 0, $conv14$i1334$i = 0, $conv14$i1361$i = 0;
 var $conv14$i1388$i = 0, $conv14$i1415$i = 0, $conv14$i1465$i = 0, $conv14$i1492$i = 0, $conv14$i1519$i = 0, $conv14$i1546$i = 0, $conv14$i1573$i = 0, $conv14$i1600$i = 0, $conv14$i1627$i = 0, $conv14$i1654$i = 0, $conv14$i1681$i = 0, $conv14$i1708$i = 0, $conv14$i1735$i = 0, $conv14$i1762$i = 0, $conv14$i198$i = 0, $conv14$i223$i = 0, $conv14$i248$i = 0, $conv14$i273$i = 0, $conv14$i298$i = 0, $conv14$i323$i = 0;
 var $conv14$i348$i = 0, $conv14$i373$i = 0, $conv14$i419$i = 0, $conv14$i444$i = 0, $conv14$i469$i = 0, $conv14$i494$i = 0, $conv14$i519$i = 0, $conv14$i544$i = 0, $conv14$i569$i = 0, $conv14$i594$i = 0, $conv14$i619$i = 0, $conv14$i644$i = 0, $conv14$i669$i = 0, $conv14$i694$i = 0, $conv14$i719$i = 0, $conv14$i744$i = 0, $conv14$i771$i = 0, $conv14$i798$i = 0, $conv14$i825$i = 0, $conv14$i852$i = 0;
 var $conv14$i879$i = 0, $conv14$i906$i = 0, $conv14$i933$i = 0, $conv14$i960$i = 0, $conv18$i$us$i = 0, $conv18$i155$i = 0, $conv18$i199$us$i = 0, $conv18$i340$i = 0, $conv18$i381$i = 0, $conv18$i422$i = 0, $conv18$i463$i = 0, $conv18$i514$us$i = 0, $conv20$i$i = 0, $conv20$i1008$i = 0, $conv20$i1035$i = 0, $conv20$i1062$i = 0, $conv20$i1089$i = 0, $conv20$i1116$i = 0, $conv20$i1143$i = 0, $conv20$i1170$i = 0;
 var $conv20$i1197$i = 0, $conv20$i1224$i = 0, $conv20$i1251$i = 0, $conv20$i1278$i = 0, $conv20$i1305$i = 0, $conv20$i1332$1$i = 0, $conv20$i1332$2$i = 0, $conv20$i1332$3$i = 0, $conv20$i1332$i = 0, $conv20$i1359$i = 0, $conv20$i1386$i = 0, $conv20$i1413$i = 0, $conv20$i1463$i = 0, $conv20$i1490$i = 0, $conv20$i1517$i = 0, $conv20$i1544$i = 0, $conv20$i1571$i = 0, $conv20$i1598$i = 0, $conv20$i1625$i = 0, $conv20$i1652$i = 0;
 var $conv20$i1679$i = 0, $conv20$i1706$i = 0, $conv20$i1733$i = 0, $conv20$i1760$i = 0, $conv20$i196$i = 0, $conv20$i221$i = 0, $conv20$i246$i = 0, $conv20$i271$i = 0, $conv20$i296$i = 0, $conv20$i321$i = 0, $conv20$i346$i = 0, $conv20$i371$i = 0, $conv20$i417$i = 0, $conv20$i442$i = 0, $conv20$i467$i = 0, $conv20$i492$i = 0, $conv20$i517$i = 0, $conv20$i542$i = 0, $conv20$i567$i = 0, $conv20$i592$i = 0;
 var $conv20$i617$i = 0, $conv20$i642$i = 0, $conv20$i667$i = 0, $conv20$i692$i = 0, $conv20$i717$i = 0, $conv20$i742$i = 0, $conv20$i769$i = 0, $conv20$i796$i = 0, $conv20$i823$i = 0, $conv20$i850$i = 0, $conv20$i877$i = 0, $conv20$i904$i = 0, $conv20$i931$i = 0, $conv20$i958$i = 0, $conv48$i$i = 0, $conv48$i296$i = 0, $conv51$i$i = 0, $conv51$i297$i = 0, $copyright$i = 0, $count1$i$i = 0;
 var $count1$i234$i = 0, $count1table_select$i = 0, $count1table_select$i$i = 0, $count1table_select$i231$i = 0, $count1table_select177$i = 0, $data_bits$0$lcssa$i = 0, $data_bits$0529$i = 0, $data_bits$0529$us$i = 0, $data_bits$1$i = 0, $data_bits$1$us$i = 0, $data_bits$2$lcssa$i = 0, $data_bits$2533$i = 0, $data_bits$2533$us$i = 0, $data_bits$3$i = 0, $data_bits$3$us$i = 0, $data_bits$4$i = 0, $dec$i$i = 0, $dec$i299$i = 0, $div = 0, $div$i$i = 0;
 var $div$i$i$i = 0, $div$i54 = 0, $div$i69 = 0, $div113$i = 0, $div48$i$i = 0, $div48$i237$i = 0, $emphasis$i = 0, $error_protection$i = 0, $exitcond = 0, $exitcond$i = 0, $exitcond$i68 = 0, $exitcond103 = 0, $exitcond104 = 0, $exitcond573$i = 0, $exitcond574$i = 0, $exitcond575$i = 0, $extension$i = 0, $flushbits$0$i = 0, $global_gain$i = 0, $global_gain114$i = 0;
 var $gr$01780$i = 0, $gr$0543$i = 0, $h_ptr$i47 = 0, $hlen$i$i = 0, $hlen$i241$i = 0, $huffbits$0$i$i = 0, $huffbits$0$i252$i = 0, $huffbits$1$i$i = 0, $huffbits$1$i264$i = 0, $huffbits$2$i$i = 0, $huffbits$2$i276$i = 0, $huffbits$3$i$i = 0, $huffbits$3$i288$i = 0, $i$044$i$i = 0, $i$044$i246$i = 0, $i$0555$i = 0, $i$090 = 0, $i$1546$us$i = 0, $inc = 0, $inc$i = 0;
 var $inc$i$us$i = 0, $inc$i131$i = 0, $inc$i175$us$i = 0, $inc$i316$i = 0, $inc$i357$i = 0, $inc$i398$i = 0, $inc$i439$i = 0, $inc$i490$us$i = 0, $inc$us$i = 0, $inc106$i = 0, $inc107$i = 0, $inc110$i = 0, $inc138$us$i = 0, $inc139$us$i = 0, $inc142$i = 0, $inc152$i = 0, $inc179$i = 0, $inc19$i$i = 0, $inc19$i262$i = 0, $inc26$i = 0;
 var $inc30$i$i = 0, $inc30$i274$i = 0, $inc31$i = 0, $inc31$us$i = 0, $inc36$i$i = 0, $inc36$i281$i = 0, $inc41$i$i = 0, $inc41$i286$i = 0, $inc43$i = 0, $inc46$i = 0, $inc92$i = 0, $inc95$i = 0, $ix$046$i$i = 0, $ix$046$i244$i = 0, $j$addr$0$$i$us$i = 0, $j$addr$0$$i147$i = 0, $j$addr$0$$i191$us$i = 0, $j$addr$0$$i332$i = 0, $j$addr$0$$i373$i = 0, $j$addr$0$$i414$i = 0;
 var $j$addr$0$$i455$i = 0, $j$addr$0$$i506$us$i = 0, $j$addr$0$sub$i$i = 0, $j$addr$0$sub$i1001$i = 0, $j$addr$0$sub$i1028$i = 0, $j$addr$0$sub$i1055$i = 0, $j$addr$0$sub$i1082$i = 0, $j$addr$0$sub$i1109$i = 0, $j$addr$0$sub$i1136$i = 0, $j$addr$0$sub$i1163$i = 0, $j$addr$0$sub$i1190$i = 0, $j$addr$0$sub$i1217$i = 0, $j$addr$0$sub$i1244$i = 0, $j$addr$0$sub$i1271$i = 0, $j$addr$0$sub$i1298$i = 0, $j$addr$0$sub$i1325$1$i = 0, $j$addr$0$sub$i1325$2$i = 0, $j$addr$0$sub$i1325$3$i = 0, $j$addr$0$sub$i1325$i = 0, $j$addr$0$sub$i1352$i = 0;
 var $j$addr$0$sub$i1379$i = 0, $j$addr$0$sub$i1406$i = 0, $j$addr$0$sub$i1433$i = 0, $j$addr$0$sub$i1456$i = 0, $j$addr$0$sub$i1483$i = 0, $j$addr$0$sub$i1510$i = 0, $j$addr$0$sub$i1537$i = 0, $j$addr$0$sub$i1564$i = 0, $j$addr$0$sub$i1591$i = 0, $j$addr$0$sub$i1618$i = 0, $j$addr$0$sub$i1645$i = 0, $j$addr$0$sub$i1672$i = 0, $j$addr$0$sub$i1699$i = 0, $j$addr$0$sub$i1726$i = 0, $j$addr$0$sub$i1753$i = 0, $j$addr$0$sub$i189$i = 0, $j$addr$0$sub$i214$i = 0, $j$addr$0$sub$i239$i = 0, $j$addr$0$sub$i264$i = 0, $j$addr$0$sub$i289$i = 0;
 var $j$addr$0$sub$i314$i = 0, $j$addr$0$sub$i339$i = 0, $j$addr$0$sub$i364$i = 0, $j$addr$0$sub$i389$i = 0, $j$addr$0$sub$i410$i = 0, $j$addr$0$sub$i435$i = 0, $j$addr$0$sub$i460$i = 0, $j$addr$0$sub$i485$i = 0, $j$addr$0$sub$i510$i = 0, $j$addr$0$sub$i535$i = 0, $j$addr$0$sub$i560$i = 0, $j$addr$0$sub$i585$i = 0, $j$addr$0$sub$i610$i = 0, $j$addr$0$sub$i635$i = 0, $j$addr$0$sub$i660$i = 0, $j$addr$0$sub$i685$i = 0, $j$addr$0$sub$i710$i = 0, $j$addr$0$sub$i735$i = 0, $j$addr$0$sub$i762$i = 0, $j$addr$0$sub$i789$i = 0;
 var $j$addr$0$sub$i816$i = 0, $j$addr$0$sub$i843$i = 0, $j$addr$0$sub$i870$i = 0, $j$addr$0$sub$i897$i = 0, $j$addr$0$sub$i924$i = 0, $j$addr$0$sub$i951$i = 0, $j$addr$0$sub$i978$i = 0, $j$addr$023$i$i = 0, $j$addr$023$i1023$i = 0, $j$addr$023$i1050$i = 0, $j$addr$023$i1077$i = 0, $j$addr$023$i1104$i = 0, $j$addr$023$i1131$i = 0, $j$addr$023$i1158$i = 0, $j$addr$023$i1185$i = 0, $j$addr$023$i1212$i = 0, $j$addr$023$i1239$i = 0, $j$addr$023$i1266$i = 0, $j$addr$023$i1293$i = 0, $j$addr$023$i1320$1$i = 0;
 var $j$addr$023$i1320$2$i = 0, $j$addr$023$i1320$3$i = 0, $j$addr$023$i1320$i = 0, $j$addr$023$i1347$i = 0, $j$addr$023$i1374$i = 0, $j$addr$023$i1401$i = 0, $j$addr$023$i1428$i = 0, $j$addr$023$i1451$i = 0, $j$addr$023$i1478$i = 0, $j$addr$023$i1505$i = 0, $j$addr$023$i1532$i = 0, $j$addr$023$i1559$i = 0, $j$addr$023$i1586$i = 0, $j$addr$023$i1613$i = 0, $j$addr$023$i1640$i = 0, $j$addr$023$i1667$i = 0, $j$addr$023$i1694$i = 0, $j$addr$023$i1721$i = 0, $j$addr$023$i1748$i = 0, $j$addr$023$i184$i = 0;
 var $j$addr$023$i209$i = 0, $j$addr$023$i234$i = 0, $j$addr$023$i259$i = 0, $j$addr$023$i284$i = 0, $j$addr$023$i309$i = 0, $j$addr$023$i334$i = 0, $j$addr$023$i359$i = 0, $j$addr$023$i384$i = 0, $j$addr$023$i405$i = 0, $j$addr$023$i430$i = 0, $j$addr$023$i455$i = 0, $j$addr$023$i480$i = 0, $j$addr$023$i505$i = 0, $j$addr$023$i530$i = 0, $j$addr$023$i555$i = 0, $j$addr$023$i580$i = 0, $j$addr$023$i605$i = 0, $j$addr$023$i630$i = 0, $j$addr$023$i655$i = 0, $j$addr$023$i680$i = 0;
 var $j$addr$023$i705$i = 0, $j$addr$023$i730$i = 0, $j$addr$023$i757$i = 0, $j$addr$023$i784$i = 0, $j$addr$023$i811$i = 0, $j$addr$023$i838$i = 0, $j$addr$023$i865$i = 0, $j$addr$023$i892$i = 0, $j$addr$023$i919$i = 0, $j$addr$023$i946$i = 0, $j$addr$023$i973$i = 0, $j$addr$023$i996$i = 0, $j$addr$026$i$us$i = 0, $j$addr$026$i128$i = 0, $j$addr$026$i172$us$i = 0, $j$addr$026$i313$i = 0, $j$addr$026$i354$i = 0, $j$addr$026$i395$i = 0, $j$addr$026$i436$i = 0, $j$addr$026$i487$us$i = 0;
 var $lnot$ext$i = 0, $lnot$i = 0, $main_data_begin$i = 0, $mixed_block_flag$i = 0, $mixed_block_flag120$i = 0, $mode$i = 0, $mode_ext$i = 0, $mul = 0, $mul$i = 0, $mul$i$i = 0, $mul$i$i$i = 0, $mul$i$i$us$i = 0, $mul$i$i138$i = 0, $mul$i$i182$us$i = 0, $mul$i$i323$i = 0, $mul$i$i364$i = 0, $mul$i$i405$i = 0, $mul$i$i446$i = 0, $mul$i$i497$us$i = 0, $mul$i$i75 = 0;
 var $mul$i205$i = 0, $mul$i258$i = 0, $mul$i469$i = 0, $mul$i70 = 0, $mul1$i$i = 0, $mul1$i$i$i = 0, $mul103$i = 0, $mul12$i = 0, $mul19 = 0, $mul26 = 0, $mul26$i$i = 0, $mul26$i270$i = 0, $mul3$i$i = 0, $mul3$i$i$i = 0, $mul37$i$i = 0, $mul37$i282$i = 0, $mul9 = 0, $or$i$i = 0, $or$i$us$i = 0, $or$i1009$i = 0;
 var $or$i1036$i = 0, $or$i1063$i = 0, $or$i1090$i = 0, $or$i1117$i = 0, $or$i1144$i = 0, $or$i1171$i = 0, $or$i1198$i = 0, $or$i1225$i = 0, $or$i1252$i = 0, $or$i1279$i = 0, $or$i1306$i = 0, $or$i1333$1$i = 0, $or$i1333$2$i = 0, $or$i1333$3$i = 0, $or$i1333$i = 0, $or$i1360$i = 0, $or$i1387$i = 0, $or$i1414$i = 0, $or$i1464$i = 0, $or$i1491$i = 0;
 var $or$i1518$i = 0, $or$i154$i = 0, $or$i1545$i = 0, $or$i1572$i = 0, $or$i1599$i = 0, $or$i1626$i = 0, $or$i1653$i = 0, $or$i1680$i = 0, $or$i1707$i = 0, $or$i1734$i = 0, $or$i1761$i = 0, $or$i197$i = 0, $or$i198$us$i = 0, $or$i222$i = 0, $or$i247$i = 0, $or$i272$i = 0, $or$i297$i = 0, $or$i322$i = 0, $or$i339$i = 0, $or$i347$i = 0;
 var $or$i372$i = 0, $or$i380$i = 0, $or$i418$i = 0, $or$i421$i = 0, $or$i443$i = 0, $or$i462$i = 0, $or$i468$i = 0, $or$i493$i = 0, $or$i513$us$i = 0, $or$i518$i = 0, $or$i543$i = 0, $or$i568$i = 0, $or$i593$i = 0, $or$i618$i = 0, $or$i643$i = 0, $or$i668$i = 0, $or$i693$i = 0, $or$i718$i = 0, $or$i743$i = 0, $or$i770$i = 0;
 var $or$i797$i = 0, $or$i824$i = 0, $or$i851$i = 0, $or$i878$i = 0, $or$i905$i = 0, $or$i932$i = 0, $or$i959$i = 0, $original$i = 0, $p$0$i$i = 0, $p$0$i253$i = 0, $p$1$i$i = 0, $p$1$i265$i = 0, $p$2$i$i = 0, $p$2$i277$i = 0, $p$3$i$i = 0, $p$3$i289$i = 0, $padding$i = 0, $part2_3_length$i = 0, $part2_3_length109$i = 0, $part2_length$i = 0;
 var $part2_length110$i = 0, $preflag$i = 0, $private_bits$i = 0, $private_bits99$i = 0, $ptr$022$i$i = 0, $ptr$022$i1024$i = 0, $ptr$022$i1051$i = 0, $ptr$022$i1078$i = 0, $ptr$022$i1105$i = 0, $ptr$022$i1132$i = 0, $ptr$022$i1159$i = 0, $ptr$022$i1186$i = 0, $ptr$022$i1213$i = 0, $ptr$022$i1240$i = 0, $ptr$022$i1267$i = 0, $ptr$022$i1294$i = 0, $ptr$022$i1321$1$i = 0, $ptr$022$i1321$2$i = 0, $ptr$022$i1321$3$i = 0, $ptr$022$i1321$i = 0;
 var $ptr$022$i1348$i = 0, $ptr$022$i1375$i = 0, $ptr$022$i1402$i = 0, $ptr$022$i1429$i = 0, $ptr$022$i1452$i = 0, $ptr$022$i1479$i = 0, $ptr$022$i1506$i = 0, $ptr$022$i1533$i = 0, $ptr$022$i1560$i = 0, $ptr$022$i1587$i = 0, $ptr$022$i1614$i = 0, $ptr$022$i1641$i = 0, $ptr$022$i1668$i = 0, $ptr$022$i1695$i = 0, $ptr$022$i1722$i = 0, $ptr$022$i1749$i = 0, $ptr$022$i185$i = 0, $ptr$022$i210$i = 0, $ptr$022$i235$i = 0, $ptr$022$i260$i = 0;
 var $ptr$022$i285$i = 0, $ptr$022$i310$i = 0, $ptr$022$i335$i = 0, $ptr$022$i360$i = 0, $ptr$022$i385$i = 0, $ptr$022$i406$i = 0, $ptr$022$i431$i = 0, $ptr$022$i456$i = 0, $ptr$022$i481$i = 0, $ptr$022$i506$i = 0, $ptr$022$i531$i = 0, $ptr$022$i556$i = 0, $ptr$022$i581$i = 0, $ptr$022$i606$i = 0, $ptr$022$i631$i = 0, $ptr$022$i656$i = 0, $ptr$022$i681$i = 0, $ptr$022$i706$i = 0, $ptr$022$i731$i = 0, $ptr$022$i758$i = 0;
 var $ptr$022$i785$i = 0, $ptr$022$i812$i = 0, $ptr$022$i839$i = 0, $ptr$022$i866$i = 0, $ptr$022$i893$i = 0, $ptr$022$i920$i = 0, $ptr$022$i947$i = 0, $ptr$022$i974$i = 0, $ptr$022$i997$i = 0, $ptr$i = 0, $ptr1$i$i = 0, $ptr1$i1076$phi$trans$insert$i = 0, $ptr1$i1103$phi$trans$insert$i = 0, $ptr1$i1292$phi$trans$insert$i = 0, $ptr1$i308$phi$trans$insert$i = 0, $ptr1$i333$phi$trans$insert$i = 0, $ptr1$i358$phi$trans$insert$i = 0, $ptr1$i479$phi$trans$insert$i = 0, $ptr1$i504$phi$trans$insert$i = 0, $ptr1$i891$phi$trans$insert$i = 0;
 var $ptr1$i918$phi$trans$insert$i = 0, $ptr1$i945$phi$trans$insert$i = 0, $ptr18$i1046$i = 0, $ptr18$i1073$i = 0, $ptr18$i1100$i = 0, $ptr18$i1127$i = 0, $ptr18$i1154$i = 0, $ptr18$i1181$i = 0, $ptr18$i1208$i = 0, $ptr18$i1235$i = 0, $ptr18$i1262$i = 0, $ptr18$i1289$i = 0, $ptr18$i1316$i = 0, $ptr18$i1343$1$i = 0, $ptr18$i1343$2$i = 0, $ptr18$i1343$3$i = 0, $ptr18$i1343$i = 0, $ptr18$i1370$i = 0, $ptr18$i1424$i = 0, $ptr18$i1474$i = 0;
 var $ptr18$i1501$i = 0, $ptr18$i1528$i = 0, $ptr18$i1555$i = 0, $ptr18$i1582$i = 0, $ptr18$i1609$i = 0, $ptr18$i1636$i = 0, $ptr18$i1663$i = 0, $ptr18$i1690$i = 0, $ptr18$i1717$i = 0, $ptr18$i1744$i = 0, $ptr18$i1771$i = 0, $ptr18$i205$i = 0, $ptr18$i230$i = 0, $ptr18$i255$i = 0, $ptr18$i280$i = 0, $ptr18$i305$i = 0, $ptr18$i330$i = 0, $ptr18$i355$i = 0, $ptr18$i380$i = 0, $ptr18$i451$i = 0;
 var $ptr18$i476$i = 0, $ptr18$i501$i = 0, $ptr18$i526$i = 0, $ptr18$i551$i = 0, $ptr18$i576$i = 0, $ptr18$i601$i = 0, $ptr18$i626$i = 0, $ptr18$i651$i = 0, $ptr18$i676$i = 0, $ptr18$i701$i = 0, $ptr18$i726$i = 0, $ptr18$i753$i = 0, $ptr18$i780$i = 0, $ptr18$i807$i = 0, $ptr18$i834$i = 0, $ptr18$i861$i = 0, $ptr18$i888$i = 0, $ptr18$i915$i = 0, $ptr18$i942$i = 0, $ptr18$i969$i = 0;
 var $region0_count$i = 0, $region0_count$i$i = 0, $region0_count$i212$i = 0, $region0_count173$i = 0, $region1_count$i = 0, $region1_count$i$i = 0, $region1_count$i215$i = 0, $region1_count174$i = 0, $region2Start$0$i$i = 0, $region2Start$0$i222$i = 0, $rem = 0, $resvDrain_post = 0, $resvDrain_pre = 0, $samplerate_index$i = 0, $scale_bits$0561$i = 0, $scale_bits$1$lcssa$i = 0, $scale_bits$1556$i = 0, $scale_bits$2552$i = 0, $scale_bits$3$lcssa$i = 0, $scale_bits$4$i = 0;
 var $scalefac_compress$i = 0, $scalefac_compress$i61 = 0, $scalefac_compress115$i = 0, $scalefac_scale$i = 0, $scalefac_scale176$i = 0, $sfb$0$lcssa$i = 0, $sfb$0530$i = 0, $sfb$0530$us$i = 0, $sfb$1534$i = 0, $sfb$1534$us$i = 0, $sfb$2562$i = 0, $sfb$3$lcssa$i = 0, $sfb$3557$i = 0, $sfb$4553$i = 0, $sfb$5$lcssa$i = 0, $sfb$5548$us$i = 0, $sfb_partition$0560$i = 0, $sfb_partition$1551$i = 0, $sfb_partition_table$i = 0, $sfbdivide$i = 0;
 var $sfbmax$i = 0, $shl$i$i = 0, $shl$i$us$i = 0, $shl$i1005$i = 0, $shl$i1032$i = 0, $shl$i1059$i = 0, $shl$i1086$i = 0, $shl$i1113$i = 0, $shl$i1140$i = 0, $shl$i1167$i = 0, $shl$i1194$i = 0, $shl$i1221$i = 0, $shl$i1248$i = 0, $shl$i1275$i = 0, $shl$i1302$i = 0, $shl$i1329$1$i = 0, $shl$i1329$2$i = 0, $shl$i1329$3$i = 0, $shl$i1329$i = 0, $shl$i1356$i = 0;
 var $shl$i1383$i = 0, $shl$i1410$i = 0, $shl$i1460$i = 0, $shl$i1487$i = 0, $shl$i151$i = 0, $shl$i1514$i = 0, $shl$i1541$i = 0, $shl$i1568$i = 0, $shl$i1595$i = 0, $shl$i1622$i = 0, $shl$i1649$i = 0, $shl$i1676$i = 0, $shl$i1703$i = 0, $shl$i1730$i = 0, $shl$i1757$i = 0, $shl$i193$i = 0, $shl$i195$us$i = 0, $shl$i218$i = 0, $shl$i243$i = 0, $shl$i268$i = 0;
 var $shl$i293$i = 0, $shl$i318$i = 0, $shl$i336$i = 0, $shl$i343$i = 0, $shl$i368$i = 0, $shl$i377$i = 0, $shl$i414$i = 0, $shl$i418$i = 0, $shl$i439$i = 0, $shl$i459$i = 0, $shl$i464$i = 0, $shl$i489$i = 0, $shl$i510$us$i = 0, $shl$i514$i = 0, $shl$i539$i = 0, $shl$i564$i = 0, $shl$i589$i = 0, $shl$i614$i = 0, $shl$i639$i = 0, $shl$i664$i = 0;
 var $shl$i689$i = 0, $shl$i714$i = 0, $shl$i739$i = 0, $shl$i766$i = 0, $shl$i793$i = 0, $shl$i820$i = 0, $shl$i847$i = 0, $shl$i874$i = 0, $shl$i901$i = 0, $shl$i928$i = 0, $shl$i955$i = 0, $shr$i$i = 0, $shr$i$us$i = 0, $shr$i1003$i = 0, $shr$i1030$i = 0, $shr$i1057$i = 0, $shr$i1084$i = 0, $shr$i1111$i = 0, $shr$i1138$i = 0, $shr$i1165$i = 0;
 var $shr$i1192$i = 0, $shr$i1219$i = 0, $shr$i1246$i = 0, $shr$i1273$i = 0, $shr$i1300$i = 0, $shr$i1327$1$i = 0, $shr$i1327$2$i = 0, $shr$i1327$3$i = 0, $shr$i1327$i = 0, $shr$i1354$i = 0, $shr$i1381$i = 0, $shr$i1408$i = 0, $shr$i1458$i = 0, $shr$i1485$i = 0, $shr$i150$i = 0, $shr$i1512$i = 0, $shr$i1539$i = 0, $shr$i1566$i = 0, $shr$i1593$i = 0, $shr$i1620$i = 0;
 var $shr$i1647$i = 0, $shr$i1674$i = 0, $shr$i1701$i = 0, $shr$i1728$i = 0, $shr$i1755$i = 0, $shr$i191$i = 0, $shr$i194$us$i = 0, $shr$i216$i = 0, $shr$i241$i = 0, $shr$i266$i = 0, $shr$i291$i = 0, $shr$i316$i = 0, $shr$i335$i = 0, $shr$i341$i = 0, $shr$i366$i = 0, $shr$i376$i = 0, $shr$i412$i = 0, $shr$i417$i = 0, $shr$i437$i = 0, $shr$i458$i = 0;
 var $shr$i462$i = 0, $shr$i487$i = 0, $shr$i509$us$i = 0, $shr$i512$i = 0, $shr$i537$i = 0, $shr$i562$i = 0, $shr$i587$i = 0, $shr$i612$i = 0, $shr$i637$i = 0, $shr$i662$i = 0, $shr$i687$i = 0, $shr$i712$i = 0, $shr$i737$i = 0, $shr$i764$i = 0, $shr$i791$i = 0, $shr$i818$i = 0, $shr$i845$i = 0, $shr$i872$i = 0, $shr$i899$i = 0, $shr$i926$i = 0;
 var $shr$i953$i = 0, $shr12$i$i = 0, $shr12$i1006$i = 0, $shr12$i1033$i = 0, $shr12$i1060$i = 0, $shr12$i1087$i = 0, $shr12$i1114$i = 0, $shr12$i1141$i = 0, $shr12$i1168$i = 0, $shr12$i1195$i = 0, $shr12$i1222$i = 0, $shr12$i1249$i = 0, $shr12$i1276$i = 0, $shr12$i1303$i = 0, $shr12$i1330$1$i = 0, $shr12$i1330$2$i = 0, $shr12$i1330$3$i = 0, $shr12$i1330$i = 0, $shr12$i1357$i = 0, $shr12$i1384$i = 0;
 var $shr12$i1411$i = 0, $shr12$i1461$i = 0, $shr12$i1488$i = 0, $shr12$i1515$i = 0, $shr12$i1542$i = 0, $shr12$i1569$i = 0, $shr12$i1596$i = 0, $shr12$i1623$i = 0, $shr12$i1650$i = 0, $shr12$i1677$i = 0, $shr12$i1704$i = 0, $shr12$i1731$i = 0, $shr12$i1758$i = 0, $shr12$i194$i = 0, $shr12$i219$i = 0, $shr12$i244$i = 0, $shr12$i269$i = 0, $shr12$i294$i = 0, $shr12$i319$i = 0, $shr12$i344$i = 0;
 var $shr12$i369$i = 0, $shr12$i415$i = 0, $shr12$i440$i = 0, $shr12$i465$i = 0, $shr12$i490$i = 0, $shr12$i515$i = 0, $shr12$i540$i = 0, $shr12$i565$i = 0, $shr12$i590$i = 0, $shr12$i615$i = 0, $shr12$i640$i = 0, $shr12$i665$i = 0, $shr12$i690$i = 0, $shr12$i715$i = 0, $shr12$i740$i = 0, $shr12$i767$i = 0, $shr12$i794$i = 0, $shr12$i821$i = 0, $shr12$i848$i = 0, $shr12$i875$i = 0;
 var $shr12$i902$i = 0, $shr12$i929$i = 0, $shr12$i956$i = 0, $sideinfo_len$i48 = 0, $sub = 0, $sub$i = 0, $sub$i$i = 0, $sub$i$us$i = 0, $sub$i1026$i = 0, $sub$i1053$i = 0, $sub$i1080$i = 0, $sub$i1107$i = 0, $sub$i1134$i = 0, $sub$i115$i = 0, $sub$i1161$i = 0, $sub$i1188$i = 0, $sub$i1215$i = 0, $sub$i1242$i = 0, $sub$i1269$i = 0, $sub$i1296$i = 0;
 var $sub$i1323$1$i = 0, $sub$i1323$2$i = 0, $sub$i1323$3$i = 0, $sub$i1323$i = 0, $sub$i1350$i = 0, $sub$i1377$i = 0, $sub$i1404$i = 0, $sub$i1431$i = 0, $sub$i1454$i = 0, $sub$i148$i = 0, $sub$i1481$i = 0, $sub$i1508$i = 0, $sub$i1535$i = 0, $sub$i1562$i = 0, $sub$i1589$i = 0, $sub$i1616$i = 0, $sub$i1643$i = 0, $sub$i1670$i = 0, $sub$i1697$i = 0, $sub$i1724$i = 0;
 var $sub$i1751$i = 0, $sub$i187$i = 0, $sub$i192$us$i = 0, $sub$i212$i = 0, $sub$i235$i = 0, $sub$i237$i = 0, $sub$i262$i = 0, $sub$i287$i = 0, $sub$i312$i = 0, $sub$i333$i = 0, $sub$i337$i = 0, $sub$i362$i = 0, $sub$i374$i = 0, $sub$i387$i = 0, $sub$i408$i = 0, $sub$i415$i = 0, $sub$i433$i = 0, $sub$i456$i = 0, $sub$i458$i = 0, $sub$i483$i = 0;
 var $sub$i507$us$i = 0, $sub$i508$i = 0, $sub$i533$i = 0, $sub$i558$i = 0, $sub$i583$i = 0, $sub$i608$i = 0, $sub$i633$i = 0, $sub$i658$i = 0, $sub$i683$i = 0, $sub$i708$i = 0, $sub$i733$i = 0, $sub$i760$i = 0, $sub$i787$i = 0, $sub$i814$i = 0, $sub$i841$i = 0, $sub$i868$i = 0, $sub$i895$i = 0, $sub$i922$i = 0, $sub$i949$i = 0, $sub$i976$i = 0;
 var $sub$i999$i = 0, $sub13$i = 0, $sub13$i$us$i = 0, $sub13$i149$i = 0, $sub13$i193$us$i = 0, $sub13$i334$i = 0, $sub13$i375$i = 0, $sub13$i416$i = 0, $sub13$i457$i = 0, $sub13$i508$us$i = 0, $sub2$i = 0, $sub21 = 0, $sub24 = 0, $sub34 = 0, $sub5$i = 0, $sub5$i$i = 0, $sub5$i1002$i = 0, $sub5$i1029$i = 0, $sub5$i1056$i = 0, $sub5$i1083$i = 0;
 var $sub5$i1110$i = 0, $sub5$i1137$i = 0, $sub5$i1164$i = 0, $sub5$i1191$i = 0, $sub5$i1218$i = 0, $sub5$i1245$i = 0, $sub5$i1272$i = 0, $sub5$i1299$i = 0, $sub5$i1326$1$i = 0, $sub5$i1326$2$i = 0, $sub5$i1326$3$i = 0, $sub5$i1326$i = 0, $sub5$i1353$i = 0, $sub5$i1380$i = 0, $sub5$i1407$i = 0, $sub5$i1434$i = 0, $sub5$i1457$i = 0, $sub5$i1484$i = 0, $sub5$i1511$i = 0, $sub5$i1538$i = 0;
 var $sub5$i1565$i = 0, $sub5$i1592$i = 0, $sub5$i1619$i = 0, $sub5$i1646$i = 0, $sub5$i1673$i = 0, $sub5$i1700$i = 0, $sub5$i1727$i = 0, $sub5$i1754$i = 0, $sub5$i190$i = 0, $sub5$i215$i = 0, $sub5$i240$i = 0, $sub5$i265$i = 0, $sub5$i290$i = 0, $sub5$i315$i = 0, $sub5$i340$i = 0, $sub5$i365$i = 0, $sub5$i390$i = 0, $sub5$i411$i = 0, $sub5$i436$i = 0, $sub5$i461$i = 0;
 var $sub5$i486$i = 0, $sub5$i511$i = 0, $sub5$i536$i = 0, $sub5$i561$i = 0, $sub5$i586$i = 0, $sub5$i611$i = 0, $sub5$i636$i = 0, $sub5$i661$i = 0, $sub5$i686$i = 0, $sub5$i711$i = 0, $sub5$i736$i = 0, $sub5$i763$i = 0, $sub5$i790$i = 0, $sub5$i817$i = 0, $sub5$i844$i = 0, $sub5$i871$i = 0, $sub5$i898$i = 0, $sub5$i925$i = 0, $sub5$i952$i = 0, $sub5$i979$i = 0;
 var $sub8$i$i = 0, $sub8$i1004$i = 0, $sub8$i1031$i = 0, $sub8$i1058$i = 0, $sub8$i1085$i = 0, $sub8$i1112$i = 0, $sub8$i1139$i = 0, $sub8$i1166$i = 0, $sub8$i1193$i = 0, $sub8$i1220$i = 0, $sub8$i1247$i = 0, $sub8$i1274$i = 0, $sub8$i1301$i = 0, $sub8$i1328$1$i = 0, $sub8$i1328$2$i = 0, $sub8$i1328$3$i = 0, $sub8$i1328$i = 0, $sub8$i1355$i = 0, $sub8$i1382$i = 0, $sub8$i1409$i = 0;
 var $sub8$i1459$i = 0, $sub8$i1486$i = 0, $sub8$i1513$i = 0, $sub8$i1540$i = 0, $sub8$i1567$i = 0, $sub8$i1594$i = 0, $sub8$i1621$i = 0, $sub8$i1648$i = 0, $sub8$i1675$i = 0, $sub8$i1702$i = 0, $sub8$i1729$i = 0, $sub8$i1756$i = 0, $sub8$i192$i = 0, $sub8$i217$i = 0, $sub8$i242$i = 0, $sub8$i267$i = 0, $sub8$i292$i = 0, $sub8$i317$i = 0, $sub8$i342$i = 0, $sub8$i367$i = 0;
 var $sub8$i413$i = 0, $sub8$i438$i = 0, $sub8$i463$i = 0, $sub8$i488$i = 0, $sub8$i513$i = 0, $sub8$i538$i = 0, $sub8$i563$i = 0, $sub8$i588$i = 0, $sub8$i613$i = 0, $sub8$i638$i = 0, $sub8$i663$i = 0, $sub8$i688$i = 0, $sub8$i713$i = 0, $sub8$i738$i = 0, $sub8$i765$i = 0, $sub8$i792$i = 0, $sub8$i819$i = 0, $sub8$i846$i = 0, $sub8$i873$i = 0, $sub8$i900$i = 0;
 var $sub8$i927$i = 0, $sub8$i954$i = 0, $table$i$i = 0, $table$i240$i = 0, $tobool$i = 0, $tobool$i$i = 0, $tobool$i$i74 = 0, $tobool$i247$i = 0, $tobool13$i$i = 0, $tobool13$i255$i = 0, $tobool183$i = 0, $tobool23$i$i = 0, $tobool23$i267$i = 0, $tobool34$i$i = 0, $tobool34$i279$i = 0, $tobool7$i = 0, $tot_bits$0542$i = 0, $tot_bits$1$lcssa$i = 0, $tot_bits$1537$i = 0, $tot_bits$2564$i = 0;
 var $tot_bits$3$i = 0, $totbit$i$i = 0, $totbit$i$pre$phiZZ2D = 0, $totbit$i349$i = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer15 = 0, $vararg_buffer17 = 0, $vararg_buffer19 = 0, $vararg_buffer21 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr12 = 0, $vararg_ptr13 = 0, $vararg_ptr14 = 0, $vararg_ptr7 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0;
 var $version$i50 = 0, $w_ptr$i56 = 0, $write_timing = 0, $write_timing$i = 0, $write_timing$i$us$i = 0, $write_timing$i132$i = 0, $write_timing$i176$us$i = 0, $write_timing$i317$i = 0, $write_timing$i358$i = 0, $write_timing$i399$i = 0, $write_timing$i440$i = 0, $write_timing$i491$us$i = 0, $write_timing$i55 = 0, $write_timing200$i = 0, $xr$047$i$i = 0, $xr$047$i243$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0;
 $vararg_buffer21 = sp + 88|0;
 $vararg_buffer19 = sp + 80|0;
 $vararg_buffer17 = sp + 72|0;
 $vararg_buffer15 = sp + 64|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $cfg1$i = ((($gfc)) + 16|0);
 $bitrate_index$i = ((($gfc)) + 84744|0);
 $0 = HEAP32[$bitrate_index$i>>2]|0;
 $tobool$i = ($0|0)==(0);
 if ($tobool$i) {
  $avg_bitrate$i = ((($gfc)) + 120|0);
  $cfg1$idx$val$pre$i = HEAP32[$cfg1$i>>2]|0;
  $bit_rate$0$in$i = $avg_bitrate$i;$cfg1$idx$val$i = $cfg1$idx$val$pre$i;
 } else {
  $1 = HEAP32[$cfg1$i>>2]|0;
  $arrayidx3$i = ((9980 + ($1<<6)|0) + ($0<<2)|0);
  $bit_rate$0$in$i = $arrayidx3$i;$cfg1$idx$val$i = $1;
 }
 $bit_rate$0$i = HEAP32[$bit_rate$0$in$i>>2]|0;
 $padding$i = ((($gfc)) + 84752|0);
 $2 = HEAP32[$padding$i>>2]|0;
 $cfg1$idx8$i = ((($gfc)) + 64|0);
 $cfg1$idx8$val$i = HEAP32[$cfg1$idx8$i>>2]|0;
 $3 = ($cfg1$idx$val$i*72000)|0;
 $mul$i$i = (($3) + 72000)|0;
 $mul1$i$i = Math_imul($mul$i$i, $bit_rate$0$i)|0;
 $div$i$i = (($mul1$i$i|0) / ($cfg1$idx8$val$i|0))&-1;
 $add2$i$i = (($div$i$i) + ($2))|0;
 $mul3$i$i = $add2$i$i << 3;
 $resvDrain_pre = ((($gfc)) + 21320|0);
 $4 = HEAP32[$resvDrain_pre>>2]|0;
 _drain_into_ancillary($gfc,$4);
 $h_ptr$i47 = ((($gfc)) + 52128|0);
 $5 = HEAP32[$h_ptr$i47>>2]|0;
 $ptr$i = (((((($gfc)) + 39840|0) + (($5*48)|0)|0)) + 4|0);
 HEAP32[$ptr$i>>2] = 0;
 $arraydecay$i = (((((($gfc)) + 39840|0) + (($5*48)|0)|0)) + 8|0);
 $sideinfo_len$i48 = ((($gfc)) + 24|0);
 $6 = HEAP32[$sideinfo_len$i48>>2]|0;
 _memset(($arraydecay$i|0),0,($6|0))|0;
 $7 = HEAP32[$cfg1$idx8$i>>2]|0;
 $cmp$i49 = ($7|0)<(16000);
 $8 = HEAP32[$h_ptr$i47>>2]|0;
 $ptr1$i$i = (((((($gfc)) + 39840|0) + (($8*48)|0)|0)) + 4|0);
 $9 = HEAP32[$ptr1$i$i>>2]|0;
 if ($cmp$i49) {
  $10 = $8;$j$addr$023$i$i = 12;$ptr$022$i$i = $9;
  while(1) {
   $and$i$i = $ptr$022$i$i & 7;
   $sub$i$i = (8 - ($and$i$i))|0;
   $cmp2$i$i = ($j$addr$023$i$i|0)<($sub$i$i|0);
   $j$addr$0$sub$i$i = $cmp2$i$i ? $j$addr$023$i$i : $sub$i$i;
   $sub5$i$i = (($j$addr$023$i$i) - ($j$addr$0$sub$i$i))|0;
   $shr$i$i = 4094 >>> $sub5$i$i;
   $sub8$i$i = (($sub$i$i) - ($j$addr$0$sub$i$i))|0;
   $shl$i$i = $shr$i$i << $sub8$i$i;
   $shr12$i$i = $ptr$022$i$i >> 3;
   $arrayidx13$i$i = ((((((($gfc)) + 39840|0) + (($10*48)|0)|0)) + 8|0) + ($shr12$i$i)|0);
   $11 = HEAP8[$arrayidx13$i$i>>0]|0;
   $conv20$i$i = $11&255;
   $or$i$i = $shl$i$i | $conv20$i$i;
   $conv14$i$i = $or$i$i&255;
   HEAP8[$arrayidx13$i$i>>0] = $conv14$i$i;
   $add$i$i = (($j$addr$0$sub$i$i) + ($ptr$022$i$i))|0;
   $cmp$i$i = ($sub5$i$i|0)>(0);
   $$pre$i$i = HEAP32[$h_ptr$i47>>2]|0;
   if ($cmp$i$i) {
    $10 = $$pre$i$i;$j$addr$023$i$i = $sub5$i$i;$ptr$022$i$i = $add$i$i;
   } else {
    $14 = $$pre$i$i;$add$i199$sink$i = $add$i$i;
    break;
   }
  }
 } else {
  $12 = $8;$j$addr$023$i184$i = 12;$ptr$022$i185$i = $9;
  while(1) {
   $and$i186$i = $ptr$022$i185$i & 7;
   $sub$i187$i = (8 - ($and$i186$i))|0;
   $cmp2$i188$i = ($j$addr$023$i184$i|0)<($sub$i187$i|0);
   $j$addr$0$sub$i189$i = $cmp2$i188$i ? $j$addr$023$i184$i : $sub$i187$i;
   $sub5$i190$i = (($j$addr$023$i184$i) - ($j$addr$0$sub$i189$i))|0;
   $shr$i191$i = 4095 >>> $sub5$i190$i;
   $sub8$i192$i = (($sub$i187$i) - ($j$addr$0$sub$i189$i))|0;
   $shl$i193$i = $shr$i191$i << $sub8$i192$i;
   $shr12$i194$i = $ptr$022$i185$i >> 3;
   $arrayidx13$i195$i = ((((((($gfc)) + 39840|0) + (($12*48)|0)|0)) + 8|0) + ($shr12$i194$i)|0);
   $13 = HEAP8[$arrayidx13$i195$i>>0]|0;
   $conv20$i196$i = $13&255;
   $or$i197$i = $shl$i193$i | $conv20$i196$i;
   $conv14$i198$i = $or$i197$i&255;
   HEAP8[$arrayidx13$i195$i>>0] = $conv14$i198$i;
   $add$i199$i = (($j$addr$0$sub$i189$i) + ($ptr$022$i185$i))|0;
   $cmp$i200$i = ($sub5$i190$i|0)>(0);
   $$pre$i202$i = HEAP32[$h_ptr$i47>>2]|0;
   if ($cmp$i200$i) {
    $12 = $$pre$i202$i;$j$addr$023$i184$i = $sub5$i190$i;$ptr$022$i185$i = $add$i199$i;
   } else {
    $14 = $$pre$i202$i;$add$i199$sink$i = $add$i199$i;
    break;
   }
  }
 }
 $ptr18$i205$i = (((((($gfc)) + 39840|0) + (($14*48)|0)|0)) + 4|0);
 HEAP32[$ptr18$i205$i>>2] = $add$i199$sink$i;
 $version$i50 = ((($gfc)) + 16|0);
 $15 = HEAP32[$version$i50>>2]|0;
 $16 = $14;$j$addr$023$i1748$i = 1;$ptr$022$i1749$i = $add$i199$sink$i;
 while(1) {
  $and$i1750$i = $ptr$022$i1749$i & 7;
  $sub$i1751$i = (8 - ($and$i1750$i))|0;
  $cmp2$i1752$i = ($j$addr$023$i1748$i|0)<($sub$i1751$i|0);
  $j$addr$0$sub$i1753$i = $cmp2$i1752$i ? $j$addr$023$i1748$i : $sub$i1751$i;
  $sub5$i1754$i = (($j$addr$023$i1748$i) - ($j$addr$0$sub$i1753$i))|0;
  $shr$i1755$i = $15 >> $sub5$i1754$i;
  $sub8$i1756$i = (($sub$i1751$i) - ($j$addr$0$sub$i1753$i))|0;
  $shl$i1757$i = $shr$i1755$i << $sub8$i1756$i;
  $shr12$i1758$i = $ptr$022$i1749$i >> 3;
  $arrayidx13$i1759$i = ((((((($gfc)) + 39840|0) + (($16*48)|0)|0)) + 8|0) + ($shr12$i1758$i)|0);
  $17 = HEAP8[$arrayidx13$i1759$i>>0]|0;
  $conv20$i1760$i = $17&255;
  $or$i1761$i = $shl$i1757$i | $conv20$i1760$i;
  $conv14$i1762$i = $or$i1761$i&255;
  HEAP8[$arrayidx13$i1759$i>>0] = $conv14$i1762$i;
  $add$i1763$i = (($j$addr$0$sub$i1753$i) + ($ptr$022$i1749$i))|0;
  $cmp$i1764$i = ($sub5$i1754$i|0)>(0);
  $$pre$i1766$i = HEAP32[$h_ptr$i47>>2]|0;
  if ($cmp$i1764$i) {
   $16 = $$pre$i1766$i;$j$addr$023$i1748$i = $sub5$i1754$i;$ptr$022$i1749$i = $add$i1763$i;
  } else {
   break;
  }
 }
 $ptr18$i1771$i = (((((($gfc)) + 39840|0) + (($$pre$i1766$i*48)|0)|0)) + 4|0);
 HEAP32[$ptr18$i1771$i>>2] = $add$i1763$i;
 $18 = $$pre$i1766$i;$j$addr$023$i1721$i = 2;$ptr$022$i1722$i = $add$i1763$i;
 while(1) {
  $and$i1723$i = $ptr$022$i1722$i & 7;
  $sub$i1724$i = (8 - ($and$i1723$i))|0;
  $cmp2$i1725$i = ($j$addr$023$i1721$i|0)<($sub$i1724$i|0);
  $j$addr$0$sub$i1726$i = $cmp2$i1725$i ? $j$addr$023$i1721$i : $sub$i1724$i;
  $sub5$i1727$i = (($j$addr$023$i1721$i) - ($j$addr$0$sub$i1726$i))|0;
  $shr$i1728$i = 1 >>> $sub5$i1727$i;
  $sub8$i1729$i = (($sub$i1724$i) - ($j$addr$0$sub$i1726$i))|0;
  $shl$i1730$i = $shr$i1728$i << $sub8$i1729$i;
  $shr12$i1731$i = $ptr$022$i1722$i >> 3;
  $arrayidx13$i1732$i = ((((((($gfc)) + 39840|0) + (($18*48)|0)|0)) + 8|0) + ($shr12$i1731$i)|0);
  $19 = HEAP8[$arrayidx13$i1732$i>>0]|0;
  $conv20$i1733$i = $19&255;
  $or$i1734$i = $shl$i1730$i | $conv20$i1733$i;
  $conv14$i1735$i = $or$i1734$i&255;
  HEAP8[$arrayidx13$i1732$i>>0] = $conv14$i1735$i;
  $add$i1736$i = (($j$addr$0$sub$i1726$i) + ($ptr$022$i1722$i))|0;
  $cmp$i1737$i = ($sub5$i1727$i|0)>(0);
  $$pre$i1739$i = HEAP32[$h_ptr$i47>>2]|0;
  if ($cmp$i1737$i) {
   $18 = $$pre$i1739$i;$j$addr$023$i1721$i = $sub5$i1727$i;$ptr$022$i1722$i = $add$i1736$i;
  } else {
   break;
  }
 }
 $ptr18$i1744$i = (((((($gfc)) + 39840|0) + (($$pre$i1739$i*48)|0)|0)) + 4|0);
 HEAP32[$ptr18$i1744$i>>2] = $add$i1736$i;
 $error_protection$i = ((($gfc)) + 160|0);
 $20 = HEAP32[$error_protection$i>>2]|0;
 $lnot$i = ($20|0)==(0);
 $lnot$ext$i = $lnot$i&1;
 $21 = $$pre$i1739$i;$j$addr$023$i1694$i = 1;$ptr$022$i1695$i = $add$i1736$i;
 while(1) {
  $and$i1696$i = $ptr$022$i1695$i & 7;
  $sub$i1697$i = (8 - ($and$i1696$i))|0;
  $cmp2$i1698$i = ($j$addr$023$i1694$i|0)<($sub$i1697$i|0);
  $j$addr$0$sub$i1699$i = $cmp2$i1698$i ? $j$addr$023$i1694$i : $sub$i1697$i;
  $sub5$i1700$i = (($j$addr$023$i1694$i) - ($j$addr$0$sub$i1699$i))|0;
  $shr$i1701$i = $lnot$ext$i >>> $sub5$i1700$i;
  $sub8$i1702$i = (($sub$i1697$i) - ($j$addr$0$sub$i1699$i))|0;
  $shl$i1703$i = $shr$i1701$i << $sub8$i1702$i;
  $shr12$i1704$i = $ptr$022$i1695$i >> 3;
  $arrayidx13$i1705$i = ((((((($gfc)) + 39840|0) + (($21*48)|0)|0)) + 8|0) + ($shr12$i1704$i)|0);
  $22 = HEAP8[$arrayidx13$i1705$i>>0]|0;
  $conv20$i1706$i = $22&255;
  $or$i1707$i = $shl$i1703$i | $conv20$i1706$i;
  $conv14$i1708$i = $or$i1707$i&255;
  HEAP8[$arrayidx13$i1705$i>>0] = $conv14$i1708$i;
  $add$i1709$i = (($j$addr$0$sub$i1699$i) + ($ptr$022$i1695$i))|0;
  $cmp$i1710$i = ($sub5$i1700$i|0)>(0);
  $$pre$i1712$i = HEAP32[$h_ptr$i47>>2]|0;
  if ($cmp$i1710$i) {
   $21 = $$pre$i1712$i;$j$addr$023$i1694$i = $sub5$i1700$i;$ptr$022$i1695$i = $add$i1709$i;
  } else {
   break;
  }
 }
 $ptr18$i1717$i = (((((($gfc)) + 39840|0) + (($$pre$i1712$i*48)|0)|0)) + 4|0);
 HEAP32[$ptr18$i1717$i>>2] = $add$i1709$i;
 $23 = HEAP32[$bitrate_index$i>>2]|0;
 $24 = $$pre$i1712$i;$j$addr$023$i1667$i = 4;$ptr$022$i1668$i = $add$i1709$i;
 while(1) {
  $and$i1669$i = $ptr$022$i1668$i & 7;
  $sub$i1670$i = (8 - ($and$i1669$i))|0;
  $cmp2$i1671$i = ($j$addr$023$i1667$i|0)<($sub$i1670$i|0);
  $j$addr$0$sub$i1672$i = $cmp2$i1671$i ? $j$addr$023$i1667$i : $sub$i1670$i;
  $sub5$i1673$i = (($j$addr$023$i1667$i) - ($j$addr$0$sub$i1672$i))|0;
  $shr$i1674$i = $23 >> $sub5$i1673$i;
  $sub8$i1675$i = (($sub$i1670$i) - ($j$addr$0$sub$i1672$i))|0;
  $shl$i1676$i = $shr$i1674$i << $sub8$i1675$i;
  $shr12$i1677$i = $ptr$022$i1668$i >> 3;
  $arrayidx13$i1678$i = ((((((($gfc)) + 39840|0) + (($24*48)|0)|0)) + 8|0) + ($shr12$i1677$i)|0);
  $25 = HEAP8[$arrayidx13$i1678$i>>0]|0;
  $conv20$i1679$i = $25&255;
  $or$i1680$i = $shl$i1676$i | $conv20$i1679$i;
  $conv14$i1681$i = $or$i1680$i&255;
  HEAP8[$arrayidx13$i1678$i>>0] = $conv14$i1681$i;
  $add$i1682$i = (($j$addr$0$sub$i1672$i) + ($ptr$022$i1668$i))|0;
  $cmp$i1683$i = ($sub5$i1673$i|0)>(0);
  $$pre$i1685$i = HEAP32[$h_ptr$i47>>2]|0;
  if ($cmp$i1683$i) {
   $24 = $$pre$i1685$i;$j$addr$023$i1667$i = $sub5$i1673$i;$ptr$022$i1668$i = $add$i1682$i;
  } else {
   break;
  }
 }
 $ptr18$i1690$i = (((((($gfc)) + 39840|0) + (($$pre$i1685$i*48)|0)|0)) + 4|0);
 HEAP32[$ptr18$i1690$i>>2] = $add$i1682$i;
 $samplerate_index$i = ((($gfc)) + 20|0);
 $26 = HEAP32[$samplerate_index$i>>2]|0;
 $27 = $$pre$i1685$i;$j$addr$023$i1640$i = 2;$ptr$022$i1641$i = $add$i1682$i;
 while(1) {
  $and$i1642$i = $ptr$022$i1641$i & 7;
  $sub$i1643$i = (8 - ($and$i1642$i))|0;
  $cmp2$i1644$i = ($j$addr$023$i1640$i|0)<($sub$i1643$i|0);
  $j$addr$0$sub$i1645$i = $cmp2$i1644$i ? $j$addr$023$i1640$i : $sub$i1643$i;
  $sub5$i1646$i = (($j$addr$023$i1640$i) - ($j$addr$0$sub$i1645$i))|0;
  $shr$i1647$i = $26 >> $sub5$i1646$i;
  $sub8$i1648$i = (($sub$i1643$i) - ($j$addr$0$sub$i1645$i))|0;
  $shl$i1649$i = $shr$i1647$i << $sub8$i1648$i;
  $shr12$i1650$i = $ptr$022$i1641$i >> 3;
  $arrayidx13$i1651$i = ((((((($gfc)) + 39840|0) + (($27*48)|0)|0)) + 8|0) + ($shr12$i1650$i)|0);
  $28 = HEAP8[$arrayidx13$i1651$i>>0]|0;
  $conv20$i1652$i = $28&255;
  $or$i1653$i = $shl$i1649$i | $conv20$i1652$i;
  $conv14$i1654$i = $or$i1653$i&255;
  HEAP8[$arrayidx13$i1651$i>>0] = $conv14$i1654$i;
  $add$i1655$i = (($j$addr$0$sub$i1645$i) + ($ptr$022$i1641$i))|0;
  $cmp$i1656$i = ($sub5$i1646$i|0)>(0);
  $$pre$i1658$i = HEAP32[$h_ptr$i47>>2]|0;
  if ($cmp$i1656$i) {
   $27 = $$pre$i1658$i;$j$addr$023$i1640$i = $sub5$i1646$i;$ptr$022$i1641$i = $add$i1655$i;
  } else {
   break;
  }
 }
 $ptr18$i1663$i = (((((($gfc)) + 39840|0) + (($$pre$i1658$i*48)|0)|0)) + 4|0);
 HEAP32[$ptr18$i1663$i>>2] = $add$i1655$i;
 $29 = HEAP32[$padding$i>>2]|0;
 $30 = $$pre$i1658$i;$j$addr$023$i1613$i = 1;$ptr$022$i1614$i = $add$i1655$i;
 while(1) {
  $and$i1615$i = $ptr$022$i1614$i & 7;
  $sub$i1616$i = (8 - ($and$i1615$i))|0;
  $cmp2$i1617$i = ($j$addr$023$i1613$i|0)<($sub$i1616$i|0);
  $j$addr$0$sub$i1618$i = $cmp2$i1617$i ? $j$addr$023$i1613$i : $sub$i1616$i;
  $sub5$i1619$i = (($j$addr$023$i1613$i) - ($j$addr$0$sub$i1618$i))|0;
  $shr$i1620$i = $29 >> $sub5$i1619$i;
  $sub8$i1621$i = (($sub$i1616$i) - ($j$addr$0$sub$i1618$i))|0;
  $shl$i1622$i = $shr$i1620$i << $sub8$i1621$i;
  $shr12$i1623$i = $ptr$022$i1614$i >> 3;
  $arrayidx13$i1624$i = ((((((($gfc)) + 39840|0) + (($30*48)|0)|0)) + 8|0) + ($shr12$i1623$i)|0);
  $31 = HEAP8[$arrayidx13$i1624$i>>0]|0;
  $conv20$i1625$i = $31&255;
  $or$i1626$i = $shl$i1622$i | $conv20$i1625$i;
  $conv14$i1627$i = $or$i1626$i&255;
  HEAP8[$arrayidx13$i1624$i>>0] = $conv14$i1627$i;
  $add$i1628$i = (($j$addr$0$sub$i1618$i) + ($ptr$022$i1614$i))|0;
  $cmp$i1629$i = ($sub5$i1619$i|0)>(0);
  $$pre$i1631$i = HEAP32[$h_ptr$i47>>2]|0;
  if ($cmp$i1629$i) {
   $30 = $$pre$i1631$i;$j$addr$023$i1613$i = $sub5$i1619$i;$ptr$022$i1614$i = $add$i1628$i;
  } else {
   break;
  }
 }
 $ptr18$i1636$i = (((((($gfc)) + 39840|0) + (($$pre$i1631$i*48)|0)|0)) + 4|0);
 HEAP32[$ptr18$i1636$i>>2] = $add$i1628$i;
 $extension$i = ((($gfc)) + 172|0);
 $32 = HEAP32[$extension$i>>2]|0;
 $33 = $$pre$i1631$i;$j$addr$023$i1586$i = 1;$ptr$022$i1587$i = $add$i1628$i;
 while(1) {
  $and$i1588$i = $ptr$022$i1587$i & 7;
  $sub$i1589$i = (8 - ($and$i1588$i))|0;
  $cmp2$i1590$i = ($j$addr$023$i1586$i|0)<($sub$i1589$i|0);
  $j$addr$0$sub$i1591$i = $cmp2$i1590$i ? $j$addr$023$i1586$i : $sub$i1589$i;
  $sub5$i1592$i = (($j$addr$023$i1586$i) - ($j$addr$0$sub$i1591$i))|0;
  $shr$i1593$i = $32 >> $sub5$i1592$i;
  $sub8$i1594$i = (($sub$i1589$i) - ($j$addr$0$sub$i1591$i))|0;
  $shl$i1595$i = $shr$i1593$i << $sub8$i1594$i;
  $shr12$i1596$i = $ptr$022$i1587$i >> 3;
  $arrayidx13$i1597$i = ((((((($gfc)) + 39840|0) + (($33*48)|0)|0)) + 8|0) + ($shr12$i1596$i)|0);
  $34 = HEAP8[$arrayidx13$i1597$i>>0]|0;
  $conv20$i1598$i = $34&255;
  $or$i1599$i = $shl$i1595$i | $conv20$i1598$i;
  $conv14$i1600$i = $or$i1599$i&255;
  HEAP8[$arrayidx13$i1597$i>>0] = $conv14$i1600$i;
  $add$i1601$i = (($j$addr$0$sub$i1591$i) + ($ptr$022$i1587$i))|0;
  $cmp$i1602$i = ($sub5$i1592$i|0)>(0);
  $$pre$i1604$i = HEAP32[$h_ptr$i47>>2]|0;
  if ($cmp$i1602$i) {
   $33 = $$pre$i1604$i;$j$addr$023$i1586$i = $sub5$i1592$i;$ptr$022$i1587$i = $add$i1601$i;
  } else {
   break;
  }
 }
 $ptr18$i1609$i = (((((($gfc)) + 39840|0) + (($$pre$i1604$i*48)|0)|0)) + 4|0);
 HEAP32[$ptr18$i1609$i>>2] = $add$i1601$i;
 $mode$i = ((($gfc)) + 180|0);
 $35 = HEAP32[$mode$i>>2]|0;
 $36 = $$pre$i1604$i;$j$addr$023$i1559$i = 2;$ptr$022$i1560$i = $add$i1601$i;
 while(1) {
  $and$i1561$i = $ptr$022$i1560$i & 7;
  $sub$i1562$i = (8 - ($and$i1561$i))|0;
  $cmp2$i1563$i = ($j$addr$023$i1559$i|0)<($sub$i1562$i|0);
  $j$addr$0$sub$i1564$i = $cmp2$i1563$i ? $j$addr$023$i1559$i : $sub$i1562$i;
  $sub5$i1565$i = (($j$addr$023$i1559$i) - ($j$addr$0$sub$i1564$i))|0;
  $shr$i1566$i = $35 >> $sub5$i1565$i;
  $sub8$i1567$i = (($sub$i1562$i) - ($j$addr$0$sub$i1564$i))|0;
  $shl$i1568$i = $shr$i1566$i << $sub8$i1567$i;
  $shr12$i1569$i = $ptr$022$i1560$i >> 3;
  $arrayidx13$i1570$i = ((((((($gfc)) + 39840|0) + (($36*48)|0)|0)) + 8|0) + ($shr12$i1569$i)|0);
  $37 = HEAP8[$arrayidx13$i1570$i>>0]|0;
  $conv20$i1571$i = $37&255;
  $or$i1572$i = $shl$i1568$i | $conv20$i1571$i;
  $conv14$i1573$i = $or$i1572$i&255;
  HEAP8[$arrayidx13$i1570$i>>0] = $conv14$i1573$i;
  $add$i1574$i = (($j$addr$0$sub$i1564$i) + ($ptr$022$i1560$i))|0;
  $cmp$i1575$i = ($sub5$i1565$i|0)>(0);
  $$pre$i1577$i = HEAP32[$h_ptr$i47>>2]|0;
  if ($cmp$i1575$i) {
   $36 = $$pre$i1577$i;$j$addr$023$i1559$i = $sub5$i1565$i;$ptr$022$i1560$i = $add$i1574$i;
  } else {
   break;
  }
 }
 $ptr18$i1582$i = (((((($gfc)) + 39840|0) + (($$pre$i1577$i*48)|0)|0)) + 4|0);
 HEAP32[$ptr18$i1582$i>>2] = $add$i1574$i;
 $mode_ext$i = ((($gfc)) + 84756|0);
 $38 = HEAP32[$mode_ext$i>>2]|0;
 $39 = $$pre$i1577$i;$j$addr$023$i1532$i = 2;$ptr$022$i1533$i = $add$i1574$i;
 while(1) {
  $and$i1534$i = $ptr$022$i1533$i & 7;
  $sub$i1535$i = (8 - ($and$i1534$i))|0;
  $cmp2$i1536$i = ($j$addr$023$i1532$i|0)<($sub$i1535$i|0);
  $j$addr$0$sub$i1537$i = $cmp2$i1536$i ? $j$addr$023$i1532$i : $sub$i1535$i;
  $sub5$i1538$i = (($j$addr$023$i1532$i) - ($j$addr$0$sub$i1537$i))|0;
  $shr$i1539$i = $38 >> $sub5$i1538$i;
  $sub8$i1540$i = (($sub$i1535$i) - ($j$addr$0$sub$i1537$i))|0;
  $shl$i1541$i = $shr$i1539$i << $sub8$i1540$i;
  $shr12$i1542$i = $ptr$022$i1533$i >> 3;
  $arrayidx13$i1543$i = ((((((($gfc)) + 39840|0) + (($39*48)|0)|0)) + 8|0) + ($shr12$i1542$i)|0);
  $40 = HEAP8[$arrayidx13$i1543$i>>0]|0;
  $conv20$i1544$i = $40&255;
  $or$i1545$i = $shl$i1541$i | $conv20$i1544$i;
  $conv14$i1546$i = $or$i1545$i&255;
  HEAP8[$arrayidx13$i1543$i>>0] = $conv14$i1546$i;
  $add$i1547$i = (($j$addr$0$sub$i1537$i) + ($ptr$022$i1533$i))|0;
  $cmp$i1548$i = ($sub5$i1538$i|0)>(0);
  $$pre$i1550$i = HEAP32[$h_ptr$i47>>2]|0;
  if ($cmp$i1548$i) {
   $39 = $$pre$i1550$i;$j$addr$023$i1532$i = $sub5$i1538$i;$ptr$022$i1533$i = $add$i1547$i;
  } else {
   break;
  }
 }
 $ptr18$i1555$i = (((((($gfc)) + 39840|0) + (($$pre$i1550$i*48)|0)|0)) + 4|0);
 HEAP32[$ptr18$i1555$i>>2] = $add$i1547$i;
 $copyright$i = ((($gfc)) + 164|0);
 $41 = HEAP32[$copyright$i>>2]|0;
 $42 = $$pre$i1550$i;$j$addr$023$i1505$i = 1;$ptr$022$i1506$i = $add$i1547$i;
 while(1) {
  $and$i1507$i = $ptr$022$i1506$i & 7;
  $sub$i1508$i = (8 - ($and$i1507$i))|0;
  $cmp2$i1509$i = ($j$addr$023$i1505$i|0)<($sub$i1508$i|0);
  $j$addr$0$sub$i1510$i = $cmp2$i1509$i ? $j$addr$023$i1505$i : $sub$i1508$i;
  $sub5$i1511$i = (($j$addr$023$i1505$i) - ($j$addr$0$sub$i1510$i))|0;
  $shr$i1512$i = $41 >> $sub5$i1511$i;
  $sub8$i1513$i = (($sub$i1508$i) - ($j$addr$0$sub$i1510$i))|0;
  $shl$i1514$i = $shr$i1512$i << $sub8$i1513$i;
  $shr12$i1515$i = $ptr$022$i1506$i >> 3;
  $arrayidx13$i1516$i = ((((((($gfc)) + 39840|0) + (($42*48)|0)|0)) + 8|0) + ($shr12$i1515$i)|0);
  $43 = HEAP8[$arrayidx13$i1516$i>>0]|0;
  $conv20$i1517$i = $43&255;
  $or$i1518$i = $shl$i1514$i | $conv20$i1517$i;
  $conv14$i1519$i = $or$i1518$i&255;
  HEAP8[$arrayidx13$i1516$i>>0] = $conv14$i1519$i;
  $add$i1520$i = (($j$addr$0$sub$i1510$i) + ($ptr$022$i1506$i))|0;
  $cmp$i1521$i = ($sub5$i1511$i|0)>(0);
  $$pre$i1523$i = HEAP32[$h_ptr$i47>>2]|0;
  if ($cmp$i1521$i) {
   $42 = $$pre$i1523$i;$j$addr$023$i1505$i = $sub5$i1511$i;$ptr$022$i1506$i = $add$i1520$i;
  } else {
   break;
  }
 }
 $ptr18$i1528$i = (((((($gfc)) + 39840|0) + (($$pre$i1523$i*48)|0)|0)) + 4|0);
 HEAP32[$ptr18$i1528$i>>2] = $add$i1520$i;
 $original$i = ((($gfc)) + 168|0);
 $44 = HEAP32[$original$i>>2]|0;
 $45 = $$pre$i1523$i;$j$addr$023$i1478$i = 1;$ptr$022$i1479$i = $add$i1520$i;
 while(1) {
  $and$i1480$i = $ptr$022$i1479$i & 7;
  $sub$i1481$i = (8 - ($and$i1480$i))|0;
  $cmp2$i1482$i = ($j$addr$023$i1478$i|0)<($sub$i1481$i|0);
  $j$addr$0$sub$i1483$i = $cmp2$i1482$i ? $j$addr$023$i1478$i : $sub$i1481$i;
  $sub5$i1484$i = (($j$addr$023$i1478$i) - ($j$addr$0$sub$i1483$i))|0;
  $shr$i1485$i = $44 >> $sub5$i1484$i;
  $sub8$i1486$i = (($sub$i1481$i) - ($j$addr$0$sub$i1483$i))|0;
  $shl$i1487$i = $shr$i1485$i << $sub8$i1486$i;
  $shr12$i1488$i = $ptr$022$i1479$i >> 3;
  $arrayidx13$i1489$i = ((((((($gfc)) + 39840|0) + (($45*48)|0)|0)) + 8|0) + ($shr12$i1488$i)|0);
  $46 = HEAP8[$arrayidx13$i1489$i>>0]|0;
  $conv20$i1490$i = $46&255;
  $or$i1491$i = $shl$i1487$i | $conv20$i1490$i;
  $conv14$i1492$i = $or$i1491$i&255;
  HEAP8[$arrayidx13$i1489$i>>0] = $conv14$i1492$i;
  $add$i1493$i = (($j$addr$0$sub$i1483$i) + ($ptr$022$i1479$i))|0;
  $cmp$i1494$i = ($sub5$i1484$i|0)>(0);
  $$pre$i1496$i = HEAP32[$h_ptr$i47>>2]|0;
  if ($cmp$i1494$i) {
   $45 = $$pre$i1496$i;$j$addr$023$i1478$i = $sub5$i1484$i;$ptr$022$i1479$i = $add$i1493$i;
  } else {
   break;
  }
 }
 $ptr18$i1501$i = (((((($gfc)) + 39840|0) + (($$pre$i1496$i*48)|0)|0)) + 4|0);
 HEAP32[$ptr18$i1501$i>>2] = $add$i1493$i;
 $emphasis$i = ((($gfc)) + 176|0);
 $47 = HEAP32[$emphasis$i>>2]|0;
 $48 = $$pre$i1496$i;$j$addr$023$i1451$i = 2;$ptr$022$i1452$i = $add$i1493$i;
 while(1) {
  $and$i1453$i = $ptr$022$i1452$i & 7;
  $sub$i1454$i = (8 - ($and$i1453$i))|0;
  $cmp2$i1455$i = ($j$addr$023$i1451$i|0)<($sub$i1454$i|0);
  $j$addr$0$sub$i1456$i = $cmp2$i1455$i ? $j$addr$023$i1451$i : $sub$i1454$i;
  $sub5$i1457$i = (($j$addr$023$i1451$i) - ($j$addr$0$sub$i1456$i))|0;
  $shr$i1458$i = $47 >> $sub5$i1457$i;
  $sub8$i1459$i = (($sub$i1454$i) - ($j$addr$0$sub$i1456$i))|0;
  $shl$i1460$i = $shr$i1458$i << $sub8$i1459$i;
  $shr12$i1461$i = $ptr$022$i1452$i >> 3;
  $arrayidx13$i1462$i = ((((((($gfc)) + 39840|0) + (($48*48)|0)|0)) + 8|0) + ($shr12$i1461$i)|0);
  $49 = HEAP8[$arrayidx13$i1462$i>>0]|0;
  $conv20$i1463$i = $49&255;
  $or$i1464$i = $shl$i1460$i | $conv20$i1463$i;
  $conv14$i1465$i = $or$i1464$i&255;
  HEAP8[$arrayidx13$i1462$i>>0] = $conv14$i1465$i;
  $add$i1466$i = (($j$addr$0$sub$i1456$i) + ($ptr$022$i1452$i))|0;
  $cmp$i1467$i = ($sub5$i1457$i|0)>(0);
  $$pre$i1469$i = HEAP32[$h_ptr$i47>>2]|0;
  if ($cmp$i1467$i) {
   $48 = $$pre$i1469$i;$j$addr$023$i1451$i = $sub5$i1457$i;$ptr$022$i1452$i = $add$i1466$i;
  } else {
   break;
  }
 }
 $ptr18$i1474$i = (((((($gfc)) + 39840|0) + (($$pre$i1469$i*48)|0)|0)) + 4|0);
 HEAP32[$ptr18$i1474$i>>2] = $add$i1466$i;
 $50 = HEAP32[$error_protection$i>>2]|0;
 $tobool7$i = ($50|0)==(0);
 if ($tobool7$i) {
  $478 = $add$i1466$i;
 } else {
  $j$addr$023$i1428$i = 16;$ptr$022$i1429$i = $add$i1466$i;
  while(1) {
   $and$i1430$i = $ptr$022$i1429$i & 7;
   $sub$i1431$i = (8 - ($and$i1430$i))|0;
   $cmp2$i1432$i = ($j$addr$023$i1428$i|0)<($sub$i1431$i|0);
   $j$addr$0$sub$i1433$i = $cmp2$i1432$i ? $j$addr$023$i1428$i : $sub$i1431$i;
   $sub5$i1434$i = (($j$addr$023$i1428$i) - ($j$addr$0$sub$i1433$i))|0;
   $add$i1439$i = (($j$addr$0$sub$i1433$i) + ($ptr$022$i1429$i))|0;
   $cmp$i1440$i = ($sub5$i1434$i|0)>(0);
   if ($cmp$i1440$i) {
    $j$addr$023$i1428$i = $sub5$i1434$i;$ptr$022$i1429$i = $add$i1439$i;
   } else {
    break;
   }
  }
  HEAP32[$ptr18$i1474$i>>2] = $add$i1439$i;
  $478 = $add$i1439$i;
 }
 $51 = HEAP32[$version$i50>>2]|0;
 $cmp11$i = ($51|0)==(1);
 $main_data_begin$i = ((($gfc)) + 21312|0);
 $52 = HEAP32[$main_data_begin$i>>2]|0;
 do {
  if ($cmp11$i) {
   $53 = $$pre$i1469$i;$j$addr$023$i1401$i = 9;$ptr$022$i1402$i = $478;
   while(1) {
    $and$i1403$i = $ptr$022$i1402$i & 7;
    $sub$i1404$i = (8 - ($and$i1403$i))|0;
    $cmp2$i1405$i = ($j$addr$023$i1401$i|0)<($sub$i1404$i|0);
    $j$addr$0$sub$i1406$i = $cmp2$i1405$i ? $j$addr$023$i1401$i : $sub$i1404$i;
    $sub5$i1407$i = (($j$addr$023$i1401$i) - ($j$addr$0$sub$i1406$i))|0;
    $shr$i1408$i = $52 >> $sub5$i1407$i;
    $sub8$i1409$i = (($sub$i1404$i) - ($j$addr$0$sub$i1406$i))|0;
    $shl$i1410$i = $shr$i1408$i << $sub8$i1409$i;
    $shr12$i1411$i = $ptr$022$i1402$i >> 3;
    $arrayidx13$i1412$i = ((((((($gfc)) + 39840|0) + (($53*48)|0)|0)) + 8|0) + ($shr12$i1411$i)|0);
    $54 = HEAP8[$arrayidx13$i1412$i>>0]|0;
    $conv20$i1413$i = $54&255;
    $or$i1414$i = $shl$i1410$i | $conv20$i1413$i;
    $conv14$i1415$i = $or$i1414$i&255;
    HEAP8[$arrayidx13$i1412$i>>0] = $conv14$i1415$i;
    $add$i1416$i = (($j$addr$0$sub$i1406$i) + ($ptr$022$i1402$i))|0;
    $cmp$i1417$i = ($sub5$i1407$i|0)>(0);
    $$pre$i1419$i = HEAP32[$h_ptr$i47>>2]|0;
    if ($cmp$i1417$i) {
     $53 = $$pre$i1419$i;$j$addr$023$i1401$i = $sub5$i1407$i;$ptr$022$i1402$i = $add$i1416$i;
    } else {
     break;
    }
   }
   $ptr18$i1424$i = (((((($gfc)) + 39840|0) + (($$pre$i1419$i*48)|0)|0)) + 4|0);
   HEAP32[$ptr18$i1424$i>>2] = $add$i1416$i;
   $channels_out$i = ((($gfc)) + 72|0);
   $55 = HEAP32[$channels_out$i>>2]|0;
   $cmp13$i = ($55|0)==(2);
   $private_bits$i = ((($gfc)) + 21316|0);
   $56 = HEAP32[$private_bits$i>>2]|0;
   if ($cmp13$i) {
    $57 = $$pre$i1419$i;$j$addr$023$i1374$i = 3;$ptr$022$i1375$i = $add$i1416$i;
    while(1) {
     $and$i1376$i = $ptr$022$i1375$i & 7;
     $sub$i1377$i = (8 - ($and$i1376$i))|0;
     $cmp2$i1378$i = ($j$addr$023$i1374$i|0)<($sub$i1377$i|0);
     $j$addr$0$sub$i1379$i = $cmp2$i1378$i ? $j$addr$023$i1374$i : $sub$i1377$i;
     $sub5$i1380$i = (($j$addr$023$i1374$i) - ($j$addr$0$sub$i1379$i))|0;
     $shr$i1381$i = $56 >> $sub5$i1380$i;
     $sub8$i1382$i = (($sub$i1377$i) - ($j$addr$0$sub$i1379$i))|0;
     $shl$i1383$i = $shr$i1381$i << $sub8$i1382$i;
     $shr12$i1384$i = $ptr$022$i1375$i >> 3;
     $arrayidx13$i1385$i = ((((((($gfc)) + 39840|0) + (($57*48)|0)|0)) + 8|0) + ($shr12$i1384$i)|0);
     $58 = HEAP8[$arrayidx13$i1385$i>>0]|0;
     $conv20$i1386$i = $58&255;
     $or$i1387$i = $shl$i1383$i | $conv20$i1386$i;
     $conv14$i1388$i = $or$i1387$i&255;
     HEAP8[$arrayidx13$i1385$i>>0] = $conv14$i1388$i;
     $add$i1389$i = (($j$addr$0$sub$i1379$i) + ($ptr$022$i1375$i))|0;
     $cmp$i1390$i = ($sub5$i1380$i|0)>(0);
     $$pre$i1392$i = HEAP32[$h_ptr$i47>>2]|0;
     if ($cmp$i1390$i) {
      $57 = $$pre$i1392$i;$j$addr$023$i1374$i = $sub5$i1380$i;$ptr$022$i1375$i = $add$i1389$i;
     } else {
      $$pre$i1365$lcssa$sink$i = $$pre$i1392$i;$add$i1362$lcssa$sink$i = $add$i1389$i;
      break;
     }
    }
   } else {
    $59 = $$pre$i1419$i;$j$addr$023$i1347$i = 5;$ptr$022$i1348$i = $add$i1416$i;
    while(1) {
     $and$i1349$i = $ptr$022$i1348$i & 7;
     $sub$i1350$i = (8 - ($and$i1349$i))|0;
     $cmp2$i1351$i = ($j$addr$023$i1347$i|0)<($sub$i1350$i|0);
     $j$addr$0$sub$i1352$i = $cmp2$i1351$i ? $j$addr$023$i1347$i : $sub$i1350$i;
     $sub5$i1353$i = (($j$addr$023$i1347$i) - ($j$addr$0$sub$i1352$i))|0;
     $shr$i1354$i = $56 >> $sub5$i1353$i;
     $sub8$i1355$i = (($sub$i1350$i) - ($j$addr$0$sub$i1352$i))|0;
     $shl$i1356$i = $shr$i1354$i << $sub8$i1355$i;
     $shr12$i1357$i = $ptr$022$i1348$i >> 3;
     $arrayidx13$i1358$i = ((((((($gfc)) + 39840|0) + (($59*48)|0)|0)) + 8|0) + ($shr12$i1357$i)|0);
     $60 = HEAP8[$arrayidx13$i1358$i>>0]|0;
     $conv20$i1359$i = $60&255;
     $or$i1360$i = $shl$i1356$i | $conv20$i1359$i;
     $conv14$i1361$i = $or$i1360$i&255;
     HEAP8[$arrayidx13$i1358$i>>0] = $conv14$i1361$i;
     $add$i1362$i = (($j$addr$0$sub$i1352$i) + ($ptr$022$i1348$i))|0;
     $cmp$i1363$i = ($sub5$i1353$i|0)>(0);
     $$pre$i1365$i = HEAP32[$h_ptr$i47>>2]|0;
     if ($cmp$i1363$i) {
      $59 = $$pre$i1365$i;$j$addr$023$i1347$i = $sub5$i1353$i;$ptr$022$i1348$i = $add$i1362$i;
     } else {
      $$pre$i1365$lcssa$sink$i = $$pre$i1365$i;$add$i1362$lcssa$sink$i = $add$i1362$i;
      break;
     }
    }
   }
   $ptr18$i1370$i = (((((($gfc)) + 39840|0) + (($$pre$i1365$lcssa$sink$i*48)|0)|0)) + 4|0);
   HEAP32[$ptr18$i1370$i>>2] = $add$i1362$lcssa$sink$i;
   $61 = HEAP32[$channels_out$i>>2]|0;
   $cmp191783$i = ($61|0)>(0);
   if ($cmp191783$i) {
    $479 = $add$i1362$lcssa$sink$i;$480 = $$pre$i1365$lcssa$sink$i;$ch$01784$i = 0;
    while(1) {
     $arrayidx24$i = (((($gfc)) + 21328|0) + ($ch$01784$i<<4)|0);
     $62 = HEAP32[$arrayidx24$i>>2]|0;
     $63 = $480;$j$addr$023$i1320$i = 1;$ptr$022$i1321$i = $479;
     while(1) {
      $and$i1322$i = $ptr$022$i1321$i & 7;
      $sub$i1323$i = (8 - ($and$i1322$i))|0;
      $cmp2$i1324$i = ($j$addr$023$i1320$i|0)<($sub$i1323$i|0);
      $j$addr$0$sub$i1325$i = $cmp2$i1324$i ? $j$addr$023$i1320$i : $sub$i1323$i;
      $sub5$i1326$i = (($j$addr$023$i1320$i) - ($j$addr$0$sub$i1325$i))|0;
      $shr$i1327$i = $62 >> $sub5$i1326$i;
      $sub8$i1328$i = (($sub$i1323$i) - ($j$addr$0$sub$i1325$i))|0;
      $shl$i1329$i = $shr$i1327$i << $sub8$i1328$i;
      $shr12$i1330$i = $ptr$022$i1321$i >> 3;
      $arrayidx13$i1331$i = ((((((($gfc)) + 39840|0) + (($63*48)|0)|0)) + 8|0) + ($shr12$i1330$i)|0);
      $64 = HEAP8[$arrayidx13$i1331$i>>0]|0;
      $conv20$i1332$i = $64&255;
      $or$i1333$i = $shl$i1329$i | $conv20$i1332$i;
      $conv14$i1334$i = $or$i1333$i&255;
      HEAP8[$arrayidx13$i1331$i>>0] = $conv14$i1334$i;
      $add$i1335$i = (($j$addr$0$sub$i1325$i) + ($ptr$022$i1321$i))|0;
      $cmp$i1336$i = ($sub5$i1326$i|0)>(0);
      $$pre$i1338$i = HEAP32[$h_ptr$i47>>2]|0;
      if ($cmp$i1336$i) {
       $63 = $$pre$i1338$i;$j$addr$023$i1320$i = $sub5$i1326$i;$ptr$022$i1321$i = $add$i1335$i;
      } else {
       break;
      }
     }
     $ptr18$i1343$i = (((((($gfc)) + 39840|0) + (($$pre$i1338$i*48)|0)|0)) + 4|0);
     HEAP32[$ptr18$i1343$i>>2] = $add$i1335$i;
     $arrayidx24$1$i = (((((($gfc)) + 21328|0) + ($ch$01784$i<<4)|0)) + 4|0);
     $65 = HEAP32[$arrayidx24$1$i>>2]|0;
     $213 = $$pre$i1338$i;$j$addr$023$i1320$1$i = 1;$ptr$022$i1321$1$i = $add$i1335$i;
     while(1) {
      $and$i1322$1$i = $ptr$022$i1321$1$i & 7;
      $sub$i1323$1$i = (8 - ($and$i1322$1$i))|0;
      $cmp2$i1324$1$i = ($j$addr$023$i1320$1$i|0)<($sub$i1323$1$i|0);
      $j$addr$0$sub$i1325$1$i = $cmp2$i1324$1$i ? $j$addr$023$i1320$1$i : $sub$i1323$1$i;
      $sub5$i1326$1$i = (($j$addr$023$i1320$1$i) - ($j$addr$0$sub$i1325$1$i))|0;
      $shr$i1327$1$i = $65 >> $sub5$i1326$1$i;
      $sub8$i1328$1$i = (($sub$i1323$1$i) - ($j$addr$0$sub$i1325$1$i))|0;
      $shl$i1329$1$i = $shr$i1327$1$i << $sub8$i1328$1$i;
      $shr12$i1330$1$i = $ptr$022$i1321$1$i >> 3;
      $arrayidx13$i1331$1$i = ((((((($gfc)) + 39840|0) + (($213*48)|0)|0)) + 8|0) + ($shr12$i1330$1$i)|0);
      $214 = HEAP8[$arrayidx13$i1331$1$i>>0]|0;
      $conv20$i1332$1$i = $214&255;
      $or$i1333$1$i = $shl$i1329$1$i | $conv20$i1332$1$i;
      $conv14$i1334$1$i = $or$i1333$1$i&255;
      HEAP8[$arrayidx13$i1331$1$i>>0] = $conv14$i1334$1$i;
      $add$i1335$1$i = (($j$addr$0$sub$i1325$1$i) + ($ptr$022$i1321$1$i))|0;
      $cmp$i1336$1$i = ($sub5$i1326$1$i|0)>(0);
      $$pre$i1338$1$i = HEAP32[$h_ptr$i47>>2]|0;
      if ($cmp$i1336$1$i) {
       $213 = $$pre$i1338$1$i;$j$addr$023$i1320$1$i = $sub5$i1326$1$i;$ptr$022$i1321$1$i = $add$i1335$1$i;
      } else {
       break;
      }
     }
     $ptr18$i1343$1$i = (((((($gfc)) + 39840|0) + (($$pre$i1338$1$i*48)|0)|0)) + 4|0);
     HEAP32[$ptr18$i1343$1$i>>2] = $add$i1335$1$i;
     $arrayidx24$2$i = (((((($gfc)) + 21328|0) + ($ch$01784$i<<4)|0)) + 8|0);
     $215 = HEAP32[$arrayidx24$2$i>>2]|0;
     $216 = $$pre$i1338$1$i;$j$addr$023$i1320$2$i = 1;$ptr$022$i1321$2$i = $add$i1335$1$i;
     while(1) {
      $and$i1322$2$i = $ptr$022$i1321$2$i & 7;
      $sub$i1323$2$i = (8 - ($and$i1322$2$i))|0;
      $cmp2$i1324$2$i = ($j$addr$023$i1320$2$i|0)<($sub$i1323$2$i|0);
      $j$addr$0$sub$i1325$2$i = $cmp2$i1324$2$i ? $j$addr$023$i1320$2$i : $sub$i1323$2$i;
      $sub5$i1326$2$i = (($j$addr$023$i1320$2$i) - ($j$addr$0$sub$i1325$2$i))|0;
      $shr$i1327$2$i = $215 >> $sub5$i1326$2$i;
      $sub8$i1328$2$i = (($sub$i1323$2$i) - ($j$addr$0$sub$i1325$2$i))|0;
      $shl$i1329$2$i = $shr$i1327$2$i << $sub8$i1328$2$i;
      $shr12$i1330$2$i = $ptr$022$i1321$2$i >> 3;
      $arrayidx13$i1331$2$i = ((((((($gfc)) + 39840|0) + (($216*48)|0)|0)) + 8|0) + ($shr12$i1330$2$i)|0);
      $217 = HEAP8[$arrayidx13$i1331$2$i>>0]|0;
      $conv20$i1332$2$i = $217&255;
      $or$i1333$2$i = $shl$i1329$2$i | $conv20$i1332$2$i;
      $conv14$i1334$2$i = $or$i1333$2$i&255;
      HEAP8[$arrayidx13$i1331$2$i>>0] = $conv14$i1334$2$i;
      $add$i1335$2$i = (($j$addr$0$sub$i1325$2$i) + ($ptr$022$i1321$2$i))|0;
      $cmp$i1336$2$i = ($sub5$i1326$2$i|0)>(0);
      $$pre$i1338$2$i = HEAP32[$h_ptr$i47>>2]|0;
      if ($cmp$i1336$2$i) {
       $216 = $$pre$i1338$2$i;$j$addr$023$i1320$2$i = $sub5$i1326$2$i;$ptr$022$i1321$2$i = $add$i1335$2$i;
      } else {
       break;
      }
     }
     $ptr18$i1343$2$i = (((((($gfc)) + 39840|0) + (($$pre$i1338$2$i*48)|0)|0)) + 4|0);
     HEAP32[$ptr18$i1343$2$i>>2] = $add$i1335$2$i;
     $arrayidx24$3$i = (((((($gfc)) + 21328|0) + ($ch$01784$i<<4)|0)) + 12|0);
     $218 = HEAP32[$arrayidx24$3$i>>2]|0;
     $219 = $$pre$i1338$2$i;$j$addr$023$i1320$3$i = 1;$ptr$022$i1321$3$i = $add$i1335$2$i;
     while(1) {
      $and$i1322$3$i = $ptr$022$i1321$3$i & 7;
      $sub$i1323$3$i = (8 - ($and$i1322$3$i))|0;
      $cmp2$i1324$3$i = ($j$addr$023$i1320$3$i|0)<($sub$i1323$3$i|0);
      $j$addr$0$sub$i1325$3$i = $cmp2$i1324$3$i ? $j$addr$023$i1320$3$i : $sub$i1323$3$i;
      $sub5$i1326$3$i = (($j$addr$023$i1320$3$i) - ($j$addr$0$sub$i1325$3$i))|0;
      $shr$i1327$3$i = $218 >> $sub5$i1326$3$i;
      $sub8$i1328$3$i = (($sub$i1323$3$i) - ($j$addr$0$sub$i1325$3$i))|0;
      $shl$i1329$3$i = $shr$i1327$3$i << $sub8$i1328$3$i;
      $shr12$i1330$3$i = $ptr$022$i1321$3$i >> 3;
      $arrayidx13$i1331$3$i = ((((((($gfc)) + 39840|0) + (($219*48)|0)|0)) + 8|0) + ($shr12$i1330$3$i)|0);
      $220 = HEAP8[$arrayidx13$i1331$3$i>>0]|0;
      $conv20$i1332$3$i = $220&255;
      $or$i1333$3$i = $shl$i1329$3$i | $conv20$i1332$3$i;
      $conv14$i1334$3$i = $or$i1333$3$i&255;
      HEAP8[$arrayidx13$i1331$3$i>>0] = $conv14$i1334$3$i;
      $add$i1335$3$i = (($j$addr$0$sub$i1325$3$i) + ($ptr$022$i1321$3$i))|0;
      $cmp$i1336$3$i = ($sub5$i1326$3$i|0)>(0);
      $$pre$i1338$3$i = HEAP32[$h_ptr$i47>>2]|0;
      if ($cmp$i1336$3$i) {
       $219 = $$pre$i1338$3$i;$j$addr$023$i1320$3$i = $sub5$i1326$3$i;$ptr$022$i1321$3$i = $add$i1335$3$i;
      } else {
       break;
      }
     }
     $ptr18$i1343$3$i = (((((($gfc)) + 39840|0) + (($$pre$i1338$3$i*48)|0)|0)) + 4|0);
     HEAP32[$ptr18$i1343$3$i>>2] = $add$i1335$3$i;
     $inc26$i = (($ch$01784$i) + 1)|0;
     $221 = HEAP32[$channels_out$i>>2]|0;
     $cmp19$i = ($inc26$i|0)<($221|0);
     if ($cmp19$i) {
      $479 = $add$i1335$3$i;$480 = $$pre$i1338$3$i;$ch$01784$i = $inc26$i;
     } else {
      $66 = $221;$67 = $$pre$i1338$3$i;$gr$01780$i = 0;
      break;
     }
    }
   } else {
    $66 = $61;$67 = $$pre$i1365$lcssa$sink$i;$gr$01780$i = 0;
   }
   while(1) {
    $cmp331777$i = ($66|0)>(0);
    if ($cmp331777$i) {
     $ptr1$i1292$phi$trans$insert$i = (((((($gfc)) + 39840|0) + (($67*48)|0)|0)) + 4|0);
     $$pre1817$i = HEAP32[$ptr1$i1292$phi$trans$insert$i>>2]|0;
     $483 = $$pre1817$i;$484 = $67;$ch$11778$i = 0;
     while(1) {
      $part2_3_length$i = ((((((($gfc)) + 304|0) + (($gr$01780$i*10504)|0)|0) + (($ch$11778$i*5252)|0)|0)) + 4768|0);
      $68 = HEAP32[$part2_3_length$i>>2]|0;
      $part2_length$i = ((((((($gfc)) + 304|0) + (($gr$01780$i*10504)|0)|0) + (($ch$11778$i*5252)|0)|0)) + 4844|0);
      $69 = HEAP32[$part2_length$i>>2]|0;
      $add$i53 = (($69) + ($68))|0;
      $70 = $484;$j$addr$023$i1293$i = 12;$ptr$022$i1294$i = $483;
      while(1) {
       $and$i1295$i = $ptr$022$i1294$i & 7;
       $sub$i1296$i = (8 - ($and$i1295$i))|0;
       $cmp2$i1297$i = ($j$addr$023$i1293$i|0)<($sub$i1296$i|0);
       $j$addr$0$sub$i1298$i = $cmp2$i1297$i ? $j$addr$023$i1293$i : $sub$i1296$i;
       $sub5$i1299$i = (($j$addr$023$i1293$i) - ($j$addr$0$sub$i1298$i))|0;
       $shr$i1300$i = $add$i53 >> $sub5$i1299$i;
       $sub8$i1301$i = (($sub$i1296$i) - ($j$addr$0$sub$i1298$i))|0;
       $shl$i1302$i = $shr$i1300$i << $sub8$i1301$i;
       $shr12$i1303$i = $ptr$022$i1294$i >> 3;
       $arrayidx13$i1304$i = ((((((($gfc)) + 39840|0) + (($70*48)|0)|0)) + 8|0) + ($shr12$i1303$i)|0);
       $71 = HEAP8[$arrayidx13$i1304$i>>0]|0;
       $conv20$i1305$i = $71&255;
       $or$i1306$i = $shl$i1302$i | $conv20$i1305$i;
       $conv14$i1307$i = $or$i1306$i&255;
       HEAP8[$arrayidx13$i1304$i>>0] = $conv14$i1307$i;
       $add$i1308$i = (($j$addr$0$sub$i1298$i) + ($ptr$022$i1294$i))|0;
       $cmp$i1309$i = ($sub5$i1299$i|0)>(0);
       $$pre$i1311$i = HEAP32[$h_ptr$i47>>2]|0;
       if ($cmp$i1309$i) {
        $70 = $$pre$i1311$i;$j$addr$023$i1293$i = $sub5$i1299$i;$ptr$022$i1294$i = $add$i1308$i;
       } else {
        break;
       }
      }
      $ptr18$i1316$i = (((((($gfc)) + 39840|0) + (($$pre$i1311$i*48)|0)|0)) + 4|0);
      HEAP32[$ptr18$i1316$i>>2] = $add$i1308$i;
      $big_values$i = ((((((($gfc)) + 304|0) + (($gr$01780$i*10504)|0)|0) + (($ch$11778$i*5252)|0)|0)) + 4772|0);
      $72 = HEAP32[$big_values$i>>2]|0;
      $div$i54 = (($72|0) / 2)&-1;
      $73 = $$pre$i1311$i;$j$addr$023$i1266$i = 9;$ptr$022$i1267$i = $add$i1308$i;
      while(1) {
       $and$i1268$i = $ptr$022$i1267$i & 7;
       $sub$i1269$i = (8 - ($and$i1268$i))|0;
       $cmp2$i1270$i = ($j$addr$023$i1266$i|0)<($sub$i1269$i|0);
       $j$addr$0$sub$i1271$i = $cmp2$i1270$i ? $j$addr$023$i1266$i : $sub$i1269$i;
       $sub5$i1272$i = (($j$addr$023$i1266$i) - ($j$addr$0$sub$i1271$i))|0;
       $shr$i1273$i = $div$i54 >> $sub5$i1272$i;
       $sub8$i1274$i = (($sub$i1269$i) - ($j$addr$0$sub$i1271$i))|0;
       $shl$i1275$i = $shr$i1273$i << $sub8$i1274$i;
       $shr12$i1276$i = $ptr$022$i1267$i >> 3;
       $arrayidx13$i1277$i = ((((((($gfc)) + 39840|0) + (($73*48)|0)|0)) + 8|0) + ($shr12$i1276$i)|0);
       $74 = HEAP8[$arrayidx13$i1277$i>>0]|0;
       $conv20$i1278$i = $74&255;
       $or$i1279$i = $shl$i1275$i | $conv20$i1278$i;
       $conv14$i1280$i = $or$i1279$i&255;
       HEAP8[$arrayidx13$i1277$i>>0] = $conv14$i1280$i;
       $add$i1281$i = (($j$addr$0$sub$i1271$i) + ($ptr$022$i1267$i))|0;
       $cmp$i1282$i = ($sub5$i1272$i|0)>(0);
       $$pre$i1284$i = HEAP32[$h_ptr$i47>>2]|0;
       if ($cmp$i1282$i) {
        $73 = $$pre$i1284$i;$j$addr$023$i1266$i = $sub5$i1272$i;$ptr$022$i1267$i = $add$i1281$i;
       } else {
        break;
       }
      }
      $ptr18$i1289$i = (((((($gfc)) + 39840|0) + (($$pre$i1284$i*48)|0)|0)) + 4|0);
      HEAP32[$ptr18$i1289$i>>2] = $add$i1281$i;
      $global_gain$i = ((((((($gfc)) + 304|0) + (($gr$01780$i*10504)|0)|0) + (($ch$11778$i*5252)|0)|0)) + 4780|0);
      $75 = HEAP32[$global_gain$i>>2]|0;
      $76 = $$pre$i1284$i;$j$addr$023$i1239$i = 8;$ptr$022$i1240$i = $add$i1281$i;
      while(1) {
       $and$i1241$i = $ptr$022$i1240$i & 7;
       $sub$i1242$i = (8 - ($and$i1241$i))|0;
       $cmp2$i1243$i = ($j$addr$023$i1239$i|0)<($sub$i1242$i|0);
       $j$addr$0$sub$i1244$i = $cmp2$i1243$i ? $j$addr$023$i1239$i : $sub$i1242$i;
       $sub5$i1245$i = (($j$addr$023$i1239$i) - ($j$addr$0$sub$i1244$i))|0;
       $shr$i1246$i = $75 >> $sub5$i1245$i;
       $sub8$i1247$i = (($sub$i1242$i) - ($j$addr$0$sub$i1244$i))|0;
       $shl$i1248$i = $shr$i1246$i << $sub8$i1247$i;
       $shr12$i1249$i = $ptr$022$i1240$i >> 3;
       $arrayidx13$i1250$i = ((((((($gfc)) + 39840|0) + (($76*48)|0)|0)) + 8|0) + ($shr12$i1249$i)|0);
       $77 = HEAP8[$arrayidx13$i1250$i>>0]|0;
       $conv20$i1251$i = $77&255;
       $or$i1252$i = $shl$i1248$i | $conv20$i1251$i;
       $conv14$i1253$i = $or$i1252$i&255;
       HEAP8[$arrayidx13$i1250$i>>0] = $conv14$i1253$i;
       $add$i1254$i = (($j$addr$0$sub$i1244$i) + ($ptr$022$i1240$i))|0;
       $cmp$i1255$i = ($sub5$i1245$i|0)>(0);
       $$pre$i1257$i = HEAP32[$h_ptr$i47>>2]|0;
       if ($cmp$i1255$i) {
        $76 = $$pre$i1257$i;$j$addr$023$i1239$i = $sub5$i1245$i;$ptr$022$i1240$i = $add$i1254$i;
       } else {
        break;
       }
      }
      $ptr18$i1262$i = (((((($gfc)) + 39840|0) + (($$pre$i1257$i*48)|0)|0)) + 4|0);
      HEAP32[$ptr18$i1262$i>>2] = $add$i1254$i;
      $scalefac_compress$i = ((((((($gfc)) + 304|0) + (($gr$01780$i*10504)|0)|0) + (($ch$11778$i*5252)|0)|0)) + 4784|0);
      $78 = HEAP32[$scalefac_compress$i>>2]|0;
      $79 = $$pre$i1257$i;$j$addr$023$i1212$i = 4;$ptr$022$i1213$i = $add$i1254$i;
      while(1) {
       $and$i1214$i = $ptr$022$i1213$i & 7;
       $sub$i1215$i = (8 - ($and$i1214$i))|0;
       $cmp2$i1216$i = ($j$addr$023$i1212$i|0)<($sub$i1215$i|0);
       $j$addr$0$sub$i1217$i = $cmp2$i1216$i ? $j$addr$023$i1212$i : $sub$i1215$i;
       $sub5$i1218$i = (($j$addr$023$i1212$i) - ($j$addr$0$sub$i1217$i))|0;
       $shr$i1219$i = $78 >> $sub5$i1218$i;
       $sub8$i1220$i = (($sub$i1215$i) - ($j$addr$0$sub$i1217$i))|0;
       $shl$i1221$i = $shr$i1219$i << $sub8$i1220$i;
       $shr12$i1222$i = $ptr$022$i1213$i >> 3;
       $arrayidx13$i1223$i = ((((((($gfc)) + 39840|0) + (($79*48)|0)|0)) + 8|0) + ($shr12$i1222$i)|0);
       $80 = HEAP8[$arrayidx13$i1223$i>>0]|0;
       $conv20$i1224$i = $80&255;
       $or$i1225$i = $shl$i1221$i | $conv20$i1224$i;
       $conv14$i1226$i = $or$i1225$i&255;
       HEAP8[$arrayidx13$i1223$i>>0] = $conv14$i1226$i;
       $add$i1227$i = (($j$addr$0$sub$i1217$i) + ($ptr$022$i1213$i))|0;
       $cmp$i1228$i = ($sub5$i1218$i|0)>(0);
       $$pre$i1230$i = HEAP32[$h_ptr$i47>>2]|0;
       if ($cmp$i1228$i) {
        $79 = $$pre$i1230$i;$j$addr$023$i1212$i = $sub5$i1218$i;$ptr$022$i1213$i = $add$i1227$i;
       } else {
        break;
       }
      }
      $ptr18$i1235$i = (((((($gfc)) + 39840|0) + (($$pre$i1230$i*48)|0)|0)) + 4|0);
      HEAP32[$ptr18$i1235$i>>2] = $add$i1227$i;
      $block_type$i = ((((((($gfc)) + 304|0) + (($gr$01780$i*10504)|0)|0) + (($ch$11778$i*5252)|0)|0)) + 4788|0);
      $81 = HEAP32[$block_type$i>>2]|0;
      $cmp37$i = ($81|0)==(0);
      if ($cmp37$i) {
       $j$addr$023$i973$i = 1;$ptr$022$i974$i = $add$i1227$i;
       while(1) {
        $and$i975$i = $ptr$022$i974$i & 7;
        $sub$i976$i = (8 - ($and$i975$i))|0;
        $cmp2$i977$i = ($j$addr$023$i973$i|0)<($sub$i976$i|0);
        $j$addr$0$sub$i978$i = $cmp2$i977$i ? $j$addr$023$i973$i : $sub$i976$i;
        $sub5$i979$i = (($j$addr$023$i973$i) - ($j$addr$0$sub$i978$i))|0;
        $add$i984$i = (($j$addr$0$sub$i978$i) + ($ptr$022$i974$i))|0;
        $cmp$i985$i = ($sub5$i979$i|0)>(0);
        if ($cmp$i985$i) {
         $j$addr$023$i973$i = $sub5$i979$i;$ptr$022$i974$i = $add$i984$i;
        } else {
         break;
        }
       }
       HEAP32[$ptr18$i1235$i>>2] = $add$i984$i;
       $arrayidx64$i = ((((((($gfc)) + 304|0) + (($gr$01780$i*10504)|0)|0) + (($ch$11778$i*5252)|0)|0)) + 4796|0);
       $107 = HEAP32[$arrayidx64$i>>2]|0;
       $cmp65$i = ($107|0)==(14);
       if ($cmp65$i) {
        HEAP32[$arrayidx64$i>>2] = 16;
        $$pre1810$i = HEAP32[$h_ptr$i47>>2]|0;
        $ptr1$i945$phi$trans$insert$i = (((((($gfc)) + 39840|0) + (($$pre1810$i*48)|0)|0)) + 4|0);
        $$pre1811$i = HEAP32[$ptr1$i945$phi$trans$insert$i>>2]|0;
        $108 = 16;$489 = $$pre1811$i;$490 = $$pre1810$i;
       } else {
        $108 = $107;$489 = $add$i984$i;$490 = $$pre$i1230$i;
       }
       $109 = $490;$j$addr$023$i946$i = 5;$ptr$022$i947$i = $489;
       while(1) {
        $and$i948$i = $ptr$022$i947$i & 7;
        $sub$i949$i = (8 - ($and$i948$i))|0;
        $cmp2$i950$i = ($j$addr$023$i946$i|0)<($sub$i949$i|0);
        $j$addr$0$sub$i951$i = $cmp2$i950$i ? $j$addr$023$i946$i : $sub$i949$i;
        $sub5$i952$i = (($j$addr$023$i946$i) - ($j$addr$0$sub$i951$i))|0;
        $shr$i953$i = $108 >> $sub5$i952$i;
        $sub8$i954$i = (($sub$i949$i) - ($j$addr$0$sub$i951$i))|0;
        $shl$i955$i = $shr$i953$i << $sub8$i954$i;
        $shr12$i956$i = $ptr$022$i947$i >> 3;
        $arrayidx13$i957$i = ((((((($gfc)) + 39840|0) + (($109*48)|0)|0)) + 8|0) + ($shr12$i956$i)|0);
        $110 = HEAP8[$arrayidx13$i957$i>>0]|0;
        $conv20$i958$i = $110&255;
        $or$i959$i = $shl$i955$i | $conv20$i958$i;
        $conv14$i960$i = $or$i959$i&255;
        HEAP8[$arrayidx13$i957$i>>0] = $conv14$i960$i;
        $add$i961$i = (($j$addr$0$sub$i951$i) + ($ptr$022$i947$i))|0;
        $cmp$i962$i = ($sub5$i952$i|0)>(0);
        $$pre$i964$i = HEAP32[$h_ptr$i47>>2]|0;
        if ($cmp$i962$i) {
         $109 = $$pre$i964$i;$j$addr$023$i946$i = $sub5$i952$i;$ptr$022$i947$i = $add$i961$i;
        } else {
         break;
        }
       }
       $ptr18$i969$i = (((((($gfc)) + 39840|0) + (($$pre$i964$i*48)|0)|0)) + 4|0);
       HEAP32[$ptr18$i969$i>>2] = $add$i961$i;
       $arrayidx73$i = ((((((($gfc)) + 304|0) + (($gr$01780$i*10504)|0)|0) + (($ch$11778$i*5252)|0)|0)) + 4800|0);
       $111 = HEAP32[$arrayidx73$i>>2]|0;
       $cmp74$i = ($111|0)==(14);
       if ($cmp74$i) {
        HEAP32[$arrayidx73$i>>2] = 16;
        $$pre1812$i = HEAP32[$h_ptr$i47>>2]|0;
        $ptr1$i918$phi$trans$insert$i = (((((($gfc)) + 39840|0) + (($$pre1812$i*48)|0)|0)) + 4|0);
        $$pre1813$i = HEAP32[$ptr1$i918$phi$trans$insert$i>>2]|0;
        $112 = 16;$491 = $$pre1813$i;$492 = $$pre1812$i;
       } else {
        $112 = $111;$491 = $add$i961$i;$492 = $$pre$i964$i;
       }
       $113 = $492;$j$addr$023$i919$i = 5;$ptr$022$i920$i = $491;
       while(1) {
        $and$i921$i = $ptr$022$i920$i & 7;
        $sub$i922$i = (8 - ($and$i921$i))|0;
        $cmp2$i923$i = ($j$addr$023$i919$i|0)<($sub$i922$i|0);
        $j$addr$0$sub$i924$i = $cmp2$i923$i ? $j$addr$023$i919$i : $sub$i922$i;
        $sub5$i925$i = (($j$addr$023$i919$i) - ($j$addr$0$sub$i924$i))|0;
        $shr$i926$i = $112 >> $sub5$i925$i;
        $sub8$i927$i = (($sub$i922$i) - ($j$addr$0$sub$i924$i))|0;
        $shl$i928$i = $shr$i926$i << $sub8$i927$i;
        $shr12$i929$i = $ptr$022$i920$i >> 3;
        $arrayidx13$i930$i = ((((((($gfc)) + 39840|0) + (($113*48)|0)|0)) + 8|0) + ($shr12$i929$i)|0);
        $114 = HEAP8[$arrayidx13$i930$i>>0]|0;
        $conv20$i931$i = $114&255;
        $or$i932$i = $shl$i928$i | $conv20$i931$i;
        $conv14$i933$i = $or$i932$i&255;
        HEAP8[$arrayidx13$i930$i>>0] = $conv14$i933$i;
        $add$i934$i = (($j$addr$0$sub$i924$i) + ($ptr$022$i920$i))|0;
        $cmp$i935$i = ($sub5$i925$i|0)>(0);
        $$pre$i937$i = HEAP32[$h_ptr$i47>>2]|0;
        if ($cmp$i935$i) {
         $113 = $$pre$i937$i;$j$addr$023$i919$i = $sub5$i925$i;$ptr$022$i920$i = $add$i934$i;
        } else {
         break;
        }
       }
       $ptr18$i942$i = (((((($gfc)) + 39840|0) + (($$pre$i937$i*48)|0)|0)) + 4|0);
       HEAP32[$ptr18$i942$i>>2] = $add$i934$i;
       $arrayidx82$i = ((((((($gfc)) + 304|0) + (($gr$01780$i*10504)|0)|0) + (($ch$11778$i*5252)|0)|0)) + 4804|0);
       $115 = HEAP32[$arrayidx82$i>>2]|0;
       $cmp83$i = ($115|0)==(14);
       if ($cmp83$i) {
        HEAP32[$arrayidx82$i>>2] = 16;
        $$pre1814$i = HEAP32[$h_ptr$i47>>2]|0;
        $ptr1$i891$phi$trans$insert$i = (((((($gfc)) + 39840|0) + (($$pre1814$i*48)|0)|0)) + 4|0);
        $$pre1815$i = HEAP32[$ptr1$i891$phi$trans$insert$i>>2]|0;
        $116 = 16;$493 = $$pre1815$i;$494 = $$pre1814$i;
       } else {
        $116 = $115;$493 = $add$i934$i;$494 = $$pre$i937$i;
       }
       $117 = $494;$j$addr$023$i892$i = 5;$ptr$022$i893$i = $493;
       while(1) {
        $and$i894$i = $ptr$022$i893$i & 7;
        $sub$i895$i = (8 - ($and$i894$i))|0;
        $cmp2$i896$i = ($j$addr$023$i892$i|0)<($sub$i895$i|0);
        $j$addr$0$sub$i897$i = $cmp2$i896$i ? $j$addr$023$i892$i : $sub$i895$i;
        $sub5$i898$i = (($j$addr$023$i892$i) - ($j$addr$0$sub$i897$i))|0;
        $shr$i899$i = $116 >> $sub5$i898$i;
        $sub8$i900$i = (($sub$i895$i) - ($j$addr$0$sub$i897$i))|0;
        $shl$i901$i = $shr$i899$i << $sub8$i900$i;
        $shr12$i902$i = $ptr$022$i893$i >> 3;
        $arrayidx13$i903$i = ((((((($gfc)) + 39840|0) + (($117*48)|0)|0)) + 8|0) + ($shr12$i902$i)|0);
        $118 = HEAP8[$arrayidx13$i903$i>>0]|0;
        $conv20$i904$i = $118&255;
        $or$i905$i = $shl$i901$i | $conv20$i904$i;
        $conv14$i906$i = $or$i905$i&255;
        HEAP8[$arrayidx13$i903$i>>0] = $conv14$i906$i;
        $add$i907$i = (($j$addr$0$sub$i897$i) + ($ptr$022$i893$i))|0;
        $cmp$i908$i = ($sub5$i898$i|0)>(0);
        $$pre$i910$i = HEAP32[$h_ptr$i47>>2]|0;
        if ($cmp$i908$i) {
         $117 = $$pre$i910$i;$j$addr$023$i892$i = $sub5$i898$i;$ptr$022$i893$i = $add$i907$i;
        } else {
         break;
        }
       }
       $ptr18$i915$i = (((((($gfc)) + 39840|0) + (($$pre$i910$i*48)|0)|0)) + 4|0);
       HEAP32[$ptr18$i915$i>>2] = $add$i907$i;
       $region0_count$i = ((((((($gfc)) + 304|0) + (($gr$01780$i*10504)|0)|0) + (($ch$11778$i*5252)|0)|0)) + 4824|0);
       $119 = HEAP32[$region0_count$i>>2]|0;
       $120 = $$pre$i910$i;$j$addr$023$i865$i = 4;$ptr$022$i866$i = $add$i907$i;
       while(1) {
        $and$i867$i = $ptr$022$i866$i & 7;
        $sub$i868$i = (8 - ($and$i867$i))|0;
        $cmp2$i869$i = ($j$addr$023$i865$i|0)<($sub$i868$i|0);
        $j$addr$0$sub$i870$i = $cmp2$i869$i ? $j$addr$023$i865$i : $sub$i868$i;
        $sub5$i871$i = (($j$addr$023$i865$i) - ($j$addr$0$sub$i870$i))|0;
        $shr$i872$i = $119 >> $sub5$i871$i;
        $sub8$i873$i = (($sub$i868$i) - ($j$addr$0$sub$i870$i))|0;
        $shl$i874$i = $shr$i872$i << $sub8$i873$i;
        $shr12$i875$i = $ptr$022$i866$i >> 3;
        $arrayidx13$i876$i = ((((((($gfc)) + 39840|0) + (($120*48)|0)|0)) + 8|0) + ($shr12$i875$i)|0);
        $121 = HEAP8[$arrayidx13$i876$i>>0]|0;
        $conv20$i877$i = $121&255;
        $or$i878$i = $shl$i874$i | $conv20$i877$i;
        $conv14$i879$i = $or$i878$i&255;
        HEAP8[$arrayidx13$i876$i>>0] = $conv14$i879$i;
        $add$i880$i = (($j$addr$0$sub$i870$i) + ($ptr$022$i866$i))|0;
        $cmp$i881$i = ($sub5$i871$i|0)>(0);
        $$pre$i883$i = HEAP32[$h_ptr$i47>>2]|0;
        if ($cmp$i881$i) {
         $120 = $$pre$i883$i;$j$addr$023$i865$i = $sub5$i871$i;$ptr$022$i866$i = $add$i880$i;
        } else {
         break;
        }
       }
       $ptr18$i888$i = (((((($gfc)) + 39840|0) + (($$pre$i883$i*48)|0)|0)) + 4|0);
       HEAP32[$ptr18$i888$i>>2] = $add$i880$i;
       $region1_count$i = ((((((($gfc)) + 304|0) + (($gr$01780$i*10504)|0)|0) + (($ch$11778$i*5252)|0)|0)) + 4828|0);
       $122 = HEAP32[$region1_count$i>>2]|0;
       $123 = $$pre$i883$i;$j$addr$023$i838$i = 3;$ptr$022$i839$i = $add$i880$i;
       while(1) {
        $and$i840$i = $ptr$022$i839$i & 7;
        $sub$i841$i = (8 - ($and$i840$i))|0;
        $cmp2$i842$i = ($j$addr$023$i838$i|0)<($sub$i841$i|0);
        $j$addr$0$sub$i843$i = $cmp2$i842$i ? $j$addr$023$i838$i : $sub$i841$i;
        $sub5$i844$i = (($j$addr$023$i838$i) - ($j$addr$0$sub$i843$i))|0;
        $shr$i845$i = $122 >> $sub5$i844$i;
        $sub8$i846$i = (($sub$i841$i) - ($j$addr$0$sub$i843$i))|0;
        $shl$i847$i = $shr$i845$i << $sub8$i846$i;
        $shr12$i848$i = $ptr$022$i839$i >> 3;
        $arrayidx13$i849$i = ((((((($gfc)) + 39840|0) + (($123*48)|0)|0)) + 8|0) + ($shr12$i848$i)|0);
        $124 = HEAP8[$arrayidx13$i849$i>>0]|0;
        $conv20$i850$i = $124&255;
        $or$i851$i = $shl$i847$i | $conv20$i850$i;
        $conv14$i852$i = $or$i851$i&255;
        HEAP8[$arrayidx13$i849$i>>0] = $conv14$i852$i;
        $add$i853$i = (($j$addr$0$sub$i843$i) + ($ptr$022$i839$i))|0;
        $cmp$i854$i = ($sub5$i844$i|0)>(0);
        $$pre$i856$i = HEAP32[$h_ptr$i47>>2]|0;
        if ($cmp$i854$i) {
         $123 = $$pre$i856$i;$j$addr$023$i838$i = $sub5$i844$i;$ptr$022$i839$i = $add$i853$i;
        } else {
         $125 = $$pre$i856$i;$add$i853$sink$i = $add$i853$i;
         break;
        }
       }
      } else {
       $82 = $$pre$i1230$i;$j$addr$023$i1185$i = 1;$ptr$022$i1186$i = $add$i1227$i;
       while(1) {
        $and$i1187$i = $ptr$022$i1186$i & 7;
        $sub$i1188$i = (8 - ($and$i1187$i))|0;
        $cmp2$i1189$i = ($j$addr$023$i1185$i|0)<($sub$i1188$i|0);
        $j$addr$0$sub$i1190$i = $cmp2$i1189$i ? $j$addr$023$i1185$i : $sub$i1188$i;
        $sub5$i1191$i = (($j$addr$023$i1185$i) - ($j$addr$0$sub$i1190$i))|0;
        $shr$i1192$i = 1 >>> $sub5$i1191$i;
        $sub8$i1193$i = (($sub$i1188$i) - ($j$addr$0$sub$i1190$i))|0;
        $shl$i1194$i = $shr$i1192$i << $sub8$i1193$i;
        $shr12$i1195$i = $ptr$022$i1186$i >> 3;
        $arrayidx13$i1196$i = ((((((($gfc)) + 39840|0) + (($82*48)|0)|0)) + 8|0) + ($shr12$i1195$i)|0);
        $83 = HEAP8[$arrayidx13$i1196$i>>0]|0;
        $conv20$i1197$i = $83&255;
        $or$i1198$i = $shl$i1194$i | $conv20$i1197$i;
        $conv14$i1199$i = $or$i1198$i&255;
        HEAP8[$arrayidx13$i1196$i>>0] = $conv14$i1199$i;
        $add$i1200$i = (($j$addr$0$sub$i1190$i) + ($ptr$022$i1186$i))|0;
        $cmp$i1201$i = ($sub5$i1191$i|0)>(0);
        $$pre$i1203$i = HEAP32[$h_ptr$i47>>2]|0;
        if ($cmp$i1201$i) {
         $82 = $$pre$i1203$i;$j$addr$023$i1185$i = $sub5$i1191$i;$ptr$022$i1186$i = $add$i1200$i;
        } else {
         break;
        }
       }
       $ptr18$i1208$i = (((((($gfc)) + 39840|0) + (($$pre$i1203$i*48)|0)|0)) + 4|0);
       HEAP32[$ptr18$i1208$i>>2] = $add$i1200$i;
       $84 = HEAP32[$block_type$i>>2]|0;
       $85 = $$pre$i1203$i;$j$addr$023$i1158$i = 2;$ptr$022$i1159$i = $add$i1200$i;
       while(1) {
        $and$i1160$i = $ptr$022$i1159$i & 7;
        $sub$i1161$i = (8 - ($and$i1160$i))|0;
        $cmp2$i1162$i = ($j$addr$023$i1158$i|0)<($sub$i1161$i|0);
        $j$addr$0$sub$i1163$i = $cmp2$i1162$i ? $j$addr$023$i1158$i : $sub$i1161$i;
        $sub5$i1164$i = (($j$addr$023$i1158$i) - ($j$addr$0$sub$i1163$i))|0;
        $shr$i1165$i = $84 >> $sub5$i1164$i;
        $sub8$i1166$i = (($sub$i1161$i) - ($j$addr$0$sub$i1163$i))|0;
        $shl$i1167$i = $shr$i1165$i << $sub8$i1166$i;
        $shr12$i1168$i = $ptr$022$i1159$i >> 3;
        $arrayidx13$i1169$i = ((((((($gfc)) + 39840|0) + (($85*48)|0)|0)) + 8|0) + ($shr12$i1168$i)|0);
        $86 = HEAP8[$arrayidx13$i1169$i>>0]|0;
        $conv20$i1170$i = $86&255;
        $or$i1171$i = $shl$i1167$i | $conv20$i1170$i;
        $conv14$i1172$i = $or$i1171$i&255;
        HEAP8[$arrayidx13$i1169$i>>0] = $conv14$i1172$i;
        $add$i1173$i = (($j$addr$0$sub$i1163$i) + ($ptr$022$i1159$i))|0;
        $cmp$i1174$i = ($sub5$i1164$i|0)>(0);
        $$pre$i1176$i = HEAP32[$h_ptr$i47>>2]|0;
        if ($cmp$i1174$i) {
         $85 = $$pre$i1176$i;$j$addr$023$i1158$i = $sub5$i1164$i;$ptr$022$i1159$i = $add$i1173$i;
        } else {
         break;
        }
       }
       $ptr18$i1181$i = (((((($gfc)) + 39840|0) + (($$pre$i1176$i*48)|0)|0)) + 4|0);
       HEAP32[$ptr18$i1181$i>>2] = $add$i1173$i;
       $mixed_block_flag$i = ((((((($gfc)) + 304|0) + (($gr$01780$i*10504)|0)|0) + (($ch$11778$i*5252)|0)|0)) + 4792|0);
       $87 = HEAP32[$mixed_block_flag$i>>2]|0;
       $88 = $$pre$i1176$i;$j$addr$023$i1131$i = 1;$ptr$022$i1132$i = $add$i1173$i;
       while(1) {
        $and$i1133$i = $ptr$022$i1132$i & 7;
        $sub$i1134$i = (8 - ($and$i1133$i))|0;
        $cmp2$i1135$i = ($j$addr$023$i1131$i|0)<($sub$i1134$i|0);
        $j$addr$0$sub$i1136$i = $cmp2$i1135$i ? $j$addr$023$i1131$i : $sub$i1134$i;
        $sub5$i1137$i = (($j$addr$023$i1131$i) - ($j$addr$0$sub$i1136$i))|0;
        $shr$i1138$i = $87 >> $sub5$i1137$i;
        $sub8$i1139$i = (($sub$i1134$i) - ($j$addr$0$sub$i1136$i))|0;
        $shl$i1140$i = $shr$i1138$i << $sub8$i1139$i;
        $shr12$i1141$i = $ptr$022$i1132$i >> 3;
        $arrayidx13$i1142$i = ((((((($gfc)) + 39840|0) + (($88*48)|0)|0)) + 8|0) + ($shr12$i1141$i)|0);
        $89 = HEAP8[$arrayidx13$i1142$i>>0]|0;
        $conv20$i1143$i = $89&255;
        $or$i1144$i = $shl$i1140$i | $conv20$i1143$i;
        $conv14$i1145$i = $or$i1144$i&255;
        HEAP8[$arrayidx13$i1142$i>>0] = $conv14$i1145$i;
        $add$i1146$i = (($j$addr$0$sub$i1136$i) + ($ptr$022$i1132$i))|0;
        $cmp$i1147$i = ($sub5$i1137$i|0)>(0);
        $$pre$i1149$i = HEAP32[$h_ptr$i47>>2]|0;
        if ($cmp$i1147$i) {
         $88 = $$pre$i1149$i;$j$addr$023$i1131$i = $sub5$i1137$i;$ptr$022$i1132$i = $add$i1146$i;
        } else {
         break;
        }
       }
       $ptr18$i1154$i = (((((($gfc)) + 39840|0) + (($$pre$i1149$i*48)|0)|0)) + 4|0);
       HEAP32[$ptr18$i1154$i>>2] = $add$i1146$i;
       $arrayidx40$i = ((((((($gfc)) + 304|0) + (($gr$01780$i*10504)|0)|0) + (($ch$11778$i*5252)|0)|0)) + 4796|0);
       $90 = HEAP32[$arrayidx40$i>>2]|0;
       $cmp41$i = ($90|0)==(14);
       if ($cmp41$i) {
        HEAP32[$arrayidx40$i>>2] = 16;
        $$pre1806$i = HEAP32[$h_ptr$i47>>2]|0;
        $ptr1$i1103$phi$trans$insert$i = (((((($gfc)) + 39840|0) + (($$pre1806$i*48)|0)|0)) + 4|0);
        $$pre1807$i = HEAP32[$ptr1$i1103$phi$trans$insert$i>>2]|0;
        $485 = $$pre1807$i;$486 = $$pre1806$i;$91 = 16;
       } else {
        $485 = $add$i1146$i;$486 = $$pre$i1149$i;$91 = $90;
       }
       $92 = $486;$j$addr$023$i1104$i = 5;$ptr$022$i1105$i = $485;
       while(1) {
        $and$i1106$i = $ptr$022$i1105$i & 7;
        $sub$i1107$i = (8 - ($and$i1106$i))|0;
        $cmp2$i1108$i = ($j$addr$023$i1104$i|0)<($sub$i1107$i|0);
        $j$addr$0$sub$i1109$i = $cmp2$i1108$i ? $j$addr$023$i1104$i : $sub$i1107$i;
        $sub5$i1110$i = (($j$addr$023$i1104$i) - ($j$addr$0$sub$i1109$i))|0;
        $shr$i1111$i = $91 >> $sub5$i1110$i;
        $sub8$i1112$i = (($sub$i1107$i) - ($j$addr$0$sub$i1109$i))|0;
        $shl$i1113$i = $shr$i1111$i << $sub8$i1112$i;
        $shr12$i1114$i = $ptr$022$i1105$i >> 3;
        $arrayidx13$i1115$i = ((((((($gfc)) + 39840|0) + (($92*48)|0)|0)) + 8|0) + ($shr12$i1114$i)|0);
        $93 = HEAP8[$arrayidx13$i1115$i>>0]|0;
        $conv20$i1116$i = $93&255;
        $or$i1117$i = $shl$i1113$i | $conv20$i1116$i;
        $conv14$i1118$i = $or$i1117$i&255;
        HEAP8[$arrayidx13$i1115$i>>0] = $conv14$i1118$i;
        $add$i1119$i = (($j$addr$0$sub$i1109$i) + ($ptr$022$i1105$i))|0;
        $cmp$i1120$i = ($sub5$i1110$i|0)>(0);
        $$pre$i1122$i = HEAP32[$h_ptr$i47>>2]|0;
        if ($cmp$i1120$i) {
         $92 = $$pre$i1122$i;$j$addr$023$i1104$i = $sub5$i1110$i;$ptr$022$i1105$i = $add$i1119$i;
        } else {
         break;
        }
       }
       $ptr18$i1127$i = (((((($gfc)) + 39840|0) + (($$pre$i1122$i*48)|0)|0)) + 4|0);
       HEAP32[$ptr18$i1127$i>>2] = $add$i1119$i;
       $arrayidx49$i = ((((((($gfc)) + 304|0) + (($gr$01780$i*10504)|0)|0) + (($ch$11778$i*5252)|0)|0)) + 4800|0);
       $94 = HEAP32[$arrayidx49$i>>2]|0;
       $cmp50$i = ($94|0)==(14);
       if ($cmp50$i) {
        HEAP32[$arrayidx49$i>>2] = 16;
        $$pre1808$i = HEAP32[$h_ptr$i47>>2]|0;
        $ptr1$i1076$phi$trans$insert$i = (((((($gfc)) + 39840|0) + (($$pre1808$i*48)|0)|0)) + 4|0);
        $$pre1809$i = HEAP32[$ptr1$i1076$phi$trans$insert$i>>2]|0;
        $487 = $$pre1809$i;$488 = $$pre1808$i;$95 = 16;
       } else {
        $487 = $add$i1119$i;$488 = $$pre$i1122$i;$95 = $94;
       }
       $96 = $488;$j$addr$023$i1077$i = 5;$ptr$022$i1078$i = $487;
       while(1) {
        $and$i1079$i = $ptr$022$i1078$i & 7;
        $sub$i1080$i = (8 - ($and$i1079$i))|0;
        $cmp2$i1081$i = ($j$addr$023$i1077$i|0)<($sub$i1080$i|0);
        $j$addr$0$sub$i1082$i = $cmp2$i1081$i ? $j$addr$023$i1077$i : $sub$i1080$i;
        $sub5$i1083$i = (($j$addr$023$i1077$i) - ($j$addr$0$sub$i1082$i))|0;
        $shr$i1084$i = $95 >> $sub5$i1083$i;
        $sub8$i1085$i = (($sub$i1080$i) - ($j$addr$0$sub$i1082$i))|0;
        $shl$i1086$i = $shr$i1084$i << $sub8$i1085$i;
        $shr12$i1087$i = $ptr$022$i1078$i >> 3;
        $arrayidx13$i1088$i = ((((((($gfc)) + 39840|0) + (($96*48)|0)|0)) + 8|0) + ($shr12$i1087$i)|0);
        $97 = HEAP8[$arrayidx13$i1088$i>>0]|0;
        $conv20$i1089$i = $97&255;
        $or$i1090$i = $shl$i1086$i | $conv20$i1089$i;
        $conv14$i1091$i = $or$i1090$i&255;
        HEAP8[$arrayidx13$i1088$i>>0] = $conv14$i1091$i;
        $add$i1092$i = (($j$addr$0$sub$i1082$i) + ($ptr$022$i1078$i))|0;
        $cmp$i1093$i = ($sub5$i1083$i|0)>(0);
        $$pre$i1095$i = HEAP32[$h_ptr$i47>>2]|0;
        if ($cmp$i1093$i) {
         $96 = $$pre$i1095$i;$j$addr$023$i1077$i = $sub5$i1083$i;$ptr$022$i1078$i = $add$i1092$i;
        } else {
         break;
        }
       }
       $ptr18$i1100$i = (((((($gfc)) + 39840|0) + (($$pre$i1095$i*48)|0)|0)) + 4|0);
       HEAP32[$ptr18$i1100$i>>2] = $add$i1092$i;
       $arrayidx57$i = ((((((($gfc)) + 304|0) + (($gr$01780$i*10504)|0)|0) + (($ch$11778$i*5252)|0)|0)) + 4808|0);
       $98 = HEAP32[$arrayidx57$i>>2]|0;
       $99 = $$pre$i1095$i;$j$addr$023$i1050$i = 3;$ptr$022$i1051$i = $add$i1092$i;
       while(1) {
        $and$i1052$i = $ptr$022$i1051$i & 7;
        $sub$i1053$i = (8 - ($and$i1052$i))|0;
        $cmp2$i1054$i = ($j$addr$023$i1050$i|0)<($sub$i1053$i|0);
        $j$addr$0$sub$i1055$i = $cmp2$i1054$i ? $j$addr$023$i1050$i : $sub$i1053$i;
        $sub5$i1056$i = (($j$addr$023$i1050$i) - ($j$addr$0$sub$i1055$i))|0;
        $shr$i1057$i = $98 >> $sub5$i1056$i;
        $sub8$i1058$i = (($sub$i1053$i) - ($j$addr$0$sub$i1055$i))|0;
        $shl$i1059$i = $shr$i1057$i << $sub8$i1058$i;
        $shr12$i1060$i = $ptr$022$i1051$i >> 3;
        $arrayidx13$i1061$i = ((((((($gfc)) + 39840|0) + (($99*48)|0)|0)) + 8|0) + ($shr12$i1060$i)|0);
        $100 = HEAP8[$arrayidx13$i1061$i>>0]|0;
        $conv20$i1062$i = $100&255;
        $or$i1063$i = $shl$i1059$i | $conv20$i1062$i;
        $conv14$i1064$i = $or$i1063$i&255;
        HEAP8[$arrayidx13$i1061$i>>0] = $conv14$i1064$i;
        $add$i1065$i = (($j$addr$0$sub$i1055$i) + ($ptr$022$i1051$i))|0;
        $cmp$i1066$i = ($sub5$i1056$i|0)>(0);
        $$pre$i1068$i = HEAP32[$h_ptr$i47>>2]|0;
        if ($cmp$i1066$i) {
         $99 = $$pre$i1068$i;$j$addr$023$i1050$i = $sub5$i1056$i;$ptr$022$i1051$i = $add$i1065$i;
        } else {
         break;
        }
       }
       $ptr18$i1073$i = (((((($gfc)) + 39840|0) + (($$pre$i1068$i*48)|0)|0)) + 4|0);
       HEAP32[$ptr18$i1073$i>>2] = $add$i1065$i;
       $arrayidx59$i = ((((((($gfc)) + 304|0) + (($gr$01780$i*10504)|0)|0) + (($ch$11778$i*5252)|0)|0)) + 4812|0);
       $101 = HEAP32[$arrayidx59$i>>2]|0;
       $102 = $$pre$i1068$i;$j$addr$023$i1023$i = 3;$ptr$022$i1024$i = $add$i1065$i;
       while(1) {
        $and$i1025$i = $ptr$022$i1024$i & 7;
        $sub$i1026$i = (8 - ($and$i1025$i))|0;
        $cmp2$i1027$i = ($j$addr$023$i1023$i|0)<($sub$i1026$i|0);
        $j$addr$0$sub$i1028$i = $cmp2$i1027$i ? $j$addr$023$i1023$i : $sub$i1026$i;
        $sub5$i1029$i = (($j$addr$023$i1023$i) - ($j$addr$0$sub$i1028$i))|0;
        $shr$i1030$i = $101 >> $sub5$i1029$i;
        $sub8$i1031$i = (($sub$i1026$i) - ($j$addr$0$sub$i1028$i))|0;
        $shl$i1032$i = $shr$i1030$i << $sub8$i1031$i;
        $shr12$i1033$i = $ptr$022$i1024$i >> 3;
        $arrayidx13$i1034$i = ((((((($gfc)) + 39840|0) + (($102*48)|0)|0)) + 8|0) + ($shr12$i1033$i)|0);
        $103 = HEAP8[$arrayidx13$i1034$i>>0]|0;
        $conv20$i1035$i = $103&255;
        $or$i1036$i = $shl$i1032$i | $conv20$i1035$i;
        $conv14$i1037$i = $or$i1036$i&255;
        HEAP8[$arrayidx13$i1034$i>>0] = $conv14$i1037$i;
        $add$i1038$i = (($j$addr$0$sub$i1028$i) + ($ptr$022$i1024$i))|0;
        $cmp$i1039$i = ($sub5$i1029$i|0)>(0);
        $$pre$i1041$i = HEAP32[$h_ptr$i47>>2]|0;
        if ($cmp$i1039$i) {
         $102 = $$pre$i1041$i;$j$addr$023$i1023$i = $sub5$i1029$i;$ptr$022$i1024$i = $add$i1038$i;
        } else {
         break;
        }
       }
       $ptr18$i1046$i = (((((($gfc)) + 39840|0) + (($$pre$i1041$i*48)|0)|0)) + 4|0);
       HEAP32[$ptr18$i1046$i>>2] = $add$i1038$i;
       $arrayidx61$i = ((((((($gfc)) + 304|0) + (($gr$01780$i*10504)|0)|0) + (($ch$11778$i*5252)|0)|0)) + 4816|0);
       $104 = HEAP32[$arrayidx61$i>>2]|0;
       $105 = $$pre$i1041$i;$j$addr$023$i996$i = 3;$ptr$022$i997$i = $add$i1038$i;
       while(1) {
        $and$i998$i = $ptr$022$i997$i & 7;
        $sub$i999$i = (8 - ($and$i998$i))|0;
        $cmp2$i1000$i = ($j$addr$023$i996$i|0)<($sub$i999$i|0);
        $j$addr$0$sub$i1001$i = $cmp2$i1000$i ? $j$addr$023$i996$i : $sub$i999$i;
        $sub5$i1002$i = (($j$addr$023$i996$i) - ($j$addr$0$sub$i1001$i))|0;
        $shr$i1003$i = $104 >> $sub5$i1002$i;
        $sub8$i1004$i = (($sub$i999$i) - ($j$addr$0$sub$i1001$i))|0;
        $shl$i1005$i = $shr$i1003$i << $sub8$i1004$i;
        $shr12$i1006$i = $ptr$022$i997$i >> 3;
        $arrayidx13$i1007$i = ((((((($gfc)) + 39840|0) + (($105*48)|0)|0)) + 8|0) + ($shr12$i1006$i)|0);
        $106 = HEAP8[$arrayidx13$i1007$i>>0]|0;
        $conv20$i1008$i = $106&255;
        $or$i1009$i = $shl$i1005$i | $conv20$i1008$i;
        $conv14$i1010$i = $or$i1009$i&255;
        HEAP8[$arrayidx13$i1007$i>>0] = $conv14$i1010$i;
        $add$i1011$i = (($j$addr$0$sub$i1001$i) + ($ptr$022$i997$i))|0;
        $cmp$i1012$i = ($sub5$i1002$i|0)>(0);
        $$pre$i1014$i = HEAP32[$h_ptr$i47>>2]|0;
        if ($cmp$i1012$i) {
         $105 = $$pre$i1014$i;$j$addr$023$i996$i = $sub5$i1002$i;$ptr$022$i997$i = $add$i1011$i;
        } else {
         $125 = $$pre$i1014$i;$add$i853$sink$i = $add$i1011$i;
         break;
        }
       }
      }
      $ptr18$i861$i = (((((($gfc)) + 39840|0) + (($125*48)|0)|0)) + 4|0);
      HEAP32[$ptr18$i861$i>>2] = $add$i853$sink$i;
      $preflag$i = ((((((($gfc)) + 304|0) + (($gr$01780$i*10504)|0)|0) + (($ch$11778$i*5252)|0)|0)) + 4832|0);
      $126 = HEAP32[$preflag$i>>2]|0;
      $127 = $125;$j$addr$023$i811$i = 1;$ptr$022$i812$i = $add$i853$sink$i;
      while(1) {
       $and$i813$i = $ptr$022$i812$i & 7;
       $sub$i814$i = (8 - ($and$i813$i))|0;
       $cmp2$i815$i = ($j$addr$023$i811$i|0)<($sub$i814$i|0);
       $j$addr$0$sub$i816$i = $cmp2$i815$i ? $j$addr$023$i811$i : $sub$i814$i;
       $sub5$i817$i = (($j$addr$023$i811$i) - ($j$addr$0$sub$i816$i))|0;
       $shr$i818$i = $126 >> $sub5$i817$i;
       $sub8$i819$i = (($sub$i814$i) - ($j$addr$0$sub$i816$i))|0;
       $shl$i820$i = $shr$i818$i << $sub8$i819$i;
       $shr12$i821$i = $ptr$022$i812$i >> 3;
       $arrayidx13$i822$i = ((((((($gfc)) + 39840|0) + (($127*48)|0)|0)) + 8|0) + ($shr12$i821$i)|0);
       $128 = HEAP8[$arrayidx13$i822$i>>0]|0;
       $conv20$i823$i = $128&255;
       $or$i824$i = $shl$i820$i | $conv20$i823$i;
       $conv14$i825$i = $or$i824$i&255;
       HEAP8[$arrayidx13$i822$i>>0] = $conv14$i825$i;
       $add$i826$i = (($j$addr$0$sub$i816$i) + ($ptr$022$i812$i))|0;
       $cmp$i827$i = ($sub5$i817$i|0)>(0);
       $$pre$i829$i = HEAP32[$h_ptr$i47>>2]|0;
       if ($cmp$i827$i) {
        $127 = $$pre$i829$i;$j$addr$023$i811$i = $sub5$i817$i;$ptr$022$i812$i = $add$i826$i;
       } else {
        break;
       }
      }
      $ptr18$i834$i = (((((($gfc)) + 39840|0) + (($$pre$i829$i*48)|0)|0)) + 4|0);
      HEAP32[$ptr18$i834$i>>2] = $add$i826$i;
      $scalefac_scale$i = ((((((($gfc)) + 304|0) + (($gr$01780$i*10504)|0)|0) + (($ch$11778$i*5252)|0)|0)) + 4836|0);
      $129 = HEAP32[$scalefac_scale$i>>2]|0;
      $130 = $$pre$i829$i;$j$addr$023$i784$i = 1;$ptr$022$i785$i = $add$i826$i;
      while(1) {
       $and$i786$i = $ptr$022$i785$i & 7;
       $sub$i787$i = (8 - ($and$i786$i))|0;
       $cmp2$i788$i = ($j$addr$023$i784$i|0)<($sub$i787$i|0);
       $j$addr$0$sub$i789$i = $cmp2$i788$i ? $j$addr$023$i784$i : $sub$i787$i;
       $sub5$i790$i = (($j$addr$023$i784$i) - ($j$addr$0$sub$i789$i))|0;
       $shr$i791$i = $129 >> $sub5$i790$i;
       $sub8$i792$i = (($sub$i787$i) - ($j$addr$0$sub$i789$i))|0;
       $shl$i793$i = $shr$i791$i << $sub8$i792$i;
       $shr12$i794$i = $ptr$022$i785$i >> 3;
       $arrayidx13$i795$i = ((((((($gfc)) + 39840|0) + (($130*48)|0)|0)) + 8|0) + ($shr12$i794$i)|0);
       $131 = HEAP8[$arrayidx13$i795$i>>0]|0;
       $conv20$i796$i = $131&255;
       $or$i797$i = $shl$i793$i | $conv20$i796$i;
       $conv14$i798$i = $or$i797$i&255;
       HEAP8[$arrayidx13$i795$i>>0] = $conv14$i798$i;
       $add$i799$i = (($j$addr$0$sub$i789$i) + ($ptr$022$i785$i))|0;
       $cmp$i800$i = ($sub5$i790$i|0)>(0);
       $$pre$i802$i = HEAP32[$h_ptr$i47>>2]|0;
       if ($cmp$i800$i) {
        $130 = $$pre$i802$i;$j$addr$023$i784$i = $sub5$i790$i;$ptr$022$i785$i = $add$i799$i;
       } else {
        break;
       }
      }
      $ptr18$i807$i = (((((($gfc)) + 39840|0) + (($$pre$i802$i*48)|0)|0)) + 4|0);
      HEAP32[$ptr18$i807$i>>2] = $add$i799$i;
      $count1table_select$i = ((((((($gfc)) + 304|0) + (($gr$01780$i*10504)|0)|0) + (($ch$11778$i*5252)|0)|0)) + 4840|0);
      $132 = HEAP32[$count1table_select$i>>2]|0;
      $133 = $$pre$i802$i;$j$addr$023$i757$i = 1;$ptr$022$i758$i = $add$i799$i;
      while(1) {
       $and$i759$i = $ptr$022$i758$i & 7;
       $sub$i760$i = (8 - ($and$i759$i))|0;
       $cmp2$i761$i = ($j$addr$023$i757$i|0)<($sub$i760$i|0);
       $j$addr$0$sub$i762$i = $cmp2$i761$i ? $j$addr$023$i757$i : $sub$i760$i;
       $sub5$i763$i = (($j$addr$023$i757$i) - ($j$addr$0$sub$i762$i))|0;
       $shr$i764$i = $132 >> $sub5$i763$i;
       $sub8$i765$i = (($sub$i760$i) - ($j$addr$0$sub$i762$i))|0;
       $shl$i766$i = $shr$i764$i << $sub8$i765$i;
       $shr12$i767$i = $ptr$022$i758$i >> 3;
       $arrayidx13$i768$i = ((((((($gfc)) + 39840|0) + (($133*48)|0)|0)) + 8|0) + ($shr12$i767$i)|0);
       $134 = HEAP8[$arrayidx13$i768$i>>0]|0;
       $conv20$i769$i = $134&255;
       $or$i770$i = $shl$i766$i | $conv20$i769$i;
       $conv14$i771$i = $or$i770$i&255;
       HEAP8[$arrayidx13$i768$i>>0] = $conv14$i771$i;
       $add$i772$i = (($j$addr$0$sub$i762$i) + ($ptr$022$i758$i))|0;
       $cmp$i773$i = ($sub5$i763$i|0)>(0);
       $$pre$i775$i = HEAP32[$h_ptr$i47>>2]|0;
       if ($cmp$i773$i) {
        $133 = $$pre$i775$i;$j$addr$023$i757$i = $sub5$i763$i;$ptr$022$i758$i = $add$i772$i;
       } else {
        break;
       }
      }
      $ptr18$i780$i = (((((($gfc)) + 39840|0) + (($$pre$i775$i*48)|0)|0)) + 4|0);
      HEAP32[$ptr18$i780$i>>2] = $add$i772$i;
      $inc92$i = (($ch$11778$i) + 1)|0;
      $135 = HEAP32[$channels_out$i>>2]|0;
      $cmp33$i = ($inc92$i|0)<($135|0);
      if ($cmp33$i) {
       $483 = $add$i772$i;$484 = $$pre$i775$i;$ch$11778$i = $inc92$i;
      } else {
       $481 = $$pre$i775$i;$482 = $135;
       break;
      }
     }
    } else {
     $481 = $67;$482 = $66;
    }
    $inc95$i = (($gr$01780$i) + 1)|0;
    $exitcond$i = ($inc95$i|0)==(2);
    if ($exitcond$i) {
     $208 = $481;
     break;
    } else {
     $66 = $482;$67 = $481;$gr$01780$i = $inc95$i;
    }
   }
  } else {
   $136 = $$pre$i1469$i;$j$addr$023$i730$i = 8;$ptr$022$i731$i = $478;
   while(1) {
    $and$i732$i = $ptr$022$i731$i & 7;
    $sub$i733$i = (8 - ($and$i732$i))|0;
    $cmp2$i734$i = ($j$addr$023$i730$i|0)<($sub$i733$i|0);
    $j$addr$0$sub$i735$i = $cmp2$i734$i ? $j$addr$023$i730$i : $sub$i733$i;
    $sub5$i736$i = (($j$addr$023$i730$i) - ($j$addr$0$sub$i735$i))|0;
    $shr$i737$i = $52 >> $sub5$i736$i;
    $sub8$i738$i = (($sub$i733$i) - ($j$addr$0$sub$i735$i))|0;
    $shl$i739$i = $shr$i737$i << $sub8$i738$i;
    $shr12$i740$i = $ptr$022$i731$i >> 3;
    $arrayidx13$i741$i = ((((((($gfc)) + 39840|0) + (($136*48)|0)|0)) + 8|0) + ($shr12$i740$i)|0);
    $137 = HEAP8[$arrayidx13$i741$i>>0]|0;
    $conv20$i742$i = $137&255;
    $or$i743$i = $shl$i739$i | $conv20$i742$i;
    $conv14$i744$i = $or$i743$i&255;
    HEAP8[$arrayidx13$i741$i>>0] = $conv14$i744$i;
    $add$i745$i = (($j$addr$0$sub$i735$i) + ($ptr$022$i731$i))|0;
    $cmp$i746$i = ($sub5$i736$i|0)>(0);
    $$pre$i748$i = HEAP32[$h_ptr$i47>>2]|0;
    if ($cmp$i746$i) {
     $136 = $$pre$i748$i;$j$addr$023$i730$i = $sub5$i736$i;$ptr$022$i731$i = $add$i745$i;
    } else {
     break;
    }
   }
   $ptr18$i753$i = (((((($gfc)) + 39840|0) + (($$pre$i748$i*48)|0)|0)) + 4|0);
   HEAP32[$ptr18$i753$i>>2] = $add$i745$i;
   $private_bits99$i = ((($gfc)) + 21316|0);
   $138 = HEAP32[$private_bits99$i>>2]|0;
   $channels_out100$i = ((($gfc)) + 72|0);
   $139 = HEAP32[$channels_out100$i>>2]|0;
   $cmp21$i$i = ($139|0)>(0);
   if ($cmp21$i$i) {
    $140 = $$pre$i748$i;$j$addr$023$i705$i = $139;$ptr$022$i706$i = $add$i745$i;
   } else {
    HEAP32[$ptr18$i753$i>>2] = $add$i745$i;
    $208 = $$pre$i748$i;
    break;
   }
   while(1) {
    $and$i707$i = $ptr$022$i706$i & 7;
    $sub$i708$i = (8 - ($and$i707$i))|0;
    $cmp2$i709$i = ($j$addr$023$i705$i|0)<($sub$i708$i|0);
    $j$addr$0$sub$i710$i = $cmp2$i709$i ? $j$addr$023$i705$i : $sub$i708$i;
    $sub5$i711$i = (($j$addr$023$i705$i) - ($j$addr$0$sub$i710$i))|0;
    $shr$i712$i = $138 >> $sub5$i711$i;
    $sub8$i713$i = (($sub$i708$i) - ($j$addr$0$sub$i710$i))|0;
    $shl$i714$i = $shr$i712$i << $sub8$i713$i;
    $shr12$i715$i = $ptr$022$i706$i >> 3;
    $arrayidx13$i716$i = ((((((($gfc)) + 39840|0) + (($140*48)|0)|0)) + 8|0) + ($shr12$i715$i)|0);
    $141 = HEAP8[$arrayidx13$i716$i>>0]|0;
    $conv20$i717$i = $141&255;
    $or$i718$i = $shl$i714$i | $conv20$i717$i;
    $conv14$i719$i = $or$i718$i&255;
    HEAP8[$arrayidx13$i716$i>>0] = $conv14$i719$i;
    $add$i720$i = (($j$addr$0$sub$i710$i) + ($ptr$022$i706$i))|0;
    $cmp$i721$i = ($sub5$i711$i|0)>(0);
    $$pre$i723$i = HEAP32[$h_ptr$i47>>2]|0;
    if ($cmp$i721$i) {
     $140 = $$pre$i723$i;$j$addr$023$i705$i = $sub5$i711$i;$ptr$022$i706$i = $add$i720$i;
    } else {
     break;
    }
   }
   $$pre$i = HEAP32[$channels_out100$i>>2]|0;
   $ptr18$i726$i = (((((($gfc)) + 39840|0) + (($$pre$i723$i*48)|0)|0)) + 4|0);
   HEAP32[$ptr18$i726$i>>2] = $add$i720$i;
   $cmp1031785$i = ($$pre$i|0)>(0);
   if ($cmp1031785$i) {
    $495 = $add$i720$i;$496 = $$pre$i723$i;$ch$21786$i = 0;
    while(1) {
     $part2_3_length109$i = (((((($gfc)) + 304|0) + (($ch$21786$i*5252)|0)|0)) + 4768|0);
     $142 = HEAP32[$part2_3_length109$i>>2]|0;
     $part2_length110$i = (((((($gfc)) + 304|0) + (($ch$21786$i*5252)|0)|0)) + 4844|0);
     $143 = HEAP32[$part2_length110$i>>2]|0;
     $add111$i = (($143) + ($142))|0;
     $144 = $496;$j$addr$023$i680$i = 12;$ptr$022$i681$i = $495;
     while(1) {
      $and$i682$i = $ptr$022$i681$i & 7;
      $sub$i683$i = (8 - ($and$i682$i))|0;
      $cmp2$i684$i = ($j$addr$023$i680$i|0)<($sub$i683$i|0);
      $j$addr$0$sub$i685$i = $cmp2$i684$i ? $j$addr$023$i680$i : $sub$i683$i;
      $sub5$i686$i = (($j$addr$023$i680$i) - ($j$addr$0$sub$i685$i))|0;
      $shr$i687$i = $add111$i >> $sub5$i686$i;
      $sub8$i688$i = (($sub$i683$i) - ($j$addr$0$sub$i685$i))|0;
      $shl$i689$i = $shr$i687$i << $sub8$i688$i;
      $shr12$i690$i = $ptr$022$i681$i >> 3;
      $arrayidx13$i691$i = ((((((($gfc)) + 39840|0) + (($144*48)|0)|0)) + 8|0) + ($shr12$i690$i)|0);
      $145 = HEAP8[$arrayidx13$i691$i>>0]|0;
      $conv20$i692$i = $145&255;
      $or$i693$i = $shl$i689$i | $conv20$i692$i;
      $conv14$i694$i = $or$i693$i&255;
      HEAP8[$arrayidx13$i691$i>>0] = $conv14$i694$i;
      $add$i695$i = (($j$addr$0$sub$i685$i) + ($ptr$022$i681$i))|0;
      $cmp$i696$i = ($sub5$i686$i|0)>(0);
      $$pre$i698$i = HEAP32[$h_ptr$i47>>2]|0;
      if ($cmp$i696$i) {
       $144 = $$pre$i698$i;$j$addr$023$i680$i = $sub5$i686$i;$ptr$022$i681$i = $add$i695$i;
      } else {
       break;
      }
     }
     $ptr18$i701$i = (((((($gfc)) + 39840|0) + (($$pre$i698$i*48)|0)|0)) + 4|0);
     HEAP32[$ptr18$i701$i>>2] = $add$i695$i;
     $big_values112$i = (((((($gfc)) + 304|0) + (($ch$21786$i*5252)|0)|0)) + 4772|0);
     $146 = HEAP32[$big_values112$i>>2]|0;
     $div113$i = (($146|0) / 2)&-1;
     $147 = $$pre$i698$i;$j$addr$023$i655$i = 9;$ptr$022$i656$i = $add$i695$i;
     while(1) {
      $and$i657$i = $ptr$022$i656$i & 7;
      $sub$i658$i = (8 - ($and$i657$i))|0;
      $cmp2$i659$i = ($j$addr$023$i655$i|0)<($sub$i658$i|0);
      $j$addr$0$sub$i660$i = $cmp2$i659$i ? $j$addr$023$i655$i : $sub$i658$i;
      $sub5$i661$i = (($j$addr$023$i655$i) - ($j$addr$0$sub$i660$i))|0;
      $shr$i662$i = $div113$i >> $sub5$i661$i;
      $sub8$i663$i = (($sub$i658$i) - ($j$addr$0$sub$i660$i))|0;
      $shl$i664$i = $shr$i662$i << $sub8$i663$i;
      $shr12$i665$i = $ptr$022$i656$i >> 3;
      $arrayidx13$i666$i = ((((((($gfc)) + 39840|0) + (($147*48)|0)|0)) + 8|0) + ($shr12$i665$i)|0);
      $148 = HEAP8[$arrayidx13$i666$i>>0]|0;
      $conv20$i667$i = $148&255;
      $or$i668$i = $shl$i664$i | $conv20$i667$i;
      $conv14$i669$i = $or$i668$i&255;
      HEAP8[$arrayidx13$i666$i>>0] = $conv14$i669$i;
      $add$i670$i = (($j$addr$0$sub$i660$i) + ($ptr$022$i656$i))|0;
      $cmp$i671$i = ($sub5$i661$i|0)>(0);
      $$pre$i673$i = HEAP32[$h_ptr$i47>>2]|0;
      if ($cmp$i671$i) {
       $147 = $$pre$i673$i;$j$addr$023$i655$i = $sub5$i661$i;$ptr$022$i656$i = $add$i670$i;
      } else {
       break;
      }
     }
     $ptr18$i676$i = (((((($gfc)) + 39840|0) + (($$pre$i673$i*48)|0)|0)) + 4|0);
     HEAP32[$ptr18$i676$i>>2] = $add$i670$i;
     $global_gain114$i = (((((($gfc)) + 304|0) + (($ch$21786$i*5252)|0)|0)) + 4780|0);
     $149 = HEAP32[$global_gain114$i>>2]|0;
     $150 = $$pre$i673$i;$j$addr$023$i630$i = 8;$ptr$022$i631$i = $add$i670$i;
     while(1) {
      $and$i632$i = $ptr$022$i631$i & 7;
      $sub$i633$i = (8 - ($and$i632$i))|0;
      $cmp2$i634$i = ($j$addr$023$i630$i|0)<($sub$i633$i|0);
      $j$addr$0$sub$i635$i = $cmp2$i634$i ? $j$addr$023$i630$i : $sub$i633$i;
      $sub5$i636$i = (($j$addr$023$i630$i) - ($j$addr$0$sub$i635$i))|0;
      $shr$i637$i = $149 >> $sub5$i636$i;
      $sub8$i638$i = (($sub$i633$i) - ($j$addr$0$sub$i635$i))|0;
      $shl$i639$i = $shr$i637$i << $sub8$i638$i;
      $shr12$i640$i = $ptr$022$i631$i >> 3;
      $arrayidx13$i641$i = ((((((($gfc)) + 39840|0) + (($150*48)|0)|0)) + 8|0) + ($shr12$i640$i)|0);
      $151 = HEAP8[$arrayidx13$i641$i>>0]|0;
      $conv20$i642$i = $151&255;
      $or$i643$i = $shl$i639$i | $conv20$i642$i;
      $conv14$i644$i = $or$i643$i&255;
      HEAP8[$arrayidx13$i641$i>>0] = $conv14$i644$i;
      $add$i645$i = (($j$addr$0$sub$i635$i) + ($ptr$022$i631$i))|0;
      $cmp$i646$i = ($sub5$i636$i|0)>(0);
      $$pre$i648$i = HEAP32[$h_ptr$i47>>2]|0;
      if ($cmp$i646$i) {
       $150 = $$pre$i648$i;$j$addr$023$i630$i = $sub5$i636$i;$ptr$022$i631$i = $add$i645$i;
      } else {
       break;
      }
     }
     $ptr18$i651$i = (((((($gfc)) + 39840|0) + (($$pre$i648$i*48)|0)|0)) + 4|0);
     HEAP32[$ptr18$i651$i>>2] = $add$i645$i;
     $scalefac_compress115$i = (((((($gfc)) + 304|0) + (($ch$21786$i*5252)|0)|0)) + 4784|0);
     $152 = HEAP32[$scalefac_compress115$i>>2]|0;
     $153 = $$pre$i648$i;$j$addr$023$i605$i = 9;$ptr$022$i606$i = $add$i645$i;
     while(1) {
      $and$i607$i = $ptr$022$i606$i & 7;
      $sub$i608$i = (8 - ($and$i607$i))|0;
      $cmp2$i609$i = ($j$addr$023$i605$i|0)<($sub$i608$i|0);
      $j$addr$0$sub$i610$i = $cmp2$i609$i ? $j$addr$023$i605$i : $sub$i608$i;
      $sub5$i611$i = (($j$addr$023$i605$i) - ($j$addr$0$sub$i610$i))|0;
      $shr$i612$i = $152 >> $sub5$i611$i;
      $sub8$i613$i = (($sub$i608$i) - ($j$addr$0$sub$i610$i))|0;
      $shl$i614$i = $shr$i612$i << $sub8$i613$i;
      $shr12$i615$i = $ptr$022$i606$i >> 3;
      $arrayidx13$i616$i = ((((((($gfc)) + 39840|0) + (($153*48)|0)|0)) + 8|0) + ($shr12$i615$i)|0);
      $154 = HEAP8[$arrayidx13$i616$i>>0]|0;
      $conv20$i617$i = $154&255;
      $or$i618$i = $shl$i614$i | $conv20$i617$i;
      $conv14$i619$i = $or$i618$i&255;
      HEAP8[$arrayidx13$i616$i>>0] = $conv14$i619$i;
      $add$i620$i = (($j$addr$0$sub$i610$i) + ($ptr$022$i606$i))|0;
      $cmp$i621$i = ($sub5$i611$i|0)>(0);
      $$pre$i623$i = HEAP32[$h_ptr$i47>>2]|0;
      if ($cmp$i621$i) {
       $153 = $$pre$i623$i;$j$addr$023$i605$i = $sub5$i611$i;$ptr$022$i606$i = $add$i620$i;
      } else {
       break;
      }
     }
     $ptr18$i626$i = (((((($gfc)) + 39840|0) + (($$pre$i623$i*48)|0)|0)) + 4|0);
     HEAP32[$ptr18$i626$i>>2] = $add$i620$i;
     $block_type116$i = (((((($gfc)) + 304|0) + (($ch$21786$i*5252)|0)|0)) + 4788|0);
     $155 = HEAP32[$block_type116$i>>2]|0;
     $cmp117$i = ($155|0)==(0);
     if ($cmp117$i) {
      $j$addr$023$i384$i = 1;$ptr$022$i385$i = $add$i620$i;
      while(1) {
       $and$i386$i = $ptr$022$i385$i & 7;
       $sub$i387$i = (8 - ($and$i386$i))|0;
       $cmp2$i388$i = ($j$addr$023$i384$i|0)<($sub$i387$i|0);
       $j$addr$0$sub$i389$i = $cmp2$i388$i ? $j$addr$023$i384$i : $sub$i387$i;
       $sub5$i390$i = (($j$addr$023$i384$i) - ($j$addr$0$sub$i389$i))|0;
       $add$i395$i = (($j$addr$0$sub$i389$i) + ($ptr$022$i385$i))|0;
       $cmp$i396$i = ($sub5$i390$i|0)>(0);
       if ($cmp$i396$i) {
        $j$addr$023$i384$i = $sub5$i390$i;$ptr$022$i385$i = $add$i395$i;
       } else {
        break;
       }
      }
      HEAP32[$ptr18$i626$i>>2] = $add$i395$i;
      $arrayidx147$i = (((((($gfc)) + 304|0) + (($ch$21786$i*5252)|0)|0)) + 4796|0);
      $181 = HEAP32[$arrayidx147$i>>2]|0;
      $cmp148$i = ($181|0)==(14);
      if ($cmp148$i) {
       HEAP32[$arrayidx147$i>>2] = 16;
       $$pre1799$i = HEAP32[$h_ptr$i47>>2]|0;
       $ptr1$i358$phi$trans$insert$i = (((((($gfc)) + 39840|0) + (($$pre1799$i*48)|0)|0)) + 4|0);
       $$pre1800$i = HEAP32[$ptr1$i358$phi$trans$insert$i>>2]|0;
       $182 = 16;$501 = $$pre1800$i;$502 = $$pre1799$i;
      } else {
       $182 = $181;$501 = $add$i395$i;$502 = $$pre$i623$i;
      }
      $183 = $502;$j$addr$023$i359$i = 5;$ptr$022$i360$i = $501;
      while(1) {
       $and$i361$i = $ptr$022$i360$i & 7;
       $sub$i362$i = (8 - ($and$i361$i))|0;
       $cmp2$i363$i = ($j$addr$023$i359$i|0)<($sub$i362$i|0);
       $j$addr$0$sub$i364$i = $cmp2$i363$i ? $j$addr$023$i359$i : $sub$i362$i;
       $sub5$i365$i = (($j$addr$023$i359$i) - ($j$addr$0$sub$i364$i))|0;
       $shr$i366$i = $182 >> $sub5$i365$i;
       $sub8$i367$i = (($sub$i362$i) - ($j$addr$0$sub$i364$i))|0;
       $shl$i368$i = $shr$i366$i << $sub8$i367$i;
       $shr12$i369$i = $ptr$022$i360$i >> 3;
       $arrayidx13$i370$i = ((((((($gfc)) + 39840|0) + (($183*48)|0)|0)) + 8|0) + ($shr12$i369$i)|0);
       $184 = HEAP8[$arrayidx13$i370$i>>0]|0;
       $conv20$i371$i = $184&255;
       $or$i372$i = $shl$i368$i | $conv20$i371$i;
       $conv14$i373$i = $or$i372$i&255;
       HEAP8[$arrayidx13$i370$i>>0] = $conv14$i373$i;
       $add$i374$i = (($j$addr$0$sub$i364$i) + ($ptr$022$i360$i))|0;
       $cmp$i375$i = ($sub5$i365$i|0)>(0);
       $$pre$i377$i = HEAP32[$h_ptr$i47>>2]|0;
       if ($cmp$i375$i) {
        $183 = $$pre$i377$i;$j$addr$023$i359$i = $sub5$i365$i;$ptr$022$i360$i = $add$i374$i;
       } else {
        break;
       }
      }
      $ptr18$i380$i = (((((($gfc)) + 39840|0) + (($$pre$i377$i*48)|0)|0)) + 4|0);
      HEAP32[$ptr18$i380$i>>2] = $add$i374$i;
      $arrayidx156$i = (((((($gfc)) + 304|0) + (($ch$21786$i*5252)|0)|0)) + 4800|0);
      $185 = HEAP32[$arrayidx156$i>>2]|0;
      $cmp157$i = ($185|0)==(14);
      if ($cmp157$i) {
       HEAP32[$arrayidx156$i>>2] = 16;
       $$pre1801$i = HEAP32[$h_ptr$i47>>2]|0;
       $ptr1$i333$phi$trans$insert$i = (((((($gfc)) + 39840|0) + (($$pre1801$i*48)|0)|0)) + 4|0);
       $$pre1802$i = HEAP32[$ptr1$i333$phi$trans$insert$i>>2]|0;
       $186 = 16;$503 = $$pre1802$i;$504 = $$pre1801$i;
      } else {
       $186 = $185;$503 = $add$i374$i;$504 = $$pre$i377$i;
      }
      $187 = $504;$j$addr$023$i334$i = 5;$ptr$022$i335$i = $503;
      while(1) {
       $and$i336$i = $ptr$022$i335$i & 7;
       $sub$i337$i = (8 - ($and$i336$i))|0;
       $cmp2$i338$i = ($j$addr$023$i334$i|0)<($sub$i337$i|0);
       $j$addr$0$sub$i339$i = $cmp2$i338$i ? $j$addr$023$i334$i : $sub$i337$i;
       $sub5$i340$i = (($j$addr$023$i334$i) - ($j$addr$0$sub$i339$i))|0;
       $shr$i341$i = $186 >> $sub5$i340$i;
       $sub8$i342$i = (($sub$i337$i) - ($j$addr$0$sub$i339$i))|0;
       $shl$i343$i = $shr$i341$i << $sub8$i342$i;
       $shr12$i344$i = $ptr$022$i335$i >> 3;
       $arrayidx13$i345$i = ((((((($gfc)) + 39840|0) + (($187*48)|0)|0)) + 8|0) + ($shr12$i344$i)|0);
       $188 = HEAP8[$arrayidx13$i345$i>>0]|0;
       $conv20$i346$i = $188&255;
       $or$i347$i = $shl$i343$i | $conv20$i346$i;
       $conv14$i348$i = $or$i347$i&255;
       HEAP8[$arrayidx13$i345$i>>0] = $conv14$i348$i;
       $add$i349$i = (($j$addr$0$sub$i339$i) + ($ptr$022$i335$i))|0;
       $cmp$i350$i = ($sub5$i340$i|0)>(0);
       $$pre$i352$i = HEAP32[$h_ptr$i47>>2]|0;
       if ($cmp$i350$i) {
        $187 = $$pre$i352$i;$j$addr$023$i334$i = $sub5$i340$i;$ptr$022$i335$i = $add$i349$i;
       } else {
        break;
       }
      }
      $ptr18$i355$i = (((((($gfc)) + 39840|0) + (($$pre$i352$i*48)|0)|0)) + 4|0);
      HEAP32[$ptr18$i355$i>>2] = $add$i349$i;
      $arrayidx165$i = (((((($gfc)) + 304|0) + (($ch$21786$i*5252)|0)|0)) + 4804|0);
      $189 = HEAP32[$arrayidx165$i>>2]|0;
      $cmp166$i = ($189|0)==(14);
      if ($cmp166$i) {
       HEAP32[$arrayidx165$i>>2] = 16;
       $$pre1803$i = HEAP32[$h_ptr$i47>>2]|0;
       $ptr1$i308$phi$trans$insert$i = (((((($gfc)) + 39840|0) + (($$pre1803$i*48)|0)|0)) + 4|0);
       $$pre1804$i = HEAP32[$ptr1$i308$phi$trans$insert$i>>2]|0;
       $190 = 16;$505 = $$pre1804$i;$506 = $$pre1803$i;
      } else {
       $190 = $189;$505 = $add$i349$i;$506 = $$pre$i352$i;
      }
      $191 = $506;$j$addr$023$i309$i = 5;$ptr$022$i310$i = $505;
      while(1) {
       $and$i311$i = $ptr$022$i310$i & 7;
       $sub$i312$i = (8 - ($and$i311$i))|0;
       $cmp2$i313$i = ($j$addr$023$i309$i|0)<($sub$i312$i|0);
       $j$addr$0$sub$i314$i = $cmp2$i313$i ? $j$addr$023$i309$i : $sub$i312$i;
       $sub5$i315$i = (($j$addr$023$i309$i) - ($j$addr$0$sub$i314$i))|0;
       $shr$i316$i = $190 >> $sub5$i315$i;
       $sub8$i317$i = (($sub$i312$i) - ($j$addr$0$sub$i314$i))|0;
       $shl$i318$i = $shr$i316$i << $sub8$i317$i;
       $shr12$i319$i = $ptr$022$i310$i >> 3;
       $arrayidx13$i320$i = ((((((($gfc)) + 39840|0) + (($191*48)|0)|0)) + 8|0) + ($shr12$i319$i)|0);
       $192 = HEAP8[$arrayidx13$i320$i>>0]|0;
       $conv20$i321$i = $192&255;
       $or$i322$i = $shl$i318$i | $conv20$i321$i;
       $conv14$i323$i = $or$i322$i&255;
       HEAP8[$arrayidx13$i320$i>>0] = $conv14$i323$i;
       $add$i324$i = (($j$addr$0$sub$i314$i) + ($ptr$022$i310$i))|0;
       $cmp$i325$i = ($sub5$i315$i|0)>(0);
       $$pre$i327$i = HEAP32[$h_ptr$i47>>2]|0;
       if ($cmp$i325$i) {
        $191 = $$pre$i327$i;$j$addr$023$i309$i = $sub5$i315$i;$ptr$022$i310$i = $add$i324$i;
       } else {
        break;
       }
      }
      $ptr18$i330$i = (((((($gfc)) + 39840|0) + (($$pre$i327$i*48)|0)|0)) + 4|0);
      HEAP32[$ptr18$i330$i>>2] = $add$i324$i;
      $region0_count173$i = (((((($gfc)) + 304|0) + (($ch$21786$i*5252)|0)|0)) + 4824|0);
      $193 = HEAP32[$region0_count173$i>>2]|0;
      $194 = $$pre$i327$i;$j$addr$023$i284$i = 4;$ptr$022$i285$i = $add$i324$i;
      while(1) {
       $and$i286$i = $ptr$022$i285$i & 7;
       $sub$i287$i = (8 - ($and$i286$i))|0;
       $cmp2$i288$i = ($j$addr$023$i284$i|0)<($sub$i287$i|0);
       $j$addr$0$sub$i289$i = $cmp2$i288$i ? $j$addr$023$i284$i : $sub$i287$i;
       $sub5$i290$i = (($j$addr$023$i284$i) - ($j$addr$0$sub$i289$i))|0;
       $shr$i291$i = $193 >> $sub5$i290$i;
       $sub8$i292$i = (($sub$i287$i) - ($j$addr$0$sub$i289$i))|0;
       $shl$i293$i = $shr$i291$i << $sub8$i292$i;
       $shr12$i294$i = $ptr$022$i285$i >> 3;
       $arrayidx13$i295$i = ((((((($gfc)) + 39840|0) + (($194*48)|0)|0)) + 8|0) + ($shr12$i294$i)|0);
       $195 = HEAP8[$arrayidx13$i295$i>>0]|0;
       $conv20$i296$i = $195&255;
       $or$i297$i = $shl$i293$i | $conv20$i296$i;
       $conv14$i298$i = $or$i297$i&255;
       HEAP8[$arrayidx13$i295$i>>0] = $conv14$i298$i;
       $add$i299$i = (($j$addr$0$sub$i289$i) + ($ptr$022$i285$i))|0;
       $cmp$i300$i = ($sub5$i290$i|0)>(0);
       $$pre$i302$i = HEAP32[$h_ptr$i47>>2]|0;
       if ($cmp$i300$i) {
        $194 = $$pre$i302$i;$j$addr$023$i284$i = $sub5$i290$i;$ptr$022$i285$i = $add$i299$i;
       } else {
        break;
       }
      }
      $ptr18$i305$i = (((((($gfc)) + 39840|0) + (($$pre$i302$i*48)|0)|0)) + 4|0);
      HEAP32[$ptr18$i305$i>>2] = $add$i299$i;
      $region1_count174$i = (((((($gfc)) + 304|0) + (($ch$21786$i*5252)|0)|0)) + 4828|0);
      $196 = HEAP32[$region1_count174$i>>2]|0;
      $197 = $$pre$i302$i;$j$addr$023$i259$i = 3;$ptr$022$i260$i = $add$i299$i;
      while(1) {
       $and$i261$i = $ptr$022$i260$i & 7;
       $sub$i262$i = (8 - ($and$i261$i))|0;
       $cmp2$i263$i = ($j$addr$023$i259$i|0)<($sub$i262$i|0);
       $j$addr$0$sub$i264$i = $cmp2$i263$i ? $j$addr$023$i259$i : $sub$i262$i;
       $sub5$i265$i = (($j$addr$023$i259$i) - ($j$addr$0$sub$i264$i))|0;
       $shr$i266$i = $196 >> $sub5$i265$i;
       $sub8$i267$i = (($sub$i262$i) - ($j$addr$0$sub$i264$i))|0;
       $shl$i268$i = $shr$i266$i << $sub8$i267$i;
       $shr12$i269$i = $ptr$022$i260$i >> 3;
       $arrayidx13$i270$i = ((((((($gfc)) + 39840|0) + (($197*48)|0)|0)) + 8|0) + ($shr12$i269$i)|0);
       $198 = HEAP8[$arrayidx13$i270$i>>0]|0;
       $conv20$i271$i = $198&255;
       $or$i272$i = $shl$i268$i | $conv20$i271$i;
       $conv14$i273$i = $or$i272$i&255;
       HEAP8[$arrayidx13$i270$i>>0] = $conv14$i273$i;
       $add$i274$i = (($j$addr$0$sub$i264$i) + ($ptr$022$i260$i))|0;
       $cmp$i275$i = ($sub5$i265$i|0)>(0);
       $$pre$i277$i = HEAP32[$h_ptr$i47>>2]|0;
       if ($cmp$i275$i) {
        $197 = $$pre$i277$i;$j$addr$023$i259$i = $sub5$i265$i;$ptr$022$i260$i = $add$i274$i;
       } else {
        $199 = $$pre$i277$i;$add$i274$sink$i = $add$i274$i;
        break;
       }
      }
     } else {
      $156 = $$pre$i623$i;$j$addr$023$i580$i = 1;$ptr$022$i581$i = $add$i620$i;
      while(1) {
       $and$i582$i = $ptr$022$i581$i & 7;
       $sub$i583$i = (8 - ($and$i582$i))|0;
       $cmp2$i584$i = ($j$addr$023$i580$i|0)<($sub$i583$i|0);
       $j$addr$0$sub$i585$i = $cmp2$i584$i ? $j$addr$023$i580$i : $sub$i583$i;
       $sub5$i586$i = (($j$addr$023$i580$i) - ($j$addr$0$sub$i585$i))|0;
       $shr$i587$i = 1 >>> $sub5$i586$i;
       $sub8$i588$i = (($sub$i583$i) - ($j$addr$0$sub$i585$i))|0;
       $shl$i589$i = $shr$i587$i << $sub8$i588$i;
       $shr12$i590$i = $ptr$022$i581$i >> 3;
       $arrayidx13$i591$i = ((((((($gfc)) + 39840|0) + (($156*48)|0)|0)) + 8|0) + ($shr12$i590$i)|0);
       $157 = HEAP8[$arrayidx13$i591$i>>0]|0;
       $conv20$i592$i = $157&255;
       $or$i593$i = $shl$i589$i | $conv20$i592$i;
       $conv14$i594$i = $or$i593$i&255;
       HEAP8[$arrayidx13$i591$i>>0] = $conv14$i594$i;
       $add$i595$i = (($j$addr$0$sub$i585$i) + ($ptr$022$i581$i))|0;
       $cmp$i596$i = ($sub5$i586$i|0)>(0);
       $$pre$i598$i = HEAP32[$h_ptr$i47>>2]|0;
       if ($cmp$i596$i) {
        $156 = $$pre$i598$i;$j$addr$023$i580$i = $sub5$i586$i;$ptr$022$i581$i = $add$i595$i;
       } else {
        break;
       }
      }
      $ptr18$i601$i = (((((($gfc)) + 39840|0) + (($$pre$i598$i*48)|0)|0)) + 4|0);
      HEAP32[$ptr18$i601$i>>2] = $add$i595$i;
      $158 = HEAP32[$block_type116$i>>2]|0;
      $159 = $$pre$i598$i;$j$addr$023$i555$i = 2;$ptr$022$i556$i = $add$i595$i;
      while(1) {
       $and$i557$i = $ptr$022$i556$i & 7;
       $sub$i558$i = (8 - ($and$i557$i))|0;
       $cmp2$i559$i = ($j$addr$023$i555$i|0)<($sub$i558$i|0);
       $j$addr$0$sub$i560$i = $cmp2$i559$i ? $j$addr$023$i555$i : $sub$i558$i;
       $sub5$i561$i = (($j$addr$023$i555$i) - ($j$addr$0$sub$i560$i))|0;
       $shr$i562$i = $158 >> $sub5$i561$i;
       $sub8$i563$i = (($sub$i558$i) - ($j$addr$0$sub$i560$i))|0;
       $shl$i564$i = $shr$i562$i << $sub8$i563$i;
       $shr12$i565$i = $ptr$022$i556$i >> 3;
       $arrayidx13$i566$i = ((((((($gfc)) + 39840|0) + (($159*48)|0)|0)) + 8|0) + ($shr12$i565$i)|0);
       $160 = HEAP8[$arrayidx13$i566$i>>0]|0;
       $conv20$i567$i = $160&255;
       $or$i568$i = $shl$i564$i | $conv20$i567$i;
       $conv14$i569$i = $or$i568$i&255;
       HEAP8[$arrayidx13$i566$i>>0] = $conv14$i569$i;
       $add$i570$i = (($j$addr$0$sub$i560$i) + ($ptr$022$i556$i))|0;
       $cmp$i571$i = ($sub5$i561$i|0)>(0);
       $$pre$i573$i = HEAP32[$h_ptr$i47>>2]|0;
       if ($cmp$i571$i) {
        $159 = $$pre$i573$i;$j$addr$023$i555$i = $sub5$i561$i;$ptr$022$i556$i = $add$i570$i;
       } else {
        break;
       }
      }
      $ptr18$i576$i = (((((($gfc)) + 39840|0) + (($$pre$i573$i*48)|0)|0)) + 4|0);
      HEAP32[$ptr18$i576$i>>2] = $add$i570$i;
      $mixed_block_flag120$i = (((((($gfc)) + 304|0) + (($ch$21786$i*5252)|0)|0)) + 4792|0);
      $161 = HEAP32[$mixed_block_flag120$i>>2]|0;
      $162 = $$pre$i573$i;$j$addr$023$i530$i = 1;$ptr$022$i531$i = $add$i570$i;
      while(1) {
       $and$i532$i = $ptr$022$i531$i & 7;
       $sub$i533$i = (8 - ($and$i532$i))|0;
       $cmp2$i534$i = ($j$addr$023$i530$i|0)<($sub$i533$i|0);
       $j$addr$0$sub$i535$i = $cmp2$i534$i ? $j$addr$023$i530$i : $sub$i533$i;
       $sub5$i536$i = (($j$addr$023$i530$i) - ($j$addr$0$sub$i535$i))|0;
       $shr$i537$i = $161 >> $sub5$i536$i;
       $sub8$i538$i = (($sub$i533$i) - ($j$addr$0$sub$i535$i))|0;
       $shl$i539$i = $shr$i537$i << $sub8$i538$i;
       $shr12$i540$i = $ptr$022$i531$i >> 3;
       $arrayidx13$i541$i = ((((((($gfc)) + 39840|0) + (($162*48)|0)|0)) + 8|0) + ($shr12$i540$i)|0);
       $163 = HEAP8[$arrayidx13$i541$i>>0]|0;
       $conv20$i542$i = $163&255;
       $or$i543$i = $shl$i539$i | $conv20$i542$i;
       $conv14$i544$i = $or$i543$i&255;
       HEAP8[$arrayidx13$i541$i>>0] = $conv14$i544$i;
       $add$i545$i = (($j$addr$0$sub$i535$i) + ($ptr$022$i531$i))|0;
       $cmp$i546$i = ($sub5$i536$i|0)>(0);
       $$pre$i548$i = HEAP32[$h_ptr$i47>>2]|0;
       if ($cmp$i546$i) {
        $162 = $$pre$i548$i;$j$addr$023$i530$i = $sub5$i536$i;$ptr$022$i531$i = $add$i545$i;
       } else {
        break;
       }
      }
      $ptr18$i551$i = (((((($gfc)) + 39840|0) + (($$pre$i548$i*48)|0)|0)) + 4|0);
      HEAP32[$ptr18$i551$i>>2] = $add$i545$i;
      $arrayidx122$i = (((((($gfc)) + 304|0) + (($ch$21786$i*5252)|0)|0)) + 4796|0);
      $164 = HEAP32[$arrayidx122$i>>2]|0;
      $cmp123$i = ($164|0)==(14);
      if ($cmp123$i) {
       HEAP32[$arrayidx122$i>>2] = 16;
       $$pre1795$i = HEAP32[$h_ptr$i47>>2]|0;
       $ptr1$i504$phi$trans$insert$i = (((((($gfc)) + 39840|0) + (($$pre1795$i*48)|0)|0)) + 4|0);
       $$pre1796$i = HEAP32[$ptr1$i504$phi$trans$insert$i>>2]|0;
       $165 = 16;$497 = $$pre1796$i;$498 = $$pre1795$i;
      } else {
       $165 = $164;$497 = $add$i545$i;$498 = $$pre$i548$i;
      }
      $166 = $498;$j$addr$023$i505$i = 5;$ptr$022$i506$i = $497;
      while(1) {
       $and$i507$i = $ptr$022$i506$i & 7;
       $sub$i508$i = (8 - ($and$i507$i))|0;
       $cmp2$i509$i = ($j$addr$023$i505$i|0)<($sub$i508$i|0);
       $j$addr$0$sub$i510$i = $cmp2$i509$i ? $j$addr$023$i505$i : $sub$i508$i;
       $sub5$i511$i = (($j$addr$023$i505$i) - ($j$addr$0$sub$i510$i))|0;
       $shr$i512$i = $165 >> $sub5$i511$i;
       $sub8$i513$i = (($sub$i508$i) - ($j$addr$0$sub$i510$i))|0;
       $shl$i514$i = $shr$i512$i << $sub8$i513$i;
       $shr12$i515$i = $ptr$022$i506$i >> 3;
       $arrayidx13$i516$i = ((((((($gfc)) + 39840|0) + (($166*48)|0)|0)) + 8|0) + ($shr12$i515$i)|0);
       $167 = HEAP8[$arrayidx13$i516$i>>0]|0;
       $conv20$i517$i = $167&255;
       $or$i518$i = $shl$i514$i | $conv20$i517$i;
       $conv14$i519$i = $or$i518$i&255;
       HEAP8[$arrayidx13$i516$i>>0] = $conv14$i519$i;
       $add$i520$i = (($j$addr$0$sub$i510$i) + ($ptr$022$i506$i))|0;
       $cmp$i521$i = ($sub5$i511$i|0)>(0);
       $$pre$i523$i = HEAP32[$h_ptr$i47>>2]|0;
       if ($cmp$i521$i) {
        $166 = $$pre$i523$i;$j$addr$023$i505$i = $sub5$i511$i;$ptr$022$i506$i = $add$i520$i;
       } else {
        break;
       }
      }
      $ptr18$i526$i = (((((($gfc)) + 39840|0) + (($$pre$i523$i*48)|0)|0)) + 4|0);
      HEAP32[$ptr18$i526$i>>2] = $add$i520$i;
      $arrayidx131$i = (((((($gfc)) + 304|0) + (($ch$21786$i*5252)|0)|0)) + 4800|0);
      $168 = HEAP32[$arrayidx131$i>>2]|0;
      $cmp132$i = ($168|0)==(14);
      if ($cmp132$i) {
       HEAP32[$arrayidx131$i>>2] = 16;
       $$pre1797$i = HEAP32[$h_ptr$i47>>2]|0;
       $ptr1$i479$phi$trans$insert$i = (((((($gfc)) + 39840|0) + (($$pre1797$i*48)|0)|0)) + 4|0);
       $$pre1798$i = HEAP32[$ptr1$i479$phi$trans$insert$i>>2]|0;
       $169 = 16;$499 = $$pre1798$i;$500 = $$pre1797$i;
      } else {
       $169 = $168;$499 = $add$i520$i;$500 = $$pre$i523$i;
      }
      $170 = $500;$j$addr$023$i480$i = 5;$ptr$022$i481$i = $499;
      while(1) {
       $and$i482$i = $ptr$022$i481$i & 7;
       $sub$i483$i = (8 - ($and$i482$i))|0;
       $cmp2$i484$i = ($j$addr$023$i480$i|0)<($sub$i483$i|0);
       $j$addr$0$sub$i485$i = $cmp2$i484$i ? $j$addr$023$i480$i : $sub$i483$i;
       $sub5$i486$i = (($j$addr$023$i480$i) - ($j$addr$0$sub$i485$i))|0;
       $shr$i487$i = $169 >> $sub5$i486$i;
       $sub8$i488$i = (($sub$i483$i) - ($j$addr$0$sub$i485$i))|0;
       $shl$i489$i = $shr$i487$i << $sub8$i488$i;
       $shr12$i490$i = $ptr$022$i481$i >> 3;
       $arrayidx13$i491$i = ((((((($gfc)) + 39840|0) + (($170*48)|0)|0)) + 8|0) + ($shr12$i490$i)|0);
       $171 = HEAP8[$arrayidx13$i491$i>>0]|0;
       $conv20$i492$i = $171&255;
       $or$i493$i = $shl$i489$i | $conv20$i492$i;
       $conv14$i494$i = $or$i493$i&255;
       HEAP8[$arrayidx13$i491$i>>0] = $conv14$i494$i;
       $add$i495$i = (($j$addr$0$sub$i485$i) + ($ptr$022$i481$i))|0;
       $cmp$i496$i = ($sub5$i486$i|0)>(0);
       $$pre$i498$i = HEAP32[$h_ptr$i47>>2]|0;
       if ($cmp$i496$i) {
        $170 = $$pre$i498$i;$j$addr$023$i480$i = $sub5$i486$i;$ptr$022$i481$i = $add$i495$i;
       } else {
        break;
       }
      }
      $ptr18$i501$i = (((((($gfc)) + 39840|0) + (($$pre$i498$i*48)|0)|0)) + 4|0);
      HEAP32[$ptr18$i501$i>>2] = $add$i495$i;
      $arrayidx140$i = (((((($gfc)) + 304|0) + (($ch$21786$i*5252)|0)|0)) + 4808|0);
      $172 = HEAP32[$arrayidx140$i>>2]|0;
      $173 = $$pre$i498$i;$j$addr$023$i455$i = 3;$ptr$022$i456$i = $add$i495$i;
      while(1) {
       $and$i457$i = $ptr$022$i456$i & 7;
       $sub$i458$i = (8 - ($and$i457$i))|0;
       $cmp2$i459$i = ($j$addr$023$i455$i|0)<($sub$i458$i|0);
       $j$addr$0$sub$i460$i = $cmp2$i459$i ? $j$addr$023$i455$i : $sub$i458$i;
       $sub5$i461$i = (($j$addr$023$i455$i) - ($j$addr$0$sub$i460$i))|0;
       $shr$i462$i = $172 >> $sub5$i461$i;
       $sub8$i463$i = (($sub$i458$i) - ($j$addr$0$sub$i460$i))|0;
       $shl$i464$i = $shr$i462$i << $sub8$i463$i;
       $shr12$i465$i = $ptr$022$i456$i >> 3;
       $arrayidx13$i466$i = ((((((($gfc)) + 39840|0) + (($173*48)|0)|0)) + 8|0) + ($shr12$i465$i)|0);
       $174 = HEAP8[$arrayidx13$i466$i>>0]|0;
       $conv20$i467$i = $174&255;
       $or$i468$i = $shl$i464$i | $conv20$i467$i;
       $conv14$i469$i = $or$i468$i&255;
       HEAP8[$arrayidx13$i466$i>>0] = $conv14$i469$i;
       $add$i470$i = (($j$addr$0$sub$i460$i) + ($ptr$022$i456$i))|0;
       $cmp$i471$i = ($sub5$i461$i|0)>(0);
       $$pre$i473$i = HEAP32[$h_ptr$i47>>2]|0;
       if ($cmp$i471$i) {
        $173 = $$pre$i473$i;$j$addr$023$i455$i = $sub5$i461$i;$ptr$022$i456$i = $add$i470$i;
       } else {
        break;
       }
      }
      $ptr18$i476$i = (((((($gfc)) + 39840|0) + (($$pre$i473$i*48)|0)|0)) + 4|0);
      HEAP32[$ptr18$i476$i>>2] = $add$i470$i;
      $arrayidx142$i = (((((($gfc)) + 304|0) + (($ch$21786$i*5252)|0)|0)) + 4812|0);
      $175 = HEAP32[$arrayidx142$i>>2]|0;
      $176 = $$pre$i473$i;$j$addr$023$i430$i = 3;$ptr$022$i431$i = $add$i470$i;
      while(1) {
       $and$i432$i = $ptr$022$i431$i & 7;
       $sub$i433$i = (8 - ($and$i432$i))|0;
       $cmp2$i434$i = ($j$addr$023$i430$i|0)<($sub$i433$i|0);
       $j$addr$0$sub$i435$i = $cmp2$i434$i ? $j$addr$023$i430$i : $sub$i433$i;
       $sub5$i436$i = (($j$addr$023$i430$i) - ($j$addr$0$sub$i435$i))|0;
       $shr$i437$i = $175 >> $sub5$i436$i;
       $sub8$i438$i = (($sub$i433$i) - ($j$addr$0$sub$i435$i))|0;
       $shl$i439$i = $shr$i437$i << $sub8$i438$i;
       $shr12$i440$i = $ptr$022$i431$i >> 3;
       $arrayidx13$i441$i = ((((((($gfc)) + 39840|0) + (($176*48)|0)|0)) + 8|0) + ($shr12$i440$i)|0);
       $177 = HEAP8[$arrayidx13$i441$i>>0]|0;
       $conv20$i442$i = $177&255;
       $or$i443$i = $shl$i439$i | $conv20$i442$i;
       $conv14$i444$i = $or$i443$i&255;
       HEAP8[$arrayidx13$i441$i>>0] = $conv14$i444$i;
       $add$i445$i = (($j$addr$0$sub$i435$i) + ($ptr$022$i431$i))|0;
       $cmp$i446$i = ($sub5$i436$i|0)>(0);
       $$pre$i448$i = HEAP32[$h_ptr$i47>>2]|0;
       if ($cmp$i446$i) {
        $176 = $$pre$i448$i;$j$addr$023$i430$i = $sub5$i436$i;$ptr$022$i431$i = $add$i445$i;
       } else {
        break;
       }
      }
      $ptr18$i451$i = (((((($gfc)) + 39840|0) + (($$pre$i448$i*48)|0)|0)) + 4|0);
      HEAP32[$ptr18$i451$i>>2] = $add$i445$i;
      $arrayidx144$i = (((((($gfc)) + 304|0) + (($ch$21786$i*5252)|0)|0)) + 4816|0);
      $178 = HEAP32[$arrayidx144$i>>2]|0;
      $179 = $$pre$i448$i;$j$addr$023$i405$i = 3;$ptr$022$i406$i = $add$i445$i;
      while(1) {
       $and$i407$i = $ptr$022$i406$i & 7;
       $sub$i408$i = (8 - ($and$i407$i))|0;
       $cmp2$i409$i = ($j$addr$023$i405$i|0)<($sub$i408$i|0);
       $j$addr$0$sub$i410$i = $cmp2$i409$i ? $j$addr$023$i405$i : $sub$i408$i;
       $sub5$i411$i = (($j$addr$023$i405$i) - ($j$addr$0$sub$i410$i))|0;
       $shr$i412$i = $178 >> $sub5$i411$i;
       $sub8$i413$i = (($sub$i408$i) - ($j$addr$0$sub$i410$i))|0;
       $shl$i414$i = $shr$i412$i << $sub8$i413$i;
       $shr12$i415$i = $ptr$022$i406$i >> 3;
       $arrayidx13$i416$i = ((((((($gfc)) + 39840|0) + (($179*48)|0)|0)) + 8|0) + ($shr12$i415$i)|0);
       $180 = HEAP8[$arrayidx13$i416$i>>0]|0;
       $conv20$i417$i = $180&255;
       $or$i418$i = $shl$i414$i | $conv20$i417$i;
       $conv14$i419$i = $or$i418$i&255;
       HEAP8[$arrayidx13$i416$i>>0] = $conv14$i419$i;
       $add$i420$i = (($j$addr$0$sub$i410$i) + ($ptr$022$i406$i))|0;
       $cmp$i421$i = ($sub5$i411$i|0)>(0);
       $$pre$i423$i = HEAP32[$h_ptr$i47>>2]|0;
       if ($cmp$i421$i) {
        $179 = $$pre$i423$i;$j$addr$023$i405$i = $sub5$i411$i;$ptr$022$i406$i = $add$i420$i;
       } else {
        $199 = $$pre$i423$i;$add$i274$sink$i = $add$i420$i;
        break;
       }
      }
     }
     $ptr18$i280$i = (((((($gfc)) + 39840|0) + (($199*48)|0)|0)) + 4|0);
     HEAP32[$ptr18$i280$i>>2] = $add$i274$sink$i;
     $scalefac_scale176$i = (((((($gfc)) + 304|0) + (($ch$21786$i*5252)|0)|0)) + 4836|0);
     $200 = HEAP32[$scalefac_scale176$i>>2]|0;
     $201 = $199;$j$addr$023$i234$i = 1;$ptr$022$i235$i = $add$i274$sink$i;
     while(1) {
      $and$i236$i = $ptr$022$i235$i & 7;
      $sub$i237$i = (8 - ($and$i236$i))|0;
      $cmp2$i238$i = ($j$addr$023$i234$i|0)<($sub$i237$i|0);
      $j$addr$0$sub$i239$i = $cmp2$i238$i ? $j$addr$023$i234$i : $sub$i237$i;
      $sub5$i240$i = (($j$addr$023$i234$i) - ($j$addr$0$sub$i239$i))|0;
      $shr$i241$i = $200 >> $sub5$i240$i;
      $sub8$i242$i = (($sub$i237$i) - ($j$addr$0$sub$i239$i))|0;
      $shl$i243$i = $shr$i241$i << $sub8$i242$i;
      $shr12$i244$i = $ptr$022$i235$i >> 3;
      $arrayidx13$i245$i = ((((((($gfc)) + 39840|0) + (($201*48)|0)|0)) + 8|0) + ($shr12$i244$i)|0);
      $202 = HEAP8[$arrayidx13$i245$i>>0]|0;
      $conv20$i246$i = $202&255;
      $or$i247$i = $shl$i243$i | $conv20$i246$i;
      $conv14$i248$i = $or$i247$i&255;
      HEAP8[$arrayidx13$i245$i>>0] = $conv14$i248$i;
      $add$i249$i = (($j$addr$0$sub$i239$i) + ($ptr$022$i235$i))|0;
      $cmp$i250$i = ($sub5$i240$i|0)>(0);
      $$pre$i252$i = HEAP32[$h_ptr$i47>>2]|0;
      if ($cmp$i250$i) {
       $201 = $$pre$i252$i;$j$addr$023$i234$i = $sub5$i240$i;$ptr$022$i235$i = $add$i249$i;
      } else {
       break;
      }
     }
     $ptr18$i255$i = (((((($gfc)) + 39840|0) + (($$pre$i252$i*48)|0)|0)) + 4|0);
     HEAP32[$ptr18$i255$i>>2] = $add$i249$i;
     $count1table_select177$i = (((((($gfc)) + 304|0) + (($ch$21786$i*5252)|0)|0)) + 4840|0);
     $203 = HEAP32[$count1table_select177$i>>2]|0;
     $204 = $$pre$i252$i;$j$addr$023$i209$i = 1;$ptr$022$i210$i = $add$i249$i;
     while(1) {
      $and$i211$i = $ptr$022$i210$i & 7;
      $sub$i212$i = (8 - ($and$i211$i))|0;
      $cmp2$i213$i = ($j$addr$023$i209$i|0)<($sub$i212$i|0);
      $j$addr$0$sub$i214$i = $cmp2$i213$i ? $j$addr$023$i209$i : $sub$i212$i;
      $sub5$i215$i = (($j$addr$023$i209$i) - ($j$addr$0$sub$i214$i))|0;
      $shr$i216$i = $203 >> $sub5$i215$i;
      $sub8$i217$i = (($sub$i212$i) - ($j$addr$0$sub$i214$i))|0;
      $shl$i218$i = $shr$i216$i << $sub8$i217$i;
      $shr12$i219$i = $ptr$022$i210$i >> 3;
      $arrayidx13$i220$i = ((((((($gfc)) + 39840|0) + (($204*48)|0)|0)) + 8|0) + ($shr12$i219$i)|0);
      $205 = HEAP8[$arrayidx13$i220$i>>0]|0;
      $conv20$i221$i = $205&255;
      $or$i222$i = $shl$i218$i | $conv20$i221$i;
      $conv14$i223$i = $or$i222$i&255;
      HEAP8[$arrayidx13$i220$i>>0] = $conv14$i223$i;
      $add$i224$i = (($j$addr$0$sub$i214$i) + ($ptr$022$i210$i))|0;
      $cmp$i225$i = ($sub5$i215$i|0)>(0);
      $$pre$i227$i = HEAP32[$h_ptr$i47>>2]|0;
      if ($cmp$i225$i) {
       $204 = $$pre$i227$i;$j$addr$023$i209$i = $sub5$i215$i;$ptr$022$i210$i = $add$i224$i;
      } else {
       break;
      }
     }
     $ptr18$i230$i = (((((($gfc)) + 39840|0) + (($$pre$i227$i*48)|0)|0)) + 4|0);
     HEAP32[$ptr18$i230$i>>2] = $add$i224$i;
     $inc179$i = (($ch$21786$i) + 1)|0;
     $206 = HEAP32[$channels_out100$i>>2]|0;
     $cmp103$i = ($inc179$i|0)<($206|0);
     if ($cmp103$i) {
      $495 = $add$i224$i;$496 = $$pre$i227$i;$ch$21786$i = $inc179$i;
     } else {
      $208 = $$pre$i227$i;
      break;
     }
    }
   } else {
    $208 = $$pre$i723$i;
   }
  }
 } while(0);
 $207 = HEAP32[$error_protection$i>>2]|0;
 $tobool183$i = ($207|0)==(0);
 if ($tobool183$i) {
  $209 = $208;
 } else {
  $arraydecay189$i = (((((($gfc)) + 39840|0) + (($208*48)|0)|0)) + 8|0);
  _CRC_writeheader($gfc,$arraydecay189$i);
  $$pre1816$i = HEAP32[$h_ptr$i47>>2]|0;
  $209 = $$pre1816$i;
 }
 $add192$i = (($209) + 1)|0;
 $and$i = $add192$i & 255;
 HEAP32[$h_ptr$i47>>2] = $and$i;
 $write_timing$i55 = (((($gfc)) + 39840|0) + (($209*48)|0)|0);
 $210 = HEAP32[$write_timing$i55>>2]|0;
 $add196$i = (($210) + ($mul3$i$i))|0;
 $write_timing200$i = (((($gfc)) + 39840|0) + (($and$i*48)|0)|0);
 HEAP32[$write_timing200$i>>2] = $add196$i;
 $211 = HEAP32[$h_ptr$i47>>2]|0;
 $w_ptr$i56 = ((($gfc)) + 52132|0);
 $212 = HEAP32[$w_ptr$i56>>2]|0;
 $cmp202$i = ($211|0)==($212|0);
 if ($cmp202$i) {
  _lame_errorf($gfc,14696,$vararg_buffer);
 }
 $222 = HEAP32[$sideinfo_len$i48>>2]|0;
 $mul = $222 << 3;
 $223 = HEAP32[$version$i50>>2]|0;
 $cmp$i58 = ($223|0)==(1);
 $channels_out$i59 = ((($gfc)) + 72|0);
 do {
  if ($cmp$i58) {
   $buf_bit_idx$i$i = ((($gfc)) + 300|0);
   $buf_byte_idx$i$i = ((($gfc)) + 296|0);
   $totbit$i$i = ((($gfc)) + 292|0);
   $buf$i$i$i = ((($gfc)) + 284|0);
   $arrayidx$i204$i = ((($gfc)) + 21464|0);
   $$pre576$i = HEAP32[$channels_out$i59>>2]|0;
   $225 = $$pre576$i;$gr$0543$i = 0;$tot_bits$0542$i = 0;
   while(1) {
    $cmp5536$i = ($225|0)>(0);
    if ($cmp5536$i) {
     $ch$0538$i = 0;$tot_bits$1537$i = $tot_bits$0542$i;
     while(1) {
      $arrayidx7$i = ((((($gfc)) + 304|0) + (($gr$0543$i*10504)|0)|0) + (($ch$0538$i*5252)|0)|0);
      $scalefac_compress$i61 = ((((((($gfc)) + 304|0) + (($gr$0543$i*10504)|0)|0) + (($ch$0538$i*5252)|0)|0)) + 4784|0);
      $226 = HEAP32[$scalefac_compress$i61>>2]|0;
      $arrayidx8$i = (10192 + ($226<<2)|0);
      $227 = HEAP32[$arrayidx8$i>>2]|0;
      $arrayidx10$i = (10256 + ($226<<2)|0);
      $228 = HEAP32[$arrayidx10$i>>2]|0;
      $sfbdivide$i = ((((((($gfc)) + 304|0) + (($gr$0543$i*10504)|0)|0) + (($ch$0538$i*5252)|0)|0)) + 4868|0);
      $229 = HEAP32[$sfbdivide$i>>2]|0;
      $cmp12528$i = ($229|0)>(0);
      L261: do {
       if ($cmp12528$i) {
        $cmp25$i$i = ($227|0)>(0);
        if ($cmp25$i$i) {
         $508 = $229;$data_bits$0529$us$i = 0;$sfb$0530$us$i = 0;
        } else {
         $data_bits$0529$i = 0;$sfb$0530$i = 0;
         while(1) {
          $arrayidx14$i = (((((((($gfc)) + 304|0) + (($gr$0543$i*10504)|0)|0) + (($ch$0538$i*5252)|0)|0)) + 4608|0) + ($sfb$0530$i<<2)|0);
          $271 = HEAP32[$arrayidx14$i>>2]|0;
          $cmp15$i = ($271|0)==(-1);
          $add$i62 = $cmp15$i ? 0 : $227;
          $data_bits$1$i = (($add$i62) + ($data_bits$0529$i))|0;
          $inc$i = (($sfb$0530$i) + 1)|0;
          $exitcond103 = ($inc$i|0)==($229|0);
          if ($exitcond103) {
           $data_bits$0$lcssa$i = $data_bits$1$i;$sfb$0$lcssa$i = $229;
           break L261;
          } else {
           $data_bits$0529$i = $data_bits$1$i;$sfb$0530$i = $inc$i;
          }
         }
        }
        while(1) {
         $arrayidx14$us$i = (((((((($gfc)) + 304|0) + (($gr$0543$i*10504)|0)|0) + (($ch$0538$i*5252)|0)|0)) + 4608|0) + ($sfb$0530$us$i<<2)|0);
         $230 = HEAP32[$arrayidx14$us$i>>2]|0;
         $cmp15$us$i = ($230|0)==(-1);
         if ($cmp15$us$i) {
          $249 = $508;$data_bits$1$us$i = $data_bits$0529$us$i;
         } else {
          $j$addr$026$i$us$i = $227;
          while(1) {
           $231 = HEAP32[$buf_bit_idx$i$i>>2]|0;
           $cmp2$i$us$i = ($231|0)==(0);
           if ($cmp2$i$us$i) {
            HEAP32[$buf_bit_idx$i$i>>2] = 8;
            $232 = HEAP32[$buf_byte_idx$i$i>>2]|0;
            $inc$i$us$i = (($232) + 1)|0;
            HEAP32[$buf_byte_idx$i$i>>2] = $inc$i$us$i;
            $233 = HEAP32[$w_ptr$i56>>2]|0;
            $write_timing$i$us$i = (((($gfc)) + 39840|0) + (($233*48)|0)|0);
            $234 = HEAP32[$write_timing$i$us$i>>2]|0;
            $235 = HEAP32[$totbit$i$i>>2]|0;
            $cmp4$i$us$i = ($234|0)==($235|0);
            if ($cmp4$i$us$i) {
             $236 = HEAP32[$buf$i$i$i>>2]|0;
             $arrayidx$i$i$us$i = (($236) + ($inc$i$us$i)|0);
             $arraydecay$i$i$us$i = (((((($gfc)) + 39840|0) + (($233*48)|0)|0)) + 8|0);
             $237 = HEAP32[$sideinfo_len$i48>>2]|0;
             _memcpy(($arrayidx$i$i$us$i|0),($arraydecay$i$i$us$i|0),($237|0))|0;
             $238 = HEAP32[$sideinfo_len$i48>>2]|0;
             $239 = HEAP32[$buf_byte_idx$i$i>>2]|0;
             $add$i$i$us$i = (($239) + ($238))|0;
             HEAP32[$buf_byte_idx$i$i>>2] = $add$i$i$us$i;
             $mul$i$i$us$i = $238 << 3;
             $240 = HEAP32[$totbit$i$i>>2]|0;
             $add8$i$i$us$i = (($240) + ($mul$i$i$us$i))|0;
             HEAP32[$totbit$i$i>>2] = $add8$i$i$us$i;
             $241 = HEAP32[$w_ptr$i56>>2]|0;
             $add10$i$i$us$i = (($241) + 1)|0;
             $and$i$i$us$i = $add10$i$i$us$i & 255;
             HEAP32[$w_ptr$i56>>2] = $and$i$i$us$i;
             $243 = $add$i$i$us$i;
            } else {
             $243 = $inc$i$us$i;
            }
            $242 = HEAP32[$buf$i$i$i>>2]|0;
            $arrayidx7$i$us$i = (($242) + ($243)|0);
            HEAP8[$arrayidx7$i$us$i>>0] = 0;
            $$pre$i$us$i = HEAP32[$buf_bit_idx$i$i>>2]|0;
            $244 = $$pre$i$us$i;
           } else {
            $244 = $231;
           }
           $cmp10$i$us$i = ($j$addr$026$i$us$i|0)<($244|0);
           $j$addr$0$$i$us$i = $cmp10$i$us$i ? $j$addr$026$i$us$i : $244;
           $sub$i$us$i = (($j$addr$026$i$us$i) - ($j$addr$0$$i$us$i))|0;
           $sub13$i$us$i = (($244) - ($j$addr$0$$i$us$i))|0;
           HEAP32[$buf_bit_idx$i$i>>2] = $sub13$i$us$i;
           $shr$i$us$i = $230 >> $sub$i$us$i;
           $shl$i$us$i = $shr$i$us$i << $sub13$i$us$i;
           $245 = HEAP32[$buf$i$i$i>>2]|0;
           $246 = HEAP32[$buf_byte_idx$i$i>>2]|0;
           $arrayidx17$i$us$i = (($245) + ($246)|0);
           $247 = HEAP8[$arrayidx17$i$us$i>>0]|0;
           $conv$i$us$i = $247&255;
           $or$i$us$i = $conv$i$us$i | $shl$i$us$i;
           $conv18$i$us$i = $or$i$us$i&255;
           HEAP8[$arrayidx17$i$us$i>>0] = $conv18$i$us$i;
           $248 = HEAP32[$totbit$i$i>>2]|0;
           $add$i$us$i = (($248) + ($j$addr$0$$i$us$i))|0;
           HEAP32[$totbit$i$i>>2] = $add$i$us$i;
           $cmp$i$us$i = ($sub$i$us$i|0)>(0);
           if ($cmp$i$us$i) {
            $j$addr$026$i$us$i = $sub$i$us$i;
           } else {
            break;
           }
          }
          $add$us$i = (($data_bits$0529$us$i) + ($227))|0;
          $$pre577$i = HEAP32[$sfbdivide$i>>2]|0;
          $249 = $$pre577$i;$data_bits$1$us$i = $add$us$i;
         }
         $inc$us$i = (($sfb$0530$us$i) + 1)|0;
         $cmp12$us$i = ($inc$us$i|0)<($249|0);
         if ($cmp12$us$i) {
          $508 = $249;$data_bits$0529$us$i = $data_bits$1$us$i;$sfb$0530$us$i = $inc$us$i;
         } else {
          $data_bits$0$lcssa$i = $data_bits$1$us$i;$sfb$0$lcssa$i = $inc$us$i;
          break;
         }
        }
       } else {
        $data_bits$0$lcssa$i = 0;$sfb$0$lcssa$i = 0;
       }
      } while(0);
      $sfbmax$i = ((((((($gfc)) + 304|0) + (($gr$0543$i*10504)|0)|0) + (($ch$0538$i*5252)|0)|0)) + 4860|0);
      $250 = HEAP32[$sfbmax$i>>2]|0;
      $cmp20532$i = ($sfb$0$lcssa$i|0)<($250|0);
      L280: do {
       if ($cmp20532$i) {
        $cmp25$i163$i = ($228|0)>(0);
        if ($cmp25$i163$i) {
         $509 = $250;$data_bits$2533$us$i = $data_bits$0$lcssa$i;$sfb$1534$us$i = $sfb$0$lcssa$i;
        } else {
         $data_bits$2533$i = $data_bits$0$lcssa$i;$sfb$1534$i = $sfb$0$lcssa$i;
         while(1) {
          $arrayidx23$i = (((((((($gfc)) + 304|0) + (($gr$0543$i*10504)|0)|0) + (($ch$0538$i*5252)|0)|0)) + 4608|0) + ($sfb$1534$i<<2)|0);
          $272 = HEAP32[$arrayidx23$i>>2]|0;
          $cmp24$i63 = ($272|0)==(-1);
          $add29$i = $cmp24$i63 ? 0 : $228;
          $data_bits$3$i = (($add29$i) + ($data_bits$2533$i))|0;
          $inc31$i = (($sfb$1534$i) + 1)|0;
          $exitcond104 = ($inc31$i|0)==($250|0);
          if ($exitcond104) {
           $data_bits$2$lcssa$i = $data_bits$3$i;
           break L280;
          } else {
           $data_bits$2533$i = $data_bits$3$i;$sfb$1534$i = $inc31$i;
          }
         }
        }
        while(1) {
         $arrayidx23$us$i = (((((((($gfc)) + 304|0) + (($gr$0543$i*10504)|0)|0) + (($ch$0538$i*5252)|0)|0)) + 4608|0) + ($sfb$1534$us$i<<2)|0);
         $251 = HEAP32[$arrayidx23$us$i>>2]|0;
         $cmp24$us$i = ($251|0)==(-1);
         if ($cmp24$us$i) {
          $270 = $509;$data_bits$3$us$i = $data_bits$2533$us$i;
         } else {
          $j$addr$026$i172$us$i = $228;
          while(1) {
           $252 = HEAP32[$buf_bit_idx$i$i>>2]|0;
           $cmp2$i173$us$i = ($252|0)==(0);
           if ($cmp2$i173$us$i) {
            HEAP32[$buf_bit_idx$i$i>>2] = 8;
            $253 = HEAP32[$buf_byte_idx$i$i>>2]|0;
            $inc$i175$us$i = (($253) + 1)|0;
            HEAP32[$buf_byte_idx$i$i>>2] = $inc$i175$us$i;
            $254 = HEAP32[$w_ptr$i56>>2]|0;
            $write_timing$i176$us$i = (((($gfc)) + 39840|0) + (($254*48)|0)|0);
            $255 = HEAP32[$write_timing$i176$us$i>>2]|0;
            $256 = HEAP32[$totbit$i$i>>2]|0;
            $cmp4$i177$us$i = ($255|0)==($256|0);
            if ($cmp4$i177$us$i) {
             $257 = HEAP32[$buf$i$i$i>>2]|0;
             $arrayidx$i$i179$us$i = (($257) + ($inc$i175$us$i)|0);
             $arraydecay$i$i180$us$i = (((((($gfc)) + 39840|0) + (($254*48)|0)|0)) + 8|0);
             $258 = HEAP32[$sideinfo_len$i48>>2]|0;
             _memcpy(($arrayidx$i$i179$us$i|0),($arraydecay$i$i180$us$i|0),($258|0))|0;
             $259 = HEAP32[$sideinfo_len$i48>>2]|0;
             $260 = HEAP32[$buf_byte_idx$i$i>>2]|0;
             $add$i$i181$us$i = (($260) + ($259))|0;
             HEAP32[$buf_byte_idx$i$i>>2] = $add$i$i181$us$i;
             $mul$i$i182$us$i = $259 << 3;
             $261 = HEAP32[$totbit$i$i>>2]|0;
             $add8$i$i183$us$i = (($261) + ($mul$i$i182$us$i))|0;
             HEAP32[$totbit$i$i>>2] = $add8$i$i183$us$i;
             $262 = HEAP32[$w_ptr$i56>>2]|0;
             $add10$i$i184$us$i = (($262) + 1)|0;
             $and$i$i185$us$i = $add10$i$i184$us$i & 255;
             HEAP32[$w_ptr$i56>>2] = $and$i$i185$us$i;
             $264 = $add$i$i181$us$i;
            } else {
             $264 = $inc$i175$us$i;
            }
            $263 = HEAP32[$buf$i$i$i>>2]|0;
            $arrayidx7$i187$us$i = (($263) + ($264)|0);
            HEAP8[$arrayidx7$i187$us$i>>0] = 0;
            $$pre$i188$us$i = HEAP32[$buf_bit_idx$i$i>>2]|0;
            $265 = $$pre$i188$us$i;
           } else {
            $265 = $252;
           }
           $cmp10$i190$us$i = ($j$addr$026$i172$us$i|0)<($265|0);
           $j$addr$0$$i191$us$i = $cmp10$i190$us$i ? $j$addr$026$i172$us$i : $265;
           $sub$i192$us$i = (($j$addr$026$i172$us$i) - ($j$addr$0$$i191$us$i))|0;
           $sub13$i193$us$i = (($265) - ($j$addr$0$$i191$us$i))|0;
           HEAP32[$buf_bit_idx$i$i>>2] = $sub13$i193$us$i;
           $shr$i194$us$i = $251 >> $sub$i192$us$i;
           $shl$i195$us$i = $shr$i194$us$i << $sub13$i193$us$i;
           $266 = HEAP32[$buf$i$i$i>>2]|0;
           $267 = HEAP32[$buf_byte_idx$i$i>>2]|0;
           $arrayidx17$i196$us$i = (($266) + ($267)|0);
           $268 = HEAP8[$arrayidx17$i196$us$i>>0]|0;
           $conv$i197$us$i = $268&255;
           $or$i198$us$i = $conv$i197$us$i | $shl$i195$us$i;
           $conv18$i199$us$i = $or$i198$us$i&255;
           HEAP8[$arrayidx17$i196$us$i>>0] = $conv18$i199$us$i;
           $269 = HEAP32[$totbit$i$i>>2]|0;
           $add$i200$us$i = (($269) + ($j$addr$0$$i191$us$i))|0;
           HEAP32[$totbit$i$i>>2] = $add$i200$us$i;
           $cmp$i201$us$i = ($sub$i192$us$i|0)>(0);
           if ($cmp$i201$us$i) {
            $j$addr$026$i172$us$i = $sub$i192$us$i;
           } else {
            break;
           }
          }
          $add29$us$i = (($data_bits$2533$us$i) + ($228))|0;
          $$pre578$i = HEAP32[$sfbmax$i>>2]|0;
          $270 = $$pre578$i;$data_bits$3$us$i = $add29$us$i;
         }
         $inc31$us$i = (($sfb$1534$us$i) + 1)|0;
         $cmp20$us$i = ($inc31$us$i|0)<($270|0);
         if ($cmp20$us$i) {
          $509 = $270;$data_bits$2533$us$i = $data_bits$3$us$i;$sfb$1534$us$i = $inc31$us$i;
         } else {
          $data_bits$2$lcssa$i = $data_bits$3$us$i;
          break;
         }
        }
       } else {
        $data_bits$2$lcssa$i = $data_bits$0$lcssa$i;
       }
      } while(0);
      $block_type$i64 = ((((((($gfc)) + 304|0) + (($gr$0543$i*10504)|0)|0) + (($ch$0538$i*5252)|0)|0)) + 4788|0);
      $273 = HEAP32[$block_type$i64>>2]|0;
      $cmp33$i65 = ($273|0)==(2);
      if ($cmp33$i65) {
       $274 = HEAP32[$arrayidx$i204$i>>2]|0;
       $mul$i205$i = ($274*3)|0;
       $big_values$i206$i = ((((((($gfc)) + 304|0) + (($gr$0543$i*10504)|0)|0) + (($ch$0538$i*5252)|0)|0)) + 4772|0);
       $275 = HEAP32[$big_values$i206$i>>2]|0;
       $cmp$i207$i = ($mul$i205$i|0)>($275|0);
       $$mul$i$i = $cmp$i207$i ? $275 : $mul$i205$i;
       $arrayidx2$i$i = ((((((($gfc)) + 304|0) + (($gr$0543$i*10504)|0)|0) + (($ch$0538$i*5252)|0)|0)) + 4796|0);
       $276 = HEAP32[$arrayidx2$i$i>>2]|0;
       $call$i208$i = (_Huffmancode($gfc,$276,0,$$mul$i$i,$arrayidx7$i)|0);
       $arrayidx4$i209$i = ((((((($gfc)) + 304|0) + (($gr$0543$i*10504)|0)|0) + (($ch$0538$i*5252)|0)|0)) + 4800|0);
       $277 = HEAP32[$arrayidx4$i209$i>>2]|0;
       $278 = HEAP32[$big_values$i206$i>>2]|0;
       $call6$i$i = (_Huffmancode($gfc,$277,$$mul$i$i,$278,$arrayidx7$i)|0);
       $add13$i227$sink$i = $call6$i$i;$big_values$i233$pre$phi$iZZ2D = $big_values$i206$i;$call16$i229$sink$i = $call$i208$i;
      } else {
       $big_values$i211$i = ((((((($gfc)) + 304|0) + (($gr$0543$i*10504)|0)|0) + (($ch$0538$i*5252)|0)|0)) + 4772|0);
       $279 = HEAP32[$big_values$i211$i>>2]|0;
       $region0_count$i212$i = ((((((($gfc)) + 304|0) + (($gr$0543$i*10504)|0)|0) + (($ch$0538$i*5252)|0)|0)) + 4824|0);
       $280 = HEAP32[$region0_count$i212$i>>2]|0;
       $add$i213$i = (($280) + 1)|0;
       $arrayidx$i214$i = (((($gfc)) + 21360|0) + ($add$i213$i<<2)|0);
       $281 = HEAP32[$arrayidx$i214$i>>2]|0;
       $region1_count$i215$i = ((((((($gfc)) + 304|0) + (($gr$0543$i*10504)|0)|0) + (($ch$0538$i*5252)|0)|0)) + 4828|0);
       $282 = HEAP32[$region1_count$i215$i>>2]|0;
       $add1$i216$i = (($280) + 2)|0;
       $add2$i217$i = (($add1$i216$i) + ($282))|0;
       $arrayidx5$i218$i = (((($gfc)) + 21360|0) + ($add2$i217$i<<2)|0);
       $283 = HEAP32[$arrayidx5$i218$i>>2]|0;
       $cmp$i219$i = ($281|0)>($279|0);
       $$$i220$i = $cmp$i219$i ? $279 : $281;
       $cmp6$i221$i = ($283|0)>($279|0);
       $region2Start$0$i222$i = $cmp6$i221$i ? $279 : $283;
       $arrayidx9$i223$i = ((((((($gfc)) + 304|0) + (($gr$0543$i*10504)|0)|0) + (($ch$0538$i*5252)|0)|0)) + 4796|0);
       $284 = HEAP32[$arrayidx9$i223$i>>2]|0;
       $call$i224$i = (_Huffmancode($gfc,$284,0,$$$i220$i,$arrayidx7$i)|0);
       $arrayidx11$i225$i = ((((((($gfc)) + 304|0) + (($gr$0543$i*10504)|0)|0) + (($ch$0538$i*5252)|0)|0)) + 4800|0);
       $285 = HEAP32[$arrayidx11$i225$i>>2]|0;
       $call12$i226$i = (_Huffmancode($gfc,$285,$$$i220$i,$region2Start$0$i222$i,$arrayidx7$i)|0);
       $add13$i227$i = (($call12$i226$i) + ($call$i224$i))|0;
       $arrayidx15$i228$i = ((((((($gfc)) + 304|0) + (($gr$0543$i*10504)|0)|0) + (($ch$0538$i*5252)|0)|0)) + 4804|0);
       $286 = HEAP32[$arrayidx15$i228$i>>2]|0;
       $call16$i229$i = (_Huffmancode($gfc,$286,$region2Start$0$i222$i,$279,$arrayidx7$i)|0);
       $add13$i227$sink$i = $add13$i227$i;$big_values$i233$pre$phi$iZZ2D = $big_values$i211$i;$call16$i229$sink$i = $call16$i229$i;
      }
      $count1table_select$i231$i = ((((((($gfc)) + 304|0) + (($gr$0543$i*10504)|0)|0) + (($ch$0538$i*5252)|0)|0)) + 4840|0);
      $287 = HEAP32[$count1table_select$i231$i>>2]|0;
      $add$i232$i = (($287) + 32)|0;
      $288 = HEAP32[$big_values$i233$pre$phi$iZZ2D>>2]|0;
      $count1$i234$i = ((((((($gfc)) + 304|0) + (($gr$0543$i*10504)|0)|0) + (($ch$0538$i*5252)|0)|0)) + 4776|0);
      $289 = HEAP32[$count1$i234$i>>2]|0;
      $sub$i235$i = (($289) - ($288))|0;
      $cmp43$i236$i = ($sub$i235$i|0)>(3);
      if ($cmp43$i236$i) {
       $div48$i237$i = $sub$i235$i >>> 2;
       $arrayidx4$i238$i = (((((($gfc)) + 304|0) + (($gr$0543$i*10504)|0)|0) + (($ch$0538$i*5252)|0)|0) + ($288<<2)|0);
       $arrayidx1$i239$i = (((((((($gfc)) + 304|0) + (($gr$0543$i*10504)|0)|0) + (($ch$0538$i*5252)|0)|0)) + 2304|0) + ($288<<2)|0);
       $table$i240$i = (((8312 + ($add$i232$i<<4)|0)) + 8|0);
       $hlen$i241$i = (((8312 + ($add$i232$i<<4)|0)) + 12|0);
       $290 = HEAP32[$table$i240$i>>2]|0;
       $291 = HEAP32[$hlen$i241$i>>2]|0;
       $bits$045$i245$i = 0;$i$044$i246$i = $div48$i237$i;$ix$046$i244$i = $arrayidx1$i239$i;$xr$047$i243$i = $arrayidx4$i238$i;
       while(1) {
        $292 = HEAP32[$ix$046$i244$i>>2]|0;
        $tobool$i247$i = ($292|0)==(0);
        do {
         if ($tobool$i247$i) {
          $huffbits$0$i252$i = 0;$p$0$i253$i = 0;
         } else {
          $293 = +HEAPF32[$xr$047$i243$i>>2];
          $cmp9$i249$i = $293 < 0.0;
          if (!($cmp9$i249$i)) {
           $huffbits$0$i252$i = 0;$p$0$i253$i = 8;
           break;
          }
          $huffbits$0$i252$i = 1;$p$0$i253$i = 8;
         }
        } while(0);
        $arrayidx12$i254$i = ((($ix$046$i244$i)) + 4|0);
        $294 = HEAP32[$arrayidx12$i254$i>>2]|0;
        $tobool13$i255$i = ($294|0)==(0);
        do {
         if ($tobool13$i255$i) {
          $huffbits$1$i264$i = $huffbits$0$i252$i;$p$1$i265$i = $p$0$i253$i;
         } else {
          $add15$i257$i = $p$0$i253$i | 4;
          $mul$i258$i = $huffbits$0$i252$i << 1;
          $arrayidx16$i259$i = ((($xr$047$i243$i)) + 4|0);
          $295 = +HEAPF32[$arrayidx16$i259$i>>2];
          $cmp17$i260$i = $295 < 0.0;
          if (!($cmp17$i260$i)) {
           $huffbits$1$i264$i = $mul$i258$i;$p$1$i265$i = $add15$i257$i;
           break;
          }
          $inc19$i262$i = $mul$i258$i | 1;
          $huffbits$1$i264$i = $inc19$i262$i;$p$1$i265$i = $add15$i257$i;
         }
        } while(0);
        $arrayidx22$i266$i = ((($ix$046$i244$i)) + 8|0);
        $296 = HEAP32[$arrayidx22$i266$i>>2]|0;
        $tobool23$i267$i = ($296|0)==(0);
        do {
         if ($tobool23$i267$i) {
          $huffbits$2$i276$i = $huffbits$1$i264$i;$p$2$i277$i = $p$1$i265$i;
         } else {
          $add25$i269$i = (($p$1$i265$i) + 2)|0;
          $mul26$i270$i = $huffbits$1$i264$i << 1;
          $arrayidx27$i271$i = ((($xr$047$i243$i)) + 8|0);
          $297 = +HEAPF32[$arrayidx27$i271$i>>2];
          $cmp28$i272$i = $297 < 0.0;
          if (!($cmp28$i272$i)) {
           $huffbits$2$i276$i = $mul26$i270$i;$p$2$i277$i = $add25$i269$i;
           break;
          }
          $inc30$i274$i = $mul26$i270$i | 1;
          $huffbits$2$i276$i = $inc30$i274$i;$p$2$i277$i = $add25$i269$i;
         }
        } while(0);
        $arrayidx33$i278$i = ((($ix$046$i244$i)) + 12|0);
        $298 = HEAP32[$arrayidx33$i278$i>>2]|0;
        $tobool34$i279$i = ($298|0)==(0);
        do {
         if ($tobool34$i279$i) {
          $huffbits$3$i288$i = $huffbits$2$i276$i;$p$3$i289$i = $p$2$i277$i;
         } else {
          $inc36$i281$i = (($p$2$i277$i) + 1)|0;
          $mul37$i282$i = $huffbits$2$i276$i << 1;
          $arrayidx38$i283$i = ((($xr$047$i243$i)) + 12|0);
          $299 = +HEAPF32[$arrayidx38$i283$i>>2];
          $cmp39$i284$i = $299 < 0.0;
          if (!($cmp39$i284$i)) {
           $huffbits$3$i288$i = $mul37$i282$i;$p$3$i289$i = $inc36$i281$i;
           break;
          }
          $inc41$i286$i = $mul37$i282$i | 1;
          $huffbits$3$i288$i = $inc41$i286$i;$p$3$i289$i = $inc36$i281$i;
         }
        } while(0);
        $add$ptr$i290$i = ((($ix$046$i244$i)) + 16|0);
        $add$ptr44$i291$i = ((($xr$047$i243$i)) + 16|0);
        $arrayidx45$i292$i = (($290) + ($p$3$i289$i<<1)|0);
        $300 = HEAP16[$arrayidx45$i292$i>>1]|0;
        $conv$i293$i = $300&65535;
        $add46$i294$i = (($conv$i293$i) + ($huffbits$3$i288$i))|0;
        $arrayidx47$i295$i = (($291) + ($p$3$i289$i)|0);
        $301 = HEAP8[$arrayidx47$i295$i>>0]|0;
        $cmp25$i304$i = ($301<<24>>24)==(0);
        if ($cmp25$i304$i) {
         $320 = 0;
        } else {
         $conv48$i296$i = $301&255;
         $j$addr$026$i313$i = $conv48$i296$i;
         while(1) {
          $302 = HEAP32[$buf_bit_idx$i$i>>2]|0;
          $cmp2$i314$i = ($302|0)==(0);
          if ($cmp2$i314$i) {
           HEAP32[$buf_bit_idx$i$i>>2] = 8;
           $303 = HEAP32[$buf_byte_idx$i$i>>2]|0;
           $inc$i316$i = (($303) + 1)|0;
           HEAP32[$buf_byte_idx$i$i>>2] = $inc$i316$i;
           $304 = HEAP32[$w_ptr$i56>>2]|0;
           $write_timing$i317$i = (((($gfc)) + 39840|0) + (($304*48)|0)|0);
           $305 = HEAP32[$write_timing$i317$i>>2]|0;
           $306 = HEAP32[$totbit$i$i>>2]|0;
           $cmp4$i318$i = ($305|0)==($306|0);
           if ($cmp4$i318$i) {
            $307 = HEAP32[$buf$i$i$i>>2]|0;
            $arrayidx$i$i320$i = (($307) + ($inc$i316$i)|0);
            $arraydecay$i$i321$i = (((((($gfc)) + 39840|0) + (($304*48)|0)|0)) + 8|0);
            $308 = HEAP32[$sideinfo_len$i48>>2]|0;
            _memcpy(($arrayidx$i$i320$i|0),($arraydecay$i$i321$i|0),($308|0))|0;
            $309 = HEAP32[$sideinfo_len$i48>>2]|0;
            $310 = HEAP32[$buf_byte_idx$i$i>>2]|0;
            $add$i$i322$i = (($310) + ($309))|0;
            HEAP32[$buf_byte_idx$i$i>>2] = $add$i$i322$i;
            $mul$i$i323$i = $309 << 3;
            $311 = HEAP32[$totbit$i$i>>2]|0;
            $add8$i$i324$i = (($311) + ($mul$i$i323$i))|0;
            HEAP32[$totbit$i$i>>2] = $add8$i$i324$i;
            $312 = HEAP32[$w_ptr$i56>>2]|0;
            $add10$i$i325$i = (($312) + 1)|0;
            $and$i$i326$i = $add10$i$i325$i & 255;
            HEAP32[$w_ptr$i56>>2] = $and$i$i326$i;
            $314 = $add$i$i322$i;
           } else {
            $314 = $inc$i316$i;
           }
           $313 = HEAP32[$buf$i$i$i>>2]|0;
           $arrayidx7$i328$i = (($313) + ($314)|0);
           HEAP8[$arrayidx7$i328$i>>0] = 0;
           $$pre$i329$i = HEAP32[$buf_bit_idx$i$i>>2]|0;
           $315 = $$pre$i329$i;
          } else {
           $315 = $302;
          }
          $cmp10$i331$i = ($j$addr$026$i313$i|0)<($315|0);
          $j$addr$0$$i332$i = $cmp10$i331$i ? $j$addr$026$i313$i : $315;
          $sub$i333$i = (($j$addr$026$i313$i) - ($j$addr$0$$i332$i))|0;
          $sub13$i334$i = (($315) - ($j$addr$0$$i332$i))|0;
          HEAP32[$buf_bit_idx$i$i>>2] = $sub13$i334$i;
          $shr$i335$i = $add46$i294$i >> $sub$i333$i;
          $shl$i336$i = $shr$i335$i << $sub13$i334$i;
          $316 = HEAP32[$buf$i$i$i>>2]|0;
          $317 = HEAP32[$buf_byte_idx$i$i>>2]|0;
          $arrayidx17$i337$i = (($316) + ($317)|0);
          $318 = HEAP8[$arrayidx17$i337$i>>0]|0;
          $conv$i338$i = $318&255;
          $or$i339$i = $conv$i338$i | $shl$i336$i;
          $conv18$i340$i = $or$i339$i&255;
          HEAP8[$arrayidx17$i337$i>>0] = $conv18$i340$i;
          $319 = HEAP32[$totbit$i$i>>2]|0;
          $add$i341$i = (($319) + ($j$addr$0$$i332$i))|0;
          HEAP32[$totbit$i$i>>2] = $add$i341$i;
          $cmp$i342$i = ($sub$i333$i|0)>(0);
          if ($cmp$i342$i) {
           $j$addr$026$i313$i = $sub$i333$i;
          } else {
           break;
          }
         }
         $$pre579$i = HEAP8[$arrayidx47$i295$i>>0]|0;
         $320 = $$pre579$i;
        }
        $conv51$i297$i = $320&255;
        $add52$i298$i = (($conv51$i297$i) + ($bits$045$i245$i))|0;
        $dec$i299$i = (($i$044$i246$i) + -1)|0;
        $cmp$i300$i67 = ($i$044$i246$i|0)>(1);
        if ($cmp$i300$i67) {
         $bits$045$i245$i = $add52$i298$i;$i$044$i246$i = $dec$i299$i;$ix$046$i244$i = $add$ptr$i290$i;$xr$047$i243$i = $add$ptr44$i291$i;
        } else {
         $bits$0$lcssa$i302$i = $add52$i298$i;
         break;
        }
       }
      } else {
       $bits$0$lcssa$i302$i = 0;
      }
      $add17$i230$i = (($data_bits$2$lcssa$i) + ($tot_bits$1537$i))|0;
      $data_bits$4$i = (($add17$i230$i) + ($call16$i229$sink$i))|0;
      $add40$i = (($data_bits$4$i) + ($add13$i227$sink$i))|0;
      $add41$i = (($add40$i) + ($bits$0$lcssa$i302$i))|0;
      $inc43$i = (($ch$0538$i) + 1)|0;
      $321 = HEAP32[$channels_out$i59>>2]|0;
      $cmp5$i = ($inc43$i|0)<($321|0);
      if ($cmp5$i) {
       $ch$0538$i = $inc43$i;$tot_bits$1537$i = $add41$i;
      } else {
       $507 = $321;$tot_bits$1$lcssa$i = $add41$i;
       break;
      }
     }
    } else {
     $507 = $225;$tot_bits$1$lcssa$i = $tot_bits$0542$i;
    }
    $inc46$i = (($gr$0543$i) + 1)|0;
    $exitcond$i68 = ($inc46$i|0)==(2);
    if ($exitcond$i68) {
     $tot_bits$3$i = $tot_bits$1$lcssa$i;$totbit$i$pre$phiZZ2D = $totbit$i$i;
     break;
    } else {
     $225 = $507;$gr$0543$i = $inc46$i;$tot_bits$0542$i = $tot_bits$1$lcssa$i;
    }
   }
  } else {
   $224 = HEAP32[$channels_out$i59>>2]|0;
   $cmp51563$i = ($224|0)>(0);
   if (!($cmp51563$i)) {
    $$pre105 = ((($gfc)) + 292|0);
    $tot_bits$3$i = 0;$totbit$i$pre$phiZZ2D = $$pre105;
    break;
   }
   $buf_bit_idx$i346$i = ((($gfc)) + 300|0);
   $buf_byte_idx$i347$i = ((($gfc)) + 296|0);
   $totbit$i349$i = ((($gfc)) + 292|0);
   $buf$i$i350$i = ((($gfc)) + 284|0);
   $arrayidx$i468$i = ((($gfc)) + 21464|0);
   $ch$1565$i = 0;$tot_bits$2564$i = 0;
   while(1) {
    $arrayidx56$i = (((($gfc)) + 304|0) + (($ch$1565$i*5252)|0)|0);
    $block_type57$i = (((((($gfc)) + 304|0) + (($ch$1565$i*5252)|0)|0)) + 4788|0);
    $322 = HEAP32[$block_type57$i>>2]|0;
    $cmp58$i = ($322|0)==(2);
    $sfb_partition_table$i = (((((($gfc)) + 304|0) + (($ch$1565$i*5252)|0)|0)) + 5188|0);
    if ($cmp58$i) {
     $scale_bits$0561$i = 0;$sfb$2562$i = 0;$sfb_partition$0560$i = 0;
     while(1) {
      $323 = HEAP32[$sfb_partition_table$i>>2]|0;
      $arrayidx63$i = (($323) + ($sfb_partition$0560$i<<2)|0);
      $324 = HEAP32[$arrayidx63$i>>2]|0;
      $div$i69 = (($324|0) / 3)&-1;
      $arrayidx65$i = ((((((($gfc)) + 304|0) + (($ch$1565$i*5252)|0)|0)) + 5192|0) + ($sfb_partition$0560$i<<2)|0);
      $325 = HEAP32[$arrayidx65$i>>2]|0;
      $cmp67554$i = ($324|0)>(2);
      if ($cmp67554$i) {
       $cmp25$i345$i = ($325|0)>(0);
       $mul103$i = ($325*3)|0;
       $i$0555$i = 0;$scale_bits$1556$i = $scale_bits$0561$i;$sfb$3557$i = $sfb$2562$i;
       while(1) {
        $mul$i70 = ($sfb$3557$i*3)|0;
        $arrayidx71$i = ((((((($gfc)) + 304|0) + (($ch$1565$i*5252)|0)|0)) + 4608|0) + ($mul$i70<<2)|0);
        $326 = HEAP32[$arrayidx71$i>>2]|0;
        $cmp72$i = ($326|0)>(0);
        $$$i = $cmp72$i ? $326 : 0;
        if ($cmp25$i345$i) {
         $j$addr$026$i354$i = $325;
         while(1) {
          $327 = HEAP32[$buf_bit_idx$i346$i>>2]|0;
          $cmp2$i355$i = ($327|0)==(0);
          if ($cmp2$i355$i) {
           HEAP32[$buf_bit_idx$i346$i>>2] = 8;
           $328 = HEAP32[$buf_byte_idx$i347$i>>2]|0;
           $inc$i357$i = (($328) + 1)|0;
           HEAP32[$buf_byte_idx$i347$i>>2] = $inc$i357$i;
           $329 = HEAP32[$w_ptr$i56>>2]|0;
           $write_timing$i358$i = (((($gfc)) + 39840|0) + (($329*48)|0)|0);
           $330 = HEAP32[$write_timing$i358$i>>2]|0;
           $331 = HEAP32[$totbit$i349$i>>2]|0;
           $cmp4$i359$i = ($330|0)==($331|0);
           if ($cmp4$i359$i) {
            $332 = HEAP32[$buf$i$i350$i>>2]|0;
            $arrayidx$i$i361$i = (($332) + ($inc$i357$i)|0);
            $arraydecay$i$i362$i = (((((($gfc)) + 39840|0) + (($329*48)|0)|0)) + 8|0);
            $333 = HEAP32[$sideinfo_len$i48>>2]|0;
            _memcpy(($arrayidx$i$i361$i|0),($arraydecay$i$i362$i|0),($333|0))|0;
            $334 = HEAP32[$sideinfo_len$i48>>2]|0;
            $335 = HEAP32[$buf_byte_idx$i347$i>>2]|0;
            $add$i$i363$i = (($335) + ($334))|0;
            HEAP32[$buf_byte_idx$i347$i>>2] = $add$i$i363$i;
            $mul$i$i364$i = $334 << 3;
            $336 = HEAP32[$totbit$i349$i>>2]|0;
            $add8$i$i365$i = (($336) + ($mul$i$i364$i))|0;
            HEAP32[$totbit$i349$i>>2] = $add8$i$i365$i;
            $337 = HEAP32[$w_ptr$i56>>2]|0;
            $add10$i$i366$i = (($337) + 1)|0;
            $and$i$i367$i = $add10$i$i366$i & 255;
            HEAP32[$w_ptr$i56>>2] = $and$i$i367$i;
            $339 = $add$i$i363$i;
           } else {
            $339 = $inc$i357$i;
           }
           $338 = HEAP32[$buf$i$i350$i>>2]|0;
           $arrayidx7$i369$i = (($338) + ($339)|0);
           HEAP8[$arrayidx7$i369$i>>0] = 0;
           $$pre$i370$i = HEAP32[$buf_bit_idx$i346$i>>2]|0;
           $340 = $$pre$i370$i;
          } else {
           $340 = $327;
          }
          $cmp10$i372$i = ($j$addr$026$i354$i|0)<($340|0);
          $j$addr$0$$i373$i = $cmp10$i372$i ? $j$addr$026$i354$i : $340;
          $sub$i374$i = (($j$addr$026$i354$i) - ($j$addr$0$$i373$i))|0;
          $sub13$i375$i = (($340) - ($j$addr$0$$i373$i))|0;
          HEAP32[$buf_bit_idx$i346$i>>2] = $sub13$i375$i;
          $shr$i376$i = $$$i >>> $sub$i374$i;
          $shl$i377$i = $shr$i376$i << $sub13$i375$i;
          $341 = HEAP32[$buf$i$i350$i>>2]|0;
          $342 = HEAP32[$buf_byte_idx$i347$i>>2]|0;
          $arrayidx17$i378$i = (($341) + ($342)|0);
          $343 = HEAP8[$arrayidx17$i378$i>>0]|0;
          $conv$i379$i = $343&255;
          $or$i380$i = $conv$i379$i | $shl$i377$i;
          $conv18$i381$i = $or$i380$i&255;
          HEAP8[$arrayidx17$i378$i>>0] = $conv18$i381$i;
          $344 = HEAP32[$totbit$i349$i>>2]|0;
          $add$i382$i = (($344) + ($j$addr$0$$i373$i))|0;
          HEAP32[$totbit$i349$i>>2] = $add$i382$i;
          $cmp$i383$i = ($sub$i374$i|0)>(0);
          if ($cmp$i383$i) {
           $j$addr$026$i354$i = $sub$i374$i;
          } else {
           break;
          }
         }
         $add79$i = (($mul$i70) + 1)|0;
         $arrayidx80$i = ((((((($gfc)) + 304|0) + (($ch$1565$i*5252)|0)|0)) + 4608|0) + ($add79$i<<2)|0);
         $345 = HEAP32[$arrayidx80$i>>2]|0;
         $cmp81$i = ($345|0)>(0);
         $cond89$i = $cmp81$i ? $345 : 0;
         $350 = $add$i382$i;$j$addr$026$i395$i = $325;
         while(1) {
          $346 = HEAP32[$buf_bit_idx$i346$i>>2]|0;
          $cmp2$i396$i = ($346|0)==(0);
          if ($cmp2$i396$i) {
           HEAP32[$buf_bit_idx$i346$i>>2] = 8;
           $347 = HEAP32[$buf_byte_idx$i347$i>>2]|0;
           $inc$i398$i = (($347) + 1)|0;
           HEAP32[$buf_byte_idx$i347$i>>2] = $inc$i398$i;
           $348 = HEAP32[$w_ptr$i56>>2]|0;
           $write_timing$i399$i = (((($gfc)) + 39840|0) + (($348*48)|0)|0);
           $349 = HEAP32[$write_timing$i399$i>>2]|0;
           $cmp4$i400$i = ($349|0)==($350|0);
           if ($cmp4$i400$i) {
            $351 = HEAP32[$buf$i$i350$i>>2]|0;
            $arrayidx$i$i402$i = (($351) + ($inc$i398$i)|0);
            $arraydecay$i$i403$i = (((((($gfc)) + 39840|0) + (($348*48)|0)|0)) + 8|0);
            $352 = HEAP32[$sideinfo_len$i48>>2]|0;
            _memcpy(($arrayidx$i$i402$i|0),($arraydecay$i$i403$i|0),($352|0))|0;
            $353 = HEAP32[$sideinfo_len$i48>>2]|0;
            $354 = HEAP32[$buf_byte_idx$i347$i>>2]|0;
            $add$i$i404$i = (($354) + ($353))|0;
            HEAP32[$buf_byte_idx$i347$i>>2] = $add$i$i404$i;
            $mul$i$i405$i = $353 << 3;
            $355 = HEAP32[$totbit$i349$i>>2]|0;
            $add8$i$i406$i = (($355) + ($mul$i$i405$i))|0;
            HEAP32[$totbit$i349$i>>2] = $add8$i$i406$i;
            $356 = HEAP32[$w_ptr$i56>>2]|0;
            $add10$i$i407$i = (($356) + 1)|0;
            $and$i$i408$i = $add10$i$i407$i & 255;
            HEAP32[$w_ptr$i56>>2] = $and$i$i408$i;
            $358 = $add$i$i404$i;
           } else {
            $358 = $inc$i398$i;
           }
           $357 = HEAP32[$buf$i$i350$i>>2]|0;
           $arrayidx7$i410$i = (($357) + ($358)|0);
           HEAP8[$arrayidx7$i410$i>>0] = 0;
           $$pre$i411$i = HEAP32[$buf_bit_idx$i346$i>>2]|0;
           $359 = $$pre$i411$i;
          } else {
           $359 = $346;
          }
          $cmp10$i413$i = ($j$addr$026$i395$i|0)<($359|0);
          $j$addr$0$$i414$i = $cmp10$i413$i ? $j$addr$026$i395$i : $359;
          $sub$i415$i = (($j$addr$026$i395$i) - ($j$addr$0$$i414$i))|0;
          $sub13$i416$i = (($359) - ($j$addr$0$$i414$i))|0;
          HEAP32[$buf_bit_idx$i346$i>>2] = $sub13$i416$i;
          $shr$i417$i = $cond89$i >>> $sub$i415$i;
          $shl$i418$i = $shr$i417$i << $sub13$i416$i;
          $360 = HEAP32[$buf$i$i350$i>>2]|0;
          $361 = HEAP32[$buf_byte_idx$i347$i>>2]|0;
          $arrayidx17$i419$i = (($360) + ($361)|0);
          $362 = HEAP8[$arrayidx17$i419$i>>0]|0;
          $conv$i420$i = $362&255;
          $or$i421$i = $conv$i420$i | $shl$i418$i;
          $conv18$i422$i = $or$i421$i&255;
          HEAP8[$arrayidx17$i419$i>>0] = $conv18$i422$i;
          $363 = HEAP32[$totbit$i349$i>>2]|0;
          $add$i423$i = (($363) + ($j$addr$0$$i414$i))|0;
          HEAP32[$totbit$i349$i>>2] = $add$i423$i;
          $cmp$i424$i = ($sub$i415$i|0)>(0);
          if ($cmp$i424$i) {
           $350 = $add$i423$i;$j$addr$026$i395$i = $sub$i415$i;
          } else {
           break;
          }
         }
         $add92$i = (($mul$i70) + 2)|0;
         $arrayidx93$i = ((((((($gfc)) + 304|0) + (($ch$1565$i*5252)|0)|0)) + 4608|0) + ($add92$i<<2)|0);
         $364 = HEAP32[$arrayidx93$i>>2]|0;
         $cmp94$i = ($364|0)>(0);
         $$112$i = $cmp94$i ? $364 : 0;
         $369 = $add$i423$i;$j$addr$026$i436$i = $325;
         while(1) {
          $365 = HEAP32[$buf_bit_idx$i346$i>>2]|0;
          $cmp2$i437$i = ($365|0)==(0);
          if ($cmp2$i437$i) {
           HEAP32[$buf_bit_idx$i346$i>>2] = 8;
           $366 = HEAP32[$buf_byte_idx$i347$i>>2]|0;
           $inc$i439$i = (($366) + 1)|0;
           HEAP32[$buf_byte_idx$i347$i>>2] = $inc$i439$i;
           $367 = HEAP32[$w_ptr$i56>>2]|0;
           $write_timing$i440$i = (((($gfc)) + 39840|0) + (($367*48)|0)|0);
           $368 = HEAP32[$write_timing$i440$i>>2]|0;
           $cmp4$i441$i = ($368|0)==($369|0);
           if ($cmp4$i441$i) {
            $370 = HEAP32[$buf$i$i350$i>>2]|0;
            $arrayidx$i$i443$i = (($370) + ($inc$i439$i)|0);
            $arraydecay$i$i444$i = (((((($gfc)) + 39840|0) + (($367*48)|0)|0)) + 8|0);
            $371 = HEAP32[$sideinfo_len$i48>>2]|0;
            _memcpy(($arrayidx$i$i443$i|0),($arraydecay$i$i444$i|0),($371|0))|0;
            $372 = HEAP32[$sideinfo_len$i48>>2]|0;
            $373 = HEAP32[$buf_byte_idx$i347$i>>2]|0;
            $add$i$i445$i = (($373) + ($372))|0;
            HEAP32[$buf_byte_idx$i347$i>>2] = $add$i$i445$i;
            $mul$i$i446$i = $372 << 3;
            $374 = HEAP32[$totbit$i349$i>>2]|0;
            $add8$i$i447$i = (($374) + ($mul$i$i446$i))|0;
            HEAP32[$totbit$i349$i>>2] = $add8$i$i447$i;
            $375 = HEAP32[$w_ptr$i56>>2]|0;
            $add10$i$i448$i = (($375) + 1)|0;
            $and$i$i449$i = $add10$i$i448$i & 255;
            HEAP32[$w_ptr$i56>>2] = $and$i$i449$i;
            $377 = $add$i$i445$i;
           } else {
            $377 = $inc$i439$i;
           }
           $376 = HEAP32[$buf$i$i350$i>>2]|0;
           $arrayidx7$i451$i = (($376) + ($377)|0);
           HEAP8[$arrayidx7$i451$i>>0] = 0;
           $$pre$i452$i = HEAP32[$buf_bit_idx$i346$i>>2]|0;
           $378 = $$pre$i452$i;
          } else {
           $378 = $365;
          }
          $cmp10$i454$i = ($j$addr$026$i436$i|0)<($378|0);
          $j$addr$0$$i455$i = $cmp10$i454$i ? $j$addr$026$i436$i : $378;
          $sub$i456$i = (($j$addr$026$i436$i) - ($j$addr$0$$i455$i))|0;
          $sub13$i457$i = (($378) - ($j$addr$0$$i455$i))|0;
          HEAP32[$buf_bit_idx$i346$i>>2] = $sub13$i457$i;
          $shr$i458$i = $$112$i >>> $sub$i456$i;
          $shl$i459$i = $shr$i458$i << $sub13$i457$i;
          $379 = HEAP32[$buf$i$i350$i>>2]|0;
          $380 = HEAP32[$buf_byte_idx$i347$i>>2]|0;
          $arrayidx17$i460$i = (($379) + ($380)|0);
          $381 = HEAP8[$arrayidx17$i460$i>>0]|0;
          $conv$i461$i = $381&255;
          $or$i462$i = $conv$i461$i | $shl$i459$i;
          $conv18$i463$i = $or$i462$i&255;
          HEAP8[$arrayidx17$i460$i>>0] = $conv18$i463$i;
          $382 = HEAP32[$totbit$i349$i>>2]|0;
          $add$i464$i = (($382) + ($j$addr$0$$i455$i))|0;
          HEAP32[$totbit$i349$i>>2] = $add$i464$i;
          $cmp$i465$i = ($sub$i456$i|0)>(0);
          if ($cmp$i465$i) {
           $369 = $add$i464$i;$j$addr$026$i436$i = $sub$i456$i;
          } else {
           break;
          }
         }
        }
        $add104$i = (($scale_bits$1556$i) + ($mul103$i))|0;
        $inc106$i = (($i$0555$i) + 1)|0;
        $inc107$i = (($sfb$3557$i) + 1)|0;
        $cmp67$i = ($inc106$i|0)<($div$i69|0);
        if ($cmp67$i) {
         $i$0555$i = $inc106$i;$scale_bits$1556$i = $add104$i;$sfb$3557$i = $inc107$i;
        } else {
         $scale_bits$1$lcssa$i = $add104$i;$sfb$3$lcssa$i = $inc107$i;
         break;
        }
       }
      } else {
       $scale_bits$1$lcssa$i = $scale_bits$0561$i;$sfb$3$lcssa$i = $sfb$2562$i;
      }
      $inc110$i = (($sfb_partition$0560$i) + 1)|0;
      $exitcond575$i = ($inc110$i|0)==(4);
      if ($exitcond575$i) {
       break;
      } else {
       $scale_bits$0561$i = $scale_bits$1$lcssa$i;$sfb$2562$i = $sfb$3$lcssa$i;$sfb_partition$0560$i = $inc110$i;
      }
     }
     $383 = HEAP32[$arrayidx$i468$i>>2]|0;
     $mul$i469$i = ($383*3)|0;
     $big_values$i470$i = (((((($gfc)) + 304|0) + (($ch$1565$i*5252)|0)|0)) + 4772|0);
     $384 = HEAP32[$big_values$i470$i>>2]|0;
     $cmp$i471$i72 = ($mul$i469$i|0)>($384|0);
     $$mul$i472$i = $cmp$i471$i72 ? $384 : $mul$i469$i;
     $arrayidx2$i473$i = (((((($gfc)) + 304|0) + (($ch$1565$i*5252)|0)|0)) + 4796|0);
     $385 = HEAP32[$arrayidx2$i473$i>>2]|0;
     $call$i474$i = (_Huffmancode($gfc,$385,0,$$mul$i472$i,$arrayidx56$i)|0);
     $arrayidx4$i475$i = (((((($gfc)) + 304|0) + (($ch$1565$i*5252)|0)|0)) + 4800|0);
     $386 = HEAP32[$arrayidx4$i475$i>>2]|0;
     $387 = HEAP32[$big_values$i470$i>>2]|0;
     $call6$i476$i = (_Huffmancode($gfc,$386,$$mul$i472$i,$387,$arrayidx56$i)|0);
     $add13$i$sink$i = $call6$i476$i;$big_values$i$pre$phi$iZZ2D = $big_values$i470$i;$call16$i$sink$i = $call$i474$i;$scale_bits$4$i = $scale_bits$1$lcssa$i;
    } else {
     $scale_bits$2552$i = 0;$sfb$4553$i = 0;$sfb_partition$1551$i = 0;
     while(1) {
      $388 = HEAP32[$sfb_partition_table$i>>2]|0;
      $arrayidx120$i = (($388) + ($sfb_partition$1551$i<<2)|0);
      $389 = HEAP32[$arrayidx120$i>>2]|0;
      $arrayidx123$i = ((((((($gfc)) + 304|0) + (($ch$1565$i*5252)|0)|0)) + 5192|0) + ($sfb_partition$1551$i<<2)|0);
      $390 = HEAP32[$arrayidx123$i>>2]|0;
      $cmp125545$i = ($389|0)>(0);
      do {
       if ($cmp125545$i) {
        $cmp25$i478$i = ($390|0)>(0);
        $391 = Math_imul($390, $389)|0;
        $392 = (($391) + ($scale_bits$2552$i))|0;
        if ($cmp25$i478$i) {
         $i$1546$us$i = 0;$sfb$5548$us$i = $sfb$4553$i;
        } else {
         $393 = (($389) + ($sfb$4553$i))|0;
         $scale_bits$3$lcssa$i = $392;$sfb$5$lcssa$i = $393;
         break;
        }
        while(1) {
         $arrayidx128$us$i = ((((((($gfc)) + 304|0) + (($ch$1565$i*5252)|0)|0)) + 4608|0) + ($sfb$5548$us$i<<2)|0);
         $394 = HEAP32[$arrayidx128$us$i>>2]|0;
         $cmp129$us$i = ($394|0)>(0);
         $$113$us$i = $cmp129$us$i ? $394 : 0;
         $j$addr$026$i487$us$i = $390;
         while(1) {
          $395 = HEAP32[$buf_bit_idx$i346$i>>2]|0;
          $cmp2$i488$us$i = ($395|0)==(0);
          if ($cmp2$i488$us$i) {
           HEAP32[$buf_bit_idx$i346$i>>2] = 8;
           $396 = HEAP32[$buf_byte_idx$i347$i>>2]|0;
           $inc$i490$us$i = (($396) + 1)|0;
           HEAP32[$buf_byte_idx$i347$i>>2] = $inc$i490$us$i;
           $397 = HEAP32[$w_ptr$i56>>2]|0;
           $write_timing$i491$us$i = (((($gfc)) + 39840|0) + (($397*48)|0)|0);
           $398 = HEAP32[$write_timing$i491$us$i>>2]|0;
           $399 = HEAP32[$totbit$i349$i>>2]|0;
           $cmp4$i492$us$i = ($398|0)==($399|0);
           if ($cmp4$i492$us$i) {
            $400 = HEAP32[$buf$i$i350$i>>2]|0;
            $arrayidx$i$i494$us$i = (($400) + ($inc$i490$us$i)|0);
            $arraydecay$i$i495$us$i = (((((($gfc)) + 39840|0) + (($397*48)|0)|0)) + 8|0);
            $401 = HEAP32[$sideinfo_len$i48>>2]|0;
            _memcpy(($arrayidx$i$i494$us$i|0),($arraydecay$i$i495$us$i|0),($401|0))|0;
            $402 = HEAP32[$sideinfo_len$i48>>2]|0;
            $403 = HEAP32[$buf_byte_idx$i347$i>>2]|0;
            $add$i$i496$us$i = (($403) + ($402))|0;
            HEAP32[$buf_byte_idx$i347$i>>2] = $add$i$i496$us$i;
            $mul$i$i497$us$i = $402 << 3;
            $404 = HEAP32[$totbit$i349$i>>2]|0;
            $add8$i$i498$us$i = (($404) + ($mul$i$i497$us$i))|0;
            HEAP32[$totbit$i349$i>>2] = $add8$i$i498$us$i;
            $405 = HEAP32[$w_ptr$i56>>2]|0;
            $add10$i$i499$us$i = (($405) + 1)|0;
            $and$i$i500$us$i = $add10$i$i499$us$i & 255;
            HEAP32[$w_ptr$i56>>2] = $and$i$i500$us$i;
            $407 = $add$i$i496$us$i;
           } else {
            $407 = $inc$i490$us$i;
           }
           $406 = HEAP32[$buf$i$i350$i>>2]|0;
           $arrayidx7$i502$us$i = (($406) + ($407)|0);
           HEAP8[$arrayidx7$i502$us$i>>0] = 0;
           $$pre$i503$us$i = HEAP32[$buf_bit_idx$i346$i>>2]|0;
           $408 = $$pre$i503$us$i;
          } else {
           $408 = $395;
          }
          $cmp10$i505$us$i = ($j$addr$026$i487$us$i|0)<($408|0);
          $j$addr$0$$i506$us$i = $cmp10$i505$us$i ? $j$addr$026$i487$us$i : $408;
          $sub$i507$us$i = (($j$addr$026$i487$us$i) - ($j$addr$0$$i506$us$i))|0;
          $sub13$i508$us$i = (($408) - ($j$addr$0$$i506$us$i))|0;
          HEAP32[$buf_bit_idx$i346$i>>2] = $sub13$i508$us$i;
          $shr$i509$us$i = $$113$us$i >>> $sub$i507$us$i;
          $shl$i510$us$i = $shr$i509$us$i << $sub13$i508$us$i;
          $409 = HEAP32[$buf$i$i350$i>>2]|0;
          $410 = HEAP32[$buf_byte_idx$i347$i>>2]|0;
          $arrayidx17$i511$us$i = (($409) + ($410)|0);
          $411 = HEAP8[$arrayidx17$i511$us$i>>0]|0;
          $conv$i512$us$i = $411&255;
          $or$i513$us$i = $conv$i512$us$i | $shl$i510$us$i;
          $conv18$i514$us$i = $or$i513$us$i&255;
          HEAP8[$arrayidx17$i511$us$i>>0] = $conv18$i514$us$i;
          $412 = HEAP32[$totbit$i349$i>>2]|0;
          $add$i515$us$i = (($412) + ($j$addr$0$$i506$us$i))|0;
          HEAP32[$totbit$i349$i>>2] = $add$i515$us$i;
          $cmp$i516$us$i = ($sub$i507$us$i|0)>(0);
          if ($cmp$i516$us$i) {
           $j$addr$026$i487$us$i = $sub$i507$us$i;
          } else {
           break;
          }
         }
         $inc138$us$i = (($i$1546$us$i) + 1)|0;
         $inc139$us$i = (($sfb$5548$us$i) + 1)|0;
         $exitcond573$i = ($inc138$us$i|0)==($389|0);
         if ($exitcond573$i) {
          break;
         } else {
          $i$1546$us$i = $inc138$us$i;$sfb$5548$us$i = $inc139$us$i;
         }
        }
        $413 = (($389) + ($sfb$4553$i))|0;
        $scale_bits$3$lcssa$i = $392;$sfb$5$lcssa$i = $413;
       } else {
        $scale_bits$3$lcssa$i = $scale_bits$2552$i;$sfb$5$lcssa$i = $sfb$4553$i;
       }
      } while(0);
      $inc142$i = (($sfb_partition$1551$i) + 1)|0;
      $exitcond574$i = ($inc142$i|0)==(4);
      if ($exitcond574$i) {
       break;
      } else {
       $scale_bits$2552$i = $scale_bits$3$lcssa$i;$sfb$4553$i = $sfb$5$lcssa$i;$sfb_partition$1551$i = $inc142$i;
      }
     }
     $big_values$i160$i = (((((($gfc)) + 304|0) + (($ch$1565$i*5252)|0)|0)) + 4772|0);
     $414 = HEAP32[$big_values$i160$i>>2]|0;
     $region0_count$i$i = (((((($gfc)) + 304|0) + (($ch$1565$i*5252)|0)|0)) + 4824|0);
     $415 = HEAP32[$region0_count$i$i>>2]|0;
     $add$i161$i = (($415) + 1)|0;
     $arrayidx$i$i = (((($gfc)) + 21360|0) + ($add$i161$i<<2)|0);
     $416 = HEAP32[$arrayidx$i$i>>2]|0;
     $region1_count$i$i = (((((($gfc)) + 304|0) + (($ch$1565$i*5252)|0)|0)) + 4828|0);
     $417 = HEAP32[$region1_count$i$i>>2]|0;
     $add1$i$i = (($415) + 2)|0;
     $add2$i$i73 = (($add1$i$i) + ($417))|0;
     $arrayidx5$i$i = (((($gfc)) + 21360|0) + ($add2$i$i73<<2)|0);
     $418 = HEAP32[$arrayidx5$i$i>>2]|0;
     $cmp$i162$i = ($416|0)>($414|0);
     $$$i$i = $cmp$i162$i ? $414 : $416;
     $cmp6$i$i = ($418|0)>($414|0);
     $region2Start$0$i$i = $cmp6$i$i ? $414 : $418;
     $arrayidx9$i$i = (((((($gfc)) + 304|0) + (($ch$1565$i*5252)|0)|0)) + 4796|0);
     $419 = HEAP32[$arrayidx9$i$i>>2]|0;
     $call$i$i = (_Huffmancode($gfc,$419,0,$$$i$i,$arrayidx56$i)|0);
     $arrayidx11$i$i = (((((($gfc)) + 304|0) + (($ch$1565$i*5252)|0)|0)) + 4800|0);
     $420 = HEAP32[$arrayidx11$i$i>>2]|0;
     $call12$i$i = (_Huffmancode($gfc,$420,$$$i$i,$region2Start$0$i$i,$arrayidx56$i)|0);
     $add13$i$i = (($call12$i$i) + ($call$i$i))|0;
     $arrayidx15$i$i = (((((($gfc)) + 304|0) + (($ch$1565$i*5252)|0)|0)) + 4804|0);
     $421 = HEAP32[$arrayidx15$i$i>>2]|0;
     $call16$i$i = (_Huffmancode($gfc,$421,$region2Start$0$i$i,$414,$arrayidx56$i)|0);
     $add13$i$sink$i = $add13$i$i;$big_values$i$pre$phi$iZZ2D = $big_values$i160$i;$call16$i$sink$i = $call16$i$i;$scale_bits$4$i = $scale_bits$3$lcssa$i;
    }
    $count1table_select$i$i = (((((($gfc)) + 304|0) + (($ch$1565$i*5252)|0)|0)) + 4840|0);
    $422 = HEAP32[$count1table_select$i$i>>2]|0;
    $add$i114$i = (($422) + 32)|0;
    $423 = HEAP32[$big_values$i$pre$phi$iZZ2D>>2]|0;
    $count1$i$i = (((((($gfc)) + 304|0) + (($ch$1565$i*5252)|0)|0)) + 4776|0);
    $424 = HEAP32[$count1$i$i>>2]|0;
    $sub$i115$i = (($424) - ($423))|0;
    $cmp43$i$i = ($sub$i115$i|0)>(3);
    if ($cmp43$i$i) {
     $div48$i$i = $sub$i115$i >>> 2;
     $arrayidx4$i$i = ((((($gfc)) + 304|0) + (($ch$1565$i*5252)|0)|0) + ($423<<2)|0);
     $arrayidx1$i$i = ((((((($gfc)) + 304|0) + (($ch$1565$i*5252)|0)|0)) + 2304|0) + ($423<<2)|0);
     $table$i$i = (((8312 + ($add$i114$i<<4)|0)) + 8|0);
     $hlen$i$i = (((8312 + ($add$i114$i<<4)|0)) + 12|0);
     $425 = HEAP32[$table$i$i>>2]|0;
     $426 = HEAP32[$hlen$i$i>>2]|0;
     $bits$045$i$i = 0;$i$044$i$i = $div48$i$i;$ix$046$i$i = $arrayidx1$i$i;$xr$047$i$i = $arrayidx4$i$i;
     while(1) {
      $427 = HEAP32[$ix$046$i$i>>2]|0;
      $tobool$i$i74 = ($427|0)==(0);
      if ($tobool$i$i74) {
       $huffbits$0$i$i = 0;$p$0$i$i = 0;
      } else {
       $428 = +HEAPF32[$xr$047$i$i>>2];
       $cmp9$i$i = $428 < 0.0;
       if ($cmp9$i$i) {
        $huffbits$0$i$i = 1;$p$0$i$i = 8;
       } else {
        $huffbits$0$i$i = 0;$p$0$i$i = 8;
       }
      }
      $arrayidx12$i$i = ((($ix$046$i$i)) + 4|0);
      $429 = HEAP32[$arrayidx12$i$i>>2]|0;
      $tobool13$i$i = ($429|0)==(0);
      if ($tobool13$i$i) {
       $huffbits$1$i$i = $huffbits$0$i$i;$p$1$i$i = $p$0$i$i;
      } else {
       $add15$i$i = $p$0$i$i | 4;
       $mul$i$i75 = $huffbits$0$i$i << 1;
       $arrayidx16$i$i = ((($xr$047$i$i)) + 4|0);
       $430 = +HEAPF32[$arrayidx16$i$i>>2];
       $cmp17$i$i = $430 < 0.0;
       if ($cmp17$i$i) {
        $inc19$i$i = $mul$i$i75 | 1;
        $huffbits$1$i$i = $inc19$i$i;$p$1$i$i = $add15$i$i;
       } else {
        $huffbits$1$i$i = $mul$i$i75;$p$1$i$i = $add15$i$i;
       }
      }
      $arrayidx22$i$i = ((($ix$046$i$i)) + 8|0);
      $431 = HEAP32[$arrayidx22$i$i>>2]|0;
      $tobool23$i$i = ($431|0)==(0);
      if ($tobool23$i$i) {
       $huffbits$2$i$i = $huffbits$1$i$i;$p$2$i$i = $p$1$i$i;
      } else {
       $add25$i$i = (($p$1$i$i) + 2)|0;
       $mul26$i$i = $huffbits$1$i$i << 1;
       $arrayidx27$i$i = ((($xr$047$i$i)) + 8|0);
       $432 = +HEAPF32[$arrayidx27$i$i>>2];
       $cmp28$i$i = $432 < 0.0;
       if ($cmp28$i$i) {
        $inc30$i$i = $mul26$i$i | 1;
        $huffbits$2$i$i = $inc30$i$i;$p$2$i$i = $add25$i$i;
       } else {
        $huffbits$2$i$i = $mul26$i$i;$p$2$i$i = $add25$i$i;
       }
      }
      $arrayidx33$i$i = ((($ix$046$i$i)) + 12|0);
      $433 = HEAP32[$arrayidx33$i$i>>2]|0;
      $tobool34$i$i = ($433|0)==(0);
      if ($tobool34$i$i) {
       $huffbits$3$i$i = $huffbits$2$i$i;$p$3$i$i = $p$2$i$i;
      } else {
       $inc36$i$i = (($p$2$i$i) + 1)|0;
       $mul37$i$i = $huffbits$2$i$i << 1;
       $arrayidx38$i$i = ((($xr$047$i$i)) + 12|0);
       $434 = +HEAPF32[$arrayidx38$i$i>>2];
       $cmp39$i$i = $434 < 0.0;
       if ($cmp39$i$i) {
        $inc41$i$i = $mul37$i$i | 1;
        $huffbits$3$i$i = $inc41$i$i;$p$3$i$i = $inc36$i$i;
       } else {
        $huffbits$3$i$i = $mul37$i$i;$p$3$i$i = $inc36$i$i;
       }
      }
      $add$ptr$i$i = ((($ix$046$i$i)) + 16|0);
      $add$ptr44$i$i = ((($xr$047$i$i)) + 16|0);
      $arrayidx45$i$i = (($425) + ($p$3$i$i<<1)|0);
      $435 = HEAP16[$arrayidx45$i$i>>1]|0;
      $conv$i117$i = $435&65535;
      $add46$i$i = (($conv$i117$i) + ($huffbits$3$i$i))|0;
      $arrayidx47$i$i = (($426) + ($p$3$i$i)|0);
      $436 = HEAP8[$arrayidx47$i$i>>0]|0;
      $cmp25$i119$i = ($436<<24>>24)==(0);
      if ($cmp25$i119$i) {
       $455 = 0;
      } else {
       $conv48$i$i = $436&255;
       $j$addr$026$i128$i = $conv48$i$i;
       while(1) {
        $437 = HEAP32[$buf_bit_idx$i346$i>>2]|0;
        $cmp2$i129$i = ($437|0)==(0);
        if ($cmp2$i129$i) {
         HEAP32[$buf_bit_idx$i346$i>>2] = 8;
         $438 = HEAP32[$buf_byte_idx$i347$i>>2]|0;
         $inc$i131$i = (($438) + 1)|0;
         HEAP32[$buf_byte_idx$i347$i>>2] = $inc$i131$i;
         $439 = HEAP32[$w_ptr$i56>>2]|0;
         $write_timing$i132$i = (((($gfc)) + 39840|0) + (($439*48)|0)|0);
         $440 = HEAP32[$write_timing$i132$i>>2]|0;
         $441 = HEAP32[$totbit$i349$i>>2]|0;
         $cmp4$i133$i = ($440|0)==($441|0);
         if ($cmp4$i133$i) {
          $442 = HEAP32[$buf$i$i350$i>>2]|0;
          $arrayidx$i$i135$i = (($442) + ($inc$i131$i)|0);
          $arraydecay$i$i136$i = (((((($gfc)) + 39840|0) + (($439*48)|0)|0)) + 8|0);
          $443 = HEAP32[$sideinfo_len$i48>>2]|0;
          _memcpy(($arrayidx$i$i135$i|0),($arraydecay$i$i136$i|0),($443|0))|0;
          $444 = HEAP32[$sideinfo_len$i48>>2]|0;
          $445 = HEAP32[$buf_byte_idx$i347$i>>2]|0;
          $add$i$i137$i = (($445) + ($444))|0;
          HEAP32[$buf_byte_idx$i347$i>>2] = $add$i$i137$i;
          $mul$i$i138$i = $444 << 3;
          $446 = HEAP32[$totbit$i349$i>>2]|0;
          $add8$i$i139$i = (($446) + ($mul$i$i138$i))|0;
          HEAP32[$totbit$i349$i>>2] = $add8$i$i139$i;
          $447 = HEAP32[$w_ptr$i56>>2]|0;
          $add10$i$i140$i = (($447) + 1)|0;
          $and$i$i141$i = $add10$i$i140$i & 255;
          HEAP32[$w_ptr$i56>>2] = $and$i$i141$i;
          $449 = $add$i$i137$i;
         } else {
          $449 = $inc$i131$i;
         }
         $448 = HEAP32[$buf$i$i350$i>>2]|0;
         $arrayidx7$i143$i = (($448) + ($449)|0);
         HEAP8[$arrayidx7$i143$i>>0] = 0;
         $$pre$i144$i = HEAP32[$buf_bit_idx$i346$i>>2]|0;
         $450 = $$pre$i144$i;
        } else {
         $450 = $437;
        }
        $cmp10$i146$i = ($j$addr$026$i128$i|0)<($450|0);
        $j$addr$0$$i147$i = $cmp10$i146$i ? $j$addr$026$i128$i : $450;
        $sub$i148$i = (($j$addr$026$i128$i) - ($j$addr$0$$i147$i))|0;
        $sub13$i149$i = (($450) - ($j$addr$0$$i147$i))|0;
        HEAP32[$buf_bit_idx$i346$i>>2] = $sub13$i149$i;
        $shr$i150$i = $add46$i$i >> $sub$i148$i;
        $shl$i151$i = $shr$i150$i << $sub13$i149$i;
        $451 = HEAP32[$buf$i$i350$i>>2]|0;
        $452 = HEAP32[$buf_byte_idx$i347$i>>2]|0;
        $arrayidx17$i152$i = (($451) + ($452)|0);
        $453 = HEAP8[$arrayidx17$i152$i>>0]|0;
        $conv$i153$i = $453&255;
        $or$i154$i = $conv$i153$i | $shl$i151$i;
        $conv18$i155$i = $or$i154$i&255;
        HEAP8[$arrayidx17$i152$i>>0] = $conv18$i155$i;
        $454 = HEAP32[$totbit$i349$i>>2]|0;
        $add$i156$i = (($454) + ($j$addr$0$$i147$i))|0;
        HEAP32[$totbit$i349$i>>2] = $add$i156$i;
        $cmp$i157$i = ($sub$i148$i|0)>(0);
        if ($cmp$i157$i) {
         $j$addr$026$i128$i = $sub$i148$i;
        } else {
         break;
        }
       }
       $$pre$i76 = HEAP8[$arrayidx47$i$i>>0]|0;
       $455 = $$pre$i76;
      }
      $conv51$i$i = $455&255;
      $add52$i$i = (($conv51$i$i) + ($bits$045$i$i))|0;
      $dec$i$i = (($i$044$i$i) + -1)|0;
      $cmp$i118$i = ($i$044$i$i|0)>(1);
      if ($cmp$i118$i) {
       $bits$045$i$i = $add52$i$i;$i$044$i$i = $dec$i$i;$ix$046$i$i = $add$ptr$i$i;$xr$047$i$i = $add$ptr44$i$i;
      } else {
       $bits$0$lcssa$i$i = $add52$i$i;
       break;
      }
     }
    } else {
     $bits$0$lcssa$i$i = 0;
    }
    $add148$i = (($call16$i$sink$i) + ($tot_bits$2564$i))|0;
    $add17$i$i = (($add148$i) + ($add13$i$sink$i))|0;
    $add149$i = (($add17$i$i) + ($scale_bits$4$i))|0;
    $add150$i = (($add149$i) + ($bits$0$lcssa$i$i))|0;
    $inc152$i = (($ch$1565$i) + 1)|0;
    $456 = HEAP32[$channels_out$i59>>2]|0;
    $cmp51$i = ($inc152$i|0)<($456|0);
    if ($cmp51$i) {
     $ch$1565$i = $inc152$i;$tot_bits$2564$i = $add150$i;
    } else {
     $tot_bits$3$i = $add150$i;$totbit$i$pre$phiZZ2D = $totbit$i349$i;
     break;
    }
   }
  }
 } while(0);
 $add = (($tot_bits$3$i) + ($mul))|0;
 $resvDrain_post = ((($gfc)) + 21324|0);
 $457 = HEAP32[$resvDrain_post>>2]|0;
 _drain_into_ancillary($gfc,$457);
 $458 = HEAP32[$resvDrain_post>>2]|0;
 $add5 = (($add) + ($458))|0;
 $sub = (($mul3$i$i) - ($add5))|0;
 $div = (($sub|0) / 8)&-1;
 $459 = HEAP32[$main_data_begin$i>>2]|0;
 $add6 = (($div) + ($459))|0;
 HEAP32[$main_data_begin$i>>2] = $add6;
 $460 = HEAP32[$w_ptr$i56>>2]|0;
 $461 = HEAP32[$h_ptr$i47>>2]|0;
 $sub$i = (($461) + -1)|0;
 $cmp$i = ($461|0)==(0);
 $$sub$i = $cmp$i ? 255 : $sub$i;
 $write_timing$i = (((($gfc)) + 39840|0) + (($$sub$i*48)|0)|0);
 $462 = HEAP32[$write_timing$i>>2]|0;
 $463 = HEAP32[$totbit$i$pre$phiZZ2D>>2]|0;
 $sub2$i = (($462) - ($463))|0;
 $cmp3$i = ($sub2$i|0)>(-1);
 $add$i = (1 - ($460))|0;
 $sub5$i = (($$sub$i) + ($add$i))|0;
 if ($cmp3$i) {
  $cmp6$i = ($$sub$i|0)<($460|0);
  $add10$i = (($sub5$i) + 256)|0;
  $add10$sub5$i = $cmp6$i ? $add10$i : $sub5$i;
  $mul$i = $add10$sub5$i << 3;
  $464 = HEAP32[$sideinfo_len$i48>>2]|0;
  $mul12$i = Math_imul($mul$i, $464)|0;
  $sub13$i = (($sub2$i) - ($mul12$i))|0;
  $flushbits$0$i = $sub13$i;
 } else {
  $flushbits$0$i = $sub2$i;
 }
 $465 = HEAP32[$bitrate_index$i>>2]|0;
 $tobool$i$i = ($465|0)==(0);
 if ($tobool$i$i) {
  $avg_bitrate$i$i = ((($gfc)) + 120|0);
  $cfg1$idx$val$pre$i$i = HEAP32[$cfg1$i>>2]|0;
  $bit_rate$0$in$i$i = $avg_bitrate$i$i;$cfg1$idx$val$i$i = $cfg1$idx$val$pre$i$i;
 } else {
  $466 = HEAP32[$cfg1$i>>2]|0;
  $arrayidx3$i$i = ((9980 + ($466<<6)|0) + ($465<<2)|0);
  $bit_rate$0$in$i$i = $arrayidx3$i$i;$cfg1$idx$val$i$i = $466;
 }
 $bit_rate$0$i$i = HEAP32[$bit_rate$0$in$i$i>>2]|0;
 $467 = HEAP32[$padding$i>>2]|0;
 $cfg1$idx8$val$i$i = HEAP32[$cfg1$idx8$i>>2]|0;
 $468 = ($cfg1$idx$val$i$i*72000)|0;
 $mul$i$i$i = (($468) + 72000)|0;
 $mul1$i$i$i = Math_imul($mul$i$i$i, $bit_rate$0$i$i)|0;
 $div$i$i$i = (($mul1$i$i$i|0) / ($cfg1$idx8$val$i$i|0))&-1;
 $add2$i$i$i = (($div$i$i$i) + ($467))|0;
 $mul3$i$i$i = $add2$i$i$i << 3;
 $add15$i = (($mul3$i$i$i) + ($flushbits$0$i))|0;
 $cmp24$i = ($add15$i|0)<(0);
 if ($cmp24$i) {
  _lame_errorf($gfc,14660,$vararg_buffer1);
 }
 $ResvSize = ((($gfc)) + 52140|0);
 $469 = HEAP32[$ResvSize>>2]|0;
 $cmp = ($add15$i|0)==($469|0);
 if ($cmp) {
  $471 = $add15$i;
 } else {
  _lame_errorf($gfc,14745,$vararg_buffer3);
  $$pre = HEAP32[$ResvSize>>2]|0;
  $471 = $$pre;
 }
 $470 = HEAP32[$main_data_begin$i>>2]|0;
 $mul9 = $470 << 3;
 $cmp11 = ($mul9|0)==($471|0);
 if (!($cmp11)) {
  $472 = HEAP32[$resvDrain_post>>2]|0;
  $473 = HEAP32[$resvDrain_pre>>2]|0;
  $474 = HEAP32[$sideinfo_len$i48>>2]|0;
  $mul19 = $474 << 3;
  $sub21 = (($add5) - ($472))|0;
  $sub24 = (($sub21) - ($mul19))|0;
  $rem = (($add5|0) % 8)&-1;
  HEAP32[$vararg_buffer5>>2] = $mul9;
  $vararg_ptr7 = ((($vararg_buffer5)) + 4|0);
  HEAP32[$vararg_ptr7>>2] = $471;
  $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
  HEAP32[$vararg_ptr8>>2] = $472;
  $vararg_ptr9 = ((($vararg_buffer5)) + 12|0);
  HEAP32[$vararg_ptr9>>2] = $473;
  $vararg_ptr10 = ((($vararg_buffer5)) + 16|0);
  HEAP32[$vararg_ptr10>>2] = $mul19;
  $vararg_ptr11 = ((($vararg_buffer5)) + 20|0);
  HEAP32[$vararg_ptr11>>2] = $sub24;
  $vararg_ptr12 = ((($vararg_buffer5)) + 24|0);
  HEAP32[$vararg_ptr12>>2] = $add5;
  $vararg_ptr13 = ((($vararg_buffer5)) + 28|0);
  HEAP32[$vararg_ptr13>>2] = $rem;
  $vararg_ptr14 = ((($vararg_buffer5)) + 32|0);
  HEAP32[$vararg_ptr14>>2] = $mul3$i$i;
  _lame_errorf($gfc,14798,$vararg_buffer5);
  _lame_errorf($gfc,15077,$vararg_buffer15);
  _lame_errorf($gfc,15133,$vararg_buffer17);
  _lame_errorf($gfc,15208,$vararg_buffer19);
  _lame_errorf($gfc,15241,$vararg_buffer21);
  $475 = HEAP32[$main_data_begin$i>>2]|0;
  $mul26 = $475 << 3;
  HEAP32[$ResvSize>>2] = $mul26;
 }
 $476 = HEAP32[$totbit$i$pre$phiZZ2D>>2]|0;
 $cmp29 = ($476|0)>(1000000000);
 if ($cmp29) {
  $i$090 = 0;
 } else {
  STACKTOP = sp;return 0;
 }
 while(1) {
  $write_timing = (((($gfc)) + 39840|0) + (($i$090*48)|0)|0);
  $477 = HEAP32[$write_timing>>2]|0;
  $sub34 = (($477) - ($476))|0;
  HEAP32[$write_timing>>2] = $sub34;
  $inc = (($i$090) + 1)|0;
  $exitcond = ($inc|0)==(256);
  if ($exitcond) {
   break;
  } else {
   $i$090 = $inc;
  }
 }
 HEAP32[$totbit$i$pre$phiZZ2D>>2] = 0;
 STACKTOP = sp;return 0;
}
function _Huffmancode($gfc,$tableindex,$start,$end,$gi) {
 $gfc = $gfc|0;
 $tableindex = $tableindex|0;
 $start = $start|0;
 $end = $end|0;
 $gi = $gi|0;
 var $$ = 0, $$pre$i = 0, $$pre$i78 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $5 = 0.0, $6 = 0.0, $7 = 0, $8 = 0, $9 = 0, $add = 0, $add$i = 0, $add$i$i = 0, $add$i$i71 = 0, $add$i90 = 0, $add10$i$i = 0, $add10$i$i74 = 0, $add29 = 0, $add47 = 0, $add55 = 0, $add63 = 0, $add64 = 0;
 var $add65 = 0, $add8$i$i = 0, $add8$i$i73 = 0, $and$i$i = 0, $and$i$i75 = 0, $arraydecay$i$i = 0, $arraydecay$i$i70 = 0, $arrayidx$i$i = 0, $arrayidx$i$i69 = 0, $arrayidx17$i = 0, $arrayidx17$i86 = 0, $arrayidx3 = 0, $arrayidx39108 = 0, $arrayidx5 = 0, $arrayidx52 = 0, $arrayidx57 = 0, $arrayidx7$i = 0, $arrayidx7$i77 = 0, $arrayidx8 = 0, $bits$0112 = 0;
 var $buf$i$i = 0, $buf_bit_idx$i = 0, $buf_byte_idx$i = 0, $cbits$0 = 0, $cbits$1 = 0, $cmp = 0, $cmp$i = 0, $cmp$i91 = 0, $cmp10$i = 0, $cmp10$i80 = 0, $cmp111 = 0, $cmp13 = 0, $cmp15 = 0, $cmp2$i = 0, $cmp2$i63 = 0, $cmp20 = 0, $cmp25$i = 0, $cmp25$i53 = 0, $cmp33 = 0, $cmp4$i = 0;
 var $cmp4$i67 = 0, $cmp40 = 0, $cmp6 = 0, $cmp9 = 0, $conv$i = 0, $conv$i87 = 0, $conv17 = 0, $conv18 = 0, $conv18$ = 0, $conv18$i = 0, $conv18$i89 = 0, $conv26 = 0, $conv28 = 0, $conv30 = 0, $conv48 = 0, $conv49 = 0, $conv53 = 0, $conv58 = 0, $conv60 = 0, $dec45110 = 0;
 var $ext$0 = 0, $ext$1 = 0, $ext$4 = 0, $ext$5 = 0, $ext$6 = 0, $hlen = 0, $i$0113 = 0, $inc$i = 0, $inc$i65 = 0, $inc43109 = 0, $inc43109$in = 0, $inc43109$in$in = 0, $j$addr$0$$i = 0, $j$addr$0$$i81 = 0, $j$addr$026$i = 0, $j$addr$026$i62 = 0, $mul = 0, $mul$i$i = 0, $mul$i$i72 = 0, $or = 0;
 var $or$cond = 0, $or$ext$1 = 0, $or$i = 0, $or$i88 = 0, $or27 = 0, $retval$0 = 0, $shl = 0, $shl$i = 0, $shl$i85 = 0, $shl25 = 0, $shr$i = 0, $shr$i84 = 0, $sideinfo_len$i$i = 0, $sub = 0, $sub$i = 0, $sub$i82 = 0, $sub13$i = 0, $sub13$i83 = 0, $sub23 = 0, $sub50 = 0;
 var $table = 0, $tobool = 0, $totbit$i = 0, $w_ptr$i = 0, $write_timing$i = 0, $write_timing$i66 = 0, $x1$1 = 0, $x1$1103 = 0, $x1$1104 = 0, $x2$1105 = 0, $x2$1106 = 0, $xbits$2 = 0, $xbits$2100 = 0, $xbits$299 = 0, $xlen = 0, $xlen1$0 = 0, $xlen1$0101 = 0, $xlen1$0102 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $xlen = (8312 + ($tableindex<<4)|0);
 $0 = HEAP32[$xlen>>2]|0;
 $tobool = ($tableindex|0)!=(0);
 $cmp111 = ($start|0)<($end|0);
 $or$cond = $tobool & $cmp111;
 if (!($or$cond)) {
  $retval$0 = 0;
  return ($retval$0|0);
 }
 $cmp13 = ($tableindex>>>0)>(15);
 $conv18 = $0&65535;
 $hlen = (((8312 + ($tableindex<<4)|0)) + 12|0);
 $1 = HEAP32[$hlen>>2]|0;
 $table = (((8312 + ($tableindex<<4)|0)) + 8|0);
 $2 = HEAP32[$table>>2]|0;
 $buf_bit_idx$i = ((($gfc)) + 300|0);
 $buf_byte_idx$i = ((($gfc)) + 296|0);
 $w_ptr$i = ((($gfc)) + 52132|0);
 $totbit$i = ((($gfc)) + 292|0);
 $buf$i$i = ((($gfc)) + 284|0);
 $sideinfo_len$i$i = ((($gfc)) + 24|0);
 $bits$0112 = 0;$i$0113 = $start;
 while(1) {
  $arrayidx3 = (((($gi)) + 2304|0) + ($i$0113<<2)|0);
  $3 = HEAP32[$arrayidx3>>2]|0;
  $add = (($i$0113) + 1)|0;
  $arrayidx5 = (((($gi)) + 2304|0) + ($add<<2)|0);
  $4 = HEAP32[$arrayidx5>>2]|0;
  $cmp6 = ($3|0)==(0);
  if ($cmp6) {
   $cbits$0 = 0;$ext$1 = 0;
  } else {
   $arrayidx8 = (($gi) + ($i$0113<<2)|0);
   $5 = +HEAPF32[$arrayidx8>>2];
   $cmp9 = $5 < 0.0;
   $ext$0 = $cmp9&1;
   $cbits$0 = -1;$ext$1 = $ext$0;
  }
  if ($cmp13) {
   $cmp15 = ($3>>>0)>(14);
   $sub = $3 << 1;
   $conv17 = (($sub) + 131042)|0;
   $shl = $conv17 & 131070;
   $conv18$ = $cmp15 ? $conv18 : 0;
   $or = $cmp15 ? $shl : 0;
   $or$ext$1 = $ext$1 | $or;
   $$ = $cmp15 ? 15 : $3;
   $cmp20 = ($4>>>0)>(14);
   if ($cmp20) {
    $conv28 = $conv18$&65535;
    $add29 = (($conv28) + ($0))|0;
    $shl25 = $or$ext$1 << $0;
    $sub23 = (($4) + 65521)|0;
    $conv26 = $sub23 & 65535;
    $or27 = $shl25 | $conv26;
    $conv30 = $add29&65535;
    $inc43109$in$in = $or27;$x1$1103 = $$;$x2$1105 = 15;$xbits$299 = $conv30;$xlen1$0101 = 16;
    label = 9;
   } else {
    $ext$4 = $or$ext$1;$x1$1 = $$;$xbits$2 = $conv18$;$xlen1$0 = 16;
    label = 8;
   }
  } else {
   $ext$4 = $ext$1;$x1$1 = $3;$xbits$2 = 0;$xlen1$0 = $0;
   label = 8;
  }
  if ((label|0) == 8) {
   label = 0;
   $cmp33 = ($4|0)==(0);
   if ($cmp33) {
    $cbits$1 = $cbits$0;$ext$6 = $ext$4;$x1$1104 = $x1$1;$x2$1106 = 0;$xbits$2100 = $xbits$2;$xlen1$0102 = $xlen1$0;
   } else {
    $inc43109$in$in = $ext$4;$x1$1103 = $x1$1;$x2$1105 = $4;$xbits$299 = $xbits$2;$xlen1$0101 = $xlen1$0;
    label = 9;
   }
  }
  if ((label|0) == 9) {
   label = 0;
   $inc43109$in = $inc43109$in$in << 1;
   $arrayidx39108 = (($gi) + ($add<<2)|0);
   $dec45110 = (($cbits$0) + -1)<<16>>16;
   $6 = +HEAPF32[$arrayidx39108>>2];
   $cmp40 = $6 < 0.0;
   $inc43109 = $cmp40&1;
   $ext$5 = $inc43109$in | $inc43109;
   $cbits$1 = $dec45110;$ext$6 = $ext$5;$x1$1104 = $x1$1103;$x2$1106 = $x2$1105;$xbits$2100 = $xbits$299;$xlen1$0102 = $xlen1$0101;
  }
  $mul = Math_imul($xlen1$0102, $x1$1104)|0;
  $add47 = (($mul) + ($x2$1106))|0;
  $conv48 = $cbits$1 << 16 >> 16;
  $conv49 = $xbits$2100&65535;
  $sub50 = (($conv49) - ($conv48))|0;
  $arrayidx52 = (($1) + ($add47)|0);
  $7 = HEAP8[$arrayidx52>>0]|0;
  $conv53 = $7&255;
  $add55 = (($conv53) + ($conv48))|0;
  $arrayidx57 = (($2) + ($add47<<1)|0);
  $8 = HEAP16[$arrayidx57>>1]|0;
  $conv58 = $8&65535;
  $cmp25$i = ($add55|0)>(0);
  if ($cmp25$i) {
   $j$addr$026$i = $add55;
   while(1) {
    $9 = HEAP32[$buf_bit_idx$i>>2]|0;
    $cmp2$i = ($9|0)==(0);
    if ($cmp2$i) {
     HEAP32[$buf_bit_idx$i>>2] = 8;
     $10 = HEAP32[$buf_byte_idx$i>>2]|0;
     $inc$i = (($10) + 1)|0;
     HEAP32[$buf_byte_idx$i>>2] = $inc$i;
     $11 = HEAP32[$w_ptr$i>>2]|0;
     $write_timing$i = (((($gfc)) + 39840|0) + (($11*48)|0)|0);
     $12 = HEAP32[$write_timing$i>>2]|0;
     $13 = HEAP32[$totbit$i>>2]|0;
     $cmp4$i = ($12|0)==($13|0);
     if ($cmp4$i) {
      $14 = HEAP32[$buf$i$i>>2]|0;
      $arrayidx$i$i = (($14) + ($inc$i)|0);
      $arraydecay$i$i = (((((($gfc)) + 39840|0) + (($11*48)|0)|0)) + 8|0);
      $15 = HEAP32[$sideinfo_len$i$i>>2]|0;
      _memcpy(($arrayidx$i$i|0),($arraydecay$i$i|0),($15|0))|0;
      $16 = HEAP32[$sideinfo_len$i$i>>2]|0;
      $17 = HEAP32[$buf_byte_idx$i>>2]|0;
      $add$i$i = (($17) + ($16))|0;
      HEAP32[$buf_byte_idx$i>>2] = $add$i$i;
      $mul$i$i = $16 << 3;
      $18 = HEAP32[$totbit$i>>2]|0;
      $add8$i$i = (($18) + ($mul$i$i))|0;
      HEAP32[$totbit$i>>2] = $add8$i$i;
      $19 = HEAP32[$w_ptr$i>>2]|0;
      $add10$i$i = (($19) + 1)|0;
      $and$i$i = $add10$i$i & 255;
      HEAP32[$w_ptr$i>>2] = $and$i$i;
      $21 = $add$i$i;
     } else {
      $21 = $inc$i;
     }
     $20 = HEAP32[$buf$i$i>>2]|0;
     $arrayidx7$i = (($20) + ($21)|0);
     HEAP8[$arrayidx7$i>>0] = 0;
     $$pre$i = HEAP32[$buf_bit_idx$i>>2]|0;
     $22 = $$pre$i;
    } else {
     $22 = $9;
    }
    $cmp10$i = ($j$addr$026$i|0)<($22|0);
    $j$addr$0$$i = $cmp10$i ? $j$addr$026$i : $22;
    $sub$i = (($j$addr$026$i) - ($j$addr$0$$i))|0;
    $sub13$i = (($22) - ($j$addr$0$$i))|0;
    HEAP32[$buf_bit_idx$i>>2] = $sub13$i;
    $shr$i = $conv58 >>> $sub$i;
    $shl$i = $shr$i << $sub13$i;
    $23 = HEAP32[$buf$i$i>>2]|0;
    $24 = HEAP32[$buf_byte_idx$i>>2]|0;
    $arrayidx17$i = (($23) + ($24)|0);
    $25 = HEAP8[$arrayidx17$i>>0]|0;
    $conv$i = $25&255;
    $or$i = $conv$i | $shl$i;
    $conv18$i = $or$i&255;
    HEAP8[$arrayidx17$i>>0] = $conv18$i;
    $26 = HEAP32[$totbit$i>>2]|0;
    $add$i = (($26) + ($j$addr$0$$i))|0;
    HEAP32[$totbit$i>>2] = $add$i;
    $cmp$i = ($sub$i|0)>(0);
    if ($cmp$i) {
     $j$addr$026$i = $sub$i;
    } else {
     break;
    }
   }
  }
  $conv60 = $sub50 & 65535;
  $cmp25$i53 = ($conv60|0)==(0);
  if (!($cmp25$i53)) {
   $j$addr$026$i62 = $conv60;
   while(1) {
    $27 = HEAP32[$buf_bit_idx$i>>2]|0;
    $cmp2$i63 = ($27|0)==(0);
    if ($cmp2$i63) {
     HEAP32[$buf_bit_idx$i>>2] = 8;
     $28 = HEAP32[$buf_byte_idx$i>>2]|0;
     $inc$i65 = (($28) + 1)|0;
     HEAP32[$buf_byte_idx$i>>2] = $inc$i65;
     $29 = HEAP32[$w_ptr$i>>2]|0;
     $write_timing$i66 = (((($gfc)) + 39840|0) + (($29*48)|0)|0);
     $30 = HEAP32[$write_timing$i66>>2]|0;
     $31 = HEAP32[$totbit$i>>2]|0;
     $cmp4$i67 = ($30|0)==($31|0);
     if ($cmp4$i67) {
      $32 = HEAP32[$buf$i$i>>2]|0;
      $arrayidx$i$i69 = (($32) + ($inc$i65)|0);
      $arraydecay$i$i70 = (((((($gfc)) + 39840|0) + (($29*48)|0)|0)) + 8|0);
      $33 = HEAP32[$sideinfo_len$i$i>>2]|0;
      _memcpy(($arrayidx$i$i69|0),($arraydecay$i$i70|0),($33|0))|0;
      $34 = HEAP32[$sideinfo_len$i$i>>2]|0;
      $35 = HEAP32[$buf_byte_idx$i>>2]|0;
      $add$i$i71 = (($35) + ($34))|0;
      HEAP32[$buf_byte_idx$i>>2] = $add$i$i71;
      $mul$i$i72 = $34 << 3;
      $36 = HEAP32[$totbit$i>>2]|0;
      $add8$i$i73 = (($36) + ($mul$i$i72))|0;
      HEAP32[$totbit$i>>2] = $add8$i$i73;
      $37 = HEAP32[$w_ptr$i>>2]|0;
      $add10$i$i74 = (($37) + 1)|0;
      $and$i$i75 = $add10$i$i74 & 255;
      HEAP32[$w_ptr$i>>2] = $and$i$i75;
      $39 = $add$i$i71;
     } else {
      $39 = $inc$i65;
     }
     $38 = HEAP32[$buf$i$i>>2]|0;
     $arrayidx7$i77 = (($38) + ($39)|0);
     HEAP8[$arrayidx7$i77>>0] = 0;
     $$pre$i78 = HEAP32[$buf_bit_idx$i>>2]|0;
     $40 = $$pre$i78;
    } else {
     $40 = $27;
    }
    $cmp10$i80 = ($j$addr$026$i62|0)<($40|0);
    $j$addr$0$$i81 = $cmp10$i80 ? $j$addr$026$i62 : $40;
    $sub$i82 = (($j$addr$026$i62) - ($j$addr$0$$i81))|0;
    $sub13$i83 = (($40) - ($j$addr$0$$i81))|0;
    HEAP32[$buf_bit_idx$i>>2] = $sub13$i83;
    $shr$i84 = $ext$6 >> $sub$i82;
    $shl$i85 = $shr$i84 << $sub13$i83;
    $41 = HEAP32[$buf$i$i>>2]|0;
    $42 = HEAP32[$buf_byte_idx$i>>2]|0;
    $arrayidx17$i86 = (($41) + ($42)|0);
    $43 = HEAP8[$arrayidx17$i86>>0]|0;
    $conv$i87 = $43&255;
    $or$i88 = $conv$i87 | $shl$i85;
    $conv18$i89 = $or$i88&255;
    HEAP8[$arrayidx17$i86>>0] = $conv18$i89;
    $44 = HEAP32[$totbit$i>>2]|0;
    $add$i90 = (($44) + ($j$addr$0$$i81))|0;
    HEAP32[$totbit$i>>2] = $add$i90;
    $cmp$i91 = ($sub$i82|0)>(0);
    if ($cmp$i91) {
     $j$addr$026$i62 = $sub$i82;
    } else {
     break;
    }
   }
  }
  $add63 = (($conv60) + ($bits$0112))|0;
  $add64 = (($add63) + ($add55))|0;
  $add65 = (($i$0113) + 2)|0;
  $cmp = ($add65|0)<($end|0);
  if ($cmp) {
   $bits$0112 = $add64;$i$0113 = $add65;
  } else {
   $retval$0 = $add64;
   break;
  }
 }
 return ($retval$0|0);
}
function _copy_buffer($gfc,$buffer,$size,$mp3data) {
 $gfc = $gfc|0;
 $buffer = $buffer|0;
 $size = $size|0;
 $mp3data = $mp3data|0;
 var $$call$i = 0, $$pre$i = 0.0, $$pre45$i = 0.0, $$sink$i = 0.0, $$sink2$i = 0.0, $0 = 0, $1 = 0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0.0, $8 = 0, $9 = 0.0;
 var $PeakSample36$i = 0, $add = 0, $add$i = 0, $arraydecay3$i = 0, $arrayidx12$i = 0, $arrayidx35$i = 0, $buf$i = 0, $buf_bit_idx$i = 0, $buf_byte_idx$i = 0, $call$i = 0, $call67$i = 0, $channels_out66$i = 0, $cmp$i = 0, $cmp$i11 = 0, $cmp13$i = 0, $cmp2$i = 0, $cmp21$i = 0, $cmp29$i = 0, $cmp3$i = 0, $cmp37$i = 0;
 var $cmp4$i = 0, $cmp47$i = 0, $cmp6$i = 0, $cmp68$i = 0, $decode_on_the_fly$i = 0, $exitcond$i = 0, $exitcond44$i = 0, $findPeakSample$i = 0, $findReplayGain$i = 0, $hip$i = 0, $i$040$i = 0, $i$142$i = 0, $inc$i = 0, $inc56$i = 0, $mp3_in$043$i = 0, $nBytesWritten = 0, $nMusicCRC = 0, $or$cond$i = 0, $pcm_buf$i = 0, $retval$0 = 0;
 var $rgdata$i = 0, $sub$i = 0.0, $sub45$i = 0.0, $tobool = 0, $tobool$i = 0, $tobool60$i = 0, $tobool8$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 9216|0;
 $pcm_buf$i = sp;
 $buf_byte_idx$i = ((($gfc)) + 296|0);
 $0 = HEAP32[$buf_byte_idx$i>>2]|0;
 $add$i = (($0) + 1)|0;
 $cmp$i = ($0|0)<(0);
 if ($cmp$i) {
  $retval$0 = 0;
  STACKTOP = sp;return ($retval$0|0);
 }
 $cmp2$i = ($size|0)==(0);
 $cmp3$i = ($0|0)<($size|0);
 $or$cond$i = $cmp2$i | $cmp3$i;
 if (!($or$cond$i)) {
  $retval$0 = -1;
  STACKTOP = sp;return ($retval$0|0);
 }
 $buf$i = ((($gfc)) + 284|0);
 $1 = HEAP32[$buf$i>>2]|0;
 _memcpy(($buffer|0),($1|0),($add$i|0))|0;
 HEAP32[$buf_byte_idx$i>>2] = -1;
 $buf_bit_idx$i = ((($gfc)) + 300|0);
 HEAP32[$buf_bit_idx$i>>2] = 0;
 $tobool = ($mp3data|0)==(0);
 if ($tobool) {
  $retval$0 = $add$i;
  STACKTOP = sp;return ($retval$0|0);
 }
 $nMusicCRC = ((($gfc)) + 85752|0);
 _UpdateMusicCRC($nMusicCRC,$buffer,$add$i);
 $nBytesWritten = ((($gfc)) + 85788|0);
 $2 = HEAP32[$nBytesWritten>>2]|0;
 $add = (($2) + ($add$i))|0;
 HEAP32[$nBytesWritten>>2] = $add;
 $decode_on_the_fly$i = ((($gfc)) + 136|0);
 $3 = HEAP32[$decode_on_the_fly$i>>2]|0;
 $tobool$i = ($3|0)==(0);
 if ($tobool$i) {
  $retval$0 = $add$i;
  STACKTOP = sp;return ($retval$0|0);
 }
 $hip$i = ((($gfc)) + 85808|0);
 $arraydecay3$i = ((($pcm_buf$i)) + 4608|0);
 $findPeakSample$i = ((($gfc)) + 132|0);
 $findReplayGain$i = ((($gfc)) + 128|0);
 $rgdata$i = ((($gfc)) + 85676|0);
 $channels_out66$i = ((($gfc)) + 72|0);
 $PeakSample36$i = ((($gfc)) + 85684|0);
 $mp3_in$043$i = $add$i;
 while(1) {
  $4 = HEAP32[$hip$i>>2]|0;
  $call$i = (_hip_decode1_unclipped(($4|0),($buffer|0),($mp3_in$043$i|0),($pcm_buf$i|0),($arraydecay3$i|0))|0);
  $cmp4$i = ($call$i|0)==(-1);
  $$call$i = $cmp4$i ? 0 : $call$i;
  $cmp6$i = ($$call$i|0)>(0);
  if ($cmp6$i) {
   $5 = HEAP32[$findPeakSample$i>>2]|0;
   $tobool8$i = ($5|0)==(0);
   if (!($tobool8$i)) {
    $$pre$i = +HEAPF32[$PeakSample36$i>>2];
    $7 = $$pre$i;$i$040$i = 0;
    while(1) {
     $arrayidx12$i = (($pcm_buf$i) + ($i$040$i<<2)|0);
     $6 = +HEAPF32[$arrayidx12$i>>2];
     $cmp13$i = $6 > $7;
     if ($cmp13$i) {
      $$sink$i = $6;
      label = 11;
     } else {
      $sub$i = -$6;
      $cmp21$i = $7 < $sub$i;
      if ($cmp21$i) {
       $$sink$i = $sub$i;
       label = 11;
      } else {
       $$pre45$i = $7;
      }
     }
     if ((label|0) == 11) {
      label = 0;
      HEAPF32[$PeakSample36$i>>2] = $$sink$i;
      $$pre45$i = $$sink$i;
     }
     $inc$i = (($i$040$i) + 1)|0;
     $exitcond$i = ($inc$i|0)==($$call$i|0);
     if ($exitcond$i) {
      break;
     } else {
      $7 = $$pre45$i;$i$040$i = $inc$i;
     }
    }
    $8 = HEAP32[$channels_out66$i>>2]|0;
    $cmp29$i = ($8|0)>(1);
    if ($cmp29$i) {
     $10 = $$pre45$i;$i$142$i = 0;
     while(1) {
      $arrayidx35$i = (((($pcm_buf$i)) + 4608|0) + ($i$142$i<<2)|0);
      $9 = +HEAPF32[$arrayidx35$i>>2];
      $cmp37$i = $9 > $10;
      if ($cmp37$i) {
       $$sink2$i = $9;
       label = 16;
      } else {
       $sub45$i = -$9;
       $cmp47$i = $10 < $sub45$i;
       if ($cmp47$i) {
        $$sink2$i = $sub45$i;
        label = 16;
       } else {
        $14 = $10;
       }
      }
      if ((label|0) == 16) {
       label = 0;
       HEAPF32[$PeakSample36$i>>2] = $$sink2$i;
       $14 = $$sink2$i;
      }
      $inc56$i = (($i$142$i) + 1)|0;
      $exitcond44$i = ($inc56$i|0)==($$call$i|0);
      if ($exitcond44$i) {
       break;
      } else {
       $10 = $14;$i$142$i = $inc56$i;
      }
     }
    }
   }
   $11 = HEAP32[$findReplayGain$i>>2]|0;
   $tobool60$i = ($11|0)==(0);
   if (!($tobool60$i)) {
    $12 = HEAP32[$rgdata$i>>2]|0;
    $13 = HEAP32[$channels_out66$i>>2]|0;
    $call67$i = (_AnalyzeSamples(($12|0),($pcm_buf$i|0),($arraydecay3$i|0),($$call$i|0),($13|0))|0);
    $cmp68$i = ($call67$i|0)==(0);
    if ($cmp68$i) {
     label = 22;
     break;
    }
   }
  }
  $cmp$i11 = ($$call$i|0)==(0);
  if ($cmp$i11) {
   label = 21;
   break;
  } else {
   $mp3_in$043$i = 0;
  }
 }
 if ((label|0) == 21) {
  $retval$0 = $add$i;
  STACKTOP = sp;return ($retval$0|0);
 }
 else if ((label|0) == 22) {
  $retval$0 = -6;
  STACKTOP = sp;return ($retval$0|0);
 }
 return (0)|0;
}
function _init_bit_stream_w($gfc) {
 $gfc = $gfc|0;
 var $buf = 0, $buf_bit_idx = 0, $buf_byte_idx = 0, $buf_size = 0, $call = 0, $h_ptr = 0, $totbit = 0, $w_ptr = 0, $write_timing = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $w_ptr = ((($gfc)) + 52132|0);
 HEAP32[$w_ptr>>2] = 0;
 $h_ptr = ((($gfc)) + 52128|0);
 HEAP32[$h_ptr>>2] = 0;
 $write_timing = ((($gfc)) + 39840|0);
 HEAP32[$write_timing>>2] = 0;
 $call = (_malloc(147456)|0);
 $buf = ((($gfc)) + 284|0);
 HEAP32[$buf>>2] = $call;
 $buf_size = ((($gfc)) + 288|0);
 HEAP32[$buf_size>>2] = 147456;
 $buf_byte_idx = ((($gfc)) + 296|0);
 HEAP32[$buf_byte_idx>>2] = -1;
 $buf_bit_idx = ((($gfc)) + 300|0);
 HEAP32[$buf_bit_idx>>2] = 0;
 $totbit = ((($gfc)) + 292|0);
 HEAP32[$totbit>>2] = 0;
 return;
}
function _lame_encode_mp3_frame($gfc,$inbuf_l,$inbuf_r,$mp3buf,$mp3buf_size) {
 $gfc = $gfc|0;
 $inbuf_l = $inbuf_l|0;
 $inbuf_r = $inbuf_r|0;
 $mp3buf = $mp3buf|0;
 $mp3buf_size = $mp3buf_size|0;
 var $$$i = 0, $$pn$i = 0.0, $$pn47$i = 0.0, $$pre = 0, $$pre$i = 0, $$pre$i203 = 0, $$pre272 = 0, $$pre36$i = 0, $$pre39$i = 0, $$sink$i = 0.0, $0 = 0, $1 = 0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0.0, $106 = 0;
 var $107 = 0.0, $108 = 0.0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0.0, $117 = 0.0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0, $35 = 0.0, $36 = 0.0, $37 = 0, $38 = 0.0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0.0;
 var $49 = 0.0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0.0, $6 = 0, $60 = 0, $61 = 0, $62 = 0.0, $63 = 0, $64 = 0, $65 = 0.0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $ATH$i = 0, $aa_sensitivity_p$i = 0, $add = 0, $add194 = 0;
 var $add249$us = 0.0, $add273 = 0.0, $add273$1 = 0.0, $add273$2 = 0.0, $add273$3 = 0.0, $add273$4 = 0.0, $add273$5 = 0.0, $add273$6 = 0.0, $add273$7 = 0.0, $add273$8 = 0.0, $add276 = 0.0, $add276$1 = 0.0, $add276$2 = 0.0, $add276$3 = 0.0, $add276$4 = 0.0, $add276$5 = 0.0, $add276$6 = 0.0, $add276$7 = 0.0, $add276$8 = 0.0, $add332 = 0;
 var $add39 = 0.0, $add59$i = 0.0, $add634$i = 0, $add68$i = 0.0, $add84$us = 0.0, $add87$us = 0.0, $adjust_factor$i = 0, $adjust_limit$i = 0, $adjust_limit106$i = 0, $adjust_limit84$i = 0, $analysis = 0, $arraydecay180 = 0, $arraydecay203 = 0, $arraydecay209 = 0, $arraydecay24 = 0, $arraydecay26 = 0, $arraydecay28 = 0, $arrayidx$i = 0, $arrayidx$us$i = 0, $arrayidx10$i = 0;
 var $arrayidx12$us$i = 0, $arrayidx13$i = 0, $arrayidx14$i = 0, $arrayidx14$us$i = 0, $arrayidx15 = 0, $arrayidx15$i = 0, $arrayidx15$i200 = 0, $arrayidx15$us$i = 0, $arrayidx155 = 0, $arrayidx156 = 0, $arrayidx160 = 0, $arrayidx169 = 0, $arrayidx17$i = 0, $arrayidx171 = 0, $arrayidx176 = 0, $arrayidx18 = 0, $arrayidx186 = 0, $arrayidx19 = 0, $arrayidx195 = 0, $arrayidx199 = 0;
 var $arrayidx2 = 0, $arrayidx2$i = 0, $arrayidx20$us$i = 0, $arrayidx21$us$i = 0, $arrayidx230 = 0, $arrayidx230$1 = 0, $arrayidx230$10 = 0, $arrayidx230$11 = 0, $arrayidx230$12 = 0, $arrayidx230$13 = 0, $arrayidx230$14 = 0, $arrayidx230$15 = 0, $arrayidx230$16 = 0, $arrayidx230$17 = 0, $arrayidx230$2 = 0, $arrayidx230$3 = 0, $arrayidx230$4 = 0, $arrayidx230$5 = 0, $arrayidx230$6 = 0, $arrayidx230$7 = 0;
 var $arrayidx230$8 = 0, $arrayidx230$9 = 0, $arrayidx233 = 0, $arrayidx248$us = 0, $arrayidx297$us = 0, $arrayidx3$i = 0, $arrayidx32$i = 0, $arrayidx333 = 0, $arrayidx337 = 0, $arrayidx345 = 0, $arrayidx347 = 0, $arrayidx352 = 0, $arrayidx36 = 0, $arrayidx37$i = 0, $arrayidx38 = 0, $arrayidx40 = 0, $arrayidx41$i = 0, $arrayidx45$i = 0, $arrayidx5$i = 0, $arrayidx56 = 0;
 var $arrayidx7$i = 0, $arrayidx83$us = 0, $arrayidx86$us = 0, $bitrate_index$i = 0, $block_type = 0, $block_type$i = 0, $block_type$i204 = 0, $block_type110 = 0, $block_type112 = 0, $block_type116 = 0, $block_type118 = 0, $block_type165 = 0, $call = 0, $call308 = 0, $ch$0252 = 0, $ch$030$i = 0, $ch$032$i = 0, $ch$1255 = 0, $ch$2238$us = 0, $ch$3233 = 0;
 var $ch$4223$us = 0, $ch$5216$us = 0, $ch$6214 = 0, $channels_out = 0, $channels_out$i = 0, $channels_out$i198 = 0, $channels_out150 = 0, $channels_out243 = 0, $channels_out30$i = 0, $channels_out322 = 0, $channels_out79 = 0, $cmp = 0, $cmp$i192 = 0, $cmp$i199 = 0, $cmp10$i = 0, $cmp11 = 0, $cmp11256 = 0, $cmp113 = 0, $cmp119 = 0, $cmp13 = 0;
 var $cmp13251 = 0, $cmp141 = 0, $cmp146 = 0, $cmp146234 = 0, $cmp151 = 0, $cmp151232 = 0, $cmp17$i = 0, $cmp1733$i = 0, $cmp189 = 0, $cmp20$i = 0, $cmp2031$i = 0, $cmp22$i = 0, $cmp239$us = 0, $cmp239225 = 0, $cmp24$i = 0, $cmp244$us = 0, $cmp244222 = 0, $cmp27$i = 0, $cmp2731$i = 0, $cmp288$us = 0;
 var $cmp293$us = 0, $cmp293215 = 0, $cmp30 = 0, $cmp30$i = 0, $cmp31$i = 0, $cmp3129$i = 0, $cmp316 = 0, $cmp323 = 0, $cmp323213 = 0, $cmp33 = 0, $cmp36$i = 0, $cmp4 = 0, $cmp42 = 0, $cmp45$i = 0, $cmp52 = 0, $cmp52254 = 0, $cmp63$i = 0, $cmp72 = 0, $cmp735$i = 0, $cmp76$i = 0;
 var $cmp76$us = 0, $cmp76243 = 0, $cmp8$i = 0, $cmp8$i194 = 0, $cmp8$us$i = 0, $cmp80$us = 0, $cmp80237 = 0, $cmp85$i = 0, $cmp95$i = 0, $cmp96 = 0, $cond$i = 0.0, $conv157 = 0.0, $conv172 = 0.0, $conv26$i = 0.0, $conv284 = 0.0, $conv29$i = 0.0, $conv348 = 0.0, $conv60$i = 0.0, $conv60$sink$i = 0.0, $conv66$i = 0.0;
 var $conv71$i = 0.0, $conv73$i = 0.0, $div = 0.0, $div285 = 0.0, $exitcond = 0, $exitcond266 = 0, $exitcond270 = 0, $exitcond271 = 0, $f$0$lcssa = 0.0, $f$0228$us = 0.0, $f$1224$us = 0.0, $force_ms = 0, $frac_SpF = 0, $frame_number = 0, $gr$0257 = 0, $gr$032$i = 0, $gr$034$i = 0, $gr$1244$us = 0, $gr$2235 = 0, $gr$3226$us = 0;
 var $gr$4218$us = 0, $gr2_max$0$i = 0.0, $i$036$i = 0, $i$036$us$i = 0, $inbuf = 0, $inc = 0, $inc$i = 0, $inc$i197 = 0, $inc$us$i = 0, $inc11$i = 0, $inc16$i = 0, $inc212 = 0, $inc215 = 0, $inc24$i = 0, $inc24$us$i = 0, $inc251$us = 0, $inc254$us = 0, $inc300$us = 0, $inc303$us = 0, $inc33$i = 0;
 var $inc339 = 0, $inc354 = 0, $inc357 = 0, $inc36$i = 0, $inc361 = 0, $inc38$i = 0, $inc39$i = 0, $inc42$i = 0, $inc46$i = 0, $inc47$i = 0, $inc49$i = 0, $inc58 = 0, $inc6$i = 0, $inc61 = 0, $inc89$us = 0, $inc92$us = 0, $iteration_loop = 0, $j$0211 = 0, $j$037$i = 0, $j$037$us$i = 0;
 var $j$1$i = 0, $j$1$us$i = 0, $j$1212 = 0, $lame_encode_frame_init = 0, $masking_LR = 0, $masking_LR$sink = 0, $masking_MS = 0, $masking_lower = 0, $max_pow$0$i = 0.0, $max_pow$1$i = 0.0, $mixed_block_flag = 0, $mixed_block_flag$i = 0, $mode = 0, $mode71 = 0, $mode_ext = 0, $mode_gr = 0, $mode_gr$i = 0, $ms_ener_ratio = 0, $mul = 0, $mul$i = 0;
 var $mul275 = 0.0, $mul275$1 = 0.0, $mul275$2 = 0.0, $mul275$3 = 0.0, $mul275$4 = 0.0, $mul275$5 = 0.0, $mul275$6 = 0.0, $mul275$7 = 0.0, $mul275$8 = 0.0, $mul28$i = 0.0, $mul281 = 0, $mul283 = 0, $mul298$us = 0.0, $mul320 = 0, $mul58$i = 0.0, $mul67$i = 0.0, $mul72$i = 0.0, $or$cond = 0, $or$cond279 = 0, $padding = 0;
 var $pe = 0, $pe$sink = 0, $pe_MS = 0, $pinfo = 0, $pinfo315 = 0, $primebuff0$i = 0, $primebuff1$i = 0, $retval$1 = 0, $samplerate_out = 0, $slot_lag = 0, $sub = 0, $sub106 = 0, $sub17 = 0, $sub346 = 0, $sum_pe_LR$0247$us = 0.0, $sum_pe_LR$1240$us = 0.0, $sum_pe_MS$0246$us = 0.0, $sum_pe_MS$1239$us = 0.0, $tobool = 0, $tobool$i = 0;
 var $tobool139 = 0, $tobool309 = 0, $tobool313 = 0, $tot_ener = 0, $vbr = 0, $write_lame_tag = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 20096|0;
 $primebuff0$i = sp + 8|0;
 $primebuff1$i = sp + 12040|0;
 $masking_LR = sp + 10088|0;
 $masking_MS = sp + 8136|0;
 $inbuf = sp + 8128|0;
 $tot_ener = sp + 8096|0;
 $ms_ener_ratio = sp;
 $pe = sp + 8080|0;
 $pe_MS = sp + 8064|0;
 $0 = $ms_ener_ratio;
 $1 = $0;
 HEAP32[$1>>2] = 1056964608;
 $2 = (($0) + 4)|0;
 $3 = $2;
 HEAP32[$3>>2] = 1056964608;
 ;HEAP32[$pe>>2]=0|0;HEAP32[$pe+4>>2]=0|0;HEAP32[$pe+8>>2]=0|0;HEAP32[$pe+12>>2]=0|0;
 ;HEAP32[$pe_MS>>2]=0|0;HEAP32[$pe_MS+4>>2]=0|0;HEAP32[$pe_MS+8>>2]=0|0;HEAP32[$pe_MS+12>>2]=0|0;
 HEAP32[$inbuf>>2] = $inbuf_l;
 $arrayidx2 = ((($inbuf)) + 4|0);
 HEAP32[$arrayidx2>>2] = $inbuf_r;
 $lame_encode_frame_init = ((($gfc)) + 4|0);
 $4 = HEAP32[$lame_encode_frame_init>>2]|0;
 $cmp = ($4|0)==(0);
 if ($cmp) {
  $mode_gr$i = ((($gfc)) + 76|0);
  $5 = HEAP32[$mode_gr$i>>2]|0;
  $mul$i = ($5*576)|0;
  HEAP32[$lame_encode_frame_init>>2] = 1;
  _memset(($primebuff0$i|0),0,8056)|0;
  _memset(($primebuff1$i|0),0,8056)|0;
  $add634$i = (($mul$i) + 862)|0;
  $cmp735$i = ($add634$i|0)>(0);
  if ($cmp735$i) {
   $6 = ((($gfc)) + 72|0);
   $7 = HEAP32[$6>>2]|0;
   $cmp10$i = ($7|0)==(2);
   if ($cmp10$i) {
    $i$036$us$i = 0;$j$037$us$i = 0;
    while(1) {
     $cmp8$us$i = ($i$036$us$i|0)<($mul$i|0);
     if ($cmp8$us$i) {
      $arrayidx$us$i = (($primebuff0$i) + ($i$036$us$i<<2)|0);
      HEAPF32[$arrayidx$us$i>>2] = 0.0;
      $arrayidx12$us$i = (($primebuff1$i) + ($i$036$us$i<<2)|0);
      HEAPF32[$arrayidx12$us$i>>2] = 0.0;
      $j$1$us$i = $j$037$us$i;
     } else {
      $arrayidx14$us$i = (($inbuf_l) + ($j$037$us$i<<2)|0);
      $8 = HEAP32[$arrayidx14$us$i>>2]|0;
      $arrayidx15$us$i = (($primebuff0$i) + ($i$036$us$i<<2)|0);
      HEAP32[$arrayidx15$us$i>>2] = $8;
      $arrayidx20$us$i = (($inbuf_r) + ($j$037$us$i<<2)|0);
      $9 = HEAP32[$arrayidx20$us$i>>2]|0;
      $arrayidx21$us$i = (($primebuff1$i) + ($i$036$us$i<<2)|0);
      HEAP32[$arrayidx21$us$i>>2] = $9;
      $inc$us$i = (($j$037$us$i) + 1)|0;
      $j$1$us$i = $inc$us$i;
     }
     $inc24$us$i = (($i$036$us$i) + 1)|0;
     $exitcond270 = ($inc24$us$i|0)==($add634$i|0);
     if ($exitcond270) {
      break;
     } else {
      $i$036$us$i = $inc24$us$i;$j$037$us$i = $j$1$us$i;
     }
    }
   } else {
    $i$036$i = 0;$j$037$i = 0;
    while(1) {
     $cmp8$i = ($i$036$i|0)<($mul$i|0);
     if ($cmp8$i) {
      $arrayidx$i = (($primebuff0$i) + ($i$036$i<<2)|0);
      HEAPF32[$arrayidx$i>>2] = 0.0;
      $j$1$i = $j$037$i;
     } else {
      $arrayidx14$i = (($inbuf_l) + ($j$037$i<<2)|0);
      $10 = HEAP32[$arrayidx14$i>>2]|0;
      $arrayidx15$i = (($primebuff0$i) + ($i$036$i<<2)|0);
      HEAP32[$arrayidx15$i>>2] = $10;
      $inc$i = (($j$037$i) + 1)|0;
      $j$1$i = $inc$i;
     }
     $inc24$i = (($i$036$i) + 1)|0;
     $exitcond271 = ($inc24$i|0)==($add634$i|0);
     if ($exitcond271) {
      break;
     } else {
      $i$036$i = $inc24$i;$j$037$i = $j$1$i;
     }
    }
   }
  }
  $cmp2731$i = ($5|0)>(0);
  if ($cmp2731$i) {
   $channels_out30$i = ((($gfc)) + 72|0);
   $$pre$i = HEAP32[$channels_out30$i>>2]|0;
   $11 = $$pre$i;$140 = $5;$gr$032$i = 0;
   while(1) {
    $cmp3129$i = ($11|0)>(0);
    if ($cmp3129$i) {
     $ch$030$i = 0;
     while(1) {
      $block_type$i = ((((((($gfc)) + 304|0) + (($gr$032$i*10504)|0)|0) + (($ch$030$i*5252)|0)|0)) + 4788|0);
      HEAP32[$block_type$i>>2] = 2;
      $inc36$i = (($ch$030$i) + 1)|0;
      $12 = HEAP32[$channels_out30$i>>2]|0;
      $cmp31$i = ($inc36$i|0)<($12|0);
      if ($cmp31$i) {
       $ch$030$i = $inc36$i;
      } else {
       break;
      }
     }
     $$pre39$i = HEAP32[$mode_gr$i>>2]|0;
     $13 = $$pre39$i;$141 = $12;
    } else {
     $13 = $140;$141 = $11;
    }
    $inc39$i = (($gr$032$i) + 1)|0;
    $cmp27$i = ($inc39$i|0)<($13|0);
    if ($cmp27$i) {
     $11 = $141;$140 = $13;$gr$032$i = $inc39$i;
    } else {
     break;
    }
   }
  }
  _mdct_sub48($gfc,$primebuff0$i,$primebuff1$i);
 }
 $padding = ((($gfc)) + 84752|0);
 HEAP32[$padding>>2] = 0;
 $frac_SpF = ((($gfc)) + 39832|0);
 $14 = HEAP32[$frac_SpF>>2]|0;
 $slot_lag = ((($gfc)) + 39836|0);
 $15 = HEAP32[$slot_lag>>2]|0;
 $sub = (($15) - ($14))|0;
 HEAP32[$slot_lag>>2] = $sub;
 $cmp4 = ($sub|0)<(0);
 if ($cmp4) {
  $samplerate_out = ((($gfc)) + 64|0);
  $16 = HEAP32[$samplerate_out>>2]|0;
  $add = (($16) + ($sub))|0;
  HEAP32[$slot_lag>>2] = $add;
  HEAP32[$padding>>2] = 1;
 }
 $17 = $primebuff0$i;
 $18 = $17;
 HEAP32[$18>>2] = 0;
 $19 = (($17) + 4)|0;
 $20 = $19;
 HEAP32[$20>>2] = 0;
 $mode_gr = ((($gfc)) + 76|0);
 $21 = HEAP32[$mode_gr>>2]|0;
 $cmp11256 = ($21|0)>(0);
 L33: do {
  if ($cmp11256) {
   $channels_out = ((($gfc)) + 72|0);
   $mode = ((($gfc)) + 180|0);
   $gr$0257 = 0;
   while(1) {
    $22 = HEAP32[$channels_out>>2]|0;
    $cmp13251 = ($22|0)>(0);
    if ($cmp13251) {
     $mul = ($gr$0257*576)|0;
     $sub17 = (($mul) + 304)|0;
     $ch$0252 = 0;
     while(1) {
      $arrayidx15 = (($inbuf) + ($ch$0252<<2)|0);
      $23 = HEAP32[$arrayidx15>>2]|0;
      $arrayidx18 = (($23) + ($sub17<<2)|0);
      $arrayidx19 = (($primebuff0$i) + ($ch$0252<<2)|0);
      HEAP32[$arrayidx19>>2] = $arrayidx18;
      $inc = (($ch$0252) + 1)|0;
      $cmp13 = ($inc|0)<($22|0);
      if ($cmp13) {
       $ch$0252 = $inc;
      } else {
       break;
      }
     }
    }
    $arraydecay24 = (($pe) + ($gr$0257<<3)|0);
    $arraydecay26 = (($pe_MS) + ($gr$0257<<3)|0);
    $arraydecay28 = (($tot_ener) + ($gr$0257<<4)|0);
    $call = (_L3psycho_anal_vbr($gfc,$primebuff0$i,$gr$0257,$masking_LR,$masking_MS,$arraydecay24,$arraydecay26,$arraydecay28,$primebuff1$i)|0);
    $cmp30 = ($call|0)==(0);
    if (!($cmp30)) {
     break;
    }
    $24 = HEAP32[$mode>>2]|0;
    $cmp33 = ($24|0)==(1);
    if ($cmp33) {
     $arrayidx36 = (((($tot_ener) + ($gr$0257<<4)|0)) + 8|0);
     $25 = +HEAPF32[$arrayidx36>>2];
     $arrayidx38 = (((($tot_ener) + ($gr$0257<<4)|0)) + 12|0);
     $26 = +HEAPF32[$arrayidx38>>2];
     $add39 = $26 + $25;
     $arrayidx40 = (($ms_ener_ratio) + ($gr$0257<<2)|0);
     HEAPF32[$arrayidx40>>2] = $add39;
     $cmp42 = $add39 > 0.0;
     if ($cmp42) {
      $div = $26 / $add39;
      HEAPF32[$arrayidx40>>2] = $div;
     }
    }
    $27 = HEAP32[$channels_out>>2]|0;
    $cmp52254 = ($27|0)>(0);
    if ($cmp52254) {
     $ch$1255 = 0;
     while(1) {
      $arrayidx56 = (($primebuff1$i) + ($ch$1255<<2)|0);
      $28 = HEAP32[$arrayidx56>>2]|0;
      $block_type = ((((((($gfc)) + 304|0) + (($gr$0257*10504)|0)|0) + (($ch$1255*5252)|0)|0)) + 4788|0);
      HEAP32[$block_type>>2] = $28;
      $mixed_block_flag = ((((((($gfc)) + 304|0) + (($gr$0257*10504)|0)|0) + (($ch$1255*5252)|0)|0)) + 4792|0);
      HEAP32[$mixed_block_flag>>2] = 0;
      $inc58 = (($ch$1255) + 1)|0;
      $cmp52 = ($inc58|0)<($27|0);
      if ($cmp52) {
       $ch$1255 = $inc58;
      } else {
       break;
      }
     }
    }
    $inc61 = (($gr$0257) + 1)|0;
    $29 = HEAP32[$mode_gr>>2]|0;
    $cmp11 = ($inc61|0)<($29|0);
    if ($cmp11) {
     $gr$0257 = $inc61;
    } else {
     $37 = $29;
     break L33;
    }
   }
   $retval$1 = -4;
   STACKTOP = sp;return ($retval$1|0);
  } else {
   $37 = $21;
  }
 } while(0);
 $ATH$i = ((($gfc)) + 85796|0);
 $30 = HEAP32[$ATH$i>>2]|0;
 $31 = HEAP32[$30>>2]|0;
 $cmp$i192 = ($31|0)==(0);
 if ($cmp$i192) {
  $adjust_factor$i = ((($30)) + 8|0);
  HEAPF32[$adjust_factor$i>>2] = 1.0;
 } else {
  $arrayidx3$i = ((($gfc)) + 27804|0);
  $32 = +HEAPF32[$arrayidx3$i>>2];
  $arrayidx7$i = ((($gfc)) + 27812|0);
  $33 = +HEAPF32[$arrayidx7$i>>2];
  $channels_out$i = ((($gfc)) + 72|0);
  $34 = HEAP32[$channels_out$i>>2]|0;
  $cmp8$i194 = ($34|0)==(2);
  if ($cmp8$i194) {
   $arrayidx13$i = ((($gfc)) + 27808|0);
   $35 = +HEAPF32[$arrayidx13$i>>2];
   $arrayidx17$i = ((($gfc)) + 27816|0);
   $36 = +HEAPF32[$arrayidx17$i>>2];
   $$pn$i = $35;$$pn47$i = $36;
  } else {
   $$pn$i = $32;$$pn47$i = $33;
  }
  $gr2_max$0$i = $$pn47$i + $33;
  $max_pow$0$i = $$pn$i + $32;
  $cmp22$i = ($37|0)==(2);
  $cmp24$i = $max_pow$0$i > $gr2_max$0$i;
  $cond$i = $cmp24$i ? $max_pow$0$i : $gr2_max$0$i;
  $max_pow$1$i = $cmp22$i ? $cond$i : $max_pow$0$i;
  $aa_sensitivity_p$i = ((($30)) + 4|0);
  $38 = +HEAPF32[$aa_sensitivity_p$i>>2];
  $conv26$i = $38 * 0.5;
  $mul28$i = $conv26$i * $max_pow$1$i;
  $cmp30$i = $mul28$i > 0.03125;
  $39 = ((($30)) + 8|0);
  $40 = +HEAPF32[$39>>2];
  do {
   if ($cmp30$i) {
    $cmp36$i = !($40 >= 1.0);
    if ($cmp36$i) {
     $adjust_limit$i = ((($30)) + 12|0);
     $41 = +HEAPF32[$adjust_limit$i>>2];
     $cmp45$i = $40 < $41;
     if ($cmp45$i) {
      $$sink$i = $41;
     } else {
      $conv60$sink$i = 1.0;
      break;
     }
    } else {
     $$sink$i = 1.0;
    }
    HEAPF32[$39>>2] = $$sink$i;
    $conv60$sink$i = 1.0;
   } else {
    $conv29$i = $mul28$i;
    $mul58$i = $conv29$i * 31.98;
    $add59$i = $mul58$i + 6.2500000000000001E-4;
    $conv60$i = $add59$i;
    $cmp63$i = !($40 >= $conv60$i);
    if (!($cmp63$i)) {
     $conv66$i = $conv60$i;
     $mul67$i = $conv66$i * 0.074999999999999997;
     $add68$i = $mul67$i + 0.92500000000000004;
     $conv71$i = $40;
     $mul72$i = $add68$i * $conv71$i;
     $conv73$i = $mul72$i;
     HEAPF32[$39>>2] = $conv73$i;
     $cmp76$i = $conv73$i < $conv60$i;
     if (!($cmp76$i)) {
      $conv60$sink$i = $conv60$i;
      break;
     }
     HEAPF32[$39>>2] = $conv60$i;
     $conv60$sink$i = $conv60$i;
     break;
    }
    $adjust_limit84$i = ((($30)) + 12|0);
    $42 = +HEAPF32[$adjust_limit84$i>>2];
    $cmp85$i = !($42 >= $conv60$i);
    if (!($cmp85$i)) {
     HEAPF32[$39>>2] = $conv60$i;
     $conv60$sink$i = $conv60$i;
     break;
    }
    $cmp95$i = $40 < $42;
    if ($cmp95$i) {
     HEAPF32[$39>>2] = $42;
     $conv60$sink$i = $conv60$i;
    } else {
     $conv60$sink$i = $conv60$i;
    }
   }
  } while(0);
  $adjust_limit106$i = ((($30)) + 12|0);
  HEAPF32[$adjust_limit106$i>>2] = $conv60$sink$i;
 }
 $43 = HEAP32[$inbuf>>2]|0;
 _mdct_sub48($gfc,$43,$inbuf_r);
 $mode_ext = ((($gfc)) + 84756|0);
 HEAP32[$mode_ext>>2] = 0;
 $force_ms = ((($gfc)) + 80|0);
 $44 = HEAP32[$force_ms>>2]|0;
 $tobool = ($44|0)==(0);
 do {
  if ($tobool) {
   $mode71 = ((($gfc)) + 180|0);
   $45 = HEAP32[$mode71>>2]|0;
   $cmp72 = ($45|0)==(1);
   if ($cmp72) {
    $46 = HEAP32[$mode_gr>>2]|0;
    $cmp76243 = ($46|0)>(0);
    if ($cmp76243) {
     $channels_out79 = ((($gfc)) + 72|0);
     $47 = HEAP32[$channels_out79>>2]|0;
     $cmp80237 = ($47|0)>(0);
     if ($cmp80237) {
      $gr$1244$us = 0;$sum_pe_LR$0247$us = 0.0;$sum_pe_MS$0246$us = 0.0;
      while(1) {
       $ch$2238$us = 0;$sum_pe_LR$1240$us = $sum_pe_LR$0247$us;$sum_pe_MS$1239$us = $sum_pe_MS$0246$us;
       while(1) {
        $arrayidx83$us = ((($pe_MS) + ($gr$1244$us<<3)|0) + ($ch$2238$us<<2)|0);
        $48 = +HEAPF32[$arrayidx83$us>>2];
        $add84$us = $48 + $sum_pe_MS$1239$us;
        $arrayidx86$us = ((($pe) + ($gr$1244$us<<3)|0) + ($ch$2238$us<<2)|0);
        $49 = +HEAPF32[$arrayidx86$us>>2];
        $add87$us = $49 + $sum_pe_LR$1240$us;
        $inc89$us = (($ch$2238$us) + 1)|0;
        $cmp80$us = ($inc89$us|0)<($47|0);
        if ($cmp80$us) {
         $ch$2238$us = $inc89$us;$sum_pe_LR$1240$us = $add87$us;$sum_pe_MS$1239$us = $add84$us;
        } else {
         break;
        }
       }
       $inc92$us = (($gr$1244$us) + 1)|0;
       $cmp76$us = ($inc92$us|0)<($46|0);
       if ($cmp76$us) {
        $gr$1244$us = $inc92$us;$sum_pe_LR$0247$us = $add87$us;$sum_pe_MS$0246$us = $add84$us;
       } else {
        break;
       }
      }
      $cmp96 = !($add84$us <= $add87$us);
      if ($cmp96) {
       $54 = 0;
       break;
      }
     }
    }
    $sub106 = (($46) + -1)|0;
    $block_type110 = ((($gfc)) + 5092|0);
    $50 = HEAP32[$block_type110>>2]|0;
    $block_type112 = ((($gfc)) + 10344|0);
    $51 = HEAP32[$block_type112>>2]|0;
    $cmp113 = ($50|0)==($51|0);
    if ($cmp113) {
     $block_type116 = (((((($gfc)) + 304|0) + (($sub106*10504)|0)|0)) + 4788|0);
     $52 = HEAP32[$block_type116>>2]|0;
     $block_type118 = (((((($gfc)) + 304|0) + (($sub106*10504)|0)|0)) + 10040|0);
     $53 = HEAP32[$block_type118>>2]|0;
     $cmp119 = ($52|0)==($53|0);
     if ($cmp119) {
      HEAP32[$mode_ext>>2] = 2;
      $54 = 1;
     } else {
      $54 = 0;
     }
    } else {
     $54 = 0;
    }
   } else {
    $54 = 0;
   }
  } else {
   HEAP32[$mode_ext>>2] = 2;
   $54 = 1;
  }
 } while(0);
 $masking_LR$sink = $54 ? $masking_MS : $masking_LR;
 $pe$sink = $54 ? $pe_MS : $pe;
 $analysis = ((($gfc)) + 140|0);
 $55 = HEAP32[$analysis>>2]|0;
 $tobool139 = ($55|0)==(0);
 if (!($tobool139)) {
  $pinfo = ((($gfc)) + 85804|0);
  $56 = HEAP32[$pinfo>>2]|0;
  $cmp141 = ($56|0)==(0|0);
  if (!($cmp141)) {
   $57 = HEAP32[$mode_gr>>2]|0;
   $cmp146234 = ($57|0)>(0);
   if ($cmp146234) {
    $channels_out150 = ((($gfc)) + 72|0);
    $$pre = HEAP32[$channels_out150>>2]|0;
    $142 = $57;$58 = $$pre;$gr$2235 = 0;
    while(1) {
     $cmp151232 = ($58|0)>(0);
     if ($cmp151232) {
      $arrayidx156 = (($ms_ener_ratio) + ($gr$2235<<2)|0);
      $59 = +HEAPF32[$arrayidx156>>2];
      $conv157 = $59;
      $ch$3233 = 0;
      while(1) {
       $60 = HEAP32[$pinfo>>2]|0;
       $arrayidx155 = (((($60)) + 90904|0) + ($gr$2235<<3)|0);
       HEAPF64[$arrayidx155>>3] = 0.0;
       $arrayidx160 = (((($60)) + 90920|0) + ($gr$2235<<3)|0);
       HEAPF64[$arrayidx160>>3] = $conv157;
       $block_type165 = ((((((($gfc)) + 304|0) + (($gr$2235*10504)|0)|0) + (($ch$3233*5252)|0)|0)) + 4788|0);
       $61 = HEAP32[$block_type165>>2]|0;
       $arrayidx169 = ((((($60)) + 203288|0) + ($gr$2235<<3)|0) + ($ch$3233<<2)|0);
       HEAP32[$arrayidx169>>2] = $61;
       $arrayidx171 = ((($pe$sink) + ($gr$2235<<3)|0) + ($ch$3233<<2)|0);
       $62 = +HEAPF32[$arrayidx171>>2];
       $conv172 = $62;
       $arrayidx176 = ((((($60)) + 189240|0) + ($gr$2235<<5)|0) + ($ch$3233<<3)|0);
       HEAPF64[$arrayidx176>>3] = $conv172;
       $arraydecay180 = ((((($60)) + 54040|0) + (($gr$2235*9216)|0)|0) + (($ch$3233*4608)|0)|0);
       $arrayidx186 = ((((($gfc)) + 304|0) + (($gr$2235*10504)|0)|0) + (($ch$3233*5252)|0)|0);
       _memcpy(($arraydecay180|0),($arrayidx186|0),2304)|0;
       $63 = HEAP32[$mode_ext>>2]|0;
       $cmp189 = ($63|0)==(2);
       if ($cmp189) {
        $64 = HEAP32[$pinfo>>2]|0;
        $add194 = (($ch$3233) + 2)|0;
        $arrayidx195 = ((((($64)) + 197144|0) + ($gr$2235<<5)|0) + ($add194<<3)|0);
        $65 = +HEAPF64[$arrayidx195>>3];
        $arrayidx199 = ((((($64)) + 197144|0) + ($gr$2235<<5)|0) + ($ch$3233<<3)|0);
        HEAPF64[$arrayidx199>>3] = $65;
        $arraydecay203 = ((((($64)) + 123704|0) + ($gr$2235<<15)|0) + ($ch$3233<<13)|0);
        $arraydecay209 = ((((($64)) + 123704|0) + ($gr$2235<<15)|0) + ($add194<<13)|0);
        _memcpy(($arraydecay203|0),($arraydecay209|0),8192)|0;
       }
       $inc212 = (($ch$3233) + 1)|0;
       $66 = HEAP32[$channels_out150>>2]|0;
       $cmp151 = ($inc212|0)<($66|0);
       if ($cmp151) {
        $ch$3233 = $inc212;
       } else {
        break;
       }
      }
      $$pre272 = HEAP32[$mode_gr>>2]|0;
      $143 = $66;$67 = $$pre272;
     } else {
      $143 = $58;$67 = $142;
     }
     $inc215 = (($gr$2235) + 1)|0;
     $cmp146 = ($inc215|0)<($67|0);
     if ($cmp146) {
      $142 = $67;$58 = $143;$gr$2235 = $inc215;
     } else {
      break;
     }
    }
   }
  }
 }
 $vbr = ((($gfc)) + 104|0);
 $68 = HEAP32[$vbr>>2]|0;
 switch ($68|0) {
 case 3: case 0:  {
  $arrayidx230 = ((($gfc)) + 39760|0);
  $69 = HEAP32[$arrayidx230>>2]|0;
  $arrayidx233 = ((($gfc)) + 39756|0);
  HEAP32[$arrayidx233>>2] = $69;
  $arrayidx230$1 = ((($gfc)) + 39764|0);
  $70 = HEAP32[$arrayidx230$1>>2]|0;
  HEAP32[$arrayidx230>>2] = $70;
  $arrayidx230$2 = ((($gfc)) + 39768|0);
  $71 = HEAP32[$arrayidx230$2>>2]|0;
  HEAP32[$arrayidx230$1>>2] = $71;
  $arrayidx230$3 = ((($gfc)) + 39772|0);
  $72 = HEAP32[$arrayidx230$3>>2]|0;
  HEAP32[$arrayidx230$2>>2] = $72;
  $arrayidx230$4 = ((($gfc)) + 39776|0);
  $73 = HEAP32[$arrayidx230$4>>2]|0;
  HEAP32[$arrayidx230$3>>2] = $73;
  $arrayidx230$5 = ((($gfc)) + 39780|0);
  $74 = HEAP32[$arrayidx230$5>>2]|0;
  HEAP32[$arrayidx230$4>>2] = $74;
  $arrayidx230$6 = ((($gfc)) + 39784|0);
  $75 = HEAP32[$arrayidx230$6>>2]|0;
  HEAP32[$arrayidx230$5>>2] = $75;
  $arrayidx230$7 = ((($gfc)) + 39788|0);
  $76 = HEAP32[$arrayidx230$7>>2]|0;
  HEAP32[$arrayidx230$6>>2] = $76;
  $arrayidx230$8 = ((($gfc)) + 39792|0);
  $77 = HEAP32[$arrayidx230$8>>2]|0;
  HEAP32[$arrayidx230$7>>2] = $77;
  $arrayidx230$9 = ((($gfc)) + 39796|0);
  $78 = HEAP32[$arrayidx230$9>>2]|0;
  HEAP32[$arrayidx230$8>>2] = $78;
  $arrayidx230$10 = ((($gfc)) + 39800|0);
  $79 = HEAP32[$arrayidx230$10>>2]|0;
  HEAP32[$arrayidx230$9>>2] = $79;
  $arrayidx230$11 = ((($gfc)) + 39804|0);
  $80 = HEAP32[$arrayidx230$11>>2]|0;
  HEAP32[$arrayidx230$10>>2] = $80;
  $arrayidx230$12 = ((($gfc)) + 39808|0);
  $81 = HEAP32[$arrayidx230$12>>2]|0;
  HEAP32[$arrayidx230$11>>2] = $81;
  $arrayidx230$13 = ((($gfc)) + 39812|0);
  $82 = HEAP32[$arrayidx230$13>>2]|0;
  HEAP32[$arrayidx230$12>>2] = $82;
  $arrayidx230$14 = ((($gfc)) + 39816|0);
  $83 = HEAP32[$arrayidx230$14>>2]|0;
  HEAP32[$arrayidx230$13>>2] = $83;
  $arrayidx230$15 = ((($gfc)) + 39820|0);
  $84 = HEAP32[$arrayidx230$15>>2]|0;
  HEAP32[$arrayidx230$14>>2] = $84;
  $arrayidx230$16 = ((($gfc)) + 39824|0);
  $85 = HEAP32[$arrayidx230$16>>2]|0;
  HEAP32[$arrayidx230$15>>2] = $85;
  $arrayidx230$17 = ((($gfc)) + 39828|0);
  $86 = HEAP32[$arrayidx230$17>>2]|0;
  HEAP32[$arrayidx230$16>>2] = $86;
  $87 = HEAP32[$mode_gr>>2]|0;
  $cmp239225 = ($87|0)>(0);
  $88 = (HEAP32[tempDoublePtr>>2]=$78,+HEAPF32[tempDoublePtr>>2]);
  $89 = (HEAP32[tempDoublePtr>>2]=$69,+HEAPF32[tempDoublePtr>>2]);
  $90 = (HEAP32[tempDoublePtr>>2]=$70,+HEAPF32[tempDoublePtr>>2]);
  $91 = (HEAP32[tempDoublePtr>>2]=$86,+HEAPF32[tempDoublePtr>>2]);
  $92 = (HEAP32[tempDoublePtr>>2]=$71,+HEAPF32[tempDoublePtr>>2]);
  $93 = (HEAP32[tempDoublePtr>>2]=$85,+HEAPF32[tempDoublePtr>>2]);
  $94 = (HEAP32[tempDoublePtr>>2]=$72,+HEAPF32[tempDoublePtr>>2]);
  $95 = (HEAP32[tempDoublePtr>>2]=$84,+HEAPF32[tempDoublePtr>>2]);
  $96 = (HEAP32[tempDoublePtr>>2]=$73,+HEAPF32[tempDoublePtr>>2]);
  $97 = (HEAP32[tempDoublePtr>>2]=$83,+HEAPF32[tempDoublePtr>>2]);
  $98 = (HEAP32[tempDoublePtr>>2]=$74,+HEAPF32[tempDoublePtr>>2]);
  $99 = (HEAP32[tempDoublePtr>>2]=$82,+HEAPF32[tempDoublePtr>>2]);
  $100 = (HEAP32[tempDoublePtr>>2]=$75,+HEAPF32[tempDoublePtr>>2]);
  $101 = (HEAP32[tempDoublePtr>>2]=$81,+HEAPF32[tempDoublePtr>>2]);
  $102 = (HEAP32[tempDoublePtr>>2]=$76,+HEAPF32[tempDoublePtr>>2]);
  $103 = (HEAP32[tempDoublePtr>>2]=$80,+HEAPF32[tempDoublePtr>>2]);
  $104 = (HEAP32[tempDoublePtr>>2]=$77,+HEAPF32[tempDoublePtr>>2]);
  $105 = (HEAP32[tempDoublePtr>>2]=$79,+HEAPF32[tempDoublePtr>>2]);
  $channels_out243 = ((($gfc)) + 72|0);
  $106 = HEAP32[$channels_out243>>2]|0;
  $cmp244222 = ($106|0)>(0);
  $or$cond = $cmp239225 & $cmp244222;
  if ($or$cond) {
   $f$0228$us = 0.0;$gr$3226$us = 0;
   while(1) {
    $ch$4223$us = 0;$f$1224$us = $f$0228$us;
    while(1) {
     $arrayidx248$us = ((($pe$sink) + ($gr$3226$us<<3)|0) + ($ch$4223$us<<2)|0);
     $107 = +HEAPF32[$arrayidx248$us>>2];
     $add249$us = $107 + $f$1224$us;
     $inc251$us = (($ch$4223$us) + 1)|0;
     $cmp244$us = ($inc251$us|0)<($106|0);
     if ($cmp244$us) {
      $ch$4223$us = $inc251$us;$f$1224$us = $add249$us;
     } else {
      break;
     }
    }
    $inc254$us = (($gr$3226$us) + 1)|0;
    $cmp239$us = ($inc254$us|0)<($87|0);
    if ($cmp239$us) {
     $f$0228$us = $add249$us;$gr$3226$us = $inc254$us;
    } else {
     $f$0$lcssa = $add249$us;
     break;
    }
   }
  } else {
   $f$0$lcssa = 0.0;
  }
  HEAPF32[$arrayidx230$17>>2] = $f$0$lcssa;
  $add273 = $f$0$lcssa + $89;
  $mul275 = $add273 * -0.10394349694252014;
  $add276 = $mul275 + $88;
  $add273$1 = $91 + $90;
  $mul275$1 = $add273$1 * -0.18920649588108063;
  $add276$1 = $mul275$1 + $add276;
  $add273$2 = $93 + $92;
  $mul275$2 = $add273$2 * -0.21623599529266357;
  $add276$2 = $mul275$2 + $add276$1;
  $add273$3 = $95 + $94;
  $mul275$3 = $add273$3 * -0.15591500699520111;
  $add276$3 = $mul275$3 + $add276$2;
  $add273$4 = $97 + $96;
  $mul275$4 = $add273$4 * 3.8980449615198001E-17;
  $add276$4 = $mul275$4 + $add276$3;
  $add273$5 = $99 + $98;
  $mul275$5 = $add273$5 * 0.23387250304222107;
  $add276$5 = $mul275$5 + $add276$4;
  $add273$6 = $101 + $100;
  $mul275$6 = $add273$6 * 0.50454998016357422;
  $add276$6 = $mul275$6 + $add276$5;
  $add273$7 = $103 + $102;
  $mul275$7 = $add273$7 * 0.75682497024536133;
  $add276$7 = $mul275$7 + $add276$6;
  $add273$8 = $105 + $104;
  $mul275$8 = $add273$8 * 0.93549001216888427;
  $add276$8 = $mul275$8 + $add276$7;
  $mul281 = ($87*3350)|0;
  $mul283 = Math_imul($mul281, $106)|0;
  $conv284 = (+($mul283|0));
  $div285 = $conv284 / $add276$8;
  $cmp293215 = ($106|0)>(0);
  $or$cond279 = $cmp239225 & $cmp293215;
  if ($or$cond279) {
   $gr$4218$us = 0;
   while(1) {
    $ch$5216$us = 0;
    while(1) {
     $arrayidx297$us = ((($pe$sink) + ($gr$4218$us<<3)|0) + ($ch$5216$us<<2)|0);
     $108 = +HEAPF32[$arrayidx297$us>>2];
     $mul298$us = $108 * $div285;
     HEAPF32[$arrayidx297$us>>2] = $mul298$us;
     $inc300$us = (($ch$5216$us) + 1)|0;
     $cmp293$us = ($inc300$us|0)<($106|0);
     if ($cmp293$us) {
      $ch$5216$us = $inc300$us;
     } else {
      break;
     }
    }
    $inc303$us = (($gr$4218$us) + 1)|0;
    $cmp288$us = ($inc303$us|0)<($87|0);
    if ($cmp288$us) {
     $gr$4218$us = $inc303$us;
    } else {
     break;
    }
   }
  }
  break;
 }
 default: {
 }
 }
 $iteration_loop = ((($gfc)) + 85812|0);
 $109 = HEAP32[$iteration_loop>>2]|0;
 FUNCTION_TABLE_viiii[$109 & 7]($gfc,$pe$sink,$ms_ener_ratio,$masking_LR$sink);
 (_format_bitstream($gfc)|0);
 $call308 = (_copy_buffer($gfc,$mp3buf,$mp3buf_size,1)|0);
 $write_lame_tag = ((($gfc)) + 156|0);
 $110 = HEAP32[$write_lame_tag>>2]|0;
 $tobool309 = ($110|0)==(0);
 if (!($tobool309)) {
  _AddVbrFrame($gfc);
 }
 $111 = HEAP32[$analysis>>2]|0;
 $tobool313 = ($111|0)==(0);
 if (!($tobool313)) {
  $pinfo315 = ((($gfc)) + 85804|0);
  $112 = HEAP32[$pinfo315>>2]|0;
  $cmp316 = ($112|0)==(0|0);
  if (!($cmp316)) {
   $113 = HEAP32[$mode_gr>>2]|0;
   $mul320 = ($113*576)|0;
   $channels_out322 = ((($gfc)) + 72|0);
   $114 = HEAP32[$channels_out322>>2]|0;
   $cmp323213 = ($114|0)>(0);
   if ($cmp323213) {
    $ch$6214 = 0;
    while(1) {
     $j$0211 = 0;
     while(1) {
      $add332 = (($j$0211) + ($mul320))|0;
      $arrayidx333 = ((((($112)) + 24|0) + (($ch$6214*12800)|0)|0) + ($add332<<3)|0);
      $116 = +HEAPF64[$arrayidx333>>3];
      $arrayidx337 = ((((($112)) + 24|0) + (($ch$6214*12800)|0)|0) + ($j$0211<<3)|0);
      HEAPF64[$arrayidx337>>3] = $116;
      $inc339 = (($j$0211) + 1)|0;
      $exitcond = ($inc339|0)==(272);
      if ($exitcond) {
       break;
      } else {
       $j$0211 = $inc339;
      }
     }
     $arrayidx345 = (($inbuf) + ($ch$6214<<2)|0);
     $115 = HEAP32[$arrayidx345>>2]|0;
     $j$1212 = 272;
     while(1) {
      $sub346 = (($j$1212) + -272)|0;
      $arrayidx347 = (($115) + ($sub346<<2)|0);
      $117 = +HEAPF32[$arrayidx347>>2];
      $conv348 = $117;
      $arrayidx352 = ((((($112)) + 24|0) + (($ch$6214*12800)|0)|0) + ($j$1212<<3)|0);
      HEAPF64[$arrayidx352>>3] = $conv348;
      $inc354 = (($j$1212) + 1)|0;
      $exitcond266 = ($inc354|0)==(1600);
      if ($exitcond266) {
       break;
      } else {
       $j$1212 = $inc354;
      }
     }
     $inc357 = (($ch$6214) + 1)|0;
     $cmp323 = ($inc357|0)<($114|0);
     if ($cmp323) {
      $ch$6214 = $inc357;
     } else {
      break;
     }
    }
   }
   $masking_lower = ((($gfc)) + 84908|0);
   HEAPF32[$masking_lower>>2] = 1.0;
   _set_frame_pinfo($gfc,$masking_LR$sink);
  }
 }
 $frame_number = ((($gfc)) + 84748|0);
 $118 = HEAP32[$frame_number>>2]|0;
 $inc361 = (($118) + 1)|0;
 HEAP32[$frame_number>>2] = $inc361;
 $bitrate_index$i = ((($gfc)) + 84744|0);
 $119 = HEAP32[$bitrate_index$i>>2]|0;
 $arrayidx2$i = (((((($gfc)) + 84040|0) + (($119*20)|0)|0)) + 16|0);
 $120 = HEAP32[$arrayidx2$i>>2]|0;
 $inc$i197 = (($120) + 1)|0;
 HEAP32[$arrayidx2$i>>2] = $inc$i197;
 $arrayidx5$i = ((($gfc)) + 84356|0);
 $121 = HEAP32[$arrayidx5$i>>2]|0;
 $inc6$i = (($121) + 1)|0;
 HEAP32[$arrayidx5$i>>2] = $inc6$i;
 $channels_out$i198 = ((($gfc)) + 72|0);
 $122 = HEAP32[$channels_out$i198>>2]|0;
 $cmp$i199 = ($122|0)==(2);
 if ($cmp$i199) {
  $123 = HEAP32[$bitrate_index$i>>2]|0;
  $124 = HEAP32[$mode_ext>>2]|0;
  $arrayidx10$i = ((((($gfc)) + 84040|0) + (($123*20)|0)|0) + ($124<<2)|0);
  $125 = HEAP32[$arrayidx10$i>>2]|0;
  $inc11$i = (($125) + 1)|0;
  HEAP32[$arrayidx10$i>>2] = $inc11$i;
  $126 = HEAP32[$mode_ext>>2]|0;
  $arrayidx15$i200 = (((($gfc)) + 84340|0) + ($126<<2)|0);
  $127 = HEAP32[$arrayidx15$i200>>2]|0;
  $inc16$i = (($127) + 1)|0;
  HEAP32[$arrayidx15$i200>>2] = $inc16$i;
 }
 $128 = HEAP32[$mode_gr>>2]|0;
 $cmp1733$i = ($128|0)>(0);
 if (!($cmp1733$i)) {
  $retval$1 = $call308;
  STACKTOP = sp;return ($retval$1|0);
 }
 $arrayidx45$i = ((($gfc)) + 84740|0);
 $$pre$i203 = HEAP32[$channels_out$i198>>2]|0;
 $129 = $$pre$i203;$144 = $128;$gr$034$i = 0;
 while(1) {
  $cmp2031$i = ($129|0)>(0);
  if ($cmp2031$i) {
   $ch$032$i = 0;
   while(1) {
    $block_type$i204 = ((((((($gfc)) + 304|0) + (($gr$034$i*10504)|0)|0) + (($ch$032$i*5252)|0)|0)) + 4788|0);
    $130 = HEAP32[$block_type$i204>>2]|0;
    $mixed_block_flag$i = ((((((($gfc)) + 304|0) + (($gr$034$i*10504)|0)|0) + (($ch$032$i*5252)|0)|0)) + 4792|0);
    $131 = HEAP32[$mixed_block_flag$i>>2]|0;
    $tobool$i = ($131|0)==(0);
    $$$i = $tobool$i ? $130 : 4;
    $132 = HEAP32[$bitrate_index$i>>2]|0;
    $arrayidx32$i = ((((($gfc)) + 84360|0) + (($132*24)|0)|0) + ($$$i<<2)|0);
    $133 = HEAP32[$arrayidx32$i>>2]|0;
    $inc33$i = (($133) + 1)|0;
    HEAP32[$arrayidx32$i>>2] = $inc33$i;
    $134 = HEAP32[$bitrate_index$i>>2]|0;
    $arrayidx37$i = (((((($gfc)) + 84360|0) + (($134*24)|0)|0)) + 20|0);
    $135 = HEAP32[$arrayidx37$i>>2]|0;
    $inc38$i = (($135) + 1)|0;
    HEAP32[$arrayidx37$i>>2] = $inc38$i;
    $arrayidx41$i = (((($gfc)) + 84720|0) + ($$$i<<2)|0);
    $136 = HEAP32[$arrayidx41$i>>2]|0;
    $inc42$i = (($136) + 1)|0;
    HEAP32[$arrayidx41$i>>2] = $inc42$i;
    $137 = HEAP32[$arrayidx45$i>>2]|0;
    $inc46$i = (($137) + 1)|0;
    HEAP32[$arrayidx45$i>>2] = $inc46$i;
    $inc47$i = (($ch$032$i) + 1)|0;
    $138 = HEAP32[$channels_out$i198>>2]|0;
    $cmp20$i = ($inc47$i|0)<($138|0);
    if ($cmp20$i) {
     $ch$032$i = $inc47$i;
    } else {
     break;
    }
   }
   $$pre36$i = HEAP32[$mode_gr>>2]|0;
   $139 = $$pre36$i;$145 = $138;
  } else {
   $139 = $144;$145 = $129;
  }
  $inc49$i = (($gr$034$i) + 1)|0;
  $cmp17$i = ($inc49$i|0)<($139|0);
  if ($cmp17$i) {
   $129 = $145;$144 = $139;$gr$034$i = $inc49$i;
  } else {
   $retval$1 = $call308;
   break;
  }
 }
 STACKTOP = sp;return ($retval$1|0);
}
function _fft_short($gfc,$x_real,$chn,$buffer) {
 $gfc = $gfc|0;
 $x_real = $x_real|0;
 $chn = $chn|0;
 $buffer = $buffer|0;
 var $0 = 0, $1 = 0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0, $2 = 0.0, $3 = 0.0, $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, $add = 0;
 var $add$ptr = 0, $add14 = 0, $add18 = 0.0, $add19 = 0, $add24 = 0, $add32 = 0, $add36 = 0.0, $add37 = 0.0, $add41 = 0.0, $add45 = 0, $add50 = 0, $add58 = 0, $add62 = 0.0, $add63 = 0, $add68 = 0, $add7 = 0, $add76 = 0, $add80 = 0.0, $add81 = 0.0, $add85 = 0.0;
 var $arrayidx1 = 0, $arrayidx10 = 0, $arrayidx15 = 0, $arrayidx2 = 0, $arrayidx20 = 0, $arrayidx25 = 0, $arrayidx28 = 0, $arrayidx33 = 0, $arrayidx4 = 0, $arrayidx40 = 0, $arrayidx42 = 0, $arrayidx44 = 0, $arrayidx46 = 0, $arrayidx5 = 0, $arrayidx51 = 0, $arrayidx54 = 0, $arrayidx59 = 0, $arrayidx64 = 0, $arrayidx69 = 0, $arrayidx72 = 0;
 var $arrayidx77 = 0, $arrayidx8 = 0, $arrayidx82 = 0, $arrayidx84 = 0, $arrayidx86 = 0, $arrayidx88 = 0, $b$087 = 0, $cmp89 = 0, $conv3 = 0, $conv6 = 0, $dec = 0, $exitcond = 0, $fft_fht = 0, $indvars$iv = 0, $j$0 = 0, $mul16 = 0.0, $mul26 = 0.0, $mul34 = 0.0, $mul52 = 0.0, $mul60 = 0.0;
 var $mul70 = 0.0, $mul78 = 0.0, $mul9 = 0.0, $scevgep = 0, $sext = 0, $shl = 0, $sub = 0, $sub17 = 0.0, $sub27 = 0, $sub35 = 0.0, $sub39 = 0.0, $sub43 = 0.0, $sub53 = 0, $sub61 = 0.0, $sub71 = 0, $sub79 = 0.0, $sub83 = 0.0, $sub87 = 0.0, $x$0 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $arrayidx5 = (($buffer) + ($chn<<2)|0);
 $fft_fht = ((($gfc)) + 85820|0);
 $b$087 = 0;$indvars$iv = $x_real;
 while(1) {
  $arrayidx1 = (((($x_real) + ($b$087<<10)|0)) + 512|0);
  $add = (($b$087) + 1)|0;
  $0 = HEAP32[$arrayidx5>>2]|0;
  $sext = Math_imul($add, 12582912)|0;
  $conv6 = $sext >> 16;
  $j$0 = 31;$x$0 = $arrayidx1;
  while(1) {
   $shl = $j$0 << 2;
   $arrayidx2 = (15276 + ($shl)|0);
   $1 = HEAP8[$arrayidx2>>0]|0;
   $conv3 = $1&255;
   $arrayidx4 = (19708 + ($conv3<<2)|0);
   $2 = +HEAPF32[$arrayidx4>>2];
   $add7 = (($conv3) + ($conv6))|0;
   $arrayidx8 = (($0) + ($add7<<2)|0);
   $3 = +HEAPF32[$arrayidx8>>2];
   $mul9 = $3 * $2;
   $sub = (127 - ($conv3))|0;
   $arrayidx10 = (19708 + ($sub<<2)|0);
   $4 = +HEAPF32[$arrayidx10>>2];
   $add14 = (($add7) + 128)|0;
   $arrayidx15 = (($0) + ($add14<<2)|0);
   $5 = +HEAPF32[$arrayidx15>>2];
   $mul16 = $5 * $4;
   $sub17 = $mul9 - $mul16;
   $add18 = $mul16 + $mul9;
   $add19 = (($conv3) + 64)|0;
   $arrayidx20 = (19708 + ($add19<<2)|0);
   $6 = +HEAPF32[$arrayidx20>>2];
   $add24 = (($add7) + 64)|0;
   $arrayidx25 = (($0) + ($add24<<2)|0);
   $7 = +HEAPF32[$arrayidx25>>2];
   $mul26 = $7 * $6;
   $sub27 = (63 - ($conv3))|0;
   $arrayidx28 = (19708 + ($sub27<<2)|0);
   $8 = +HEAPF32[$arrayidx28>>2];
   $add32 = (($add7) + 192)|0;
   $arrayidx33 = (($0) + ($add32<<2)|0);
   $9 = +HEAPF32[$arrayidx33>>2];
   $mul34 = $9 * $8;
   $sub35 = $mul26 - $mul34;
   $add36 = $mul34 + $mul26;
   $add$ptr = ((($x$0)) + -16|0);
   $add37 = $add36 + $add18;
   HEAPF32[$add$ptr>>2] = $add37;
   $sub39 = $add18 - $add36;
   $arrayidx40 = ((($x$0)) + -8|0);
   HEAPF32[$arrayidx40>>2] = $sub39;
   $add41 = $sub35 + $sub17;
   $arrayidx42 = ((($x$0)) + -12|0);
   HEAPF32[$arrayidx42>>2] = $add41;
   $sub43 = $sub17 - $sub35;
   $arrayidx44 = ((($x$0)) + -4|0);
   HEAPF32[$arrayidx44>>2] = $sub43;
   $add45 = (($conv3) + 1)|0;
   $arrayidx46 = (19708 + ($add45<<2)|0);
   $10 = +HEAPF32[$arrayidx46>>2];
   $add50 = (($add7) + 1)|0;
   $arrayidx51 = (($0) + ($add50<<2)|0);
   $11 = +HEAPF32[$arrayidx51>>2];
   $mul52 = $11 * $10;
   $sub53 = (126 - ($conv3))|0;
   $arrayidx54 = (19708 + ($sub53<<2)|0);
   $12 = +HEAPF32[$arrayidx54>>2];
   $add58 = (($add7) + 129)|0;
   $arrayidx59 = (($0) + ($add58<<2)|0);
   $13 = +HEAPF32[$arrayidx59>>2];
   $mul60 = $13 * $12;
   $sub61 = $mul52 - $mul60;
   $add62 = $mul60 + $mul52;
   $add63 = (($conv3) + 65)|0;
   $arrayidx64 = (19708 + ($add63<<2)|0);
   $14 = +HEAPF32[$arrayidx64>>2];
   $add68 = (($add7) + 65)|0;
   $arrayidx69 = (($0) + ($add68<<2)|0);
   $15 = +HEAPF32[$arrayidx69>>2];
   $mul70 = $15 * $14;
   $sub71 = (62 - ($conv3))|0;
   $arrayidx72 = (19708 + ($sub71<<2)|0);
   $16 = +HEAPF32[$arrayidx72>>2];
   $add76 = (($add7) + 193)|0;
   $arrayidx77 = (($0) + ($add76<<2)|0);
   $17 = +HEAPF32[$arrayidx77>>2];
   $mul78 = $17 * $16;
   $sub79 = $mul70 - $mul78;
   $add80 = $mul78 + $mul70;
   $add81 = $add80 + $add62;
   $arrayidx82 = ((($x$0)) + 496|0);
   HEAPF32[$arrayidx82>>2] = $add81;
   $sub83 = $add62 - $add80;
   $arrayidx84 = ((($x$0)) + 504|0);
   HEAPF32[$arrayidx84>>2] = $sub83;
   $add85 = $sub79 + $sub61;
   $arrayidx86 = ((($x$0)) + 500|0);
   HEAPF32[$arrayidx86>>2] = $add85;
   $sub87 = $sub61 - $sub79;
   $arrayidx88 = ((($x$0)) + 508|0);
   HEAPF32[$arrayidx88>>2] = $sub87;
   $dec = (($j$0) + -1)|0;
   $cmp89 = ($j$0|0)>(0);
   if ($cmp89) {
    $j$0 = $dec;$x$0 = $add$ptr;
   } else {
    break;
   }
  }
  $18 = HEAP32[$fft_fht>>2]|0;
  FUNCTION_TABLE_vii[$18 & 3]($indvars$iv,128);
  $scevgep = ((($indvars$iv)) + 1024|0);
  $exitcond = ($add|0)==(3);
  if ($exitcond) {
   break;
  } else {
   $b$087 = $add;$indvars$iv = $scevgep;
  }
 }
 return;
}
function _fft_long($gfc,$x,$chn,$buffer) {
 $gfc = $gfc|0;
 $x = $x|0;
 $chn = $chn|0;
 $buffer = $buffer|0;
 var $0 = 0, $1 = 0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0, $2 = 0.0, $3 = 0.0, $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, $add = 0;
 var $add$ptr = 0, $add$ptr24 = 0, $add10 = 0, $add16 = 0, $add23 = 0.0, $add25 = 0.0, $add29 = 0.0, $add33 = 0, $add39 = 0, $add46 = 0.0, $add47 = 0, $add53 = 0, $add60 = 0.0, $add61 = 0.0, $add65 = 0.0, $add9 = 0.0, $arrayidx = 0, $arrayidx1 = 0, $arrayidx11 = 0, $arrayidx14 = 0;
 var $arrayidx17 = 0, $arrayidx2 = 0, $arrayidx20 = 0, $arrayidx28 = 0, $arrayidx3 = 0, $arrayidx30 = 0, $arrayidx32 = 0, $arrayidx34 = 0, $arrayidx37 = 0, $arrayidx4 = 0, $arrayidx40 = 0, $arrayidx43 = 0, $arrayidx48 = 0, $arrayidx51 = 0, $arrayidx54 = 0, $arrayidx57 = 0, $arrayidx62 = 0, $arrayidx64 = 0, $arrayidx66 = 0, $arrayidx68 = 0;
 var $arrayidx7 = 0, $cmp = 0, $conv = 0, $dec = 0, $fft_fht = 0, $jj$0 = 0, $mul = 0.0, $mul15 = 0.0, $mul21 = 0.0, $mul38 = 0.0, $mul44 = 0.0, $mul52 = 0.0, $mul58 = 0.0, $mul8 = 0.0, $sub = 0.0, $sub22 = 0.0, $sub27 = 0.0, $sub31 = 0.0, $sub45 = 0.0, $sub59 = 0.0;
 var $sub63 = 0.0, $sub67 = 0.0, $x$addr$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $add$ptr = ((($x)) + 2048|0);
 $arrayidx2 = (($buffer) + ($chn<<2)|0);
 $0 = HEAP32[$arrayidx2>>2]|0;
 $jj$0 = 127;$x$addr$0 = $add$ptr;
 while(1) {
  $arrayidx = (15276 + ($jj$0)|0);
  $1 = HEAP8[$arrayidx>>0]|0;
  $conv = $1&255;
  $arrayidx1 = (20220 + ($conv<<2)|0);
  $2 = +HEAPF32[$arrayidx1>>2];
  $arrayidx3 = (($0) + ($conv<<2)|0);
  $3 = +HEAPF32[$arrayidx3>>2];
  $mul = $3 * $2;
  $add = $conv | 512;
  $arrayidx4 = (20220 + ($add<<2)|0);
  $4 = +HEAPF32[$arrayidx4>>2];
  $arrayidx7 = (($0) + ($add<<2)|0);
  $5 = +HEAPF32[$arrayidx7>>2];
  $mul8 = $5 * $4;
  $sub = $mul - $mul8;
  $add9 = $mul8 + $mul;
  $add10 = $conv | 256;
  $arrayidx11 = (20220 + ($add10<<2)|0);
  $6 = +HEAPF32[$arrayidx11>>2];
  $arrayidx14 = (($0) + ($add10<<2)|0);
  $7 = +HEAPF32[$arrayidx14>>2];
  $mul15 = $7 * $6;
  $add16 = $conv | 768;
  $arrayidx17 = (20220 + ($add16<<2)|0);
  $8 = +HEAPF32[$arrayidx17>>2];
  $arrayidx20 = (($0) + ($add16<<2)|0);
  $9 = +HEAPF32[$arrayidx20>>2];
  $mul21 = $9 * $8;
  $sub22 = $mul15 - $mul21;
  $add23 = $mul21 + $mul15;
  $add$ptr24 = ((($x$addr$0)) + -16|0);
  $add25 = $add23 + $add9;
  HEAPF32[$add$ptr24>>2] = $add25;
  $sub27 = $add9 - $add23;
  $arrayidx28 = ((($x$addr$0)) + -8|0);
  HEAPF32[$arrayidx28>>2] = $sub27;
  $add29 = $sub22 + $sub;
  $arrayidx30 = ((($x$addr$0)) + -12|0);
  HEAPF32[$arrayidx30>>2] = $add29;
  $sub31 = $sub - $sub22;
  $arrayidx32 = ((($x$addr$0)) + -4|0);
  HEAPF32[$arrayidx32>>2] = $sub31;
  $add33 = (($conv) + 1)|0;
  $arrayidx34 = (20220 + ($add33<<2)|0);
  $10 = +HEAPF32[$arrayidx34>>2];
  $arrayidx37 = (($0) + ($add33<<2)|0);
  $11 = +HEAPF32[$arrayidx37>>2];
  $mul38 = $11 * $10;
  $add39 = (($conv) + 513)|0;
  $arrayidx40 = (20220 + ($add39<<2)|0);
  $12 = +HEAPF32[$arrayidx40>>2];
  $arrayidx43 = (($0) + ($add39<<2)|0);
  $13 = +HEAPF32[$arrayidx43>>2];
  $mul44 = $13 * $12;
  $sub45 = $mul38 - $mul44;
  $add46 = $mul44 + $mul38;
  $add47 = (($conv) + 257)|0;
  $arrayidx48 = (20220 + ($add47<<2)|0);
  $14 = +HEAPF32[$arrayidx48>>2];
  $arrayidx51 = (($0) + ($add47<<2)|0);
  $15 = +HEAPF32[$arrayidx51>>2];
  $mul52 = $15 * $14;
  $add53 = (($conv) + 769)|0;
  $arrayidx54 = (20220 + ($add53<<2)|0);
  $16 = +HEAPF32[$arrayidx54>>2];
  $arrayidx57 = (($0) + ($add53<<2)|0);
  $17 = +HEAPF32[$arrayidx57>>2];
  $mul58 = $17 * $16;
  $sub59 = $mul52 - $mul58;
  $add60 = $mul58 + $mul52;
  $add61 = $add60 + $add46;
  $arrayidx62 = ((($x$addr$0)) + 2032|0);
  HEAPF32[$arrayidx62>>2] = $add61;
  $sub63 = $add46 - $add60;
  $arrayidx64 = ((($x$addr$0)) + 2040|0);
  HEAPF32[$arrayidx64>>2] = $sub63;
  $add65 = $sub59 + $sub45;
  $arrayidx66 = ((($x$addr$0)) + 2036|0);
  HEAPF32[$arrayidx66>>2] = $add65;
  $sub67 = $sub45 - $sub59;
  $arrayidx68 = ((($x$addr$0)) + 2044|0);
  HEAPF32[$arrayidx68>>2] = $sub67;
  $dec = (($jj$0) + -1)|0;
  $cmp = ($jj$0|0)>(0);
  if ($cmp) {
   $jj$0 = $dec;$x$addr$0 = $add$ptr24;
  } else {
   break;
  }
 }
 $fft_fht = ((($gfc)) + 85820|0);
 $18 = HEAP32[$fft_fht>>2]|0;
 FUNCTION_TABLE_vii[$18 & 3]($x,512);
 return;
}
function _init_fft($gfc) {
 $gfc = $gfc|0;
 var $add = 0.0, $add15 = 0.0, $add8 = 0.0, $arrayidx = 0, $arrayidx22 = 0, $call = 0.0, $call18 = 0.0, $call6 = 0.0, $conv = 0.0, $conv14 = 0.0, $conv21 = 0.0, $conv9 = 0.0, $div = 0.0, $div17 = 0.0, $div5 = 0.0, $exitcond = 0, $exitcond12 = 0, $fft_fht = 0, $i$011 = 0, $i$110 = 0;
 var $inc = 0, $inc24 = 0, $mul1$neg = 0.0, $mul20 = 0.0, $mul7 = 0.0, $sub = 0.0, $sub19 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $i$011 = 0;
 while(1) {
  $conv = (+($i$011|0));
  $add = $conv + 0.5;
  $div = $add * 0.0061359231515425647;
  $call = (+Math_cos((+$div)));
  $mul1$neg = $call * -0.5;
  $sub = $mul1$neg + 0.41999999999999998;
  $div5 = $add * 0.012271846303085129;
  $call6 = (+Math_cos((+$div5)));
  $mul7 = $call6 * 0.080000000000000002;
  $add8 = $sub + $mul7;
  $conv9 = $add8;
  $arrayidx = (20220 + ($i$011<<2)|0);
  HEAPF32[$arrayidx>>2] = $conv9;
  $inc = (($i$011) + 1)|0;
  $exitcond12 = ($inc|0)==(1024);
  if ($exitcond12) {
   $i$110 = 0;
   break;
  } else {
   $i$011 = $inc;
  }
 }
 while(1) {
  $conv14 = (+($i$110|0));
  $add15 = $conv14 + 0.5;
  $div17 = $add15 * 0.024543692606170259;
  $call18 = (+Math_cos((+$div17)));
  $sub19 = 1.0 - $call18;
  $mul20 = $sub19 * 0.5;
  $conv21 = $mul20;
  $arrayidx22 = (19708 + ($i$110<<2)|0);
  HEAPF32[$arrayidx22>>2] = $conv21;
  $inc24 = (($i$110) + 1)|0;
  $exitcond = ($inc24|0)==(128);
  if ($exitcond) {
   break;
  } else {
   $i$110 = $inc24;
  }
 }
 $fft_fht = ((($gfc)) + 85820|0);
 HEAP32[$fft_fht>>2] = 1;
 return;
}
function _fht($fz,$n) {
 $fz = $fz|0;
 $n = $n|0;
 var $0 = 0.0, $1 = 0.0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = 0.0, $3 = 0.0, $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0;
 var $add = 0, $add$ptr = 0, $add$ptr127 = 0, $add$ptr128 = 0, $add$ptr143 = 0, $add$ptr3 = 0, $add$ptr43 = 0, $add$ptr44 = 0, $add$ptr55 = 0, $add$ptr56 = 0, $add$ptr57 = 0, $add104 = 0.0, $add107 = 0.0, $add111 = 0.0, $add118 = 0.0, $add121 = 0.0, $add125 = 0.0, $add14 = 0.0, $add142 = 0.0, $add17 = 0.0;
 var $add21 = 0.0, $add28 = 0.0, $add37 = 0.0, $add41 = 0.0, $add72 = 0.0, $add76 = 0.0, $add8 = 0.0, $add80 = 0.0, $add90 = 0.0, $add94 = 0.0, $add98 = 0.0, $arrayidx10 = 0, $arrayidx24 = 0, $arrayidx29 = 0, $arrayidx31 = 0, $arrayidx47 = 0, $arrayidx5 = 0, $arrayidx63 = 0, $arrayidx65 = 0, $arrayidx81 = 0;
 var $arrayidx83 = 0, $arrayidx9 = 0, $arrayidx91 = 0, $arrayidx95 = 0, $c1$0195 = 0.0, $cmp = 0, $cmp130 = 0, $cmp145 = 0, $cmp48 = 0, $cmp48193 = 0, $conv = 0.0, $conv30 = 0.0, $conv32 = 0.0, $conv34 = 0.0, $fi$0 = 0, $fi$1 = 0, $gi$0 = 0, $gi$1 = 0, $i$0194 = 0, $idx$neg = 0;
 var $inc = 0, $k4$0 = 0, $mul = 0.0, $mul100 = 0.0, $mul102 = 0.0, $mul103 = 0.0, $mul113 = 0.0, $mul114 = 0.0, $mul116 = 0.0, $mul117 = 0.0, $mul134 = 0.0, $mul136 = 0.0, $mul139 = 0.0, $mul141 = 0.0, $mul33 = 0.0, $mul50 = 0.0, $mul51 = 0.0, $mul54 = 0.0, $mul64 = 0.0, $mul66 = 0.0;
 var $mul69 = 0.0, $mul71 = 0.0, $mul82 = 0.0, $mul84 = 0.0, $mul87 = 0.0, $mul89 = 0.0, $mul99 = 0.0, $s1$0196 = 0.0, $shl = 0, $shl1 = 0, $shl2 = 0, $shr = 0, $sub = 0.0, $sub101 = 0.0, $sub105 = 0.0, $sub109 = 0.0, $sub11 = 0.0, $sub115 = 0.0, $sub119 = 0.0, $sub123 = 0.0;
 var $sub137 = 0.0, $sub15 = 0.0, $sub19 = 0.0, $sub25 = 0.0, $sub35 = 0.0, $sub39 = 0.0, $sub52 = 0.0, $sub67 = 0.0, $sub74 = 0.0, $sub78 = 0.0, $sub85 = 0.0, $sub92 = 0.0, $sub96 = 0.0, $tri$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $shl = $n << 1;
 $add$ptr = (($fz) + ($shl<<2)|0);
 $k4$0 = 4;$tri$0 = 1032;
 while(1) {
  $shr = $k4$0 >> 1;
  $shl1 = $k4$0 << 1;
  $add = ($k4$0*3)|0;
  $shl2 = $k4$0 << 2;
  $add$ptr3 = (($fz) + ($shr<<2)|0);
  $fi$0 = $fz;$gi$0 = $add$ptr3;
  while(1) {
   $0 = +HEAPF32[$fi$0>>2];
   $arrayidx5 = (($fi$0) + ($k4$0<<2)|0);
   $1 = +HEAPF32[$arrayidx5>>2];
   $sub = $0 - $1;
   $add8 = $1 + $0;
   $arrayidx9 = (($fi$0) + ($shl1<<2)|0);
   $2 = +HEAPF32[$arrayidx9>>2];
   $arrayidx10 = (($fi$0) + ($add<<2)|0);
   $3 = +HEAPF32[$arrayidx10>>2];
   $sub11 = $2 - $3;
   $add14 = $3 + $2;
   $sub15 = $add8 - $add14;
   HEAPF32[$arrayidx9>>2] = $sub15;
   $add17 = $add14 + $add8;
   HEAPF32[$fi$0>>2] = $add17;
   $sub19 = $sub - $sub11;
   HEAPF32[$arrayidx10>>2] = $sub19;
   $add21 = $sub11 + $sub;
   HEAPF32[$arrayidx5>>2] = $add21;
   $4 = +HEAPF32[$gi$0>>2];
   $arrayidx24 = (($gi$0) + ($k4$0<<2)|0);
   $5 = +HEAPF32[$arrayidx24>>2];
   $sub25 = $4 - $5;
   $add28 = $5 + $4;
   $arrayidx29 = (($gi$0) + ($add<<2)|0);
   $6 = +HEAPF32[$arrayidx29>>2];
   $conv = $6;
   $mul = $conv * 1.4142135623730951;
   $conv30 = $mul;
   $arrayidx31 = (($gi$0) + ($shl1<<2)|0);
   $7 = +HEAPF32[$arrayidx31>>2];
   $conv32 = $7;
   $mul33 = $conv32 * 1.4142135623730951;
   $conv34 = $mul33;
   $sub35 = $add28 - $conv34;
   HEAPF32[$arrayidx31>>2] = $sub35;
   $add37 = $conv34 + $add28;
   HEAPF32[$gi$0>>2] = $add37;
   $sub39 = $sub25 - $conv30;
   HEAPF32[$arrayidx29>>2] = $sub39;
   $add41 = $conv30 + $sub25;
   HEAPF32[$arrayidx24>>2] = $add41;
   $add$ptr43 = (($gi$0) + ($shl2<<2)|0);
   $add$ptr44 = (($fi$0) + ($shl2<<2)|0);
   $cmp = ($add$ptr44>>>0)<($add$ptr>>>0);
   if ($cmp) {
    $fi$0 = $add$ptr44;$gi$0 = $add$ptr43;
   } else {
    break;
   }
  }
  $arrayidx47 = ((($tri$0)) + 4|0);
  $cmp48193 = ($k4$0|0)>(2);
  if ($cmp48193) {
   $8 = +HEAPF32[$arrayidx47>>2];
   $9 = +HEAPF32[$tri$0>>2];
   $add$ptr56 = (($fz) + ($k4$0<<2)|0);
   $c1$0195 = $9;$i$0194 = 1;$s1$0196 = $8;
   while(1) {
    $mul50 = $s1$0196 * 2.0;
    $mul51 = $mul50 * $s1$0196;
    $sub52 = 1.0 - $mul51;
    $mul54 = $mul50 * $c1$0195;
    $add$ptr55 = (($fz) + ($i$0194<<2)|0);
    $idx$neg = (0 - ($i$0194))|0;
    $add$ptr57 = (($add$ptr56) + ($idx$neg<<2)|0);
    $fi$1 = $add$ptr55;$gi$1 = $add$ptr57;
    while(1) {
     $arrayidx63 = (($fi$1) + ($k4$0<<2)|0);
     $10 = +HEAPF32[$arrayidx63>>2];
     $mul64 = $10 * $mul54;
     $arrayidx65 = (($gi$1) + ($k4$0<<2)|0);
     $11 = +HEAPF32[$arrayidx65>>2];
     $mul66 = $11 * $sub52;
     $sub67 = $mul64 - $mul66;
     $mul69 = $10 * $sub52;
     $mul71 = $11 * $mul54;
     $add72 = $mul71 + $mul69;
     $12 = +HEAPF32[$fi$1>>2];
     $sub74 = $12 - $add72;
     $add76 = $add72 + $12;
     $13 = +HEAPF32[$gi$1>>2];
     $sub78 = $13 - $sub67;
     $add80 = $13 + $sub67;
     $arrayidx81 = (($fi$1) + ($add<<2)|0);
     $14 = +HEAPF32[$arrayidx81>>2];
     $mul82 = $14 * $mul54;
     $arrayidx83 = (($gi$1) + ($add<<2)|0);
     $15 = +HEAPF32[$arrayidx83>>2];
     $mul84 = $15 * $sub52;
     $sub85 = $mul82 - $mul84;
     $mul87 = $14 * $sub52;
     $mul89 = $15 * $mul54;
     $add90 = $mul89 + $mul87;
     $arrayidx91 = (($fi$1) + ($shl1<<2)|0);
     $16 = +HEAPF32[$arrayidx91>>2];
     $sub92 = $16 - $add90;
     $add94 = $add90 + $16;
     $arrayidx95 = (($gi$1) + ($shl1<<2)|0);
     $17 = +HEAPF32[$arrayidx95>>2];
     $sub96 = $17 - $sub85;
     $add98 = $17 + $sub85;
     $mul99 = $add94 * $s1$0196;
     $mul100 = $sub96 * $c1$0195;
     $sub101 = $mul99 - $mul100;
     $mul102 = $add94 * $c1$0195;
     $mul103 = $sub96 * $s1$0196;
     $add104 = $mul102 + $mul103;
     $sub105 = $add76 - $add104;
     HEAPF32[$arrayidx91>>2] = $sub105;
     $add107 = $add104 + $add76;
     HEAPF32[$fi$1>>2] = $add107;
     $sub109 = $sub78 - $sub101;
     HEAPF32[$arrayidx83>>2] = $sub109;
     $add111 = $sub101 + $sub78;
     HEAPF32[$arrayidx65>>2] = $add111;
     $mul113 = $add98 * $c1$0195;
     $mul114 = $sub92 * $s1$0196;
     $sub115 = $mul113 - $mul114;
     $mul116 = $add98 * $s1$0196;
     $mul117 = $sub92 * $c1$0195;
     $add118 = $mul116 + $mul117;
     $sub119 = $add80 - $add118;
     HEAPF32[$arrayidx95>>2] = $sub119;
     $add121 = $add118 + $add80;
     HEAPF32[$gi$1>>2] = $add121;
     $sub123 = $sub74 - $sub115;
     HEAPF32[$arrayidx81>>2] = $sub123;
     $add125 = $sub115 + $sub74;
     HEAPF32[$arrayidx63>>2] = $add125;
     $add$ptr127 = (($gi$1) + ($shl2<<2)|0);
     $add$ptr128 = (($fi$1) + ($shl2<<2)|0);
     $cmp130 = ($add$ptr128>>>0)<($add$ptr>>>0);
     if ($cmp130) {
      $fi$1 = $add$ptr128;$gi$1 = $add$ptr127;
     } else {
      break;
     }
    }
    $18 = +HEAPF32[$tri$0>>2];
    $mul134 = $18 * $c1$0195;
    $19 = +HEAPF32[$arrayidx47>>2];
    $mul136 = $19 * $s1$0196;
    $sub137 = $mul134 - $mul136;
    $mul139 = $19 * $c1$0195;
    $mul141 = $18 * $s1$0196;
    $add142 = $mul139 + $mul141;
    $inc = (($i$0194) + 1)|0;
    $cmp48 = ($inc|0)<($shr|0);
    if ($cmp48) {
     $c1$0195 = $sub137;$i$0194 = $inc;$s1$0196 = $add142;
    } else {
     break;
    }
   }
  }
  $add$ptr143 = ((($tri$0)) + 8|0);
  $cmp145 = ($shl2|0)<($shl|0);
  if ($cmp145) {
   $k4$0 = $shl2;$tri$0 = $add$ptr143;
  } else {
   break;
  }
 }
 return;
}
function _id3v2_add_latin1($gfp,$frame_id,$lang,$desc,$text) {
 $gfp = $gfp|0;
 $frame_id = $frame_id|0;
 $lang = $lang|0;
 $desc = $desc|0;
 $text = $text|0;
 var $$pre$nxt$i = 0, $$pre13$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $arraydecay = 0, $arraydecay$us = 0, $arraydecay24 = 0, $arrayidx$i = 0, $arrayidx$i34 = 0, $arrayidx$i41 = 0, $arrayidx10$1$i = 0, $arrayidx10$2$i = 0, $arrayidx11$1$i = 0, $arrayidx11$2$i = 0, $arrayidx11$i = 0, $arrayidx11$i50 = 0, $arrayidx4$i = 0, $arrayidx5$i = 0, $arrayidx8$i = 0, $call$i = 0;
 var $call$i47 = 0, $call17 = 0, $call5 = 0, $call5$us = 0, $cmp = 0, $cmp$i = 0, $cmp$i30 = 0, $cmp$i64 = 0, $cmp$i64$us = 0, $cmp$i69 = 0, $cmp$i73 = 0, $cmp1 = 0, $cmp1$i = 0, $cmp1$i27 = 0, $cmp1$i38 = 0, $cmp1$i60 = 0, $cmp1$i60$us = 0, $cmp1$i70 = 0, $cmp1$i74 = 0, $cmp10$i = 0;
 var $cmp15 = 0, $cmp18 = 0, $cmp3$i = 0, $cmp3$i31 = 0, $cmp3$i31$us = 0, $cmp3$i42 = 0, $cmp5$i = 0, $cmp5$i45 = 0, $cmp6$i = 0, $cmp6$i32 = 0, $cmp6$i57 = 0, $cmp6$i57$us = 0, $cmp8$i = 0, $cmp8$i48 = 0, $dim = 0, $dim$i = 0, $dim$i$us = 0, $dim32 = 0, $enc = 0, $enc$i = 0;
 var $enc34 = 0, $fid = 0, $fid$i = 0, $fid$i59 = 0, $fid$i59$us = 0, $flags = 0, $i$0$lcssa$ph$i = 0, $i$010$i = 0, $inc$i = 0, $inc$i35 = 0, $inc$i43 = 0, $internal_flags = 0, $l = 0, $l$i = 0, $l29 = 0, $n$0$i = 0, $n$0$i40 = 0, $node$0 = 0, $node$0$i = 0, $node$0$i63 = 0;
 var $node$0$i63$us = 0, $node$0$us = 0, $node$05$i = 0, $node$05$i56 = 0, $node$05$i56$us = 0, $node$07$i = 0, $node$07$i58 = 0, $node$07$i58$us = 0, $node$1 = 0, $node$2 = 0, $nxt$sink$i = 0, $or = 0, $retval$0$i = 0, $retval$1 = 0, $retval$1$i = 0, $retval$1$i52 = 0, $scevgep$i = 0, $switch$split102D = 0, $switch$split12D = 0, $switch$split132D = 0;
 var $switch$split162D = 0, $switch$split192D = 0, $switch$split222D = 0, $switch$split252D = 0, $switch$split282D = 0, $switch$split2D = 0, $switch$split42D = 0, $switch$split72D = 0, $tobool$i = 0, $tobool$i54 = 0, $tobool4 = 0, $tobool6 = 0, $tobool6$us = 0, $tobool9$1$i = 0, $tobool9$2$i = 0, $v2_head$i = 0, $v2_head$sink$i = 0, $v2_tail$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($gfp|0)==(0|0);
 if ($cmp) {
  $retval$1 = -255;
  return ($retval$1|0);
 }
 $internal_flags = ((($gfp)) + 288|0);
 $0 = HEAP32[$internal_flags>>2]|0;
 $cmp1 = ($0|0)==(0|0);
 if ($cmp1) {
  $retval$1 = -255;
  return ($retval$1|0);
 }
 $v2_head$i = ((($0)) + 85744|0);
 $node$05$i = HEAP32[$v2_head$i>>2]|0;
 $cmp6$i = ($node$05$i|0)==(0|0);
 L7: do {
  if ($cmp6$i) {
   $retval$0$i = 0;
  } else {
   $node$07$i = $node$05$i;
   while(1) {
    $fid$i = ((($node$07$i)) + 4|0);
    $1 = HEAP32[$fid$i>>2]|0;
    $cmp1$i = ($1|0)==($frame_id|0);
    if ($cmp1$i) {
     $retval$0$i = $node$07$i;
     break L7;
    }
    $node$0$i = HEAP32[$node$07$i>>2]|0;
    $cmp$i = ($node$0$i|0)==(0|0);
    if ($cmp$i) {
     $retval$0$i = 0;
     break;
    } else {
     $node$07$i = $node$0$i;
    }
   }
  }
 } while(0);
 $switch$split2D = ($frame_id|0)<(1279872587);
 L12: do {
  if ($switch$split2D) {
   $switch$split12D = ($frame_id|0)<(1162756946);
   if ($switch$split12D) {
    $switch$split72D = ($frame_id|0)<(1095780675);
    if ($switch$split72D) {
     switch ($frame_id|0) {
     case 1095061059:  {
      label = 7;
      break L12;
      break;
     }
     default: {
      $node$1 = $retval$0$i;
      label = 24;
      break L12;
     }
     }
    }
    $switch$split192D = ($frame_id|0)<(1129270605);
    if ($switch$split192D) {
     switch ($frame_id|0) {
     case 1095780675:  {
      label = 7;
      break L12;
      break;
     }
     default: {
      $node$1 = $retval$0$i;
      label = 24;
      break L12;
     }
     }
    } else {
     switch ($frame_id|0) {
     case 1129270605:  {
      label = 7;
      break L12;
      break;
     }
     default: {
      $node$1 = $retval$0$i;
      label = 24;
      break L12;
     }
     }
    }
   } else {
    $switch$split102D = ($frame_id|0)<(1195724610);
    if ($switch$split102D) {
     switch ($frame_id|0) {
     case 1162756946:  {
      label = 7;
      break L12;
      break;
     }
     default: {
      $node$1 = $retval$0$i;
      label = 24;
      break L12;
     }
     }
    }
    $switch$split222D = ($frame_id|0)<(1196575044);
    if ($switch$split222D) {
     switch ($frame_id|0) {
     case 1195724610:  {
      label = 7;
      break L12;
      break;
     }
     default: {
      $node$1 = $retval$0$i;
      label = 24;
      break L12;
     }
     }
    } else {
     switch ($frame_id|0) {
     case 1196575044:  {
      label = 7;
      break L12;
      break;
     }
     default: {
      $node$1 = $retval$0$i;
      label = 24;
      break L12;
     }
     }
    }
   }
  } else {
   $switch$split42D = ($frame_id|0)<(1398361172);
   if ($switch$split42D) {
    $switch$split132D = ($frame_id|0)<(1346588244);
    if ($switch$split132D) {
     switch ($frame_id|0) {
     case 1279872587:  {
      label = 7;
      break L12;
      break;
     }
     default: {
      $node$1 = $retval$0$i;
      label = 24;
      break L12;
     }
     }
    }
    $switch$split252D = ($frame_id|0)<(1347570006);
    if ($switch$split252D) {
     switch ($frame_id|0) {
     case 1346588244:  {
      label = 7;
      break L12;
      break;
     }
     default: {
      $node$1 = $retval$0$i;
      label = 24;
      break L12;
     }
     }
    } else {
     switch ($frame_id|0) {
     case 1347570006:  {
      label = 7;
      break L12;
      break;
     }
     default: {
      $node$1 = $retval$0$i;
      label = 24;
      break L12;
     }
     }
    }
   } else {
    $switch$split162D = ($frame_id|0)<(1415075928);
    if ($switch$split162D) {
     switch ($frame_id|0) {
     case 1398361172:  {
      label = 7;
      break L12;
      break;
     }
     default: {
      $node$1 = $retval$0$i;
      label = 24;
      break L12;
     }
     }
    }
    $switch$split282D = ($frame_id|0)<(1465407576);
    if ($switch$split282D) {
     switch ($frame_id|0) {
     case 1415075928:  {
      label = 7;
      break L12;
      break;
     }
     default: {
      $node$1 = $retval$0$i;
      label = 24;
      break L12;
     }
     }
    } else {
     switch ($frame_id|0) {
     case 1465407576:  {
      label = 7;
      break L12;
      break;
     }
     default: {
      $node$1 = $retval$0$i;
      label = 24;
      break L12;
     }
     }
    }
   }
  }
 } while(0);
 L45: do {
  if ((label|0) == 7) {
   $tobool4 = ($retval$0$i|0)==(0|0);
   if ($tobool4) {
    label = 25;
   } else {
    $tobool$i = ($desc|0)==(0|0);
    if ($tobool$i) {
     $node$0$us = $retval$0$i;
     L49: while(1) {
      $arraydecay$us = ((($node$0$us)) + 8|0);
      $call5$us = (_isSameLang($arraydecay$us,$lang)|0);
      $tobool6$us = ($call5$us|0)==(0);
      if (!($tobool6$us)) {
       $dim$i$us = ((($node$0$us)) + 16|0);
       $2 = HEAP32[$dim$i$us>>2]|0;
       $cmp3$i31$us = ($2|0)==(0);
       if ($cmp3$i31$us) {
        $node$2 = $node$0$us;
        break L45;
       }
      }
      $node$05$i56$us = HEAP32[$node$0$us>>2]|0;
      $cmp6$i57$us = ($node$05$i56$us|0)==(0|0);
      if ($cmp6$i57$us) {
       label = 25;
       break L45;
      } else {
       $node$07$i58$us = $node$05$i56$us;
      }
      while(1) {
       $fid$i59$us = ((($node$07$i58$us)) + 4|0);
       $3 = HEAP32[$fid$i59$us>>2]|0;
       $cmp1$i60$us = ($3|0)==($frame_id|0);
       if ($cmp1$i60$us) {
        $node$0$us = $node$07$i58$us;
        continue L49;
       }
       $node$0$i63$us = HEAP32[$node$07$i58$us>>2]|0;
       $cmp$i64$us = ($node$0$i63$us|0)==(0|0);
       if ($cmp$i64$us) {
        label = 25;
        break L45;
       } else {
        $node$07$i58$us = $node$0$i63$us;
       }
      }
     }
    } else {
     $node$0 = $retval$0$i;
    }
    L57: while(1) {
     $arraydecay = ((($node$0)) + 8|0);
     $call5 = (_isSameLang($arraydecay,$lang)|0);
     $tobool6 = ($call5|0)==(0);
     L59: do {
      if (!($tobool6)) {
       $enc$i = ((($node$0)) + 20|0);
       $4 = HEAP32[$enc$i>>2]|0;
       $cmp$i30 = ($4|0)==(1);
       $dim$i = ((($node$0)) + 16|0);
       $5 = HEAP32[$dim$i>>2]|0;
       $cmp3$i31 = ($5|0)==(0);
       if ($cmp$i30) {
        if ($cmp3$i31) {
         $node$2 = $node$0;
         break L45;
        } else {
         break;
        }
       }
       if ($cmp3$i31) {
        $node$2 = $node$0;
        break L45;
       }
       $l$i = ((($node$0)) + 12|0);
       $$pre13$i = HEAP32[$l$i>>2]|0;
       $i$010$i = 0;
       while(1) {
        $arrayidx$i34 = (($$pre13$i) + ($i$010$i)|0);
        $6 = HEAP8[$arrayidx$i34>>0]|0;
        $arrayidx8$i = (($desc) + ($i$010$i)|0);
        $7 = HEAP8[$arrayidx8$i>>0]|0;
        $cmp10$i = ($6<<24>>24)==($7<<24>>24);
        $inc$i35 = (($i$010$i) + 1)|0;
        if (!($cmp10$i)) {
         break L59;
        }
        $cmp6$i32 = ($inc$i35>>>0)<($5>>>0);
        if ($cmp6$i32) {
         $i$010$i = $inc$i35;
        } else {
         $node$1 = $node$0;
         label = 24;
         break L45;
        }
       }
      }
     } while(0);
     $tobool$i54 = ($node$0|0)!=(0|0);
     $v2_head$sink$i = $tobool$i54 ? $node$0 : $v2_head$i;
     $node$05$i56 = HEAP32[$v2_head$sink$i>>2]|0;
     $cmp6$i57 = ($node$05$i56|0)==(0|0);
     if ($cmp6$i57) {
      label = 25;
      break L45;
     } else {
      $node$07$i58 = $node$05$i56;
     }
     while(1) {
      $fid$i59 = ((($node$07$i58)) + 4|0);
      $8 = HEAP32[$fid$i59>>2]|0;
      $cmp1$i60 = ($8|0)==($frame_id|0);
      if ($cmp1$i60) {
       $node$0 = $node$07$i58;
       continue L57;
      }
      $node$0$i63 = HEAP32[$node$07$i58>>2]|0;
      $cmp$i64 = ($node$0$i63|0)==(0|0);
      if ($cmp$i64) {
       label = 25;
       break L45;
      } else {
       $node$07$i58 = $node$0$i63;
      }
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 24) {
  $cmp15 = ($node$1|0)==(0|0);
  if ($cmp15) {
   label = 25;
  } else {
   $node$2 = $node$1;
  }
 }
 if ((label|0) == 25) {
  $call17 = (_calloc(1,36)|0);
  $cmp18 = ($call17|0)==(0|0);
  if ($cmp18) {
   $retval$1 = -254;
   return ($retval$1|0);
  }
  $v2_tail$i = ((($0)) + 85748|0);
  $9 = HEAP32[$v2_tail$i>>2]|0;
  $cmp$i69 = ($9|0)==(0|0);
  if ($cmp$i69) {
   $nxt$sink$i = $v2_head$i;
  } else {
   $10 = HEAP32[$v2_head$i>>2]|0;
   $cmp1$i70 = ($10|0)==(0|0);
   $$pre$nxt$i = $cmp1$i70 ? $v2_head$i : $9;
   $nxt$sink$i = $$pre$nxt$i;
  }
  HEAP32[$nxt$sink$i>>2] = $call17;
  HEAP32[$v2_tail$i>>2] = $call17;
  $node$2 = $call17;
 }
 $fid = ((($node$2)) + 4|0);
 HEAP32[$fid>>2] = $frame_id;
 $arraydecay24 = ((($node$2)) + 8|0);
 $cmp$i73 = ($lang|0)==(0|0);
 do {
  if ($cmp$i73) {
   label = 31;
  } else {
   $11 = HEAP8[$lang>>0]|0;
   $cmp1$i74 = ($11<<24>>24)==(0);
   if ($cmp1$i74) {
    label = 31;
   } else {
    HEAP8[$arraydecay24>>0] = $11;
    $14 = HEAP8[$lang>>0]|0;
    $tobool9$1$i = ($14<<24>>24)==(0);
    if ($tobool9$1$i) {
     $i$0$lcssa$ph$i = 1;
    } else {
     $arrayidx10$1$i = ((($lang)) + 1|0);
     $15 = HEAP8[$arrayidx10$1$i>>0]|0;
     $arrayidx11$1$i = ((($node$2)) + 9|0);
     HEAP8[$arrayidx11$1$i>>0] = $15;
     $16 = HEAP8[$lang>>0]|0;
     $tobool9$2$i = ($16<<24>>24)==(0);
     if ($tobool9$2$i) {
      $i$0$lcssa$ph$i = 2;
     } else {
      $arrayidx10$2$i = ((($lang)) + 2|0);
      $12 = HEAP8[$arrayidx10$2$i>>0]|0;
      $arrayidx11$2$i = ((($node$2)) + 10|0);
      HEAP8[$arrayidx11$2$i>>0] = $12;
      break;
     }
    }
    $scevgep$i = (((($node$2)) + 8|0) + ($i$0$lcssa$ph$i)|0);
    $13 = $i$0$lcssa$ph$i ^ 3;
    _memset(($scevgep$i|0),32,($13|0))|0;
   }
  }
 } while(0);
 if ((label|0) == 31) {
  HEAP8[$arraydecay24>>0] = 88;
  $arrayidx4$i = ((($node$2)) + 9|0);
  HEAP8[$arrayidx4$i>>0] = 88;
  $arrayidx5$i = ((($node$2)) + 10|0);
  HEAP8[$arrayidx5$i>>0] = 88;
 }
 $l = ((($node$2)) + 12|0);
 $17 = HEAP32[$l>>2]|0;
 _free($17);
 HEAP32[$l>>2] = 0;
 $cmp1$i38 = ($desc|0)==(0|0);
 if ($cmp1$i38) {
  $retval$1$i52 = 0;
 } else {
  $n$0$i40 = 0;
  while(1) {
   $arrayidx$i41 = (($desc) + ($n$0$i40)|0);
   $18 = HEAP8[$arrayidx$i41>>0]|0;
   $cmp3$i42 = ($18<<24>>24)==(0);
   $inc$i43 = (($n$0$i40) + 1)|0;
   if ($cmp3$i42) {
    break;
   } else {
    $n$0$i40 = $inc$i43;
   }
  }
  $cmp5$i45 = ($n$0$i40|0)==(0);
  if ($cmp5$i45) {
   $retval$1$i52 = 0;
  } else {
   $call$i47 = (_calloc($inc$i43,1)|0);
   HEAP32[$l>>2] = $call$i47;
   $cmp8$i48 = ($call$i47|0)==(0|0);
   if ($cmp8$i48) {
    $retval$1$i52 = 0;
   } else {
    _memcpy(($call$i47|0),($desc|0),($n$0$i40|0))|0;
    $arrayidx11$i50 = (($call$i47) + ($n$0$i40)|0);
    HEAP8[$arrayidx11$i50>>0] = 0;
    $retval$1$i52 = $n$0$i40;
   }
  }
 }
 $dim = ((($node$2)) + 16|0);
 HEAP32[$dim>>2] = $retval$1$i52;
 $enc = ((($node$2)) + 20|0);
 HEAP32[$enc>>2] = 0;
 $l29 = ((($node$2)) + 24|0);
 $19 = HEAP32[$l29>>2]|0;
 _free($19);
 HEAP32[$l29>>2] = 0;
 $cmp1$i27 = ($text|0)==(0|0);
 if ($cmp1$i27) {
  $retval$1$i = 0;
 } else {
  $n$0$i = 0;
  while(1) {
   $arrayidx$i = (($text) + ($n$0$i)|0);
   $20 = HEAP8[$arrayidx$i>>0]|0;
   $cmp3$i = ($20<<24>>24)==(0);
   $inc$i = (($n$0$i) + 1)|0;
   if ($cmp3$i) {
    break;
   } else {
    $n$0$i = $inc$i;
   }
  }
  $cmp5$i = ($n$0$i|0)==(0);
  if ($cmp5$i) {
   $retval$1$i = 0;
  } else {
   $call$i = (_calloc($inc$i,1)|0);
   HEAP32[$l29>>2] = $call$i;
   $cmp8$i = ($call$i|0)==(0|0);
   if ($cmp8$i) {
    $retval$1$i = 0;
   } else {
    _memcpy(($call$i|0),($text|0),($n$0$i|0))|0;
    $arrayidx11$i = (($call$i) + ($n$0$i)|0);
    HEAP8[$arrayidx11$i>>0] = 0;
    $retval$1$i = $n$0$i;
   }
  }
 }
 $dim32 = ((($node$2)) + 28|0);
 HEAP32[$dim32>>2] = $retval$1$i;
 $enc34 = ((($node$2)) + 32|0);
 HEAP32[$enc34>>2] = 0;
 $flags = ((($0)) + 85696|0);
 $21 = HEAP32[$flags>>2]|0;
 $or = $21 | 3;
 HEAP32[$flags>>2] = $or;
 $retval$1 = 0;
 return ($retval$1|0);
}
function _isSameLang($l1,$l2) {
 $l1 = $l1|0;
 $l2 = $l2|0;
 var $$ = 0, $$call = 0, $$call$1 = 0, $$call$2 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $arrayidx$1 = 0, $arrayidx$2 = 0, $arrayidx10$1$i = 0, $arrayidx10$2$i = 0, $b$0 = 0, $b$0$1 = 0, $b$0$2 = 0;
 var $call = 0, $call$1 = 0, $call$2 = 0, $call4 = 0, $call4$1 = 0, $call4$2 = 0, $cmp$i = 0, $cmp1$i = 0, $cmp10 = 0, $cmp10$1 = 0, $cmp10$2 = 0, $cmp16 = 0, $cmp16$1 = 0, $cmp16$2 = 0, $cmp16$mask = 0, $cmp16$mask$1 = 0, $cmp16$mask$2 = 0, $cmp16$unshifted = 0, $cmp16$unshifted$1 = 0, $cmp16$unshifted$2 = 0;
 var $cmp7 = 0, $cmp7$1 = 0, $cmp7$2 = 0, $conv = 0, $conv$1 = 0, $conv$2 = 0, $conv3 = 0, $conv3$1 = 0, $conv3$2 = 0, $sext = 0, $sext$1 = 0, $sext$2 = 0, $sext7 = 0, $sext7$1 = 0, $sext7$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp$i = ($l2|0)==(0|0);
 if ($cmp$i) {
  $4 = 88;$6 = 88;$8 = 88;
 } else {
  $0 = HEAP8[$l2>>0]|0;
  $cmp1$i = ($0<<24>>24)==(0);
  if ($cmp1$i) {
   $4 = 88;$6 = 88;$8 = 88;
  } else {
   $arrayidx10$1$i = ((($l2)) + 1|0);
   $1 = HEAP8[$arrayidx10$1$i>>0]|0;
   $arrayidx10$2$i = ((($l2)) + 2|0);
   $2 = HEAP8[$arrayidx10$2$i>>0]|0;
   $4 = $0;$6 = $1;$8 = $2;
  }
 }
 $3 = HEAP8[$l1>>0]|0;
 $conv = $3 << 24 >> 24;
 $call = (_tolower($conv)|0);
 $conv3 = $4 << 24 >> 24;
 $call4 = (_tolower($conv3)|0);
 $sext = $call << 24;
 $cmp7 = ($sext|0)<(536870912);
 $$call = $cmp7 ? 32 : $call;
 $sext7 = $call4 << 24;
 $cmp10 = ($sext7|0)<(536870912);
 $b$0 = $cmp10 ? 32 : $call4;
 $cmp16$unshifted = $b$0 ^ $$call;
 $cmp16$mask = $cmp16$unshifted & 255;
 $cmp16 = ($cmp16$mask|0)==(0);
 if (!($cmp16)) {
  return 0;
 }
 $arrayidx$1 = ((($l1)) + 1|0);
 $5 = HEAP8[$arrayidx$1>>0]|0;
 $conv$1 = $5 << 24 >> 24;
 $call$1 = (_tolower($conv$1)|0);
 $conv3$1 = $6 << 24 >> 24;
 $call4$1 = (_tolower($conv3$1)|0);
 $sext$1 = $call$1 << 24;
 $cmp7$1 = ($sext$1|0)<(536870912);
 $$call$1 = $cmp7$1 ? 32 : $call$1;
 $sext7$1 = $call4$1 << 24;
 $cmp10$1 = ($sext7$1|0)<(536870912);
 $b$0$1 = $cmp10$1 ? 32 : $call4$1;
 $cmp16$unshifted$1 = $b$0$1 ^ $$call$1;
 $cmp16$mask$1 = $cmp16$unshifted$1 & 255;
 $cmp16$1 = ($cmp16$mask$1|0)==(0);
 if ($cmp16$1) {
  $arrayidx$2 = ((($l1)) + 2|0);
  $7 = HEAP8[$arrayidx$2>>0]|0;
  $conv$2 = $7 << 24 >> 24;
  $call$2 = (_tolower($conv$2)|0);
  $conv3$2 = $8 << 24 >> 24;
  $call4$2 = (_tolower($conv3$2)|0);
  $sext$2 = $call$2 << 24;
  $cmp7$2 = ($sext$2|0)<(536870912);
  $$call$2 = $cmp7$2 ? 32 : $call$2;
  $sext7$2 = $call4$2 << 24;
  $cmp10$2 = ($sext7$2|0)<(536870912);
  $b$0$2 = $cmp10$2 ? 32 : $call4$2;
  $cmp16$unshifted$2 = $b$0$2 ^ $$call$2;
  $cmp16$mask$2 = $cmp16$unshifted$2 & 255;
  $cmp16$2 = ($cmp16$mask$2|0)==(0);
  $$ = $cmp16$2&1;
  return ($$|0);
 } else {
  return 0;
 }
 return (0)|0;
}
function _lame_get_id3v2_tag($gfp,$buffer,$size) {
 $gfp = $gfp|0;
 $buffer = $buffer|0;
 $size = $size|0;
 var $$idx$val = 0, $$idx92 = 0, $$idx92$val = 0, $$pre$i$i = 0, $$pre$i$i160 = 0, $$pre$i$i259 = 0, $$pre$i63$i = 0, $$pre$i68$i = 0, $$pre15$i$i = 0, $$pre15$i$i150 = 0, $$pre15$i$i248 = 0, $$pre15$i50$i = 0, $$pre15$i55$i = 0, $$sink$i = 0, $$sink$i172 = 0, $$sink$i230 = 0, $$sink104$i = 0, $0 = 0, $1 = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $add$i = 0, $add$ptr$i$i = 0, $add$ptr$i$i107 = 0, $add$ptr$i$i132 = 0, $add$ptr$i$i217 = 0, $add$ptr$i102$i = 0, $add$ptr$i21$i = 0, $add$ptr$i66$i = 0, $add$ptr$i97$i = 0, $add106 = 0, $add11$i = 0, $add11$i$i = 0, $add15$i = 0, $add15$i$i = 0, $add16$i = 0, $add16$i$i = 0, $add17$i = 0, $add17$i$i = 0, $add20$i = 0;
 var $add21$i = 0, $add21$i$i = 0, $add22$i = 0, $add22$i$i = 0, $add25$i = 0, $add25$i$i = 0, $add4$i = 0, $add4$i$i = 0, $add5$$i = 0, $add5$$i$i = 0, $add5$i = 0, $add5$i$i = 0, $add5$i279 = 0, $add6$i = 0, $add6$i$i = 0, $add70 = 0, $add71 = 0, $add8$i = 0, $add8$i$i = 0, $add9$i = 0;
 var $add9$i$i = 0, $album = 0, $albumart = 0, $albumart_mime$0$ph = 0, $albumart_mime$1 = 0, $albumart_mimetype = 0, $albumart_size = 0, $albumart_size174 = 0, $and = 0, $and$i$lobit = 0, $and$i272$lobit = 0, $and$i93 = 0, $and1$3$i$i = 0, $and1$3$i$i295 = 0, $and124 = 0, $and128 = 0, $and131 = 0, $arrayidx$1$i$i = 0, $arrayidx$1$i$i101 = 0, $arrayidx$1$i$i126 = 0;
 var $arrayidx$1$i$i211 = 0, $arrayidx$1$i19$i = 0, $arrayidx$1$i60$i = 0, $arrayidx$1$i91$i = 0, $arrayidx$1$i96$i = 0, $arrayidx$2$i$i = 0, $arrayidx$2$i$i104 = 0, $arrayidx$2$i$i129 = 0, $arrayidx$2$i$i214 = 0, $arrayidx$2$i20$i = 0, $arrayidx$2$i63$i = 0, $arrayidx$2$i94$i = 0, $arrayidx$2$i99$i = 0, $arrayidx$i = 0, $arrayidx$i$i = 0, $arrayidx$i$i123 = 0, $arrayidx$i$i208 = 0, $arrayidx$i$i98 = 0, $arrayidx$i18$i = 0, $arrayidx$i57$i = 0;
 var $arrayidx$i88$i = 0, $arrayidx$i93$i = 0, $arrayidx11$i = 0, $arrayidx8$i = 0, $artist = 0, $buffer$i = 0, $call10 = 0, $call16 = 0, $call25 = 0, $call34 = 0, $call4$i = 0, $call67 = 0, $call88$pn = 0, $cmp = 0, $cmp$i$i = 0, $cmp$i$i$i = 0, $cmp$i$i$i191 = 0, $cmp$i$i$i239 = 0, $cmp$i$i113 = 0, $cmp$i$i238 = 0;
 var $cmp$i$i32$i = 0, $cmp$i$i32$i145 = 0, $cmp$i$i37$i = 0, $cmp$i119 = 0, $cmp$i203 = 0, $cmp$i24$i = 0, $cmp$i281 = 0, $cmp$i31$i = 0, $cmp$i36$i = 0, $cmp$i96 = 0, $cmp1 = 0, $cmp1$i$i = 0, $cmp108 = 0, $cmp11$i = 0, $cmp11$i139 = 0, $cmp112 = 0, $cmp12$i = 0, $cmp12$i$i = 0, $cmp13$i = 0, $cmp13$i$i = 0;
 var $cmp137 = 0, $cmp14$i = 0, $cmp143 = 0, $cmp2$i = 0, $cmp28$i = 0, $cmp29$i = 0, $cmp3$3$i$i = 0, $cmp3$3$i$i296 = 0, $cmp30$i = 0, $cmp38 = 0, $cmp39 = 0, $cmp4$i = 0, $cmp4$i135 = 0, $cmp4$i221 = 0, $cmp4$i314 = 0, $cmp41 = 0, $cmp43 = 0, $cmp52 = 0, $cmp6$i = 0, $cmp7$i = 0;
 var $cmp75 = 0, $cmp79 = 0, $comment = 0, $cond = 0, $cond$i$i = 0, $cond$i$i116 = 0, $cond$i$i199 = 0, $cond$i277 = 0, $cond$i284 = 0, $cond$i302 = 0, $cond1$i = 0, $cond1$i$i = 0, $cond1$i$i202 = 0, $cond1$i306 = 0, $cond19 = 0, $cond28 = 0, $cond37 = 0, $conv = 0.0, $conv$1$i$i = 0, $conv$1$i$i100 = 0;
 var $conv$1$i$i125 = 0, $conv$1$i$i210 = 0, $conv$1$i59$i = 0, $conv$1$i90$i = 0, $conv$1$i95$i = 0, $conv$2$i$i = 0, $conv$2$i$i103 = 0, $conv$2$i$i128 = 0, $conv$2$i$i213 = 0, $conv$2$i62$i = 0, $conv$2$i93$i = 0, $conv$2$i98$i = 0, $conv$3$i$i = 0, $conv$3$i$i106 = 0, $conv$3$i$i131 = 0, $conv$3$i$i216 = 0, $conv$3$i101$i = 0, $conv$3$i65$i = 0, $conv$3$i96$i = 0, $conv$i = 0;
 var $conv$i$i = 0, $conv$i$i122 = 0, $conv$i$i207 = 0, $conv$i$i97 = 0, $conv$i137 = 0, $conv$i222 = 0, $conv$i313 = 0.0, $conv$i56$i = 0, $conv$i87$i = 0, $conv$i92$i = 0, $conv1$us$i$i = 0, $conv1$us$i$i153 = 0, $conv1$us$i$i252 = 0, $conv1$us$i43$i = 0, $conv1$us$i48$i = 0, $conv121 = 0, $conv125 = 0, $conv129 = 0, $conv13$i$i = 0, $conv13$us$i$i = 0;
 var $conv132 = 0, $conv5$us$i$i = 0, $conv5$us$i$i156 = 0, $conv5$us$i$i255 = 0, $conv5$us$i46$i = 0, $conv5$us$i51$i = 0, $conv8$i = 0, $data$addr$024$i = 0, $dec$i = 0, $dec$i$i = 0, $dec$i$i190 = 0, $dec$i$i263 = 0, $dec$i112$i = 0, $dec$i117$i = 0, $dec$i26$i = 0, $dec$i26$i182 = 0, $dec$i31$i = 0, $dec$i36$i = 0, $dec$i3680$i = 0, $dec$i47$i = 0;
 var $dec$i57$i = 0, $dec$i57126$i = 0, $dec$i62$i = 0, $dec$i62131$i = 0, $dec$i78$i = 0, $dec$i83$i = 0, $dec$us$i$i = 0, $dec$us$i$i151 = 0, $dec$us$i$i249 = 0, $dec$us$i100$i = 0, $dec$us$i105$i = 0, $dec$us$i105$i240 = 0, $dec$us$i110$i = 0, $dec$us$i40$i = 0, $dec$us$i40114$i = 0, $dec$us$i40119$i = 0, $dec$us$i45$i = 0, $dec$us$i45119$i = 0, $dec$us$i45124$i = 0, $dec$us$i68$i = 0;
 var $dec$us$i73$i = 0, $dec2$i$i = 0, $dec2$us$i$i = 0, $dim$i = 0, $dim$i$i = 0, $dim11$i = 0, $dim11$i$i = 0, $dim12$i = 0, $dim12$i$i = 0, $dim18$i = 0, $dim18$i$i = 0, $dim7$i = 0, $dim7$i$i = 0, $div$i = 0.0, $dsc$i = 0, $enc$i = 0, $enc$i$i = 0, $enc$i$i115 = 0, $enc$i$i198 = 0, $enc$i276 = 0;
 var $enc$i283 = 0, $enc$i301 = 0, $enc10$i = 0, $enc10$i$i = 0, $enc10$i305 = 0, $enc16$i = 0, $enc16$i$i = 0, $enc27$i = 0, $extract$t21$i$i = 0, $extract$t21$i$i161 = 0, $extract$t21$i$i260 = 0, $extract$t21$i64$i = 0, $extract$t21$i69$i = 0, $extract$t22$i$i = 0, $extract$t22$i$i148 = 0, $extract$t22$i$i244 = 0, $extract$t22$i33$i = 0, $extract$t22$i38$i = 0, $extract$t24$i$i = 0, $extract$t24$i$i163 = 0;
 var $extract$t24$i$i262 = 0, $extract$t24$i66$i = 0, $extract$t24$i71$i = 0, $extract$t26$i$i = 0, $extract$t26$i$i147 = 0, $extract$t26$i$i243 = 0, $extract$t26$i35$i = 0, $extract$t26$i40$i = 0, $extract23$i$i = 0, $extract23$i$i162 = 0, $extract23$i$i261 = 0, $extract23$i65$i = 0, $extract23$i70$i = 0, $extract25$i$i = 0, $extract25$i$i146 = 0, $extract25$i$i242 = 0, $extract25$i34$i = 0, $extract25$i39$i = 0, $fid = 0, $fid146 = 0;
 var $flags2$i$i = 0, $frame$addr$0$i = 0, $frame$addr$0$i171 = 0, $frame$addr$0$i229 = 0, $frame$addr$0$lcssa$i = 0, $frame$addr$0$lcssa$i54$i = 0, $frame$addr$0$lcssa$i90$i = 0, $frame$addr$012$i111$i = 0, $frame$addr$012$i116$i = 0, $frame$addr$012$i54125$i = 0, $frame$addr$012$i59130$i = 0, $frame$addr$012$i79$i = 0, $frame$addr$012$us$i104$i = 0, $frame$addr$012$us$i109$i = 0, $frame$addr$012$us$i37118$i = 0, $frame$addr$012$us$i42123$i = 0, $frame$addr$012$us$i72$i = 0, $frame$addr$018$i$i = 0, $frame$addr$018$us$i$i = 0, $frame$addr$027$i = 0;
 var $frame$addr$03$i$i = 0, $frame$addr$03$i$i181 = 0, $frame$addr$03$i$i235 = 0, $frame$addr$03$i46$i = 0, $frame$addr$03$i77$i = 0, $frame$addr$03$i82$i = 0, $frame$addr$1$i = 0, $frame$addr$1$i$i = 0, $frame$addr$1$i174 = 0, $frame$addr$1$i41$i = 0, $frame$addr$1$i77$i = 0, $frame$addr$1$us$i$i = 0, $frame$addr$123$i = 0, $incdec$ptr = 0, $incdec$ptr$i = 0, $incdec$ptr$i$i = 0, $incdec$ptr$i$i189 = 0, $incdec$ptr$i$i264 = 0, $incdec$ptr$i108 = 0, $incdec$ptr$i113$i = 0;
 var $incdec$ptr$i118$i = 0, $incdec$ptr$i133 = 0, $incdec$ptr$i218 = 0, $incdec$ptr$i27$i = 0, $incdec$ptr$i27$i183 = 0, $incdec$ptr$i32$i = 0, $incdec$ptr$i37$i = 0, $incdec$ptr$i3781$i = 0, $incdec$ptr$i48$i = 0, $incdec$ptr$i58$i = 0, $incdec$ptr$i58127$i = 0, $incdec$ptr$i63$i = 0, $incdec$ptr$i63132$i = 0, $incdec$ptr$i79$i = 0, $incdec$ptr$i84$i = 0, $incdec$ptr$us$i$i = 0, $incdec$ptr$us$i$i152 = 0, $incdec$ptr$us$i$i250 = 0, $incdec$ptr$us$i101$i = 0, $incdec$ptr$us$i106$i = 0;
 var $incdec$ptr$us$i106$i241 = 0, $incdec$ptr$us$i111$i = 0, $incdec$ptr$us$i41$i = 0, $incdec$ptr$us$i41115$i = 0, $incdec$ptr$us$i41120$i = 0, $incdec$ptr$us$i46$i = 0, $incdec$ptr$us$i46120$i = 0, $incdec$ptr$us$i46125$i = 0, $incdec$ptr$us$i69$i = 0, $incdec$ptr$us$i74$i = 0, $incdec$ptr1$i$i = 0, $incdec$ptr1$i$i184 = 0, $incdec$ptr1$i$i236 = 0, $incdec$ptr1$i49$i = 0, $incdec$ptr1$i80$i = 0, $incdec$ptr1$i85$i = 0, $incdec$ptr10$i = 0, $incdec$ptr11$i = 0, $incdec$ptr116 = 0, $incdec$ptr117 = 0;
 var $incdec$ptr118 = 0, $incdec$ptr119 = 0, $incdec$ptr12$i = 0, $incdec$ptr12$i224 = 0, $incdec$ptr120 = 0, $incdec$ptr122 = 0, $incdec$ptr126 = 0, $incdec$ptr13$i = 0, $incdec$ptr130 = 0, $incdec$ptr133 = 0, $incdec$ptr14$i = 0, $incdec$ptr18$i = 0, $incdec$ptr18$i110 = 0, $incdec$ptr18$i143 = 0, $incdec$ptr19$i = 0, $incdec$ptr2$i$i = 0, $incdec$ptr2$i$i164 = 0, $incdec$ptr2$i$i265 = 0, $incdec$ptr2$i59$i = 0, $incdec$ptr2$i64$i = 0;
 var $incdec$ptr2$us$i$i = 0, $incdec$ptr2$us$i$i154 = 0, $incdec$ptr2$us$i$i253 = 0, $incdec$ptr2$us$i102$i = 0, $incdec$ptr2$us$i107$i = 0, $incdec$ptr2$us$i44$i = 0, $incdec$ptr2$us$i44116$i = 0, $incdec$ptr2$us$i49$i = 0, $incdec$ptr2$us$i49121$i = 0, $incdec$ptr2$us$i70$i = 0, $incdec$ptr20$i = 0, $incdec$ptr24$i = 0, $incdec$ptr24$i169 = 0, $incdec$ptr25$i = 0, $incdec$ptr25$i170 = 0, $incdec$ptr26$i = 0, $incdec$ptr27$i = 0, $incdec$ptr3$i = 0, $incdec$ptr3$i134 = 0, $incdec$ptr3$i219 = 0;
 var $incdec$ptr4$i$i = 0, $incdec$ptr4$us$i$i = 0, $incdec$ptr5$i = 0, $incdec$ptr5$i223 = 0, $incdec$ptr6$i = 0, $incdec$ptr6$i$i = 0, $incdec$ptr6$i$i159 = 0, $incdec$ptr6$i$i258 = 0, $incdec$ptr6$i62$i = 0, $incdec$ptr6$i67$i = 0, $incdec$ptr6$us$i$i = 0, $incdec$ptr6$us$i$i149 = 0, $incdec$ptr6$us$i$i247 = 0, $incdec$ptr6$us$i49$i = 0, $incdec$ptr6$us$i54$i = 0, $incdec$ptr7$i = 0, $incdec$ptr8$i = 0, $incdec$ptr8$i138 = 0, $incdec$ptr9$i = 0, $internal_flags = 0;
 var $mimetype$addr$028$i = 0, $mul$i = 0, $mul$i$i = 0, $mul$i$i200 = 0, $mul$i303 = 0, $mul$i312 = 0.0, $mul19$i = 0, $mul19$i$i = 0, $mul21$i = 0, $mul21$i$i = 0, $n$0$i = 0, $n$0$i$i = 0, $n$0$i$i201 = 0, $n$0$i304 = 0, $n$1$i = 0, $n$1$i$i = 0, $n$1$i$i118 = 0, $n$2$i$i = 0, $n$addr$0$ph22$i$i = 0, $n$addr$016$i$i = 0;
 var $n$addr$016$us$i$i = 0, $n$addr$05$i$i = 0, $n$addr$05$i$i179 = 0, $n$addr$05$i$i233 = 0, $n$addr$05$i44$i = 0, $n$addr$05$i75$i = 0, $n$addr$05$i80$i = 0, $node$0334 = 0, $node140$0330 = 0, $notlhs = 0, $notrhs = 0, $notrhs323 = 0, $notrhs326 = 0, $num_samples = 0, $or$cond = 0, $or$cond1$i = 0, $or$cond2 = 0, $or$cond3 = 0, $or$cond320 = 0, $or$cond4$not = 0;
 var $p$0329 = 0, $p$1 = 0, $p$2 = 0, $p$3 = 0, $padding_size = 0, $playlength_ms$0$i = 0, $ptr$i = 0, $ptr$i140 = 0, $rev$i$c$i$off$i$i = 0, $rev$i$c$i$off$us$i$i = 0, $rev$i$i$us$i$i = 0, $rev$i$i$us$i$i192 = 0, $rev$i$i$us$i$i251 = 0, $rev$i$i$us$i34$i = 0, $rev$i$i$us$i42$i = 0, $rev$i$i$us$i47$i = 0, $samplerate_in$i = 0, $scevgep$i = 0, $scevgep$i$i = 0, $scevgep$i$i193 = 0;
 var $scevgep$i$i267 = 0, $scevgep$i30$i = 0, $scevgep$i30$i187 = 0, $scevgep$i35$i = 0, $scevgep$i40$i = 0, $scevgep$i52$i = 0, $scevgep$i68$i = 0, $scevgep$i73$i = 0, $scevgep$i83$i = 0, $scevgep$i88$i = 0, $scevgep14$i$i = 0, $scevgep14$i$i167 = 0, $scevgep14$i$i269 = 0, $scevgep14$i75$i = 0, $scevgep20$i$i = 0, $shr = 0, $shr$1$i$i = 0, $shr$1$i$i102 = 0, $shr$1$i$i127 = 0, $shr$1$i$i212 = 0;
 var $shr$1$i61$i = 0, $shr$1$i92$i = 0, $shr$1$i97$i = 0, $shr$2$i$i = 0, $shr$2$i$i105 = 0, $shr$2$i$i130 = 0, $shr$2$i$i215 = 0, $shr$2$i100$i = 0, $shr$2$i64$i = 0, $shr$2$i95$i = 0, $shr$i$i = 0, $shr$i$i124 = 0, $shr$i$i209 = 0, $shr$i$i99 = 0, $shr$i58$i = 0, $shr$i89$i = 0, $shr$i94$i = 0, $shr123 = 0, $shr127 = 0, $shr8$us$i$i = 0;
 var $shr8$us$i$i155 = 0, $shr8$us$i$i254 = 0, $shr8$us$i45$i = 0, $shr8$us$i50$i = 0, $size$addr$025$i = 0, $storemerge$i$i = 0, $storemerge$us$i$i = 0, $str$addr$0$ph23$i$i = 0, $str$addr$017$i$i = 0, $str$addr$017$us$i$i = 0, $str$addr$04$i$i = 0, $str$addr$04$i$i180 = 0, $str$addr$04$i$i234 = 0, $str$addr$04$i45$i = 0, $str$addr$04$i76$i = 0, $str$addr$04$i81$i = 0, $sub = 0, $sub$i = 0, $sub$i$i = 0, $sub$i121 = 0;
 var $sub$i206 = 0, $sub$i287 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub90 = 0, $sub177 = 0, $switch$split12D = 0, $switch$split2D = 0, $tag_size$0 = 0, $tag_size$1333 = 0, $tag_size$2 = 0, $tag_size$3 = 0, $tag_size$4 = 0, $title = 0, $tobool = 0, $tobool$i25$i = 0, $tobool$i25110$i = 0, $tobool$i28$i = 0, $tobool$i28$i185 = 0, $tobool$i30$i = 0;
 var $tobool$i30115$i = 0, $tobool$i33$i = 0, $tobool$i38$i = 0, $tobool$i3878$i = 0, $tobool$i50$i = 0, $tobool$i60$i = 0, $tobool$i60124$i = 0, $tobool$i65$i = 0, $tobool$i65129$i = 0, $tobool$i81$i = 0, $tobool$i86$i = 0, $tobool$us$i$i = 0, $tobool$us$i$i157 = 0, $tobool$us$i$i256 = 0, $tobool$us$i103$i = 0, $tobool$us$i108$i = 0, $tobool$us$i47$i = 0, $tobool$us$i47117$i = 0, $tobool$us$i52$i = 0, $tobool$us$i52122$i = 0;
 var $tobool$us$i71$i = 0, $tobool1$i = 0, $tobool103 = 0, $tobool12 = 0, $tobool158 = 0, $tobool16$i = 0, $tobool169 = 0, $tobool2$i$i = 0, $tobool2$i$i177 = 0, $tobool2$i$i232 = 0, $tobool2$i43$i = 0, $tobool2$i79$i = 0, $tobool21 = 0, $tobool3$i = 0, $tobool3$i$i = 0, $tobool3$us$i$i = 0, $tobool30 = 0, $tobool315$i$i = 0, $tobool50 = 0, $tobool57 = 0;
 var $tobool60 = 0, $tobool7 = 0, $tobool9$i = 0, $tobool92 = 0, $tobool926$i = 0, $track_id3v1 = 0, $txt$i = 0, $txt$i175 = 0, $txt$i220 = 0, $v2_head = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040|0;
 $vararg_buffer = sp;
 $buffer$i = sp + 8|0;
 $cmp = ($gfp|0)==(0|0);
 if ($cmp) {
  $103 = 0;
  STACKTOP = sp;return ($103|0);
 }
 $internal_flags = ((($gfp)) + 288|0);
 $0 = HEAP32[$internal_flags>>2]|0;
 $cmp1 = ($0|0)==(0|0);
 if ($cmp1) {
  $103 = 0;
  STACKTOP = sp;return ($103|0);
 }
 $$idx92 = ((($0)) + 85696|0);
 $$idx92$val = HEAP32[$$idx92>>2]|0;
 $and$i$lobit = $$idx92$val & 4;
 $tobool = ($and$i$lobit|0)==(0);
 if (!($tobool)) {
  $103 = 0;
  STACKTOP = sp;return ($103|0);
 }
 $and$i93 = $$idx92$val & 10;
 $title = ((($0)) + 85704|0);
 $1 = HEAP32[$title>>2]|0;
 $tobool7 = ($1|0)==(0|0);
 if ($tobool7) {
  $cond = 0;
 } else {
  $call10 = (_strlen($1)|0);
  $cond = $call10;
 }
 $artist = ((($0)) + 85708|0);
 $2 = HEAP32[$artist>>2]|0;
 $tobool12 = ($2|0)==(0|0);
 if ($tobool12) {
  $cond19 = 0;
 } else {
  $call16 = (_strlen($2)|0);
  $cond19 = $call16;
 }
 $album = ((($0)) + 85712|0);
 $3 = HEAP32[$album>>2]|0;
 $tobool21 = ($3|0)==(0|0);
 if ($tobool21) {
  $cond28 = 0;
 } else {
  $call25 = (_strlen($3)|0);
  $cond28 = $call25;
 }
 $comment = ((($0)) + 85716|0);
 $4 = HEAP32[$comment>>2]|0;
 $tobool30 = ($4|0)==(0|0);
 if ($tobool30) {
  $cond37 = 0;
 } else {
  $call34 = (_strlen($4)|0);
  $cond37 = $call34;
 }
 $cmp38 = ($cond>>>0)>(30);
 $cmp39 = ($cond19>>>0)>(30);
 $or$cond = $cmp38 | $cmp39;
 $cmp41 = ($cond28>>>0)>(30);
 $or$cond2 = $or$cond | $cmp41;
 $cmp43 = ($cond37>>>0)>(30);
 $or$cond3 = $or$cond2 | $cmp43;
 if (!($or$cond3)) {
  $track_id3v1 = ((($0)) + 85720|0);
  $5 = HEAP32[$track_id3v1>>2]|0;
  $notlhs = ($5|0)==(0);
  $notrhs = ($cond37>>>0)<(29);
  $or$cond4$not = $notrhs | $notlhs;
  $tobool50 = ($and$i93|0)==(0);
  $or$cond320 = $tobool50 & $or$cond4$not;
  if ($or$cond320) {
   $103 = 0;
   STACKTOP = sp;return ($103|0);
  }
 }
 $num_samples = ((($gfp)) + 4|0);
 $6 = HEAP32[$num_samples>>2]|0;
 $cmp52 = ($6|0)==(-1);
 if (!($cmp52)) {
  $conv = (+($6>>>0));
  $mul$i312 = $conv * 1000.0;
  $samplerate_in$i = ((($0)) + 60|0);
  $7 = HEAP32[$samplerate_in$i>>2]|0;
  $conv$i313 = (+($7|0));
  $div$i = $mul$i312 / $conv$i313;
  $cmp2$i = $div$i > 4294967295.0;
  if ($cmp2$i) {
   $playlength_ms$0$i = -1;
  } else {
   $cmp4$i314 = $div$i < 0.0;
   if ($cmp4$i314) {
    $playlength_ms$0$i = 0;
   } else {
    $conv8$i = (~~(($div$i))>>>0);
    $playlength_ms$0$i = $conv8$i;
   }
  }
  HEAP32[$vararg_buffer>>2] = $playlength_ms$0$i;
  (_sprintf($buffer$i,15408,$vararg_buffer)|0);
  $8 = HEAP32[$internal_flags>>2]|0;
  $cmp1$i$i = ($8|0)==(0|0);
  $flags2$i$i = ((($8)) + 85696|0);
  if (!($cmp1$i$i)) {
   $9 = HEAP32[$flags2$i$i>>2]|0;
   (_id3v2_add_latin1($gfp,1414284622,15404,0,$buffer$i)|0);
   HEAP32[$flags2$i$i>>2] = $9;
  }
 }
 $albumart = ((($0)) + 85728|0);
 $10 = HEAP32[$albumart>>2]|0;
 $tobool57 = ($10|0)==(0|0);
 L36: do {
  if ($tobool57) {
   $albumart_mime$1 = 0;$tag_size$0 = 10;
  } else {
   $albumart_size = ((($0)) + 85732|0);
   $11 = HEAP32[$albumart_size>>2]|0;
   $tobool60 = ($11|0)==(0);
   if ($tobool60) {
    $albumart_mime$1 = 0;$tag_size$0 = 10;
   } else {
    $albumart_mimetype = ((($0)) + 85740|0);
    $12 = HEAP32[$albumart_mimetype>>2]|0;
    switch ($12|0) {
    case 1:  {
     $albumart_mime$0$ph = 15432;
     break;
    }
    case 2:  {
     $albumart_mime$0$ph = 15412;
     break;
    }
    case 3:  {
     $albumart_mime$0$ph = 15422;
     break;
    }
    default: {
     $albumart_mime$1 = 0;$tag_size$0 = 10;
     break L36;
    }
    }
    $call67 = (_strlen($albumart_mime$0$ph)|0);
    $add70 = (($call67) + 24)|0;
    $add71 = (($add70) + ($11))|0;
    $albumart_mime$1 = $albumart_mime$0$ph;$tag_size$0 = $add71;
   }
  }
 } while(0);
 $v2_head = ((($0)) + 85744|0);
 $13 = HEAP32[$v2_head>>2]|0;
 $cmp75 = ($13|0)==(0|0);
 if ($cmp75) {
  $tag_size$3 = $tag_size$0;
 } else {
  $node$0334 = $13;$tag_size$1333 = $tag_size$0;
  while(1) {
   $fid = ((($node$0334)) + 4|0);
   $14 = HEAP32[$fid>>2]|0;
   $switch$split2D = ($14|0)<(1431520594);
   if ($switch$split2D) {
    switch ($14|0) {
    case 1129270605:  {
     label = 29;
     break;
    }
    default: {
     label = 32;
    }
    }
   } else {
    switch ($14|0) {
    case 1431520594:  {
     label = 29;
     break;
    }
    default: {
     label = 32;
    }
    }
   }
   do {
    if ((label|0) == 29) {
     label = 0;
     $enc$i301 = ((($node$0334)) + 20|0);
     $15 = HEAP32[$enc$i301>>2]|0;
     $cond$i302 = ($15|0)==(1);
     $dim7$i = ((($node$0334)) + 16|0);
     $16 = HEAP32[$dim7$i>>2]|0;
     $mul$i303 = $16 << 1;
     $add9$i = (($mul$i303) + 16)|0;
     $add4$i = (($16) + 15)|0;
     $n$0$i304 = $cond$i302 ? $add9$i : $add4$i;
     $enc10$i305 = ((($node$0334)) + 32|0);
     $17 = HEAP32[$enc10$i305>>2]|0;
     $cond1$i306 = ($17|0)==(1);
     $dim18$i = ((($node$0334)) + 28|0);
     $18 = HEAP32[$dim18$i>>2]|0;
     if ($cond1$i306) {
      $mul19$i = $18 << 1;
      $add20$i = (($n$0$i304) + ($mul19$i))|0;
      $call88$pn = $add20$i;
      break;
     } else {
      $add15$i = (($n$0$i304) + ($18))|0;
      $call88$pn = $add15$i;
      break;
     }
    }
    else if ((label|0) == 32) {
     label = 0;
     $and1$3$i$i295 = $14 & -16777216;
     $cmp3$3$i$i296 = ($and1$3$i$i295|0)==(1459617792);
     $notrhs323 = ($and1$3$i$i295|0)!=(0);
     $tobool92 = $cmp3$3$i$i296 ^ $notrhs323;
     if ($tobool92) {
      $enc$i276 = ((($node$0334)) + 32|0);
      $23 = HEAP32[$enc$i276>>2]|0;
      $cond$i277 = ($23|0)==(1);
      $dim11$i = ((($node$0334)) + 16|0);
      $24 = HEAP32[$dim11$i>>2]|0;
      $cmp12$i = ($24|0)!=(0);
      $25 = ((($node$0334)) + 28|0);
      $26 = HEAP32[$25>>2]|0;
      if ($cond$i277) {
       $add16$i = $24 << 1;
       $add17$i = (($add16$i) + 13)|0;
       $n$1$i = $cmp12$i ? $add17$i : 11;
       $mul21$i = $26 << 1;
       $add22$i = (($n$1$i) + ($mul21$i))|0;
       $call88$pn = $add22$i;
       break;
      } else {
       $add5$i279 = (($24) + 12)|0;
       $add5$$i = $cmp12$i ? $add5$i279 : 11;
       $add8$i = (($add5$$i) + ($26))|0;
       $call88$pn = $add8$i;
       break;
      }
     }
     $dim$i = ((($node$0334)) + 16|0);
     $19 = HEAP32[$dim$i>>2]|0;
     $cmp$i281 = ($19|0)==(0);
     do {
      if ($cmp$i281) {
       $n$0$i = 10;
      } else {
       $enc$i283 = ((($node$0334)) + 20|0);
       $20 = HEAP32[$enc$i283>>2]|0;
       $cond$i284 = ($20|0)==(1);
       if ($cond$i284) {
        $mul$i = $19 << 1;
        $add11$i = (($mul$i) + 13)|0;
        $n$0$i = $add11$i;
        break;
       } else {
        $add6$i = (($19) + 12)|0;
        $n$0$i = $add6$i;
        break;
       }
      }
     } while(0);
     $dim12$i = ((($node$0334)) + 28|0);
     $21 = HEAP32[$dim12$i>>2]|0;
     $cmp13$i = ($21|0)==(0);
     if ($cmp13$i) {
      $call88$pn = $n$0$i;
     } else {
      $enc16$i = ((($node$0334)) + 32|0);
      $22 = HEAP32[$enc16$i>>2]|0;
      $cond1$i = ($22|0)==(1);
      if ($cond1$i) {
       $sub$i287 = (($n$0$i) + -1)|0;
       $add25$i = (($sub$i287) + ($21))|0;
       $call88$pn = $add25$i;
       break;
      } else {
       $add21$i = (($21) + ($n$0$i))|0;
       $call88$pn = $add21$i;
       break;
      }
     }
    }
   } while(0);
   $tag_size$2 = (($call88$pn) + ($tag_size$1333))|0;
   $27 = HEAP32[$node$0334>>2]|0;
   $cmp79 = ($27|0)==(0|0);
   if ($cmp79) {
    $tag_size$3 = $tag_size$2;
    break;
   } else {
    $node$0334 = $27;$tag_size$1333 = $tag_size$2;
   }
  }
 }
 $$idx$val = HEAP32[$$idx92>>2]|0;
 $and$i272$lobit = $$idx$val & 32;
 $tobool103 = ($and$i272$lobit|0)==(0);
 if ($tobool103) {
  $tag_size$4 = $tag_size$3;
 } else {
  $padding_size = ((($0)) + 85736|0);
  $28 = HEAP32[$padding_size>>2]|0;
  $add106 = (($28) + ($tag_size$3))|0;
  $tag_size$4 = $add106;
 }
 $cmp108 = ($tag_size$4>>>0)>($size>>>0);
 if ($cmp108) {
  $103 = $tag_size$4;
  STACKTOP = sp;return ($103|0);
 }
 $cmp112 = ($buffer|0)==(0|0);
 if ($cmp112) {
  $103 = 0;
  STACKTOP = sp;return ($103|0);
 }
 $incdec$ptr = ((($buffer)) + 1|0);
 HEAP8[$buffer>>0] = 73;
 $incdec$ptr116 = ((($buffer)) + 2|0);
 HEAP8[$incdec$ptr>>0] = 68;
 $incdec$ptr117 = ((($buffer)) + 3|0);
 HEAP8[$incdec$ptr116>>0] = 51;
 $incdec$ptr118 = ((($buffer)) + 4|0);
 HEAP8[$incdec$ptr117>>0] = 3;
 $incdec$ptr119 = ((($buffer)) + 5|0);
 HEAP8[$incdec$ptr118>>0] = 0;
 $incdec$ptr120 = ((($buffer)) + 6|0);
 HEAP8[$incdec$ptr119>>0] = 0;
 $sub = (($tag_size$4) + -10)|0;
 $shr = $sub >>> 21;
 $and = $shr & 127;
 $conv121 = $and&255;
 $incdec$ptr122 = ((($buffer)) + 7|0);
 HEAP8[$incdec$ptr120>>0] = $conv121;
 $shr123 = $sub >>> 14;
 $and124 = $shr123 & 127;
 $conv125 = $and124&255;
 $incdec$ptr126 = ((($buffer)) + 8|0);
 HEAP8[$incdec$ptr122>>0] = $conv125;
 $shr127 = $sub >>> 7;
 $and128 = $shr127 & 127;
 $conv129 = $and128&255;
 $incdec$ptr130 = ((($buffer)) + 9|0);
 HEAP8[$incdec$ptr126>>0] = $conv129;
 $and131 = $sub & 127;
 $conv132 = $and131&255;
 $incdec$ptr133 = ((($buffer)) + 10|0);
 HEAP8[$incdec$ptr130>>0] = $conv132;
 $29 = HEAP32[$v2_head>>2]|0;
 $cmp137 = ($29|0)==(0|0);
 if ($cmp137) {
  $p$2 = $incdec$ptr133;
 } else {
  $node140$0330 = $29;$p$0329 = $incdec$ptr133;
  while(1) {
   $fid146 = ((($node140$0330)) + 4|0);
   $30 = HEAP32[$fid146>>2]|0;
   $switch$split12D = ($30|0)<(1431520594);
   if ($switch$split12D) {
    switch ($30|0) {
    case 1129270605:  {
     label = 51;
     break;
    }
    default: {
     label = 80;
    }
    }
   } else {
    switch ($30|0) {
    case 1431520594:  {
     label = 51;
     break;
    }
    default: {
     label = 80;
    }
    }
   }
   L89: do {
    if ((label|0) == 51) {
     label = 0;
     $enc$i$i198 = ((($node140$0330)) + 20|0);
     $31 = HEAP32[$enc$i$i198>>2]|0;
     $cond$i$i199 = ($31|0)==(1);
     $dim7$i$i = ((($node140$0330)) + 16|0);
     $32 = HEAP32[$dim7$i$i>>2]|0;
     $mul$i$i200 = $32 << 1;
     $add9$i$i = (($mul$i$i200) + 16)|0;
     $add4$i$i = (($32) + 15)|0;
     $n$0$i$i201 = $cond$i$i199 ? $add9$i$i : $add4$i$i;
     $enc10$i$i = ((($node140$0330)) + 32|0);
     $33 = HEAP32[$enc10$i$i>>2]|0;
     $cond1$i$i202 = ($33|0)==(1);
     $dim18$i$i = ((($node140$0330)) + 28|0);
     $34 = HEAP32[$dim18$i$i>>2]|0;
     $mul19$i$i = $cond1$i$i202&1;
     $$sink104$i = $34 << $mul19$i$i;
     $add15$i$i = (($$sink104$i) + ($n$0$i$i201))|0;
     $cmp$i203 = ($add15$i$i>>>0)>(10);
     if ($cmp$i203) {
      $conv$i92$i = $30&255;
      $arrayidx$i93$i = ((($p$0329)) + 3|0);
      HEAP8[$arrayidx$i93$i>>0] = $conv$i92$i;
      $shr$i94$i = $30 >>> 8;
      $conv$1$i95$i = $shr$i94$i&255;
      $arrayidx$1$i96$i = ((($p$0329)) + 2|0);
      HEAP8[$arrayidx$1$i96$i>>0] = $conv$1$i95$i;
      $shr$1$i97$i = $30 >>> 16;
      $conv$2$i98$i = $shr$1$i97$i&255;
      $arrayidx$2$i99$i = ((($p$0329)) + 1|0);
      HEAP8[$arrayidx$2$i99$i>>0] = $conv$2$i98$i;
      $shr$2$i100$i = $30 >>> 24;
      $conv$3$i101$i = $shr$2$i100$i&255;
      HEAP8[$p$0329>>0] = $conv$3$i101$i;
      $add$ptr$i102$i = ((($p$0329)) + 4|0);
      $sub$i206 = (($add15$i$i) + -10)|0;
      $conv$i$i207 = $sub$i206&255;
      $arrayidx$i$i208 = ((($p$0329)) + 7|0);
      HEAP8[$arrayidx$i$i208>>0] = $conv$i$i207;
      $shr$i$i209 = $sub$i206 >>> 8;
      $conv$1$i$i210 = $shr$i$i209&255;
      $arrayidx$1$i$i211 = ((($p$0329)) + 6|0);
      HEAP8[$arrayidx$1$i$i211>>0] = $conv$1$i$i210;
      $shr$1$i$i212 = $sub$i206 >>> 16;
      $conv$2$i$i213 = $shr$1$i$i212&255;
      $arrayidx$2$i$i214 = ((($p$0329)) + 5|0);
      HEAP8[$arrayidx$2$i$i214>>0] = $conv$2$i$i213;
      $shr$2$i$i215 = $sub$i206 >>> 24;
      $conv$3$i$i216 = $shr$2$i$i215&255;
      HEAP8[$add$ptr$i102$i>>0] = $conv$3$i$i216;
      $add$ptr$i$i217 = ((($p$0329)) + 8|0);
      $incdec$ptr$i218 = ((($p$0329)) + 9|0);
      HEAP8[$add$ptr$i$i217>>0] = 0;
      $incdec$ptr3$i219 = ((($p$0329)) + 10|0);
      HEAP8[$incdec$ptr$i218>>0] = 0;
      $txt$i220 = ((($node140$0330)) + 24|0);
      $35 = HEAP32[$enc10$i$i>>2]|0;
      $cmp4$i221 = ($35|0)==(1);
      $conv$i222 = $cmp4$i221&1;
      $incdec$ptr5$i223 = ((($p$0329)) + 11|0);
      HEAP8[$incdec$ptr3$i219>>0] = $conv$i222;
      $arrayidx$i = ((($node140$0330)) + 8|0);
      $36 = HEAP8[$arrayidx$i>>0]|0;
      $incdec$ptr6$i = ((($p$0329)) + 12|0);
      HEAP8[$incdec$ptr5$i223>>0] = $36;
      $arrayidx8$i = ((($node140$0330)) + 9|0);
      $37 = HEAP8[$arrayidx8$i>>0]|0;
      $incdec$ptr9$i = ((($p$0329)) + 13|0);
      HEAP8[$incdec$ptr6$i>>0] = $37;
      $arrayidx11$i = ((($node140$0330)) + 10|0);
      $38 = HEAP8[$arrayidx11$i>>0]|0;
      $incdec$ptr12$i224 = ((($p$0329)) + 14|0);
      HEAP8[$incdec$ptr9$i>>0] = $38;
      $dsc$i = ((($node140$0330)) + 12|0);
      $39 = HEAP32[$enc$i$i198>>2]|0;
      $cmp14$i = ($39|0)==(1);
      $40 = HEAP32[$dim7$i$i>>2]|0;
      if ($cmp14$i) {
       $43 = HEAP32[$dsc$i>>2]|0;
       $cmp$i36$i = ($40|0)==(0);
       do {
        if ($cmp$i36$i) {
         $frame$addr$1$i77$i = $incdec$ptr12$i224;
        } else {
         $44 = HEAP16[$43>>1]|0;
         $cmp$i$i37$i = ($44<<16>>16)==(-2);
         $45 = $40 << 1;
         $dec$us$i45119$i = (($40) + -1)|0;
         $incdec$ptr$us$i46120$i = ((($43)) + 2|0);
         $incdec$ptr2$us$i49121$i = ((($p$0329)) + 15|0);
         if ($cmp$i$i37$i) {
          HEAP8[$incdec$ptr12$i224>>0] = -1;
          HEAP8[$incdec$ptr2$us$i49121$i>>0] = -2;
          $tobool$us$i52122$i = ($dec$us$i45119$i|0)==(0);
          if (!($tobool$us$i52122$i)) {
           $dec$us$i45124$i = $dec$us$i45119$i;$frame$addr$012$us$i42123$i = $incdec$ptr12$i224;$incdec$ptr$us$i46125$i = $incdec$ptr$us$i46120$i;
           while(1) {
            $incdec$ptr6$us$i54$i = ((($frame$addr$012$us$i42123$i)) + 2|0);
            $$pre15$i55$i = HEAP16[$incdec$ptr$us$i46125$i>>1]|0;
            $dec$us$i45$i = (($dec$us$i45124$i) + -1)|0;
            $incdec$ptr$us$i46$i = ((($incdec$ptr$us$i46125$i)) + 2|0);
            $rev$i$i$us$i47$i = (_llvm_bswap_i16(($$pre15$i55$i|0))|0);
            $conv1$us$i48$i = $rev$i$i$us$i47$i&255;
            $incdec$ptr2$us$i49$i = ((($frame$addr$012$us$i42123$i)) + 3|0);
            HEAP8[$incdec$ptr6$us$i54$i>>0] = $conv1$us$i48$i;
            $shr8$us$i50$i = ($rev$i$i$us$i47$i&65535) >>> 8;
            $conv5$us$i51$i = $shr8$us$i50$i&255;
            HEAP8[$incdec$ptr2$us$i49$i>>0] = $conv5$us$i51$i;
            $tobool$us$i52$i = ($dec$us$i45$i|0)==(0);
            if ($tobool$us$i52$i) {
             break;
            } else {
             $dec$us$i45124$i = $dec$us$i45$i;$frame$addr$012$us$i42123$i = $incdec$ptr6$us$i54$i;$incdec$ptr$us$i46125$i = $incdec$ptr$us$i46$i;
            }
           }
          }
          $scevgep$i73$i = (($incdec$ptr12$i224) + ($45)|0);
          $frame$addr$1$i77$i = $scevgep$i73$i;
          break;
         } else {
          $extract25$i39$i = ($44&65535) >>> 8;
          $extract$t26$i40$i = $extract25$i39$i&255;
          $extract$t22$i38$i = $44&255;
          HEAP8[$incdec$ptr12$i224>>0] = $extract$t22$i38$i;
          HEAP8[$incdec$ptr2$us$i49121$i>>0] = $extract$t26$i40$i;
          $tobool$i65129$i = ($dec$us$i45119$i|0)==(0);
          if (!($tobool$i65129$i)) {
           $dec$i62131$i = $dec$us$i45119$i;$frame$addr$012$i59130$i = $incdec$ptr12$i224;$incdec$ptr$i63132$i = $incdec$ptr$us$i46120$i;
           while(1) {
            $incdec$ptr6$i67$i = ((($frame$addr$012$i59130$i)) + 2|0);
            $$pre$i68$i = HEAP16[$incdec$ptr$i63132$i>>1]|0;
            $extract$t21$i69$i = $$pre$i68$i&255;
            $extract23$i70$i = ($$pre$i68$i&65535) >>> 8;
            $extract$t24$i71$i = $extract23$i70$i&255;
            $dec$i62$i = (($dec$i62131$i) + -1)|0;
            $incdec$ptr$i63$i = ((($incdec$ptr$i63132$i)) + 2|0);
            $incdec$ptr2$i64$i = ((($frame$addr$012$i59130$i)) + 3|0);
            HEAP8[$incdec$ptr6$i67$i>>0] = $extract$t21$i69$i;
            HEAP8[$incdec$ptr2$i64$i>>0] = $extract$t24$i71$i;
            $tobool$i65$i = ($dec$i62$i|0)==(0);
            if ($tobool$i65$i) {
             break;
            } else {
             $dec$i62131$i = $dec$i62$i;$frame$addr$012$i59130$i = $incdec$ptr6$i67$i;$incdec$ptr$i63132$i = $incdec$ptr$i63$i;
            }
           }
          }
          $scevgep14$i75$i = (($incdec$ptr12$i224) + ($45)|0);
          $frame$addr$1$i77$i = $scevgep14$i75$i;
          break;
         }
        }
       } while(0);
       $incdec$ptr26$i = ((($frame$addr$1$i77$i)) + 1|0);
       HEAP8[$frame$addr$1$i77$i>>0] = 0;
       $incdec$ptr27$i = ((($frame$addr$1$i77$i)) + 2|0);
       $$sink$i230 = $incdec$ptr26$i;$frame$addr$0$i229 = $incdec$ptr27$i;
      } else {
       $tobool2$i79$i = ($40|0)==(0);
       if ($tobool2$i79$i) {
        $frame$addr$0$lcssa$i90$i = $incdec$ptr12$i224;
       } else {
        $41 = HEAP32[$dsc$i>>2]|0;
        $frame$addr$03$i82$i = $incdec$ptr12$i224;$n$addr$05$i80$i = $40;$str$addr$04$i81$i = $41;
        while(1) {
         $dec$i83$i = (($n$addr$05$i80$i) + -1)|0;
         $incdec$ptr$i84$i = ((($str$addr$04$i81$i)) + 1|0);
         $42 = HEAP8[$str$addr$04$i81$i>>0]|0;
         $incdec$ptr1$i85$i = ((($frame$addr$03$i82$i)) + 1|0);
         HEAP8[$frame$addr$03$i82$i>>0] = $42;
         $tobool$i86$i = ($dec$i83$i|0)==(0);
         if ($tobool$i86$i) {
          break;
         } else {
          $frame$addr$03$i82$i = $incdec$ptr1$i85$i;$n$addr$05$i80$i = $dec$i83$i;$str$addr$04$i81$i = $incdec$ptr$i84$i;
         }
        }
        $scevgep$i88$i = (($incdec$ptr12$i224) + ($40)|0);
        $frame$addr$0$lcssa$i90$i = $scevgep$i88$i;
       }
       $incdec$ptr20$i = ((($frame$addr$0$lcssa$i90$i)) + 1|0);
       $$sink$i230 = $frame$addr$0$lcssa$i90$i;$frame$addr$0$i229 = $incdec$ptr20$i;
      }
      HEAP8[$$sink$i230>>0] = 0;
      $46 = HEAP32[$enc10$i$i>>2]|0;
      $cmp30$i = ($46|0)==(1);
      $47 = HEAP32[$dim18$i$i>>2]|0;
      if (!($cmp30$i)) {
       $tobool2$i$i232 = ($47|0)==(0);
       if ($tobool2$i$i232) {
        $p$1 = $frame$addr$0$i229;
        break;
       }
       $48 = HEAP32[$txt$i220>>2]|0;
       $frame$addr$03$i$i235 = $frame$addr$0$i229;$n$addr$05$i$i233 = $47;$str$addr$04$i$i234 = $48;
       while(1) {
        $dec$i31$i = (($n$addr$05$i$i233) + -1)|0;
        $incdec$ptr$i32$i = ((($str$addr$04$i$i234)) + 1|0);
        $49 = HEAP8[$str$addr$04$i$i234>>0]|0;
        $incdec$ptr1$i$i236 = ((($frame$addr$03$i$i235)) + 1|0);
        HEAP8[$frame$addr$03$i$i235>>0] = $49;
        $tobool$i33$i = ($dec$i31$i|0)==(0);
        if ($tobool$i33$i) {
         break;
        } else {
         $frame$addr$03$i$i235 = $incdec$ptr1$i$i236;$n$addr$05$i$i233 = $dec$i31$i;$str$addr$04$i$i234 = $incdec$ptr$i32$i;
        }
       }
       $scevgep$i35$i = (($frame$addr$0$i229) + ($47)|0);
       $p$1 = $scevgep$i35$i;
       break;
      }
      $50 = HEAP32[$txt$i220>>2]|0;
      $cmp$i$i238 = ($47|0)==(0);
      if ($cmp$i$i238) {
       $p$1 = $frame$addr$0$i229;
       break;
      }
      $51 = HEAP16[$50>>1]|0;
      $cmp$i$i$i239 = ($51<<16>>16)==(-2);
      $52 = $47 << 1;
      $dec$us$i105$i240 = (($47) + -1)|0;
      $incdec$ptr$us$i106$i241 = ((($50)) + 2|0);
      $incdec$ptr2$us$i107$i = ((($frame$addr$0$i229)) + 1|0);
      if ($cmp$i$i$i239) {
       HEAP8[$frame$addr$0$i229>>0] = -1;
       HEAP8[$incdec$ptr2$us$i107$i>>0] = -2;
       $tobool$us$i108$i = ($dec$us$i105$i240|0)==(0);
       if (!($tobool$us$i108$i)) {
        $dec$us$i110$i = $dec$us$i105$i240;$frame$addr$012$us$i109$i = $frame$addr$0$i229;$incdec$ptr$us$i111$i = $incdec$ptr$us$i106$i241;
        while(1) {
         $incdec$ptr6$us$i$i247 = ((($frame$addr$012$us$i109$i)) + 2|0);
         $$pre15$i$i248 = HEAP16[$incdec$ptr$us$i111$i>>1]|0;
         $dec$us$i$i249 = (($dec$us$i110$i) + -1)|0;
         $incdec$ptr$us$i$i250 = ((($incdec$ptr$us$i111$i)) + 2|0);
         $rev$i$i$us$i$i251 = (_llvm_bswap_i16(($$pre15$i$i248|0))|0);
         $conv1$us$i$i252 = $rev$i$i$us$i$i251&255;
         $incdec$ptr2$us$i$i253 = ((($frame$addr$012$us$i109$i)) + 3|0);
         HEAP8[$incdec$ptr6$us$i$i247>>0] = $conv1$us$i$i252;
         $shr8$us$i$i254 = ($rev$i$i$us$i$i251&65535) >>> 8;
         $conv5$us$i$i255 = $shr8$us$i$i254&255;
         HEAP8[$incdec$ptr2$us$i$i253>>0] = $conv5$us$i$i255;
         $tobool$us$i$i256 = ($dec$us$i$i249|0)==(0);
         if ($tobool$us$i$i256) {
          break;
         } else {
          $dec$us$i110$i = $dec$us$i$i249;$frame$addr$012$us$i109$i = $incdec$ptr6$us$i$i247;$incdec$ptr$us$i111$i = $incdec$ptr$us$i$i250;
         }
        }
       }
       $scevgep$i$i267 = (($frame$addr$0$i229) + ($52)|0);
       $p$1 = $scevgep$i$i267;
       break;
      } else {
       $extract25$i$i242 = ($51&65535) >>> 8;
       $extract$t26$i$i243 = $extract25$i$i242&255;
       $extract$t22$i$i244 = $51&255;
       HEAP8[$frame$addr$0$i229>>0] = $extract$t22$i$i244;
       HEAP8[$incdec$ptr2$us$i107$i>>0] = $extract$t26$i$i243;
       $tobool$i30115$i = ($dec$us$i105$i240|0)==(0);
       if (!($tobool$i30115$i)) {
        $dec$i117$i = $dec$us$i105$i240;$frame$addr$012$i116$i = $frame$addr$0$i229;$incdec$ptr$i118$i = $incdec$ptr$us$i106$i241;
        while(1) {
         $incdec$ptr6$i$i258 = ((($frame$addr$012$i116$i)) + 2|0);
         $$pre$i$i259 = HEAP16[$incdec$ptr$i118$i>>1]|0;
         $extract$t21$i$i260 = $$pre$i$i259&255;
         $extract23$i$i261 = ($$pre$i$i259&65535) >>> 8;
         $extract$t24$i$i262 = $extract23$i$i261&255;
         $dec$i$i263 = (($dec$i117$i) + -1)|0;
         $incdec$ptr$i$i264 = ((($incdec$ptr$i118$i)) + 2|0);
         $incdec$ptr2$i$i265 = ((($frame$addr$012$i116$i)) + 3|0);
         HEAP8[$incdec$ptr6$i$i258>>0] = $extract$t21$i$i260;
         HEAP8[$incdec$ptr2$i$i265>>0] = $extract$t24$i$i262;
         $tobool$i30$i = ($dec$i$i263|0)==(0);
         if ($tobool$i30$i) {
          break;
         } else {
          $dec$i117$i = $dec$i$i263;$frame$addr$012$i116$i = $incdec$ptr6$i$i258;$incdec$ptr$i118$i = $incdec$ptr$i$i264;
         }
        }
       }
       $scevgep14$i$i269 = (($frame$addr$0$i229) + ($52)|0);
       $p$1 = $scevgep14$i$i269;
       break;
      }
     } else {
      $p$1 = $p$0329;
     }
    }
    else if ((label|0) == 80) {
     label = 0;
     $and1$3$i$i = $30 & -16777216;
     $cmp3$3$i$i = ($and1$3$i$i|0)==(1459617792);
     $notrhs326 = ($and1$3$i$i|0)!=(0);
     $tobool158 = $cmp3$3$i$i ^ $notrhs326;
     if ($tobool158) {
      $enc$i$i = ((($node140$0330)) + 32|0);
      $76 = HEAP32[$enc$i$i>>2]|0;
      $cond$i$i = ($76|0)==(1);
      $dim11$i$i = ((($node140$0330)) + 16|0);
      $77 = HEAP32[$dim11$i$i>>2]|0;
      $cmp12$i$i = ($77|0)!=(0);
      $78 = ((($node140$0330)) + 28|0);
      $79 = HEAP32[$78>>2]|0;
      if ($cond$i$i) {
       $add16$i$i = $77 << 1;
       $add17$i$i = (($add16$i$i) + 13)|0;
       $n$1$i$i = $cmp12$i$i ? $add17$i$i : 11;
       $mul21$i$i = $79 << 1;
       $add22$i$i = (($n$1$i$i) + ($mul21$i$i))|0;
       $n$2$i$i = $add22$i$i;
      } else {
       $add5$i$i = (($77) + 12)|0;
       $add5$$i$i = $cmp12$i$i ? $add5$i$i : 11;
       $add8$i$i = (($add5$$i$i) + ($79))|0;
       $n$2$i$i = $add8$i$i;
      }
      $cmp$i96 = ($n$2$i$i>>>0)>(10);
      if (!($cmp$i96)) {
       $p$1 = $p$0329;
       break;
      }
      $conv$i87$i = $30&255;
      $arrayidx$i88$i = ((($p$0329)) + 3|0);
      HEAP8[$arrayidx$i88$i>>0] = $conv$i87$i;
      $shr$i89$i = $30 >>> 8;
      $conv$1$i90$i = $shr$i89$i&255;
      $arrayidx$1$i91$i = ((($p$0329)) + 2|0);
      HEAP8[$arrayidx$1$i91$i>>0] = $conv$1$i90$i;
      $shr$1$i92$i = $30 >>> 16;
      $conv$2$i93$i = $shr$1$i92$i&255;
      $arrayidx$2$i94$i = ((($p$0329)) + 1|0);
      HEAP8[$arrayidx$2$i94$i>>0] = $conv$2$i93$i;
      $shr$2$i95$i = $30 >>> 24;
      $conv$3$i96$i = $shr$2$i95$i&255;
      HEAP8[$p$0329>>0] = $conv$3$i96$i;
      $add$ptr$i97$i = ((($p$0329)) + 4|0);
      $sub$i = (($n$2$i$i) + -10)|0;
      $conv$i$i97 = $sub$i&255;
      $arrayidx$i$i98 = ((($p$0329)) + 7|0);
      HEAP8[$arrayidx$i$i98>>0] = $conv$i$i97;
      $shr$i$i99 = $sub$i >>> 8;
      $conv$1$i$i100 = $shr$i$i99&255;
      $arrayidx$1$i$i101 = ((($p$0329)) + 6|0);
      HEAP8[$arrayidx$1$i$i101>>0] = $conv$1$i$i100;
      $shr$1$i$i102 = $sub$i >>> 16;
      $conv$2$i$i103 = $shr$1$i$i102&255;
      $arrayidx$2$i$i104 = ((($p$0329)) + 5|0);
      HEAP8[$arrayidx$2$i$i104>>0] = $conv$2$i$i103;
      $shr$2$i$i105 = $sub$i >>> 24;
      $conv$3$i$i106 = $shr$2$i$i105&255;
      HEAP8[$add$ptr$i97$i>>0] = $conv$3$i$i106;
      $add$ptr$i$i107 = ((($p$0329)) + 8|0);
      $incdec$ptr$i108 = ((($p$0329)) + 9|0);
      HEAP8[$add$ptr$i$i107>>0] = 0;
      $incdec$ptr3$i = ((($p$0329)) + 10|0);
      HEAP8[$incdec$ptr$i108>>0] = 0;
      $txt$i = ((($node140$0330)) + 24|0);
      $80 = HEAP32[$enc$i$i>>2]|0;
      $cmp4$i = ($80|0)==(1);
      $conv$i = $cmp4$i&1;
      $incdec$ptr5$i = ((($p$0329)) + 11|0);
      HEAP8[$incdec$ptr3$i>>0] = $conv$i;
      $81 = HEAP32[$dim11$i$i>>2]|0;
      $cmp6$i = ($81|0)==(0);
      if ($cmp6$i) {
       $frame$addr$1$i = $incdec$ptr5$i;
      } else {
       $enc10$i = ((($node140$0330)) + 20|0);
       $82 = HEAP32[$enc10$i>>2]|0;
       $cmp11$i = ($82|0)==(1);
       $ptr$i = ((($node140$0330)) + 12|0);
       if ($cmp11$i) {
        $85 = HEAP32[$ptr$i>>2]|0;
        $86 = HEAP16[$85>>1]|0;
        $cmp$i$i32$i = ($86<<16>>16)==(-2);
        $87 = $81 << 1;
        $dec$us$i40114$i = (($81) + -1)|0;
        $incdec$ptr$us$i41115$i = ((($85)) + 2|0);
        $incdec$ptr2$us$i44116$i = ((($p$0329)) + 12|0);
        do {
         if ($cmp$i$i32$i) {
          HEAP8[$incdec$ptr5$i>>0] = -1;
          HEAP8[$incdec$ptr2$us$i44116$i>>0] = -2;
          $tobool$us$i47117$i = ($dec$us$i40114$i|0)==(0);
          if ($tobool$us$i47117$i) {
           break;
          } else {
           $dec$us$i40119$i = $dec$us$i40114$i;$frame$addr$012$us$i37118$i = $incdec$ptr5$i;$incdec$ptr$us$i41120$i = $incdec$ptr$us$i41115$i;
          }
          while(1) {
           $incdec$ptr6$us$i49$i = ((($frame$addr$012$us$i37118$i)) + 2|0);
           $$pre15$i50$i = HEAP16[$incdec$ptr$us$i41120$i>>1]|0;
           $dec$us$i40$i = (($dec$us$i40119$i) + -1)|0;
           $incdec$ptr$us$i41$i = ((($incdec$ptr$us$i41120$i)) + 2|0);
           $rev$i$i$us$i42$i = (_llvm_bswap_i16(($$pre15$i50$i|0))|0);
           $conv1$us$i43$i = $rev$i$i$us$i42$i&255;
           $incdec$ptr2$us$i44$i = ((($frame$addr$012$us$i37118$i)) + 3|0);
           HEAP8[$incdec$ptr6$us$i49$i>>0] = $conv1$us$i43$i;
           $shr8$us$i45$i = ($rev$i$i$us$i42$i&65535) >>> 8;
           $conv5$us$i46$i = $shr8$us$i45$i&255;
           HEAP8[$incdec$ptr2$us$i44$i>>0] = $conv5$us$i46$i;
           $tobool$us$i47$i = ($dec$us$i40$i|0)==(0);
           if ($tobool$us$i47$i) {
            break;
           } else {
            $dec$us$i40119$i = $dec$us$i40$i;$frame$addr$012$us$i37118$i = $incdec$ptr6$us$i49$i;$incdec$ptr$us$i41120$i = $incdec$ptr$us$i41$i;
           }
          }
         } else {
          $extract25$i34$i = ($86&65535) >>> 8;
          $extract$t26$i35$i = $extract25$i34$i&255;
          $extract$t22$i33$i = $86&255;
          HEAP8[$incdec$ptr5$i>>0] = $extract$t22$i33$i;
          HEAP8[$incdec$ptr2$us$i44116$i>>0] = $extract$t26$i35$i;
          $tobool$i60124$i = ($dec$us$i40114$i|0)==(0);
          if ($tobool$i60124$i) {
           break;
          } else {
           $dec$i57126$i = $dec$us$i40114$i;$frame$addr$012$i54125$i = $incdec$ptr5$i;$incdec$ptr$i58127$i = $incdec$ptr$us$i41115$i;
          }
          while(1) {
           $incdec$ptr6$i62$i = ((($frame$addr$012$i54125$i)) + 2|0);
           $$pre$i63$i = HEAP16[$incdec$ptr$i58127$i>>1]|0;
           $extract$t21$i64$i = $$pre$i63$i&255;
           $extract23$i65$i = ($$pre$i63$i&65535) >>> 8;
           $extract$t24$i66$i = $extract23$i65$i&255;
           $dec$i57$i = (($dec$i57126$i) + -1)|0;
           $incdec$ptr$i58$i = ((($incdec$ptr$i58127$i)) + 2|0);
           $incdec$ptr2$i59$i = ((($frame$addr$012$i54125$i)) + 3|0);
           HEAP8[$incdec$ptr6$i62$i>>0] = $extract$t21$i64$i;
           HEAP8[$incdec$ptr2$i59$i>>0] = $extract$t24$i66$i;
           $tobool$i60$i = ($dec$i57$i|0)==(0);
           if ($tobool$i60$i) {
            break;
           } else {
            $dec$i57126$i = $dec$i57$i;$frame$addr$012$i54125$i = $incdec$ptr6$i62$i;$incdec$ptr$i58127$i = $incdec$ptr$i58$i;
           }
          }
         }
        } while(0);
        $scevgep$i68$i = (($incdec$ptr5$i) + ($87)|0);
        $incdec$ptr24$i = ((($scevgep$i68$i)) + 1|0);
        HEAP8[$scevgep$i68$i>>0] = 0;
        $incdec$ptr25$i = ((($scevgep$i68$i)) + 2|0);
        $$sink$i = $incdec$ptr24$i;$frame$addr$0$i = $incdec$ptr25$i;
       } else {
        $83 = HEAP32[$ptr$i>>2]|0;
        $frame$addr$03$i77$i = $incdec$ptr5$i;$n$addr$05$i75$i = $81;$str$addr$04$i76$i = $83;
        while(1) {
         $dec$i78$i = (($n$addr$05$i75$i) + -1)|0;
         $incdec$ptr$i79$i = ((($str$addr$04$i76$i)) + 1|0);
         $84 = HEAP8[$str$addr$04$i76$i>>0]|0;
         $incdec$ptr1$i80$i = ((($frame$addr$03$i77$i)) + 1|0);
         HEAP8[$frame$addr$03$i77$i>>0] = $84;
         $tobool$i81$i = ($dec$i78$i|0)==(0);
         if ($tobool$i81$i) {
          break;
         } else {
          $frame$addr$03$i77$i = $incdec$ptr1$i80$i;$n$addr$05$i75$i = $dec$i78$i;$str$addr$04$i76$i = $incdec$ptr$i79$i;
         }
        }
        $scevgep$i83$i = (($incdec$ptr5$i) + ($81)|0);
        $incdec$ptr18$i110 = ((($scevgep$i83$i)) + 1|0);
        $$sink$i = $scevgep$i83$i;$frame$addr$0$i = $incdec$ptr18$i110;
       }
       HEAP8[$$sink$i>>0] = 0;
       $frame$addr$1$i = $frame$addr$0$i;
      }
      $88 = HEAP32[$enc$i$i>>2]|0;
      $cmp29$i = ($88|0)==(1);
      $89 = HEAP32[$78>>2]|0;
      if (!($cmp29$i)) {
       $tobool2$i$i = ($89|0)==(0);
       if ($tobool2$i$i) {
        $p$1 = $frame$addr$1$i;
        break;
       }
       $90 = HEAP32[$txt$i>>2]|0;
       $frame$addr$03$i$i = $frame$addr$1$i;$n$addr$05$i$i = $89;$str$addr$04$i$i = $90;
       while(1) {
        $dec$i26$i = (($n$addr$05$i$i) + -1)|0;
        $incdec$ptr$i27$i = ((($str$addr$04$i$i)) + 1|0);
        $91 = HEAP8[$str$addr$04$i$i>>0]|0;
        $incdec$ptr1$i$i = ((($frame$addr$03$i$i)) + 1|0);
        HEAP8[$frame$addr$03$i$i>>0] = $91;
        $tobool$i28$i = ($dec$i26$i|0)==(0);
        if ($tobool$i28$i) {
         break;
        } else {
         $frame$addr$03$i$i = $incdec$ptr1$i$i;$n$addr$05$i$i = $dec$i26$i;$str$addr$04$i$i = $incdec$ptr$i27$i;
        }
       }
       $scevgep$i30$i = (($frame$addr$1$i) + ($89)|0);
       $p$1 = $scevgep$i30$i;
       break;
      }
      $92 = HEAP32[$txt$i>>2]|0;
      $cmp$i$i = ($89|0)==(0);
      if ($cmp$i$i) {
       $p$1 = $frame$addr$1$i;
       break;
      }
      $93 = HEAP16[$92>>1]|0;
      $cmp$i$i$i = ($93<<16>>16)==(-2);
      $94 = $89 << 1;
      $dec$us$i100$i = (($89) + -1)|0;
      $incdec$ptr$us$i101$i = ((($92)) + 2|0);
      $incdec$ptr2$us$i102$i = ((($frame$addr$1$i)) + 1|0);
      if ($cmp$i$i$i) {
       HEAP8[$frame$addr$1$i>>0] = -1;
       HEAP8[$incdec$ptr2$us$i102$i>>0] = -2;
       $tobool$us$i103$i = ($dec$us$i100$i|0)==(0);
       if (!($tobool$us$i103$i)) {
        $dec$us$i105$i = $dec$us$i100$i;$frame$addr$012$us$i104$i = $frame$addr$1$i;$incdec$ptr$us$i106$i = $incdec$ptr$us$i101$i;
        while(1) {
         $incdec$ptr6$us$i$i = ((($frame$addr$012$us$i104$i)) + 2|0);
         $$pre15$i$i = HEAP16[$incdec$ptr$us$i106$i>>1]|0;
         $dec$us$i$i = (($dec$us$i105$i) + -1)|0;
         $incdec$ptr$us$i$i = ((($incdec$ptr$us$i106$i)) + 2|0);
         $rev$i$i$us$i$i = (_llvm_bswap_i16(($$pre15$i$i|0))|0);
         $conv1$us$i$i = $rev$i$i$us$i$i&255;
         $incdec$ptr2$us$i$i = ((($frame$addr$012$us$i104$i)) + 3|0);
         HEAP8[$incdec$ptr6$us$i$i>>0] = $conv1$us$i$i;
         $shr8$us$i$i = ($rev$i$i$us$i$i&65535) >>> 8;
         $conv5$us$i$i = $shr8$us$i$i&255;
         HEAP8[$incdec$ptr2$us$i$i>>0] = $conv5$us$i$i;
         $tobool$us$i$i = ($dec$us$i$i|0)==(0);
         if ($tobool$us$i$i) {
          break;
         } else {
          $dec$us$i105$i = $dec$us$i$i;$frame$addr$012$us$i104$i = $incdec$ptr6$us$i$i;$incdec$ptr$us$i106$i = $incdec$ptr$us$i$i;
         }
        }
       }
       $scevgep$i$i = (($frame$addr$1$i) + ($94)|0);
       $p$1 = $scevgep$i$i;
       break;
      } else {
       $extract25$i$i = ($93&65535) >>> 8;
       $extract$t26$i$i = $extract25$i$i&255;
       $extract$t22$i$i = $93&255;
       HEAP8[$frame$addr$1$i>>0] = $extract$t22$i$i;
       HEAP8[$incdec$ptr2$us$i102$i>>0] = $extract$t26$i$i;
       $tobool$i25110$i = ($dec$us$i100$i|0)==(0);
       if (!($tobool$i25110$i)) {
        $dec$i112$i = $dec$us$i100$i;$frame$addr$012$i111$i = $frame$addr$1$i;$incdec$ptr$i113$i = $incdec$ptr$us$i101$i;
        while(1) {
         $incdec$ptr6$i$i = ((($frame$addr$012$i111$i)) + 2|0);
         $$pre$i$i = HEAP16[$incdec$ptr$i113$i>>1]|0;
         $extract$t21$i$i = $$pre$i$i&255;
         $extract23$i$i = ($$pre$i$i&65535) >>> 8;
         $extract$t24$i$i = $extract23$i$i&255;
         $dec$i$i = (($dec$i112$i) + -1)|0;
         $incdec$ptr$i$i = ((($incdec$ptr$i113$i)) + 2|0);
         $incdec$ptr2$i$i = ((($frame$addr$012$i111$i)) + 3|0);
         HEAP8[$incdec$ptr6$i$i>>0] = $extract$t21$i$i;
         HEAP8[$incdec$ptr2$i$i>>0] = $extract$t24$i$i;
         $tobool$i25$i = ($dec$i$i|0)==(0);
         if ($tobool$i25$i) {
          break;
         } else {
          $dec$i112$i = $dec$i$i;$frame$addr$012$i111$i = $incdec$ptr6$i$i;$incdec$ptr$i113$i = $incdec$ptr$i$i;
         }
        }
       }
       $scevgep14$i$i = (($frame$addr$1$i) + ($94)|0);
       $p$1 = $scevgep14$i$i;
       break;
      }
     }
     $dim$i$i = ((($node140$0330)) + 16|0);
     $53 = HEAP32[$dim$i$i>>2]|0;
     $cmp$i$i113 = ($53|0)==(0);
     do {
      if ($cmp$i$i113) {
       $n$0$i$i = 10;
      } else {
       $enc$i$i115 = ((($node140$0330)) + 20|0);
       $54 = HEAP32[$enc$i$i115>>2]|0;
       $cond$i$i116 = ($54|0)==(1);
       if ($cond$i$i116) {
        $mul$i$i = $53 << 1;
        $add11$i$i = (($mul$i$i) + 13)|0;
        $n$0$i$i = $add11$i$i;
        break;
       } else {
        $add6$i$i = (($53) + 12)|0;
        $n$0$i$i = $add6$i$i;
        break;
       }
      }
     } while(0);
     $dim12$i$i = ((($node140$0330)) + 28|0);
     $55 = HEAP32[$dim12$i$i>>2]|0;
     $cmp13$i$i = ($55|0)==(0);
     do {
      if ($cmp13$i$i) {
       $n$1$i$i118 = $n$0$i$i;
      } else {
       $enc16$i$i = ((($node140$0330)) + 32|0);
       $56 = HEAP32[$enc16$i$i>>2]|0;
       $cond1$i$i = ($56|0)==(1);
       if ($cond1$i$i) {
        $sub$i$i = (($n$0$i$i) + -1)|0;
        $add25$i$i = (($sub$i$i) + ($55))|0;
        $n$1$i$i118 = $add25$i$i;
        break;
       } else {
        $add21$i$i = (($55) + ($n$0$i$i))|0;
        $n$1$i$i118 = $add21$i$i;
        break;
       }
      }
     } while(0);
     $cmp$i119 = ($n$1$i$i118>>>0)>(10);
     if (!($cmp$i119)) {
      $p$1 = $p$0329;
      break;
     }
     $conv$i56$i = $30&255;
     $arrayidx$i57$i = ((($p$0329)) + 3|0);
     HEAP8[$arrayidx$i57$i>>0] = $conv$i56$i;
     $shr$i58$i = $30 >>> 8;
     $conv$1$i59$i = $shr$i58$i&255;
     $arrayidx$1$i60$i = ((($p$0329)) + 2|0);
     HEAP8[$arrayidx$1$i60$i>>0] = $conv$1$i59$i;
     $shr$1$i61$i = $30 >>> 16;
     $conv$2$i62$i = $shr$1$i61$i&255;
     $arrayidx$2$i63$i = ((($p$0329)) + 1|0);
     HEAP8[$arrayidx$2$i63$i>>0] = $conv$2$i62$i;
     $shr$2$i64$i = $30 >>> 24;
     $conv$3$i65$i = $shr$2$i64$i&255;
     HEAP8[$p$0329>>0] = $conv$3$i65$i;
     $add$ptr$i66$i = ((($p$0329)) + 4|0);
     $sub$i121 = (($n$1$i$i118) + -10)|0;
     $conv$i$i122 = $sub$i121&255;
     $arrayidx$i$i123 = ((($p$0329)) + 7|0);
     HEAP8[$arrayidx$i$i123>>0] = $conv$i$i122;
     $shr$i$i124 = $sub$i121 >>> 8;
     $conv$1$i$i125 = $shr$i$i124&255;
     $arrayidx$1$i$i126 = ((($p$0329)) + 6|0);
     HEAP8[$arrayidx$1$i$i126>>0] = $conv$1$i$i125;
     $shr$1$i$i127 = $sub$i121 >>> 16;
     $conv$2$i$i128 = $shr$1$i$i127&255;
     $arrayidx$2$i$i129 = ((($p$0329)) + 5|0);
     HEAP8[$arrayidx$2$i$i129>>0] = $conv$2$i$i128;
     $shr$2$i$i130 = $sub$i121 >>> 24;
     $conv$3$i$i131 = $shr$2$i$i130&255;
     HEAP8[$add$ptr$i66$i>>0] = $conv$3$i$i131;
     $add$ptr$i$i132 = ((($p$0329)) + 8|0);
     $incdec$ptr$i133 = ((($p$0329)) + 9|0);
     HEAP8[$add$ptr$i$i132>>0] = 0;
     $incdec$ptr3$i134 = ((($p$0329)) + 10|0);
     HEAP8[$incdec$ptr$i133>>0] = 0;
     $57 = HEAP32[$dim$i$i>>2]|0;
     $cmp4$i135 = ($57|0)==(0);
     if ($cmp4$i135) {
      $frame$addr$1$i174 = $incdec$ptr3$i134;
     } else {
      $enc$i = ((($node140$0330)) + 20|0);
      $58 = HEAP32[$enc$i>>2]|0;
      $cmp7$i = ($58|0)==(1);
      $conv$i137 = $cmp7$i&1;
      $incdec$ptr8$i138 = ((($p$0329)) + 11|0);
      HEAP8[$incdec$ptr3$i134>>0] = $conv$i137;
      $59 = HEAP32[$enc$i>>2]|0;
      $cmp11$i139 = ($59|0)==(1);
      $ptr$i140 = ((($node140$0330)) + 12|0);
      $60 = HEAP32[$dim$i$i>>2]|0;
      if ($cmp11$i139) {
       $63 = HEAP32[$ptr$i140>>2]|0;
       $cmp$i31$i = ($60|0)==(0);
       do {
        if ($cmp$i31$i) {
         $frame$addr$1$i41$i = $incdec$ptr8$i138;
        } else {
         $64 = HEAP16[$63>>1]|0;
         $cmp$i$i32$i145 = ($64<<16>>16)==(-2);
         $65 = $60 << 1;
         $dec$us$i68$i = (($60) + -1)|0;
         $incdec$ptr$us$i69$i = ((($63)) + 2|0);
         $incdec$ptr2$us$i70$i = ((($p$0329)) + 12|0);
         if ($cmp$i$i32$i145) {
          HEAP8[$incdec$ptr8$i138>>0] = -1;
          HEAP8[$incdec$ptr2$us$i70$i>>0] = -2;
          $tobool$us$i71$i = ($dec$us$i68$i|0)==(0);
          if (!($tobool$us$i71$i)) {
           $dec$us$i73$i = $dec$us$i68$i;$frame$addr$012$us$i72$i = $incdec$ptr8$i138;$incdec$ptr$us$i74$i = $incdec$ptr$us$i69$i;
           while(1) {
            $incdec$ptr6$us$i$i149 = ((($frame$addr$012$us$i72$i)) + 2|0);
            $$pre15$i$i150 = HEAP16[$incdec$ptr$us$i74$i>>1]|0;
            $dec$us$i$i151 = (($dec$us$i73$i) + -1)|0;
            $incdec$ptr$us$i$i152 = ((($incdec$ptr$us$i74$i)) + 2|0);
            $rev$i$i$us$i34$i = (_llvm_bswap_i16(($$pre15$i$i150|0))|0);
            $conv1$us$i$i153 = $rev$i$i$us$i34$i&255;
            $incdec$ptr2$us$i$i154 = ((($frame$addr$012$us$i72$i)) + 3|0);
            HEAP8[$incdec$ptr6$us$i$i149>>0] = $conv1$us$i$i153;
            $shr8$us$i$i155 = ($rev$i$i$us$i34$i&65535) >>> 8;
            $conv5$us$i$i156 = $shr8$us$i$i155&255;
            HEAP8[$incdec$ptr2$us$i$i154>>0] = $conv5$us$i$i156;
            $tobool$us$i$i157 = ($dec$us$i$i151|0)==(0);
            if ($tobool$us$i$i157) {
             break;
            } else {
             $dec$us$i73$i = $dec$us$i$i151;$frame$addr$012$us$i72$i = $incdec$ptr6$us$i$i149;$incdec$ptr$us$i74$i = $incdec$ptr$us$i$i152;
            }
           }
          }
          $scevgep$i40$i = (($incdec$ptr8$i138) + ($65)|0);
          $frame$addr$1$i41$i = $scevgep$i40$i;
          break;
         } else {
          $extract25$i$i146 = ($64&65535) >>> 8;
          $extract$t26$i$i147 = $extract25$i$i146&255;
          $extract$t22$i$i148 = $64&255;
          HEAP8[$incdec$ptr8$i138>>0] = $extract$t22$i$i148;
          HEAP8[$incdec$ptr2$us$i70$i>>0] = $extract$t26$i$i147;
          $tobool$i3878$i = ($dec$us$i68$i|0)==(0);
          if (!($tobool$i3878$i)) {
           $dec$i3680$i = $dec$us$i68$i;$frame$addr$012$i79$i = $incdec$ptr8$i138;$incdec$ptr$i3781$i = $incdec$ptr$us$i69$i;
           while(1) {
            $incdec$ptr6$i$i159 = ((($frame$addr$012$i79$i)) + 2|0);
            $$pre$i$i160 = HEAP16[$incdec$ptr$i3781$i>>1]|0;
            $extract$t21$i$i161 = $$pre$i$i160&255;
            $extract23$i$i162 = ($$pre$i$i160&65535) >>> 8;
            $extract$t24$i$i163 = $extract23$i$i162&255;
            $dec$i36$i = (($dec$i3680$i) + -1)|0;
            $incdec$ptr$i37$i = ((($incdec$ptr$i3781$i)) + 2|0);
            $incdec$ptr2$i$i164 = ((($frame$addr$012$i79$i)) + 3|0);
            HEAP8[$incdec$ptr6$i$i159>>0] = $extract$t21$i$i161;
            HEAP8[$incdec$ptr2$i$i164>>0] = $extract$t24$i$i163;
            $tobool$i38$i = ($dec$i36$i|0)==(0);
            if ($tobool$i38$i) {
             break;
            } else {
             $dec$i3680$i = $dec$i36$i;$frame$addr$012$i79$i = $incdec$ptr6$i$i159;$incdec$ptr$i3781$i = $incdec$ptr$i37$i;
            }
           }
          }
          $scevgep14$i$i167 = (($incdec$ptr8$i138) + ($65)|0);
          $frame$addr$1$i41$i = $scevgep14$i$i167;
          break;
         }
        }
       } while(0);
       $incdec$ptr24$i169 = ((($frame$addr$1$i41$i)) + 1|0);
       HEAP8[$frame$addr$1$i41$i>>0] = 0;
       $incdec$ptr25$i170 = ((($frame$addr$1$i41$i)) + 2|0);
       $$sink$i172 = $incdec$ptr24$i169;$frame$addr$0$i171 = $incdec$ptr25$i170;
      } else {
       $tobool2$i43$i = ($60|0)==(0);
       if ($tobool2$i43$i) {
        $frame$addr$0$lcssa$i54$i = $incdec$ptr8$i138;
       } else {
        $61 = HEAP32[$ptr$i140>>2]|0;
        $frame$addr$03$i46$i = $incdec$ptr8$i138;$n$addr$05$i44$i = $60;$str$addr$04$i45$i = $61;
        while(1) {
         $dec$i47$i = (($n$addr$05$i44$i) + -1)|0;
         $incdec$ptr$i48$i = ((($str$addr$04$i45$i)) + 1|0);
         $62 = HEAP8[$str$addr$04$i45$i>>0]|0;
         $incdec$ptr1$i49$i = ((($frame$addr$03$i46$i)) + 1|0);
         HEAP8[$frame$addr$03$i46$i>>0] = $62;
         $tobool$i50$i = ($dec$i47$i|0)==(0);
         if ($tobool$i50$i) {
          break;
         } else {
          $frame$addr$03$i46$i = $incdec$ptr1$i49$i;$n$addr$05$i44$i = $dec$i47$i;$str$addr$04$i45$i = $incdec$ptr$i48$i;
         }
        }
        $scevgep$i52$i = (($incdec$ptr8$i138) + ($60)|0);
        $frame$addr$0$lcssa$i54$i = $scevgep$i52$i;
       }
       $incdec$ptr18$i143 = ((($frame$addr$0$lcssa$i54$i)) + 1|0);
       $$sink$i172 = $frame$addr$0$lcssa$i54$i;$frame$addr$0$i171 = $incdec$ptr18$i143;
      }
      HEAP8[$$sink$i172>>0] = 0;
      $frame$addr$1$i174 = $frame$addr$0$i171;
     }
     $txt$i175 = ((($node140$0330)) + 24|0);
     $enc27$i = ((($node140$0330)) + 32|0);
     $66 = HEAP32[$enc27$i>>2]|0;
     $cmp28$i = ($66|0)==(1);
     $67 = HEAP32[$dim12$i$i>>2]|0;
     if (!($cmp28$i)) {
      $tobool2$i$i177 = ($67|0)==(0);
      if ($tobool2$i$i177) {
       $p$1 = $frame$addr$1$i174;
       break;
      }
      $68 = HEAP32[$txt$i175>>2]|0;
      $frame$addr$03$i$i181 = $frame$addr$1$i174;$n$addr$05$i$i179 = $67;$str$addr$04$i$i180 = $68;
      while(1) {
       $dec$i26$i182 = (($n$addr$05$i$i179) + -1)|0;
       $incdec$ptr$i27$i183 = ((($str$addr$04$i$i180)) + 1|0);
       $69 = HEAP8[$str$addr$04$i$i180>>0]|0;
       $incdec$ptr1$i$i184 = ((($frame$addr$03$i$i181)) + 1|0);
       HEAP8[$frame$addr$03$i$i181>>0] = $69;
       $tobool$i28$i185 = ($dec$i26$i182|0)==(0);
       if ($tobool$i28$i185) {
        break;
       } else {
        $frame$addr$03$i$i181 = $incdec$ptr1$i$i184;$n$addr$05$i$i179 = $dec$i26$i182;$str$addr$04$i$i180 = $incdec$ptr$i27$i183;
       }
      }
      $scevgep$i30$i187 = (($frame$addr$1$i174) + ($67)|0);
      $p$1 = $scevgep$i30$i187;
      break;
     }
     $70 = HEAP32[$txt$i175>>2]|0;
     $cmp$i24$i = ($67|0)==(0);
     if ($cmp$i24$i) {
      $p$1 = $frame$addr$1$i174;
      break;
     }
     $71 = HEAP16[$70>>1]|0;
     switch ($71<<16>>16) {
     case -257: case -2:  {
      $incdec$ptr$i$i189 = ((($70)) + 2|0);
      $dec$i$i190 = (($67) + -1)|0;
      $tobool315$i$i = ($dec$i$i190|0)==(0);
      if ($tobool315$i$i) {
       $p$1 = $frame$addr$1$i174;
       break L89;
      } else {
       $n$addr$0$ph22$i$i = $dec$i$i190;$str$addr$0$ph23$i$i = $incdec$ptr$i$i189;
      }
      break;
     }
     default: {
      $n$addr$0$ph22$i$i = $67;$str$addr$0$ph23$i$i = $70;
     }
     }
     $cmp$i$i$i191 = ($71<<16>>16)==(-2);
     if ($cmp$i$i$i191) {
      $frame$addr$018$us$i$i = $frame$addr$1$i174;$n$addr$016$us$i$i = $n$addr$0$ph22$i$i;$str$addr$017$us$i$i = $str$addr$0$ph23$i$i;
      while(1) {
       $dec2$us$i$i = (($n$addr$016$us$i$i) + -1)|0;
       $incdec$ptr4$us$i$i = ((($str$addr$017$us$i$i)) + 2|0);
       $72 = HEAP16[$str$addr$017$us$i$i>>1]|0;
       $rev$i$i$us$i$i192 = (_llvm_bswap_i16(($72|0))|0);
       $rev$i$c$i$off$us$i$i = (($rev$i$i$us$i$i192) + -32)<<16>>16;
       $73 = ($rev$i$c$i$off$us$i$i&65535)>(223);
       $conv13$us$i$i = $rev$i$i$us$i$i192&255;
       $storemerge$us$i$i = $73 ? 32 : $conv13$us$i$i;
       $frame$addr$1$us$i$i = ((($frame$addr$018$us$i$i)) + 1|0);
       HEAP8[$frame$addr$018$us$i$i>>0] = $storemerge$us$i$i;
       $tobool3$us$i$i = ($dec2$us$i$i|0)==(0);
       if ($tobool3$us$i$i) {
        break;
       } else {
        $frame$addr$018$us$i$i = $frame$addr$1$us$i$i;$n$addr$016$us$i$i = $dec2$us$i$i;$str$addr$017$us$i$i = $incdec$ptr4$us$i$i;
       }
      }
      $scevgep$i$i193 = (($frame$addr$1$i174) + ($n$addr$0$ph22$i$i)|0);
      $p$1 = $scevgep$i$i193;
      break;
     } else {
      $frame$addr$018$i$i = $frame$addr$1$i174;$n$addr$016$i$i = $n$addr$0$ph22$i$i;$str$addr$017$i$i = $str$addr$0$ph23$i$i;
      while(1) {
       $dec2$i$i = (($n$addr$016$i$i) + -1)|0;
       $incdec$ptr4$i$i = ((($str$addr$017$i$i)) + 2|0);
       $74 = HEAP16[$str$addr$017$i$i>>1]|0;
       $rev$i$c$i$off$i$i = (($74) + -32)<<16>>16;
       $75 = ($rev$i$c$i$off$i$i&65535)>(223);
       $conv13$i$i = $74&255;
       $storemerge$i$i = $75 ? 32 : $conv13$i$i;
       $frame$addr$1$i$i = ((($frame$addr$018$i$i)) + 1|0);
       HEAP8[$frame$addr$018$i$i>>0] = $storemerge$i$i;
       $tobool3$i$i = ($dec2$i$i|0)==(0);
       if ($tobool3$i$i) {
        break;
       } else {
        $frame$addr$018$i$i = $frame$addr$1$i$i;$n$addr$016$i$i = $dec2$i$i;$str$addr$017$i$i = $incdec$ptr4$i$i;
       }
      }
      $scevgep20$i$i = (($frame$addr$1$i174) + ($n$addr$0$ph22$i$i)|0);
      $p$1 = $scevgep20$i$i;
      break;
     }
    }
   } while(0);
   $95 = HEAP32[$node140$0330>>2]|0;
   $cmp143 = ($95|0)==(0|0);
   if ($cmp143) {
    $p$2 = $p$1;
    break;
   } else {
    $node140$0330 = $95;$p$0329 = $p$1;
   }
  }
 }
 $tobool169 = ($albumart_mime$1|0)==(0|0);
 if ($tobool169) {
  $p$3 = $p$2;
 } else {
  $96 = HEAP32[$albumart>>2]|0;
  $albumart_size174 = ((($0)) + 85732|0);
  $97 = HEAP32[$albumart_size174>>2]|0;
  $tobool1$i = ($96|0)!=(0|0);
  $tobool3$i = ($97|0)!=(0);
  $or$cond1$i = $tobool1$i & $tobool3$i;
  if ($or$cond1$i) {
   $arrayidx$i$i = ((($p$2)) + 3|0);
   HEAP8[$arrayidx$i$i>>0] = 67;
   $arrayidx$1$i$i = ((($p$2)) + 2|0);
   HEAP8[$arrayidx$1$i$i>>0] = 73;
   $arrayidx$2$i$i = ((($p$2)) + 1|0);
   HEAP8[$arrayidx$2$i$i>>0] = 80;
   HEAP8[$p$2>>0] = 65;
   $add$ptr$i$i = ((($p$2)) + 4|0);
   $call4$i = (_strlen($albumart_mime$1)|0);
   $add$i = (($97) + 4)|0;
   $add5$i = (($add$i) + ($call4$i))|0;
   $conv$i$i = $add5$i&255;
   $arrayidx$i18$i = ((($p$2)) + 7|0);
   HEAP8[$arrayidx$i18$i>>0] = $conv$i$i;
   $shr$i$i = $add5$i >>> 8;
   $conv$1$i$i = $shr$i$i&255;
   $arrayidx$1$i19$i = ((($p$2)) + 6|0);
   HEAP8[$arrayidx$1$i19$i>>0] = $conv$1$i$i;
   $shr$1$i$i = $add5$i >>> 16;
   $conv$2$i$i = $shr$1$i$i&255;
   $arrayidx$2$i20$i = ((($p$2)) + 5|0);
   HEAP8[$arrayidx$2$i20$i>>0] = $conv$2$i$i;
   $shr$2$i$i = $add5$i >>> 24;
   $conv$3$i$i = $shr$2$i$i&255;
   HEAP8[$add$ptr$i$i>>0] = $conv$3$i$i;
   $add$ptr$i21$i = ((($p$2)) + 8|0);
   $incdec$ptr$i = ((($p$2)) + 9|0);
   HEAP8[$add$ptr$i21$i>>0] = 0;
   $incdec$ptr7$i = ((($p$2)) + 10|0);
   HEAP8[$incdec$ptr$i>>0] = 0;
   $incdec$ptr8$i = ((($p$2)) + 11|0);
   HEAP8[$incdec$ptr7$i>>0] = 0;
   $98 = HEAP8[$albumart_mime$1>>0]|0;
   $tobool926$i = ($98<<24>>24)==(0);
   if ($tobool926$i) {
    $frame$addr$0$lcssa$i = $incdec$ptr8$i;
   } else {
    $99 = $98;$frame$addr$027$i = $incdec$ptr8$i;$mimetype$addr$028$i = $albumart_mime$1;
    while(1) {
     $incdec$ptr10$i = ((($mimetype$addr$028$i)) + 1|0);
     $incdec$ptr11$i = ((($frame$addr$027$i)) + 1|0);
     HEAP8[$frame$addr$027$i>>0] = $99;
     $100 = HEAP8[$incdec$ptr10$i>>0]|0;
     $tobool9$i = ($100<<24>>24)==(0);
     if ($tobool9$i) {
      $frame$addr$0$lcssa$i = $incdec$ptr11$i;
      break;
     } else {
      $99 = $100;$frame$addr$027$i = $incdec$ptr11$i;$mimetype$addr$028$i = $incdec$ptr10$i;
     }
    }
   }
   $incdec$ptr12$i = ((($frame$addr$0$lcssa$i)) + 1|0);
   HEAP8[$frame$addr$0$lcssa$i>>0] = 0;
   $incdec$ptr13$i = ((($frame$addr$0$lcssa$i)) + 2|0);
   HEAP8[$incdec$ptr12$i>>0] = 0;
   HEAP8[$incdec$ptr13$i>>0] = 0;
   $incdec$ptr14$i = ((($frame$addr$0$lcssa$i)) + 3|0);
   $data$addr$024$i = $96;$frame$addr$123$i = $incdec$ptr14$i;$size$addr$025$i = $97;
   while(1) {
    $dec$i = (($size$addr$025$i) + -1)|0;
    $incdec$ptr18$i = ((($data$addr$024$i)) + 1|0);
    $101 = HEAP8[$data$addr$024$i>>0]|0;
    $incdec$ptr19$i = ((($frame$addr$123$i)) + 1|0);
    HEAP8[$frame$addr$123$i>>0] = $101;
    $tobool16$i = ($dec$i|0)==(0);
    if ($tobool16$i) {
     break;
    } else {
     $data$addr$024$i = $incdec$ptr18$i;$frame$addr$123$i = $incdec$ptr19$i;$size$addr$025$i = $dec$i;
    }
   }
   $102 = (($97) + 3)|0;
   $scevgep$i = (($frame$addr$0$lcssa$i) + ($102)|0);
   $p$3 = $scevgep$i;
  } else {
   $p$3 = $p$2;
  }
 }
 $sub$ptr$lhs$cast = $p$3;
 $sub$ptr$rhs$cast = $buffer;
 $sub$ptr$sub90 = (($tag_size$4) + ($sub$ptr$rhs$cast))|0;
 $sub177 = (($sub$ptr$sub90) - ($sub$ptr$lhs$cast))|0;
 _memset(($p$3|0),0,($sub177|0))|0;
 $103 = $tag_size$4;
 STACKTOP = sp;return ($103|0);
}
function _id3tag_write_v2($gfp) {
 $gfp = $gfp|0;
 var $$idx20 = 0, $$idx20$val = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $arrayidx = 0, $call4 = 0, $call5 = 0, $call8 = 0, $cmp = 0, $cmp1124 = 0, $cmp9 = 0, $exitcond = 0, $i$025 = 0, $inc = 0, $internal_flags = 0, $retval$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $internal_flags = ((($gfp)) + 288|0);
 $0 = HEAP32[$internal_flags>>2]|0;
 $$idx20 = ((($0)) + 85696|0);
 $$idx20$val = HEAP32[$$idx20>>2]|0;
 $1 = $$idx20$val & 5;
 $2 = ($1|0)==(1);
 if (!($2)) {
  $retval$1 = 0;
  return ($retval$1|0);
 }
 $call4 = (_lame_get_id3v2_tag($gfp,0,0)|0);
 $call5 = (_calloc($call4,1)|0);
 $cmp = ($call5|0)==(0|0);
 if ($cmp) {
  $retval$1 = -1;
  return ($retval$1|0);
 }
 $call8 = (_lame_get_id3v2_tag($gfp,$call5,$call4)|0);
 $cmp9 = ($call8>>>0)>($call4>>>0);
 if ($cmp9) {
  _free($call5);
  $retval$1 = -1;
  return ($retval$1|0);
 }
 $cmp1124 = ($call8|0)==(0);
 if (!($cmp1124)) {
  $i$025 = 0;
  while(1) {
   $arrayidx = (($call5) + ($i$025)|0);
   $3 = HEAP8[$arrayidx>>0]|0;
   _add_dummy_byte($0,$3,1);
   $inc = (($i$025) + 1)|0;
   $exitcond = ($inc|0)==($call8|0);
   if ($exitcond) {
    break;
   } else {
    $i$025 = $inc;
   }
  }
 }
 _free($call5);
 $retval$1 = $call8;
 return ($retval$1|0);
}
function _lame_get_id3v1_tag($gfp,$buffer,$size) {
 $gfp = $gfp|0;
 $buffer = $buffer|0;
 $size = $size|0;
 var $$ = 0, $$idx35 = 0, $$idx35$val = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $album = 0, $and$i124 = 0, $artist = 0, $cmp = 0, $cmp1 = 0, $cmp4 = 0, $cmp7 = 0, $comment = 0, $cond36 = 0, $conv = 0, $conv4$i102 = 0, $conv48 = 0, $dec10$i = 0, $dec10$i112 = 0, $dec10$i46 = 0, $dec10$i68 = 0, $dec10$i90 = 0, $dec10$in$i = 0;
 var $dec10$in$i110 = 0, $dec10$in$i44 = 0, $dec10$in$i66 = 0, $dec10$in$i88 = 0, $dec717$in$i = 0, $dec717$in$i103 = 0, $dec717$in$i37 = 0, $dec717$in$i59 = 0, $dec717$in$i81 = 0, $field$addr$0$lcssa$i = 0, $field$addr$0$lcssa$i100 = 0, $field$addr$0$lcssa$i122 = 0, $field$addr$0$lcssa$i56 = 0, $field$addr$0$lcssa$i78 = 0, $field$addr$0$ph16$i = 0, $field$addr$0$ph16$i104 = 0, $field$addr$0$ph16$i38 = 0, $field$addr$0$ph16$i60 = 0, $field$addr$0$ph16$i82 = 0, $field$addr$09$i = 0;
 var $field$addr$09$i111 = 0, $field$addr$09$i45 = 0, $field$addr$09$i67 = 0, $field$addr$09$i89 = 0, $genre_id3v1 = 0, $incdec$ptr = 0, $incdec$ptr$i = 0, $incdec$ptr$i115 = 0, $incdec$ptr$i49 = 0, $incdec$ptr$i71 = 0, $incdec$ptr$i93 = 0, $incdec$ptr17 = 0, $incdec$ptr18 = 0, $incdec$ptr3$i = 0, $incdec$ptr3$i116 = 0, $incdec$ptr3$i50 = 0, $incdec$ptr3$i72 = 0, $incdec$ptr3$i94 = 0, $incdec$ptr42 = 0, $incdec$ptr45 = 0;
 var $incdec$ptr5$i = 0, $incdec$ptr5$i119 = 0, $incdec$ptr5$i53 = 0, $incdec$ptr5$i75 = 0, $incdec$ptr5$i97 = 0, $internal_flags = 0, $or$cond = 0, $p$0 = 0, $retval$0 = 0, $scevgep$i = 0, $scevgep$i108 = 0, $scevgep$i42 = 0, $scevgep$i64 = 0, $scevgep$i86 = 0, $text$addr$0$ph14$i = 0, $text$addr$0$ph14$i105 = 0, $text$addr$0$ph14$i39 = 0, $text$addr$0$ph14$i61 = 0, $text$addr$0$ph14$i83 = 0, $title = 0;
 var $tobool$i = 0, $tobool$i120 = 0, $tobool$i54 = 0, $tobool$i76 = 0, $tobool$i98 = 0, $tobool1$i = 0, $tobool1$i106 = 0, $tobool1$i40 = 0, $tobool1$i62 = 0, $tobool1$i84 = 0, $tobool2$i = 0, $tobool2$i113 = 0, $tobool2$i47 = 0, $tobool2$i69 = 0, $tobool2$i91 = 0, $tobool29 = 0, $tobool35 = 0, $tobool40 = 0, $tobool8$i = 0, $tobool8$i117 = 0;
 var $tobool8$i51 = 0, $tobool8$i73 = 0, $tobool8$i95 = 0, $track_id3v1 = 0, $vararg_buffer = 0, $year = 0, $year25 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $year = sp + 4|0;
 $cmp = ($gfp|0)==(0|0);
 if ($cmp) {
  $retval$0 = 0;
  STACKTOP = sp;return ($retval$0|0);
 }
 $cmp1 = ($size>>>0)<(128);
 if ($cmp1) {
  $retval$0 = 128;
  STACKTOP = sp;return ($retval$0|0);
 }
 $internal_flags = ((($gfp)) + 288|0);
 $0 = HEAP32[$internal_flags>>2]|0;
 $cmp4 = ($0|0)==(0|0);
 $cmp7 = ($buffer|0)==(0|0);
 $or$cond = $cmp7 | $cmp4;
 if ($or$cond) {
  $retval$0 = 0;
  STACKTOP = sp;return ($retval$0|0);
 }
 $$idx35 = ((($0)) + 85696|0);
 $$idx35$val = HEAP32[$$idx35>>2]|0;
 $1 = $$idx35$val & 9;
 $2 = ($1|0)==(1);
 if (!($2)) {
  $retval$0 = 0;
  STACKTOP = sp;return ($retval$0|0);
 }
 $and$i124 = $$idx35$val << 1;
 $3 = $and$i124 & 32;
 $incdec$ptr = ((($buffer)) + 1|0);
 HEAP8[$buffer>>0] = 84;
 $incdec$ptr17 = ((($buffer)) + 2|0);
 HEAP8[$incdec$ptr>>0] = 65;
 $incdec$ptr18 = ((($buffer)) + 3|0);
 HEAP8[$incdec$ptr17>>0] = 71;
 $title = ((($0)) + 85704|0);
 $4 = HEAP32[$title>>2]|0;
 $conv4$i102 = $3&255;
 $dec717$in$i103 = 30;$field$addr$0$ph16$i104 = $incdec$ptr18;$text$addr$0$ph14$i105 = $4;
 L13: while(1) {
  $tobool1$i106 = ($text$addr$0$ph14$i105|0)==(0|0);
  if ($tobool1$i106) {
   label = 7;
   break;
  } else {
   $dec10$in$i110 = $dec717$in$i103;$field$addr$09$i111 = $field$addr$0$ph16$i104;
  }
  while(1) {
   $dec10$i112 = (($dec10$in$i110) + -1)|0;
   $5 = HEAP8[$text$addr$0$ph14$i105>>0]|0;
   $tobool2$i113 = ($5<<24>>24)==(0);
   if (!($tobool2$i113)) {
    break;
   }
   $incdec$ptr5$i119 = ((($field$addr$09$i111)) + 1|0);
   HEAP8[$field$addr$09$i111>>0] = $conv4$i102;
   $tobool$i120 = ($dec10$i112|0)==(0);
   if ($tobool$i120) {
    $field$addr$0$lcssa$i122 = $incdec$ptr5$i119;
    break L13;
   } else {
    $dec10$in$i110 = $dec10$i112;$field$addr$09$i111 = $incdec$ptr5$i119;
   }
  }
  $incdec$ptr$i115 = ((($text$addr$0$ph14$i105)) + 1|0);
  $incdec$ptr3$i116 = ((($field$addr$09$i111)) + 1|0);
  HEAP8[$field$addr$09$i111>>0] = $5;
  $tobool8$i117 = ($dec10$i112|0)==(0);
  if ($tobool8$i117) {
   $field$addr$0$lcssa$i122 = $incdec$ptr3$i116;
   break;
  } else {
   $dec717$in$i103 = $dec10$i112;$field$addr$0$ph16$i104 = $incdec$ptr3$i116;$text$addr$0$ph14$i105 = $incdec$ptr$i115;
  }
 }
 if ((label|0) == 7) {
  _memset(($field$addr$0$ph16$i104|0),($conv4$i102|0),($dec717$in$i103|0))|0;
  $scevgep$i108 = (($field$addr$0$ph16$i104) + ($dec717$in$i103)|0);
  $field$addr$0$lcssa$i122 = $scevgep$i108;
 }
 $artist = ((($0)) + 85708|0);
 $6 = HEAP32[$artist>>2]|0;
 $dec717$in$i81 = 30;$field$addr$0$ph16$i82 = $field$addr$0$lcssa$i122;$text$addr$0$ph14$i83 = $6;
 L22: while(1) {
  $tobool1$i84 = ($text$addr$0$ph14$i83|0)==(0|0);
  if ($tobool1$i84) {
   label = 13;
   break;
  } else {
   $dec10$in$i88 = $dec717$in$i81;$field$addr$09$i89 = $field$addr$0$ph16$i82;
  }
  while(1) {
   $dec10$i90 = (($dec10$in$i88) + -1)|0;
   $7 = HEAP8[$text$addr$0$ph14$i83>>0]|0;
   $tobool2$i91 = ($7<<24>>24)==(0);
   if (!($tobool2$i91)) {
    break;
   }
   $incdec$ptr5$i97 = ((($field$addr$09$i89)) + 1|0);
   HEAP8[$field$addr$09$i89>>0] = $conv4$i102;
   $tobool$i98 = ($dec10$i90|0)==(0);
   if ($tobool$i98) {
    $field$addr$0$lcssa$i100 = $incdec$ptr5$i97;
    break L22;
   } else {
    $dec10$in$i88 = $dec10$i90;$field$addr$09$i89 = $incdec$ptr5$i97;
   }
  }
  $incdec$ptr$i93 = ((($text$addr$0$ph14$i83)) + 1|0);
  $incdec$ptr3$i94 = ((($field$addr$09$i89)) + 1|0);
  HEAP8[$field$addr$09$i89>>0] = $7;
  $tobool8$i95 = ($dec10$i90|0)==(0);
  if ($tobool8$i95) {
   $field$addr$0$lcssa$i100 = $incdec$ptr3$i94;
   break;
  } else {
   $dec717$in$i81 = $dec10$i90;$field$addr$0$ph16$i82 = $incdec$ptr3$i94;$text$addr$0$ph14$i83 = $incdec$ptr$i93;
  }
 }
 if ((label|0) == 13) {
  _memset(($field$addr$0$ph16$i82|0),($conv4$i102|0),($dec717$in$i81|0))|0;
  $scevgep$i86 = (($field$addr$0$ph16$i82) + ($dec717$in$i81)|0);
  $field$addr$0$lcssa$i100 = $scevgep$i86;
 }
 $album = ((($0)) + 85712|0);
 $8 = HEAP32[$album>>2]|0;
 $dec717$in$i59 = 30;$field$addr$0$ph16$i60 = $field$addr$0$lcssa$i100;$text$addr$0$ph14$i61 = $8;
 L31: while(1) {
  $tobool1$i62 = ($text$addr$0$ph14$i61|0)==(0|0);
  if ($tobool1$i62) {
   label = 19;
   break;
  } else {
   $dec10$in$i66 = $dec717$in$i59;$field$addr$09$i67 = $field$addr$0$ph16$i60;
  }
  while(1) {
   $dec10$i68 = (($dec10$in$i66) + -1)|0;
   $9 = HEAP8[$text$addr$0$ph14$i61>>0]|0;
   $tobool2$i69 = ($9<<24>>24)==(0);
   if (!($tobool2$i69)) {
    break;
   }
   $incdec$ptr5$i75 = ((($field$addr$09$i67)) + 1|0);
   HEAP8[$field$addr$09$i67>>0] = $conv4$i102;
   $tobool$i76 = ($dec10$i68|0)==(0);
   if ($tobool$i76) {
    $field$addr$0$lcssa$i78 = $incdec$ptr5$i75;
    break L31;
   } else {
    $dec10$in$i66 = $dec10$i68;$field$addr$09$i67 = $incdec$ptr5$i75;
   }
  }
  $incdec$ptr$i71 = ((($text$addr$0$ph14$i61)) + 1|0);
  $incdec$ptr3$i72 = ((($field$addr$09$i67)) + 1|0);
  HEAP8[$field$addr$09$i67>>0] = $9;
  $tobool8$i73 = ($dec10$i68|0)==(0);
  if ($tobool8$i73) {
   $field$addr$0$lcssa$i78 = $incdec$ptr3$i72;
   break;
  } else {
   $dec717$in$i59 = $dec10$i68;$field$addr$0$ph16$i60 = $incdec$ptr3$i72;$text$addr$0$ph14$i61 = $incdec$ptr$i71;
  }
 }
 if ((label|0) == 19) {
  _memset(($field$addr$0$ph16$i60|0),($conv4$i102|0),($dec717$in$i59|0))|0;
  $scevgep$i64 = (($field$addr$0$ph16$i60) + ($dec717$in$i59)|0);
  $field$addr$0$lcssa$i78 = $scevgep$i64;
 }
 $year25 = ((($0)) + 85700|0);
 $10 = HEAP32[$year25>>2]|0;
 HEAP32[$vararg_buffer>>2] = $10;
 (_sprintf($year,15443,$vararg_buffer)|0);
 $11 = HEAP32[$year25>>2]|0;
 $tobool29 = ($11|0)!=(0);
 $$ = $tobool29 ? $year : 0;
 $dec717$in$i37 = 4;$field$addr$0$ph16$i38 = $field$addr$0$lcssa$i78;$text$addr$0$ph14$i39 = $$;
 L40: while(1) {
  $tobool1$i40 = ($text$addr$0$ph14$i39|0)==(0|0);
  if ($tobool1$i40) {
   label = 25;
   break;
  } else {
   $dec10$in$i44 = $dec717$in$i37;$field$addr$09$i45 = $field$addr$0$ph16$i38;
  }
  while(1) {
   $dec10$i46 = (($dec10$in$i44) + -1)|0;
   $12 = HEAP8[$text$addr$0$ph14$i39>>0]|0;
   $tobool2$i47 = ($12<<24>>24)==(0);
   if (!($tobool2$i47)) {
    break;
   }
   $incdec$ptr5$i53 = ((($field$addr$09$i45)) + 1|0);
   HEAP8[$field$addr$09$i45>>0] = $conv4$i102;
   $tobool$i54 = ($dec10$i46|0)==(0);
   if ($tobool$i54) {
    $field$addr$0$lcssa$i56 = $incdec$ptr5$i53;
    break L40;
   } else {
    $dec10$in$i44 = $dec10$i46;$field$addr$09$i45 = $incdec$ptr5$i53;
   }
  }
  $incdec$ptr$i49 = ((($text$addr$0$ph14$i39)) + 1|0);
  $incdec$ptr3$i50 = ((($field$addr$09$i45)) + 1|0);
  HEAP8[$field$addr$09$i45>>0] = $12;
  $tobool8$i51 = ($dec10$i46|0)==(0);
  if ($tobool8$i51) {
   $field$addr$0$lcssa$i56 = $incdec$ptr3$i50;
   break;
  } else {
   $dec717$in$i37 = $dec10$i46;$field$addr$0$ph16$i38 = $incdec$ptr3$i50;$text$addr$0$ph14$i39 = $incdec$ptr$i49;
  }
 }
 if ((label|0) == 25) {
  _memset(($field$addr$0$ph16$i38|0),($conv4$i102|0),($dec717$in$i37|0))|0;
  $scevgep$i42 = (($field$addr$0$ph16$i38) + ($dec717$in$i37)|0);
  $field$addr$0$lcssa$i56 = $scevgep$i42;
 }
 $comment = ((($0)) + 85716|0);
 $13 = HEAP32[$comment>>2]|0;
 $track_id3v1 = ((($0)) + 85720|0);
 $14 = HEAP32[$track_id3v1>>2]|0;
 $tobool35 = ($14|0)!=(0);
 $cond36 = $tobool35 ? 28 : 30;
 $dec717$in$i = $cond36;$field$addr$0$ph16$i = $field$addr$0$lcssa$i56;$text$addr$0$ph14$i = $13;
 L49: while(1) {
  $tobool1$i = ($text$addr$0$ph14$i|0)==(0|0);
  if ($tobool1$i) {
   label = 31;
   break;
  } else {
   $dec10$in$i = $dec717$in$i;$field$addr$09$i = $field$addr$0$ph16$i;
  }
  while(1) {
   $dec10$i = (($dec10$in$i) + -1)|0;
   $15 = HEAP8[$text$addr$0$ph14$i>>0]|0;
   $tobool2$i = ($15<<24>>24)==(0);
   if (!($tobool2$i)) {
    break;
   }
   $incdec$ptr5$i = ((($field$addr$09$i)) + 1|0);
   HEAP8[$field$addr$09$i>>0] = $conv4$i102;
   $tobool$i = ($dec10$i|0)==(0);
   if ($tobool$i) {
    $field$addr$0$lcssa$i = $incdec$ptr5$i;
    break L49;
   } else {
    $dec10$in$i = $dec10$i;$field$addr$09$i = $incdec$ptr5$i;
   }
  }
  $incdec$ptr$i = ((($text$addr$0$ph14$i)) + 1|0);
  $incdec$ptr3$i = ((($field$addr$09$i)) + 1|0);
  HEAP8[$field$addr$09$i>>0] = $15;
  $tobool8$i = ($dec10$i|0)==(0);
  if ($tobool8$i) {
   $field$addr$0$lcssa$i = $incdec$ptr3$i;
   break;
  } else {
   $dec717$in$i = $dec10$i;$field$addr$0$ph16$i = $incdec$ptr3$i;$text$addr$0$ph14$i = $incdec$ptr$i;
  }
 }
 if ((label|0) == 31) {
  _memset(($field$addr$0$ph16$i|0),($conv4$i102|0),($dec717$in$i|0))|0;
  $scevgep$i = (($field$addr$0$ph16$i) + ($dec717$in$i)|0);
  $field$addr$0$lcssa$i = $scevgep$i;
 }
 $16 = HEAP32[$track_id3v1>>2]|0;
 $tobool40 = ($16|0)==(0);
 if ($tobool40) {
  $p$0 = $field$addr$0$lcssa$i;
 } else {
  $incdec$ptr42 = ((($field$addr$0$lcssa$i)) + 1|0);
  HEAP8[$field$addr$0$lcssa$i>>0] = 0;
  $17 = HEAP32[$track_id3v1>>2]|0;
  $conv = $17&255;
  $incdec$ptr45 = ((($field$addr$0$lcssa$i)) + 2|0);
  HEAP8[$incdec$ptr42>>0] = $conv;
  $p$0 = $incdec$ptr45;
 }
 $genre_id3v1 = ((($0)) + 85724|0);
 $18 = HEAP32[$genre_id3v1>>2]|0;
 $conv48 = $18&255;
 HEAP8[$p$0>>0] = $conv48;
 $retval$0 = 128;
 STACKTOP = sp;return ($retval$0|0);
}
function _id3tag_write_v1($gfp) {
 $gfp = $gfp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $arrayidx = 0, $call = 0, $exitcond = 0, $i$012 = 0, $inc = 0, $internal_flags = 0, $retval$0 = 0, $tag = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $tag = sp;
 $internal_flags = ((($gfp)) + 288|0);
 $0 = HEAP32[$internal_flags>>2]|0;
 $call = (_lame_get_id3v1_tag($gfp,$tag,128)|0);
 $1 = (($call) + -1)|0;
 $2 = ($1>>>0)>(127);
 if ($2) {
  $retval$0 = 0;
  STACKTOP = sp;return ($retval$0|0);
 } else {
  $i$012 = 0;
 }
 while(1) {
  $arrayidx = (($tag) + ($i$012)|0);
  $3 = HEAP8[$arrayidx>>0]|0;
  _add_dummy_byte($0,$3,1);
  $inc = (($i$012) + 1)|0;
  $exitcond = ($inc|0)==($call|0);
  if ($exitcond) {
   $retval$0 = $call;
   break;
  } else {
   $i$012 = $inc;
  }
 }
 STACKTOP = sp;return ($retval$0|0);
}
function _is_lame_global_flags_valid($gfp) {
 $gfp = $gfp|0;
 var $$ = 0, $0 = 0, $cmp = 0, $cmp1 = 0, $retval$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($gfp|0)==(0|0);
 if ($cmp) {
  $retval$0 = 0;
  return ($retval$0|0);
 }
 $0 = HEAP32[$gfp>>2]|0;
 $cmp1 = ($0|0)==(-487877);
 $$ = $cmp1&1;
 $retval$0 = $$;
 return ($retval$0|0);
}
function _lame_init_params($gfp) {
 $gfp = $gfp|0;
 var $$ = 0, $$$$$i = 0, $$$$i = 0, $$$29$i = 0, $$$i = 0, $$29$i = 0, $$632 = 0, $$633 = 0, $$637 = 0, $$638 = 0, $$639 = 0, $$mul1255 = 0.0, $$pr$i = 0.0, $$pre = 0, $$pre$i = 0.0, $$pre707 = 0, $$pre708 = 0, $$pre709 = 0.0, $$pre710 = 0, $$pre711 = 0;
 var $$pre712 = 0, $$pre713 = 0, $$pre714 = 0, $$pre714$1 = 0, $$pre714$10 = 0, $$pre714$11 = 0, $$pre714$12 = 0, $$pre714$13 = 0, $$pre714$14 = 0, $$pre714$15 = 0, $$pre714$16 = 0, $$pre714$17 = 0, $$pre714$2 = 0, $$pre714$3 = 0, $$pre714$4 = 0, $$pre714$5 = 0, $$pre714$6 = 0, $$pre714$7 = 0, $$pre714$8 = 0, $$pre714$9 = 0;
 var $$pre715 = 0, $$pre715$1 = 0, $$pre715$10 = 0, $$pre715$11 = 0, $$pre715$12 = 0, $$pre715$13 = 0, $$pre715$14 = 0, $$pre715$15 = 0, $$pre715$16 = 0, $$pre715$17 = 0, $$pre715$2 = 0, $$pre715$3 = 0, $$pre715$4 = 0, $$pre715$5 = 0, $$pre715$6 = 0, $$pre715$7 = 0, $$pre715$8 = 0, $$pre715$9 = 0, $$pre716 = 0, $$pre717 = 0;
 var $$pre718 = 0, $$pre719 = 0, $$sink = 0, $$sink$i = 0, $$sink4 = 0.0, $$sink6 = 0, $$sink686 = 0, $$sink753 = 0, $$suggested_samplefreq$0$i = 0, $$suggested_samplefreq$2$i = 0, $$suggested_samplefreq$4$i = 0, $$suggested_samplefreq$6$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0.0, $12 = 0, $120 = 0.0, $121 = 0.0, $122 = 0;
 var $123 = 0.0, $124 = 0.0, $125 = 0.0, $126 = 0.0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0.0, $199 = 0.0, $2 = 0, $20 = 0, $200 = 0.0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0.0, $253 = 0.0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0.0, $259 = 0, $26 = 0, $260 = 0.0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0.0, $266 = 0.0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0.0, $277 = 0.0, $278 = 0.0, $279 = 0.0, $28 = 0, $280 = 0.0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0.0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0.0, $49 = 0, $5 = 0, $50 = 0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0;
 var $56 = 0.0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0.0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0.0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0.0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ABR_iteration_loop$sink = 0, $ATH = 0, $ATH_lower_db = 0, $ATH_offset_db = 0, $ATH_offset_factor = 0, $ATHcurve = 0, $ATHcurve1163 = 0, $ATHonly = 0, $ATHonly1166 = 0, $ATHshort = 0, $ATHshort1167 = 0, $ATHtype = 0;
 var $ATHtype1165 = 0, $PeakSample$i = 0, $VBR = 0, $VBR_hard_min = 0, $VBR_max_bitrate_kbps = 0, $VBR_mean_bitrate_kbps = 0, $VBR_mean_bitrate_kbps1037 = 0, $VBR_mean_bitrate_kbps1078$phi$trans$insert = 0, $VBR_mean_bitrate_kbps179 = 0, $VBR_mean_bitrate_kbps201 = 0, $VBR_mean_bitrate_kbps237$pre$phiZ2D = 0, $VBR_mean_bitrate_kbps339 = 0, $VBR_mean_bitrate_kbps512 = 0, $VBR_mean_bitrate_kbps590 = 0, $VBR_mean_bitrate_kbps954 = 0, $VBR_min_bitrate_kbps = 0, $VBR_q = 0, $VBR_q341 = 0, $VBR_q362 = 0, $VBR_q386 = 0;
 var $VBR_q581 = 0, $VBR_q878 = 0, $VBR_q909 = 0, $VBR_q_frac = 0, $VBR_q_frac356 = 0, $VBR_q_frac380 = 0, $VBR_q_frac404 = 0, $aa_sensitivity_p = 0, $add = 0.0, $add$i = 0.0, $add$i646 = 0.0, $add$i649 = 0.0, $add129$i = 0.0, $add146$i = 0.0, $add311 = 0.0, $add353 = 0, $add376 = 0, $add400 = 0, $add630 = 0, $add745 = 0;
 var $add750 = 0, $add778$1 = 0, $add778$2 = 0, $add778$3 = 0, $add778$4 = 0, $add778$5 = 0, $add817$1 = 0, $add817$2 = 0, $add817$3 = 0, $add817$4 = 0, $add817$5 = 0, $add845 = 0, $add971 = 0.0, $add975 = 0.0, $adjust_alto_db = 0, $adjust_bass_db = 0, $adjust_sfb21_db = 0, $adjust_treble_db = 0, $amd3dnow = 0, $analysis = 0;
 var $analysis2 = 0, $and = 0, $and1173 = 0, $and1186 = 0, $and1199 = 0, $and1212 = 0, $arrayidx$i = 0, $arrayidx1026 = 0, $arrayidx1031 = 0, $arrayidx1288 = 0, $arrayidx1293 = 0, $arrayidx1298 = 0, $arrayidx1303 = 0, $arrayidx350 = 0, $arrayidx354 = 0, $arrayidx372 = 0, $arrayidx377 = 0, $arrayidx396 = 0, $arrayidx401 = 0, $arrayidx582 = 0;
 var $arrayidx756 = 0, $arrayidx756$1 = 0, $arrayidx756$10 = 0, $arrayidx756$11 = 0, $arrayidx756$12 = 0, $arrayidx756$13 = 0, $arrayidx756$14 = 0, $arrayidx756$15 = 0, $arrayidx756$16 = 0, $arrayidx756$17 = 0, $arrayidx756$18 = 0, $arrayidx756$19 = 0, $arrayidx756$2 = 0, $arrayidx756$20 = 0, $arrayidx756$21 = 0, $arrayidx756$22 = 0, $arrayidx756$3 = 0, $arrayidx756$4 = 0, $arrayidx756$5 = 0, $arrayidx756$6 = 0;
 var $arrayidx756$7 = 0, $arrayidx756$8 = 0, $arrayidx756$9 = 0, $arrayidx758 = 0, $arrayidx758$1 = 0, $arrayidx758$10 = 0, $arrayidx758$11 = 0, $arrayidx758$12 = 0, $arrayidx758$13 = 0, $arrayidx758$14 = 0, $arrayidx758$15 = 0, $arrayidx758$16 = 0, $arrayidx758$17 = 0, $arrayidx758$18 = 0, $arrayidx758$19 = 0, $arrayidx758$2 = 0, $arrayidx758$20 = 0, $arrayidx758$21 = 0, $arrayidx758$22 = 0, $arrayidx758$3 = 0;
 var $arrayidx758$4 = 0, $arrayidx758$5 = 0, $arrayidx758$6 = 0, $arrayidx758$7 = 0, $arrayidx758$8 = 0, $arrayidx758$9 = 0, $arrayidx780 = 0, $arrayidx780$1 = 0, $arrayidx780$2 = 0, $arrayidx780$3 = 0, $arrayidx780$4 = 0, $arrayidx780$5 = 0, $arrayidx780$6 = 0, $arrayidx792 = 0, $arrayidx792$1 = 0, $arrayidx792$10 = 0, $arrayidx792$11 = 0, $arrayidx792$12 = 0, $arrayidx792$13 = 0, $arrayidx792$2 = 0;
 var $arrayidx792$3 = 0, $arrayidx792$4 = 0, $arrayidx792$5 = 0, $arrayidx792$6 = 0, $arrayidx792$7 = 0, $arrayidx792$8 = 0, $arrayidx792$9 = 0, $arrayidx795 = 0, $arrayidx795$1 = 0, $arrayidx795$10 = 0, $arrayidx795$11 = 0, $arrayidx795$12 = 0, $arrayidx795$13 = 0, $arrayidx795$2 = 0, $arrayidx795$3 = 0, $arrayidx795$4 = 0, $arrayidx795$5 = 0, $arrayidx795$6 = 0, $arrayidx795$7 = 0, $arrayidx795$8 = 0;
 var $arrayidx795$9 = 0, $arrayidx819 = 0, $arrayidx819$1 = 0, $arrayidx819$2 = 0, $arrayidx819$3 = 0, $arrayidx819$4 = 0, $arrayidx819$5 = 0, $arrayidx819$6 = 0, $arrayidx857 = 0, $arrayidx857$1 = 0, $arrayidx857$10 = 0, $arrayidx857$11 = 0, $arrayidx857$12 = 0, $arrayidx857$13 = 0, $arrayidx857$14 = 0, $arrayidx857$15 = 0, $arrayidx857$16 = 0, $arrayidx857$17 = 0, $arrayidx857$2 = 0, $arrayidx857$3 = 0;
 var $arrayidx857$4 = 0, $arrayidx857$5 = 0, $arrayidx857$6 = 0, $arrayidx857$7 = 0, $arrayidx857$8 = 0, $arrayidx857$9 = 0, $arrayidx857761 = 0, $athaa_sensitivity = 0, $athaa_type = 0, $avg_bitrate = 0, $band$091$i = 0, $band$188$i = 0, $band$287$i = 0, $bf$clear = 0, $bf$clear13 = 0, $bf$clear22 = 0, $bf$clear27 = 0, $bf$clear37 = 0, $bf$clear44 = 0, $bf$clear52 = 0;
 var $bf$load = 0, $bf$load12 = 0, $bf$load20 = 0, $bf$load26 = 0, $bf$load34 = 0, $bf$load41 = 0, $bf$load48 = 0, $bf$set = 0, $bf$set23 = 0, $bf$set38 = 0, $bf$set45 = 0, $bf$shl = 0, $bf$shl36 = 0, $bf$shl43 = 0, $bf$value = 0, $bf$value21 = 0, $bf$value35 = 0, $bf$value42 = 0, $bitrate_index = 0, $bitrate_index729 = 0;
 var $brate = 0, $brate106 = 0, $brate1077 = 0, $brate337 = 0, $brate496 = 0, $brate496$sink = 0, $brate602 = 0, $brate719 = 0, $brate951 = 0, $buffer_constraint = 0, $call = 0, $call$i = 0, $call$i$i = 0.0, $call$i641 = 0, $call$i82$i = 0.0, $call1010 = 0, $call1015 = 0, $call1115 = 0, $call1121 = 0, $call1127 = 0.0;
 var $call1132 = 0, $call1324 = 0, $call147 = 0, $call161 = 0, $call168 = 0, $call18 = 0, $call32 = 0, $call39 = 0, $call443673 = 0, $call538 = 0, $call555 = 0, $call56 = 0, $call65 = 0, $call702 = 0, $call722 = 0, $call727 = 0, $call992 = 0, $call997 = 0, $cfg1 = 0, $channels_in = 0;
 var $channels_out = 0, $channels_out723 = 0, $channels_out728 = 0, $channels_out729 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i654 = 0, $cmp$i651 = 0, $cmp$i657 = 0, $cmp$i77$i = 0, $cmp1$i = 0, $cmp1$i$i = 0, $cmp10$i = 0, $cmp10$i660 = 0, $cmp100$i = 0, $cmp1000 = 0, $cmp1018 = 0, $cmp1038 = 0, $cmp1055 = 0, $cmp107 = 0;
 var $cmp108$i = 0, $cmp1081 = 0, $cmp111 = 0, $cmp1116 = 0, $cmp1122 = 0, $cmp1128 = 0, $cmp1135 = 0, $cmp1140 = 0, $cmp1145 = 0, $cmp1151 = 0, $cmp116$i = 0, $cmp1176 = 0, $cmp1189 = 0, $cmp119 = 0, $cmp119$i = 0, $cmp1202 = 0, $cmp1215 = 0, $cmp122$i = 0, $cmp1257 = 0, $cmp1261 = 0;
 var $cmp127 = 0, $cmp13$i = 0, $cmp13$i661 = 0, $cmp130$i = 0, $cmp1307 = 0, $cmp136$i = 0, $cmp138 = 0, $cmp141 = 0, $cmp15$i = 0, $cmp16$i = 0, $cmp16$i662 = 0, $cmp176 = 0, $cmp180 = 0, $cmp188 = 0, $cmp19$i = 0, $cmp198 = 0, $cmp202 = 0, $cmp21$i = 0, $cmp211 = 0, $cmp22$i = 0;
 var $cmp221 = 0, $cmp23$i = 0, $cmp230 = 0, $cmp253 = 0, $cmp256 = 0, $cmp260 = 0, $cmp282 = 0, $cmp287 = 0, $cmp29$i = 0, $cmp291 = 0, $cmp3$i$i = 0, $cmp3$i78$i = 0, $cmp32$i = 0, $cmp323 = 0, $cmp332 = 0, $cmp35$i = 0, $cmp36$i = 0, $cmp38$i = 0, $cmp4$i = 0, $cmp4$i658 = 0;
 var $cmp41$i = 0, $cmp41$i663 = 0, $cmp411 = 0, $cmp428 = 0, $cmp434 = 0, $cmp44$i = 0, $cmp44$i664 = 0, $cmp46$i = 0, $cmp47$i = 0, $cmp477 = 0, $cmp50$i = 0, $cmp51$i = 0, $cmp53$i = 0, $cmp53$i665 = 0, $cmp539 = 0, $cmp54 = 0, $cmp56$i = 0, $cmp576 = 0, $cmp59$i = 0, $cmp59$i666 = 0;
 var $cmp60 = 0, $cmp61$i = 0, $cmp610 = 0, $cmp618 = 0, $cmp625 = 0, $cmp63 = 0, $cmp64$i = 0, $cmp64$i668 = 0, $cmp654 = 0, $cmp66$i = 0, $cmp660 = 0, $cmp668 = 0, $cmp67$i = 0, $cmp67$i669 = 0, $cmp679 = 0, $cmp7$i = 0, $cmp7$i659 = 0, $cmp70$i = 0, $cmp705 = 0, $cmp71 = 0;
 var $cmp711 = 0, $cmp73$i = 0, $cmp732 = 0, $cmp74$i = 0, $cmp747 = 0, $cmp75$i = 0, $cmp76$i = 0, $cmp78$i = 0, $cmp79$i = 0, $cmp79$i671 = 0, $cmp81 = 0, $cmp82$i = 0, $cmp82$i672 = 0, $cmp827 = 0, $cmp831 = 0, $cmp85 = 0, $cmp86$i = 0, $cmp861 = 0, $cmp868 = 0, $cmp873 = 0;
 var $cmp882 = 0, $cmp888 = 0, $cmp894 = 0, $cmp903 = 0, $cmp920 = 0, $cmp926 = 0, $cmp93 = 0, $cmp932 = 0, $cmp94$i = 0, $cmp942 = 0, $cmp948 = 0, $cmp95 = 0, $cmp96$i = 0, $cmp978 = 0, $cmp982 = 0, $compression_ratio = 0, $compression_ratio1080 = 0, $compression_ratio137 = 0, $compression_ratio501 = 0, $compression_ratio607 = 0;
 var $cond = 0, $cond194 = 0, $cond21$i = 0, $cond217 = 0, $cond236 = 0, $cond236$sink$sink = 0, $cond578 = 0, $cond726 = 0, $cond833 = 0, $cond838 = 0, $cond838$sink = 0, $cond87$i = 0, $conv$i = 0, $conv$i$i = 0.0, $conv$i640 = 0, $conv$i652 = 0.0, $conv$i80$i = 0.0, $conv104$i = 0.0, $conv107$sink$i = 0.0, $conv107$sink$in$i = 0.0;
 var $conv107$sink$in$in$i = 0.0, $conv107$sink$in$in$in$i = 0.0, $conv1090 = 0.0, $conv1092 = 0.0, $conv115$i = 0.0, $conv1174 = 0.0, $conv1187 = 0.0, $conv1200 = 0.0, $conv1213 = 0.0, $conv124$i = 0.0, $conv128$i = 0.0, $conv131$i = 0.0, $conv141$i = 0.0, $conv144 = 0.0, $conv145$i = 0.0, $conv146 = 0, $conv148$i = 0.0, $conv154 = 0.0, $conv156 = 0.0, $conv158 = 0;
 var $conv252 = 0.0, $conv26$i = 0.0, $conv266 = 0.0, $conv268 = 0.0, $conv270 = 0, $conv273 = 0.0, $conv275 = 0.0, $conv3$i = 0.0, $conv3$i643 = 0.0, $conv3$i653 = 0.0, $conv30$i = 0.0, $conv312 = 0.0, $conv313 = 0, $conv316 = 0.0, $conv318 = 0.0, $conv33$sink$i = 0.0, $conv33$sink$in$i = 0.0, $conv33$sink$in$in$i = 0.0, $conv33$sink$in$in$in$i = 0.0, $conv351 = 0.0;
 var $conv355 = 0.0, $conv357 = 0.0, $conv373 = 0.0, $conv378 = 0.0, $conv38$i = 0.0, $conv381 = 0.0, $conv397 = 0.0, $conv402 = 0.0, $conv405 = 0.0, $conv424 = 0, $conv45$i = 0.0, $conv495$sink = 0.0, $conv495$sink$in = 0, $conv497 = 0.0, $conv500 = 0.0, $conv589 = 0.0, $conv591 = 0.0, $conv594 = 0.0, $conv60$i = 0.0, $conv601 = 0.0;
 var $conv603 = 0.0, $conv606 = 0.0, $conv606$sink = 0.0, $conv62$i = 0.0, $conv622 = 0.0, $conv624 = 0.0, $conv631 = 0.0, $conv633 = 0.0, $conv633$conv624 = 0.0, $conv642 = 0.0, $conv664 = 0.0, $conv666 = 0.0, $conv674 = 0.0, $conv676 = 0.0, $conv692 = 0.0, $conv8$i$i = 0.0, $conv8$i83$i = 0.0, $conv856 = 0.0, $conv856$1 = 0.0, $conv856$10 = 0.0;
 var $conv856$11 = 0.0, $conv856$12 = 0.0, $conv856$13 = 0.0, $conv856$14 = 0.0, $conv856$15 = 0.0, $conv856$16 = 0.0, $conv856$17 = 0.0, $conv856$2 = 0.0, $conv856$3 = 0.0, $conv856$4 = 0.0, $conv856$5 = 0.0, $conv856$6 = 0.0, $conv856$7 = 0.0, $conv856$8 = 0.0, $conv856$9 = 0.0, $conv856760 = 0.0, $conv904 = 0, $conv904$sink = 0, $conv92$i = 0.0, $conv921 = 0;
 var $conv921$sink = 0, $conv94$i = 0.0, $copyright = 0, $copyright76 = 0, $debugf = 0, $decode_on_the_fly = 0, $decode_on_the_fly525$phi$trans$insert = 0, $decode_on_the_fly526 = 0, $decode_on_the_fly526741 = 0, $decode_only = 0, $disable_reservoir = 0, $disable_reservoir567 = 0, $div = 0.0, $div$i = 0.0, $div1091 = 0.0, $div116$i = 0.0, $div130$i = 0.0, $div147$i = 0.0, $div265 = 0.0, $div310 = 0.0;
 var $div37$i = 0.0, $div438 = 0, $div475 = 0, $div475$cond471$sink = 0, $div499 = 0.0, $div593 = 0.0, $div605 = 0.0, $div61$i = 0.0, $div644 = 0.0, $div648 = 0.0, $div659 = 0, $div694 = 0.0, $div698 = 0.0, $div773 = 0, $div811 = 0, $div93$i = 0.0, $emphasis = 0, $emphasis79 = 0, $encoder_delay = 0, $enforce_min_bitrate = 0;
 var $error_protection = 0, $error_protection75 = 0, $errorf = 0, $exitcond$i = 0, $exitcond94$i = 0, $exitcond95$i = 0, $exp_nspsytune = 0, $experimentalY = 0, $experimentalY913 = 0, $extension = 0, $extension78 = 0, $fabsf = 0.0, $fc1$0$i = 0.0, $fc2$0$i = 0.0, $findPeakSample = 0, $findPeakSample530 = 0, $findReplayGain = 0, $findReplayGain524 = 0, $findReplayGain524740 = 0, $force_ms = 0;
 var $force_ms90$phi$trans$insert = 0, $force_ms91 = 0, $frac_SpF = 0, $frame_number$i = 0, $free_format = 0, $free_format101730 = 0, $free_format101737 = 0, $free_format102 = 0, $free_format102731 = 0, $free_format102733 = 0, $free_format102738 = 0, $full_outer_loop12$i = 0, $highpass1 = 0, $highpass1$i = 0, $highpass1650 = 0, $highpass2$i = 0, $highpass2639 = 0, $highpass2651 = 0, $highpass_band$090$i = 0, $highpass_band$1$i = 0;
 var $highpassfreq = 0, $highpassfreq570 = 0, $highpasswidth = 0, $hip = 0, $i$0695 = 0, $inc = 0, $inc$i = 0, $inc153$i = 0, $inc90$i = 0, $interChRatio = 0, $interChRatio1157 = 0, $internal_flags = 0, $iteration_loop = 0, $iteration_loop937 = 0, $iteration_loop960 = 0, $lowpass$0 = 0.0, $lowpass$1 = 0.0, $lowpass$i = 0, $lowpass$i642 = 0, $lowpass1 = 0;
 var $lowpass2 = 0, $lowpass_band$093$i = 0, $lowpass_band$1$i = 0, $lowpassfreq = 0, $lowpassfreq331 = 0, $lowpassfreq569 = 0, $lowpasswidth = 0, $m1226$sroa$0$0 = 0.0, $m1226$sroa$10$0 = 0.0, $m1226$sroa$24$0 = 0.0, $mask_adjust = 0, $mask_adjust_short = 0, $maskingadjust = 0, $maskingadjust_short = 0, $maxband$089$i = 0, $maxband$1$i = 0, $minband$092$i = 0, $minband$1$i = 0, $mmx = 0, $mode = 0;
 var $mode616 = 0, $mode_gr = 0, $msfix = 0, $msfix1158 = 0, $mul = 0.0, $mul$i = 0.0, $mul$i$i = 0.0, $mul$i645 = 0.0, $mul$i648 = 0.0, $mul$i656 = 0.0, $mul$i81$i = 0.0, $mul1161 = 0.0, $mul1183 = 0.0, $mul1196 = 0.0, $mul1209 = 0.0, $mul1244 = 0.0, $mul1255 = 0.0, $mul1269 = 0.0, $mul1269$mul1244 = 0.0, $mul1277 = 0.0;
 var $mul1277$ = 0.0, $mul1312 = 0, $mul1314 = 0, $mul145 = 0.0, $mul151 = 0, $mul153 = 0, $mul157 = 0.0, $mul269 = 0.0, $mul309 = 0.0, $mul422 = 0.0, $mul432 = 0, $mul492 = 0, $mul494 = 0, $mul498 = 0.0, $mul508 = 0, $mul510 = 0, $mul586 = 0, $mul588 = 0, $mul592 = 0.0, $mul598 = 0;
 var $mul600 = 0, $mul604 = 0.0, $mul623 = 0.0, $mul632 = 0.0, $mul665 = 0.0, $mul675 = 0.0, $mul744 = 0, $mul749 = 0, $mul777$2 = 0, $mul777$3 = 0, $mul777$4 = 0, $mul777$5 = 0, $mul816$2 = 0, $mul816$3 = 0, $mul816$4 = 0, $mul816$5 = 0, $mul853 = 0, $mul853$1 = 0, $mul853$10 = 0, $mul853$11 = 0;
 var $mul853$12 = 0, $mul853$13 = 0, $mul853$14 = 0, $mul853$15 = 0, $mul853$16 = 0, $mul853$17 = 0, $mul853$2 = 0, $mul853$3 = 0, $mul853$4 = 0, $mul853$5 = 0, $mul853$6 = 0, $mul853$7 = 0, $mul853$8 = 0, $mul853$9 = 0, $mul853758 = 0, $mul855 = 0, $mul855$1 = 0, $mul855$10 = 0, $mul855$11 = 0, $mul855$12 = 0;
 var $mul855$13 = 0, $mul855$14 = 0, $mul855$15 = 0, $mul855$16 = 0, $mul855$17 = 0, $mul855$2 = 0, $mul855$3 = 0, $mul855$4 = 0, $mul855$5 = 0, $mul855$6 = 0, $mul855$7 = 0, $mul855$8 = 0, $mul855$9 = 0, $mul855759 = 0, $noATH = 0, $noATH1168 = 0, $noise_shaping = 0, $noise_shaping$i = 0, $noise_shaping1074 = 0, $noise_shaping115$i = 0;
 var $noise_shaping14$i = 0, $noise_shaping28$i = 0, $noise_shaping43$i = 0, $noise_shaping5$i = 0, $noise_shaping58$i = 0, $noise_shaping73$i = 0, $noise_shaping93$i = 0, $noise_shaping_amp$i = 0, $noise_shaping_amp105$i = 0, $noise_shaping_amp127$i = 0, $noise_shaping_amp19$i = 0, $noise_shaping_amp33$i = 0, $noise_shaping_amp48$i = 0, $noise_shaping_amp63$i = 0, $noise_shaping_amp83$i = 0, $noise_shaping_stop$i = 0, $noise_shaping_stop106$i = 0, $noise_shaping_stop128$i = 0, $noise_shaping_stop20$i = 0, $noise_shaping_stop34$i = 0;
 var $noise_shaping_stop49$i = 0, $noise_shaping_stop64$i = 0, $noise_shaping_stop84$i = 0, $num_channels = 0, $or = 0, $or$cond = 0, $or$cond$i = 0, $or$cond76$i = 0, $or$cond97$i = 0, $original = 0, $original77 = 0, $ov_enc$i = 0, $pinfo = 0, $preset = 0, $preset1068 = 0, $qa = 0, $qa286 = 0, $qb = 0, $quality = 0, $quality$i = 0;
 var $quality925 = 0, $quality941 = 0, $quant_comp = 0, $quant_comp1169 = 0, $quant_comp_short = 0, $quant_comp_short1170 = 0, $rem = 0, $report = 0, $report_dbg = 0, $report_err = 0, $report_msg = 0, $retval$0 = 0, $rgdata = 0, $samplerate_in = 0, $samplerate_in255 = 0, $samplerate_in433 = 0, $samplerate_in571 = 0, $samplerate_in572 = 0, $samplerate_index = 0, $samplerate_index703 = 0;
 var $samplerate_out = 0, $samplerate_out172 = 0, $samplerate_out574 = 0, $scale = 0, $scale_left = 0, $scale_right = 0, $sfb21_extra906 = 0, $sfb21_extra923 = 0, $sfb21_extra940 = 0, $short_blocks = 0, $short_blocks1114 = 0, $shr1185626 = 0, $shr1198627 = 0, $shr1211628 = 0, $shr625 = 0, $sideinfo_len839 = 0, $slot_lag = 0, $sr_a = 0, $sse = 0, $storemerge = 0.0;
 var $storemerge630 = 0.0, $storemerge687 = 0.0, $strict_ISO = 0, $strict_ISO1323 = 0, $sub$i = 0.0, $sub$i644 = 0.0, $sub$i647 = 0.0, $sub1159 = 0.0, $sub1180 = 0.0, $sub1180$conv1174 = 0.0, $sub1193 = 0.0, $sub1206 = 0.0, $sub1206$conv1200 = 0.0, $sub1219 = 0.0, $sub123$i = 0.0, $sub127$i = 0.0, $sub140$i = 0.0, $sub144$i = 0.0, $sub274 = 0.0, $sub298 = 0.0;
 var $sub302 = 0.0, $sub308 = 0.0, $sub317 = 0.0, $sub673 = 0, $sub772 = 0, $sub810 = 0, $sub880 = 0, $sub911 = 0, $subblock_gain = 0, $subblock_gain$i = 0, $subblock_gain107$i = 0, $subblock_gain1075 = 0, $subblock_gain129$i = 0, $subblock_gain35$i = 0, $subblock_gain50$i = 0, $subblock_gain65$i = 0, $subblock_gain85$i = 0, $substep_shaping = 0, $substep_shaping$i = 0, $substep_shaping1073 = 0;
 var $substep_shaping121$i = 0, $substep_shaping99$i = 0, $suggested_samplefreq$0$i = 0, $suggested_samplefreq$2$i = 0, $suggested_samplefreq$4$i = 0, $suggested_samplefreq$6$i = 0, $suggested_samplefreq$8$i = 0, $switch = 0, $ta = 0, $ta301 = 0, $tb = 0, $tobool = 0, $tobool1005 = 0, $tobool16 = 0, $tobool163 = 0, $tobool173 = 0, $tobool2$i = 0, $tobool30 = 0, $tobool520 = 0, $tobool528 = 0;
 var $tobool533 = 0, $tobool546 = 0, $tobool548 = 0, $tobool550 = 0, $tobool715 = 0, $tobool8$i = 0, $tobool842 = 0, $tobool899 = 0, $tobool9 = 0, $tobool914 = 0, $tobool967 = 0, $tobool987 = 0, $tune = 0, $tune_value_a = 0, $useTemporal = 0, $useTemporal1150 = 0, $use_best_huffman = 0, $use_best_huffman$i = 0, $use_best_huffman1076 = 0, $use_best_huffman112$i = 0;
 var $use_best_huffman134$i = 0, $use_best_huffman25$i = 0, $use_best_huffman40$i = 0, $use_best_huffman55$i = 0, $use_best_huffman70$i = 0, $use_best_huffman8$i = 0, $use_best_huffman90$i = 0, $use_safe_joint_stereo = 0, $use_temporal_masking_effect = 0, $vararg_buffer = 0, $vbr = 0, $vbr_avg_bitrate_kbps = 0, $vbr_max_bitrate_index = 0, $vbr_min_bitrate_index = 0, $write_id3tag_automatic$i = 0, $write_lame_tag = 0, $write_lame_tag$i = 0, $write_lame_tag1070 = 0, $write_lame_tag5 = 0, $write_lame_tag519 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $internal_flags = ((($gfp)) + 288|0);
 $0 = HEAP32[$internal_flags>>2]|0;
 $cfg1 = ((($0)) + 16|0);
 HEAP32[$0>>2] = 0;
 $VBR_hard_min = ((($gfp)) + 180|0);
 $1 = HEAP32[$VBR_hard_min>>2]|0;
 $enforce_min_bitrate = ((($0)) + 124|0);
 HEAP32[$enforce_min_bitrate>>2] = $1;
 $analysis = ((($gfp)) + 32|0);
 $2 = HEAP32[$analysis>>2]|0;
 $analysis2 = ((($0)) + 140|0);
 HEAP32[$analysis2>>2] = $2;
 $tobool = ($2|0)==(0);
 if (!($tobool)) {
  $write_lame_tag = ((($gfp)) + 36|0);
  HEAP32[$write_lame_tag>>2] = 0;
 }
 $pinfo = ((($0)) + 85804|0);
 $3 = HEAP32[$pinfo>>2]|0;
 $cmp = ($3|0)==(0|0);
 if (!($cmp)) {
  $write_lame_tag5 = ((($gfp)) + 36|0);
  HEAP32[$write_lame_tag5>>2] = 0;
 }
 $report = ((($gfp)) + 272|0);
 $4 = HEAP32[$report>>2]|0;
 $report_msg = ((($0)) + 85828|0);
 HEAP32[$report_msg>>2] = $4;
 $debugf = ((($gfp)) + 276|0);
 $5 = HEAP32[$debugf>>2]|0;
 $report_dbg = ((($0)) + 85832|0);
 HEAP32[$report_dbg>>2] = $5;
 $errorf = ((($gfp)) + 280|0);
 $6 = HEAP32[$errorf>>2]|0;
 $report_err = ((($0)) + 85836|0);
 HEAP32[$report_err>>2] = $6;
 $amd3dnow = ((($gfp)) + 296|0);
 $7 = HEAP32[$amd3dnow>>2]|0;
 $tobool9 = ($7|0)==(0);
 if ($tobool9) {
  $9 = ((($0)) + 85756|0);
  $bf$load12 = HEAP32[$9>>2]|0;
  $bf$clear13 = $bf$load12 & -3;
  HEAP32[$9>>2] = $bf$clear13;
  $bf$load26 = $bf$clear13;
 } else {
  $call = (_has_3DNow()|0);
  $8 = ((($0)) + 85756|0);
  $bf$load = HEAP32[$8>>2]|0;
  $bf$value = $call << 1;
  $bf$shl = $bf$value & 2;
  $bf$clear = $bf$load & -3;
  $bf$set = $bf$clear | $bf$shl;
  HEAP32[$8>>2] = $bf$set;
  $bf$load26 = $bf$set;
 }
 $mmx = ((($gfp)) + 292|0);
 $10 = HEAP32[$mmx>>2]|0;
 $tobool16 = ($10|0)==(0);
 if ($tobool16) {
  $12 = ((($0)) + 85756|0);
  $bf$clear27 = $bf$load26 & -2;
  HEAP32[$12>>2] = $bf$clear27;
  $bf$load48 = $bf$clear27;
 } else {
  $call18 = (_has_MMX()|0);
  $11 = ((($0)) + 85756|0);
  $bf$load20 = HEAP32[$11>>2]|0;
  $bf$value21 = $call18 & 1;
  $bf$clear22 = $bf$load20 & -2;
  $bf$set23 = $bf$clear22 | $bf$value21;
  HEAP32[$11>>2] = $bf$set23;
  $bf$load48 = $bf$set23;
 }
 $sse = ((($gfp)) + 300|0);
 $13 = HEAP32[$sse>>2]|0;
 $tobool30 = ($13|0)==(0);
 if ($tobool30) {
  $15 = ((($0)) + 85756|0);
  $bf$clear52 = $bf$load48 & -13;
  HEAP32[$15>>2] = $bf$clear52;
 } else {
  $call32 = (_has_SSE()|0);
  $14 = ((($0)) + 85756|0);
  $bf$load34 = HEAP32[$14>>2]|0;
  $bf$value35 = $call32 << 2;
  $bf$shl36 = $bf$value35 & 4;
  $bf$clear37 = $bf$load34 & -5;
  $bf$set38 = $bf$clear37 | $bf$shl36;
  HEAP32[$14>>2] = $bf$set38;
  $call39 = (_has_SSE2()|0);
  $bf$load41 = HEAP32[$14>>2]|0;
  $bf$value42 = $call39 << 3;
  $bf$shl43 = $bf$value42 & 8;
  $bf$clear44 = $bf$load41 & -9;
  $bf$set45 = $bf$clear44 | $bf$shl43;
  HEAP32[$14>>2] = $bf$set45;
 }
 $ATH = ((($0)) + 85796|0);
 $16 = HEAP32[$ATH>>2]|0;
 $cmp54 = ($16|0)==(0|0);
 if ($cmp54) {
  $call56 = (_calloc(1,2772)|0);
  HEAP32[$ATH>>2] = $call56;
  $cmp60 = ($call56|0)==(0|0);
  if ($cmp60) {
   $retval$0 = -2;
   STACKTOP = sp;return ($retval$0|0);
  }
 }
 $rgdata = ((($0)) + 85676|0);
 $17 = HEAP32[$rgdata>>2]|0;
 $cmp63 = ($17|0)==(0|0);
 if ($cmp63) {
  $call65 = (_calloc(1,134792)|0);
  HEAP32[$rgdata>>2] = $call65;
  $cmp71 = ($call65|0)==(0|0);
  if ($cmp71) {
   _freegfc($0);
   HEAP32[$internal_flags>>2] = 0;
   $retval$0 = -2;
   STACKTOP = sp;return ($retval$0|0);
  }
 }
 $error_protection = ((($gfp)) + 120|0);
 $18 = HEAP32[$error_protection>>2]|0;
 $error_protection75 = ((($0)) + 160|0);
 HEAP32[$error_protection75>>2] = $18;
 $copyright = ((($gfp)) + 104|0);
 $19 = HEAP32[$copyright>>2]|0;
 $copyright76 = ((($0)) + 164|0);
 HEAP32[$copyright76>>2] = $19;
 $original = ((($gfp)) + 108|0);
 $20 = HEAP32[$original>>2]|0;
 $original77 = ((($0)) + 168|0);
 HEAP32[$original77>>2] = $20;
 $extension = ((($gfp)) + 112|0);
 $21 = HEAP32[$extension>>2]|0;
 $extension78 = ((($0)) + 172|0);
 HEAP32[$extension78>>2] = $21;
 $emphasis = ((($gfp)) + 116|0);
 $22 = HEAP32[$emphasis>>2]|0;
 $emphasis79 = ((($0)) + 176|0);
 HEAP32[$emphasis79>>2] = $22;
 $num_channels = ((($gfp)) + 8|0);
 $23 = HEAP32[$num_channels>>2]|0;
 $channels_in = ((($0)) + 68|0);
 HEAP32[$channels_in>>2] = $23;
 $cmp81 = ($23|0)==(1);
 $mode = ((($gfp)) + 48|0);
 if ($cmp81) {
  HEAP32[$mode>>2] = 3;
  $channels_out723 = ((($0)) + 72|0);
  HEAP32[$channels_out723>>2] = 1;
  $channels_out729 = $channels_out723;
  label = 23;
 } else {
  $$pre = HEAP32[$mode>>2]|0;
  $cmp85 = ($$pre|0)==(3);
  $cond = $cmp85 ? 1 : 2;
  $channels_out = ((($0)) + 72|0);
  HEAP32[$channels_out>>2] = $cond;
  if ($cmp85) {
   $channels_out729 = $channels_out;
   label = 23;
  } else {
   $force_ms90$phi$trans$insert = ((($gfp)) + 52|0);
   $$pre707 = HEAP32[$force_ms90$phi$trans$insert>>2]|0;
   $24 = $$pre707;$channels_out728 = $channels_out;$cond726 = 2;
  }
 }
 if ((label|0) == 23) {
  $force_ms = ((($gfp)) + 52|0);
  HEAP32[$force_ms>>2] = 0;
  $24 = 0;$channels_out728 = $channels_out729;$cond726 = 1;
 }
 $force_ms91 = ((($0)) + 80|0);
 HEAP32[$force_ms91>>2] = $24;
 $VBR = ((($gfp)) + 156|0);
 $25 = HEAP32[$VBR>>2]|0;
 switch ($25|0) {
 case 0:  {
  $VBR_mean_bitrate_kbps = ((($gfp)) + 168|0);
  $26 = HEAP32[$VBR_mean_bitrate_kbps>>2]|0;
  $cmp93 = ($26|0)==(128);
  if (!($cmp93)) {
   $brate = ((($gfp)) + 96|0);
   $27 = HEAP32[$brate>>2]|0;
   $cmp95 = ($27|0)==(0);
   if ($cmp95) {
    HEAP32[$brate>>2] = $26;
   }
  }
  $free_format101730 = ((($gfp)) + 56|0);
  $28 = HEAP32[$free_format101730>>2]|0;
  $free_format102731 = ((($0)) + 152|0);
  HEAP32[$free_format102731>>2] = $28;
  $brate106 = ((($gfp)) + 96|0);
  $29 = HEAP32[$brate106>>2]|0;
  $cmp107 = ($29|0)==(0);
  do {
   if ($cmp107) {
    $compression_ratio = ((($gfp)) + 100|0);
    $31 = +HEAPF32[$compression_ratio>>2];
    $fabsf = (+Math_abs((+$31)));
    $32 = $fabsf;
    $cmp111 = ($31 != $31) | (0.0 != 0.0) |($31 == 0.0);
    if ($cmp111) {
     $cmp127 = $31 == 0.0;
     if (!($cmp127)) {
      break;
     }
    } else {
     $mul = $32 * 9.9999999747524271E-7;
     $cmp119 = !($32 <= $mul);
     if ($cmp119) {
      break;
     }
    }
    HEAPF32[$compression_ratio>>2] = 11.024999618530273;
   }
  } while(0);
  $compression_ratio137 = ((($gfp)) + 100|0);
  $33 = +HEAPF32[$compression_ratio137>>2];
  $cmp138 = $33 > 0.0;
  if ($cmp138) {
   $samplerate_out = ((($gfp)) + 16|0);
   $34 = HEAP32[$samplerate_out>>2]|0;
   $cmp141 = ($34|0)==(0);
   if ($cmp141) {
    $samplerate_in = ((($gfp)) + 12|0);
    $35 = HEAP32[$samplerate_in>>2]|0;
    $conv144 = (+($35|0));
    $mul145 = $conv144 * 0.96999999999999997;
    $conv146 = (~~(($mul145)));
    $call147 = (_map2MP3Frequency($conv146)|0);
    HEAP32[$samplerate_out>>2] = $call147;
    $$pre708 = HEAP32[$channels_out728>>2]|0;
    $$pre709 = +HEAPF32[$compression_ratio137>>2];
    $36 = $call147;$37 = $$pre708;$38 = $$pre709;
   } else {
    $36 = $34;$37 = $cond726;$38 = $33;
   }
   $mul151 = $36 << 4;
   $mul153 = Math_imul($mul151, $37)|0;
   $conv154 = (+($mul153|0));
   $conv156 = $38;
   $mul157 = $conv156 * 1000.0;
   $div = $conv154 / $mul157;
   $conv158 = (~~(($div)));
   HEAP32[$brate106>>2] = $conv158;
   $call161 = (_SmpFrqIndex($36,$cfg1)|0);
   $samplerate_index = ((($0)) + 20|0);
   HEAP32[$samplerate_index>>2] = $call161;
   $39 = HEAP32[$free_format102731>>2]|0;
   $tobool163 = ($39|0)==(0);
   if ($tobool163) {
    $40 = HEAP32[$brate106>>2]|0;
    $41 = HEAP32[$cfg1>>2]|0;
    $42 = HEAP32[$samplerate_out>>2]|0;
    $call168 = (_FindNearestBitrate($40,$41,$42)|0);
    HEAP32[$brate106>>2] = $call168;
    $free_format102733 = $free_format102731;
   } else {
    $free_format102733 = $free_format102731;
   }
  } else {
   $free_format102733 = $free_format102731;
  }
  break;
 }
 case 1: case 4:  {
  $free_format101737 = ((($gfp)) + 56|0);
  $30 = HEAP32[$free_format101737>>2]|0;
  $free_format102738 = ((($0)) + 152|0);
  HEAP32[$free_format102738>>2] = $30;
  $free_format102733 = $free_format102738;
  break;
 }
 default: {
  $free_format = ((($gfp)) + 56|0);
  HEAP32[$free_format>>2] = 0;
  $free_format102 = ((($0)) + 152|0);
  HEAP32[$free_format102>>2] = 0;
  $free_format102733 = $free_format102;
 }
 }
 $samplerate_out172 = ((($gfp)) + 16|0);
 $43 = HEAP32[$samplerate_out172>>2]|0;
 $tobool173 = ($43|0)==(0);
 L56: do {
  if ($tobool173) {
   $46 = HEAP32[$VBR>>2]|0;
   switch ($46|0) {
   case 4: case 1:  {
    break;
   }
   default: {
    $293 = 0;
    break L56;
   }
   }
   $VBR_q = ((($gfp)) + 164|0);
   $47 = HEAP32[$VBR_q>>2]|0;
   $conv252 = (+($47|0));
   $VBR_q_frac = ((($gfp)) + 160|0);
   $48 = +HEAPF32[$VBR_q_frac>>2];
   $add = $conv252 + $48;
   $samplerate_in255 = ((($gfp)) + 12|0);
   $49 = HEAP32[$samplerate_in255>>2]|0;
   $i$0695 = 2;
   while(1) {
    $sr_a = (1064 + (($i$0695*24)|0)|0);
    $50 = HEAP32[$sr_a>>2]|0;
    $cmp256 = ($49|0)==($50|0);
    if ($cmp256) {
     $qa = (((1064 + (($i$0695*24)|0)|0)) + 4|0);
     $51 = +HEAPF32[$qa>>2];
     $cmp260 = $add < $51;
     if ($cmp260) {
      $div265 = $add / $51;
      $conv266 = $div265;
      $ta = (((1064 + (($i$0695*24)|0)|0)) + 12|0);
      $52 = +HEAPF32[$ta>>2];
      $conv268 = $52;
      $mul269 = $conv268 * $conv266;
      $conv270 = (~~(($mul269)));
      HEAP32[$VBR_q>>2] = $conv270;
      $conv273 = (+($conv270|0));
      $sub274 = $mul269 - $conv273;
      $conv275 = $sub274;
      HEAPF32[$VBR_q_frac>>2] = $conv275;
     }
    }
    $cmp282 = ($49|0)<($50|0);
    if (!($cmp282)) {
     $qa286 = (((1064 + (($i$0695*24)|0)|0)) + 4|0);
     $53 = +HEAPF32[$qa286>>2];
     $cmp287 = !($53 <= $add);
     if (!($cmp287)) {
      $qb = (((1064 + (($i$0695*24)|0)|0)) + 8|0);
      $54 = +HEAPF32[$qb>>2];
      $cmp291 = $add < $54;
      if ($cmp291) {
       break;
      }
     }
    }
    $inc = (($i$0695) + 1)|0;
    $cmp253 = ($inc|0)<(9);
    if ($cmp253) {
     $i$0695 = $inc;
    } else {
     $293 = $43;
     break L56;
    }
   }
   $sub298 = $54 - $53;
   $tb = (((1064 + (($i$0695*24)|0)|0)) + 16|0);
   $55 = +HEAPF32[$tb>>2];
   $ta301 = (((1064 + (($i$0695*24)|0)|0)) + 12|0);
   $56 = +HEAPF32[$ta301>>2];
   $sub302 = $55 - $56;
   $sub308 = $add - $53;
   $mul309 = $sub302 * $sub308;
   $div310 = $mul309 / $sub298;
   $add311 = $div310 + $56;
   $conv312 = $add311;
   $conv313 = (~~(($add311)));
   HEAP32[$VBR_q>>2] = $conv313;
   $conv316 = (+($conv313|0));
   $sub317 = $conv312 - $conv316;
   $conv318 = $sub317;
   HEAPF32[$VBR_q_frac>>2] = $conv318;
   HEAP32[$samplerate_out172>>2] = $50;
   $lowpassfreq = ((($gfp)) + 184|0);
   $57 = HEAP32[$lowpassfreq>>2]|0;
   $cmp323 = ($57|0)==(0);
   if ($cmp323) {
    HEAP32[$lowpassfreq>>2] = -1;
    $293 = $50;
   } else {
    $293 = $50;
   }
  } else {
   $cmp176 = ($43|0)<(16000);
   do {
    if ($cmp176) {
     $VBR_mean_bitrate_kbps179 = ((($gfp)) + 168|0);
     $44 = HEAP32[$VBR_mean_bitrate_kbps179>>2]|0;
     $cmp180 = ($44|0)>(8);
     $$ = $cmp180 ? $44 : 8;
     HEAP32[$VBR_mean_bitrate_kbps179>>2] = $$;
     $cmp188 = ($$|0)<(64);
     $cond194 = $cmp188 ? $$ : 64;
     $VBR_mean_bitrate_kbps237$pre$phiZ2D = $VBR_mean_bitrate_kbps179;$cond236$sink$sink = $cond194;
    } else {
     $cmp198 = ($43|0)<(32000);
     $VBR_mean_bitrate_kbps201 = ((($gfp)) + 168|0);
     $45 = HEAP32[$VBR_mean_bitrate_kbps201>>2]|0;
     if ($cmp198) {
      $cmp202 = ($45|0)>(8);
      $$632 = $cmp202 ? $45 : 8;
      HEAP32[$VBR_mean_bitrate_kbps201>>2] = $$632;
      $cmp211 = ($$632|0)<(160);
      $cond217 = $cmp211 ? $$632 : 160;
      $VBR_mean_bitrate_kbps237$pre$phiZ2D = $VBR_mean_bitrate_kbps201;$cond236$sink$sink = $cond217;
      break;
     } else {
      $cmp221 = ($45|0)>(32);
      $$633 = $cmp221 ? $45 : 32;
      HEAP32[$VBR_mean_bitrate_kbps201>>2] = $$633;
      $cmp230 = ($$633|0)<(320);
      $cond236 = $cmp230 ? $$633 : 320;
      $VBR_mean_bitrate_kbps237$pre$phiZ2D = $VBR_mean_bitrate_kbps201;$cond236$sink$sink = $cond236;
      break;
     }
    }
   } while(0);
   HEAP32[$VBR_mean_bitrate_kbps237$pre$phiZ2D>>2] = $cond236$sink$sink;
   $293 = $43;
  }
 } while(0);
 $lowpassfreq331 = ((($gfp)) + 184|0);
 $58 = HEAP32[$lowpassfreq331>>2]|0;
 $cmp332 = ($58|0)==(0);
 if ($cmp332) {
  $59 = HEAP32[$VBR>>2]|0;
  switch ($59|0) {
  case 0:  {
   $brate337 = ((($gfp)) + 96|0);
   $60 = HEAP32[$brate337>>2]|0;
   $conv$i = $60&65535;
   $call$i = (_nearestBitrateFullIndex($conv$i)|0);
   $lowpass$i = (((1280 + ($call$i<<3)|0)) + 4|0);
   $61 = HEAP32[$lowpass$i>>2]|0;
   $conv3$i = (+($61|0));
   $lowpass$0 = $conv3$i;
   break;
  }
  case 3:  {
   $VBR_mean_bitrate_kbps339 = ((($gfp)) + 168|0);
   $62 = HEAP32[$VBR_mean_bitrate_kbps339>>2]|0;
   $conv$i640 = $62&65535;
   $call$i641 = (_nearestBitrateFullIndex($conv$i640)|0);
   $lowpass$i642 = (((1280 + ($call$i641<<3)|0)) + 4|0);
   $63 = HEAP32[$lowpass$i642>>2]|0;
   $conv3$i643 = (+($63|0));
   $lowpass$0 = $conv3$i643;
   break;
  }
  case 2:  {
   $VBR_q341 = ((($gfp)) + 164|0);
   $64 = HEAP32[$VBR_q341>>2]|0;
   $65 = ($64>>>0)<(10);
   if ($65) {
    $arrayidx350 = (1416 + ($64<<2)|0);
    $66 = HEAP32[$arrayidx350>>2]|0;
    $conv351 = (+($66|0));
    $add353 = (($64) + 1)|0;
    $arrayidx354 = (1416 + ($add353<<2)|0);
    $67 = HEAP32[$arrayidx354>>2]|0;
    $conv355 = (+($67|0));
    $VBR_q_frac356 = ((($gfp)) + 160|0);
    $68 = +HEAPF32[$VBR_q_frac356>>2];
    $conv357 = $68;
    $sub$i = $conv355 - $conv351;
    $mul$i = $sub$i * $conv357;
    $add$i = $mul$i + $conv351;
    $lowpass$0 = $add$i;
   } else {
    $lowpass$0 = 19500.0;
   }
   break;
  }
  case 1: case 4:  {
   $VBR_q362 = ((($gfp)) + 164|0);
   $69 = HEAP32[$VBR_q362>>2]|0;
   $70 = ($69>>>0)<(10);
   if ($70) {
    $arrayidx372 = (1460 + ($69<<2)|0);
    $71 = HEAP32[$arrayidx372>>2]|0;
    $conv373 = (+($71|0));
    $add376 = (($69) + 1)|0;
    $arrayidx377 = (1460 + ($add376<<2)|0);
    $72 = HEAP32[$arrayidx377>>2]|0;
    $conv378 = (+($72|0));
    $VBR_q_frac380 = ((($gfp)) + 160|0);
    $73 = +HEAPF32[$VBR_q_frac380>>2];
    $conv381 = $73;
    $sub$i644 = $conv378 - $conv373;
    $mul$i645 = $sub$i644 * $conv381;
    $add$i646 = $mul$i645 + $conv373;
    $lowpass$0 = $add$i646;
   } else {
    $lowpass$0 = 21500.0;
   }
   break;
  }
  default: {
   $VBR_q386 = ((($gfp)) + 164|0);
   $74 = HEAP32[$VBR_q386>>2]|0;
   $75 = ($74>>>0)<(10);
   if ($75) {
    $arrayidx396 = (1504 + ($74<<2)|0);
    $76 = HEAP32[$arrayidx396>>2]|0;
    $conv397 = (+($76|0));
    $add400 = (($74) + 1)|0;
    $arrayidx401 = (1504 + ($add400<<2)|0);
    $77 = HEAP32[$arrayidx401>>2]|0;
    $conv402 = (+($77|0));
    $VBR_q_frac404 = ((($gfp)) + 160|0);
    $78 = +HEAPF32[$VBR_q_frac404>>2];
    $conv405 = $78;
    $sub$i647 = $conv402 - $conv397;
    $mul$i648 = $sub$i647 * $conv405;
    $add$i649 = $mul$i648 + $conv397;
    $lowpass$0 = $add$i649;
   } else {
    $lowpass$0 = 19500.0;
   }
  }
  }
  $79 = HEAP32[$mode>>2]|0;
  $cmp411 = ($79|0)==(3);
  L92: do {
   if ($cmp411) {
    $80 = HEAP32[$VBR>>2]|0;
    switch ($80|0) {
    case 3: case 0:  {
     break;
    }
    default: {
     $lowpass$1 = $lowpass$0;
     break L92;
    }
    }
    $mul422 = $lowpass$0 * 1.5;
    $lowpass$1 = $mul422;
   } else {
    $lowpass$1 = $lowpass$0;
   }
  } while(0);
  $conv424 = (~~(($lowpass$1)));
  HEAP32[$lowpassfreq331>>2] = $conv424;
  $$pre710 = HEAP32[$samplerate_out172>>2]|0;
  $81 = $$pre710;$82 = $conv424;
 } else {
  $81 = $293;$82 = $58;
 }
 $cmp428 = ($81|0)==(0);
 if ($cmp428) {
  $mul432 = $82 << 1;
  $samplerate_in433 = ((($gfp)) + 12|0);
  $83 = HEAP32[$samplerate_in433>>2]|0;
  $cmp434 = ($mul432|0)>($83|0);
  if ($cmp434) {
   $div438 = (($83|0) / 2)&-1;
   HEAP32[$lowpassfreq331>>2] = $div438;
   $84 = $div438;
  } else {
   $84 = $82;
  }
  $cmp$i657 = ($83|0)>(47999);
  if ($cmp$i657) {
   $suggested_samplefreq$0$i = 48000;
  } else {
   $cmp1$i = ($83|0)>(44099);
   if ($cmp1$i) {
    $suggested_samplefreq$0$i = 44100;
   } else {
    $cmp4$i658 = ($83|0)>(31999);
    if ($cmp4$i658) {
     $suggested_samplefreq$0$i = 32000;
    } else {
     $cmp7$i659 = ($83|0)>(23999);
     if ($cmp7$i659) {
      $suggested_samplefreq$0$i = 24000;
     } else {
      $cmp10$i660 = ($83|0)>(22049);
      if ($cmp10$i660) {
       $suggested_samplefreq$0$i = 22050;
      } else {
       $cmp13$i661 = ($83|0)>(15999);
       if ($cmp13$i661) {
        $suggested_samplefreq$0$i = 16000;
       } else {
        $cmp16$i662 = ($83|0)>(11999);
        $cmp19$i = ($83|0)>(11024);
        $cmp22$i = ($83|0)>(7999);
        $$$i = $cmp22$i ? 8000 : 44100;
        $$$$i = $cmp19$i ? 11025 : $$$i;
        $$$$$i = $cmp16$i662 ? 12000 : $$$$i;
        $suggested_samplefreq$0$i = $$$$$i;
       }
      }
     }
    }
   }
  }
  $cmp32$i = ($84|0)==(-1);
  do {
   if ($cmp32$i) {
    $call443673 = $suggested_samplefreq$0$i;
   } else {
    $cmp35$i = ($84|0)<(15961);
    $$suggested_samplefreq$0$i = $cmp35$i ? 44100 : $suggested_samplefreq$0$i;
    $cmp38$i = ($84|0)<(15251);
    $suggested_samplefreq$2$i = $cmp38$i ? 32000 : $$suggested_samplefreq$0$i;
    $cmp41$i663 = ($84|0)<(11221);
    $$suggested_samplefreq$2$i = $cmp41$i663 ? 24000 : $suggested_samplefreq$2$i;
    $cmp44$i664 = ($84|0)<(9971);
    $suggested_samplefreq$4$i = $cmp44$i664 ? 22050 : $$suggested_samplefreq$2$i;
    $cmp47$i = ($84|0)<(7231);
    $$suggested_samplefreq$4$i = $cmp47$i ? 16000 : $suggested_samplefreq$4$i;
    $cmp50$i = ($84|0)<(5421);
    $suggested_samplefreq$6$i = $cmp50$i ? 12000 : $$suggested_samplefreq$4$i;
    $cmp53$i665 = ($84|0)<(4511);
    $$suggested_samplefreq$6$i = $cmp53$i665 ? 11025 : $suggested_samplefreq$6$i;
    $cmp56$i = ($84|0)<(3971);
    $suggested_samplefreq$8$i = $cmp56$i ? 8000 : $$suggested_samplefreq$6$i;
    $cmp59$i666 = ($suggested_samplefreq$8$i|0)>($83|0);
    if ($cmp59$i666) {
     $cmp61$i = ($83|0)>(44100);
     if ($cmp61$i) {
      $call443673 = 48000;
     } else {
      $cmp64$i668 = ($83|0)>(32000);
      if ($cmp64$i668) {
       $call443673 = 44100;
      } else {
       $cmp67$i669 = ($83|0)>(24000);
       if ($cmp67$i669) {
        $call443673 = 32000;
       } else {
        $cmp70$i = ($83|0)>(22050);
        if ($cmp70$i) {
         $call443673 = 24000;
         break;
        }
        $cmp73$i = ($83|0)>(16000);
        if ($cmp73$i) {
         $call443673 = 22050;
         break;
        }
        $cmp76$i = ($83|0)>(12000);
        if ($cmp76$i) {
         $call443673 = 16000;
         break;
        }
        $cmp79$i671 = ($83|0)>(11025);
        $cmp82$i672 = ($83|0)>(8000);
        $$29$i = $cmp82$i672 ? 11025 : 8000;
        $$$29$i = $cmp79$i671 ? 12000 : $$29$i;
        $call443673 = $$$29$i;
       }
      }
     }
    } else {
     $call443673 = $suggested_samplefreq$8$i;
    }
   }
  } while(0);
  HEAP32[$samplerate_out172>>2] = $call443673;
  $87 = $84;$88 = $call443673;
 } else {
  $87 = $82;$88 = $81;
 }
 $85 = HEAP32[$VBR>>2]|0;
 switch ($85|0) {
 case 4: case 1:  {
  $$sink753 = 24000;
  break;
 }
 default: {
  $$sink753 = 20500;
 }
 }
 $86 = ($87|0)<($$sink753|0);
 $$637 = $86 ? $87 : $$sink753;
 $div475 = (($88|0) / 2)&-1;
 $cmp477 = ($div475|0)<($$637|0);
 $div475$cond471$sink = $cmp477 ? $div475 : $$637;
 HEAP32[$lowpassfreq331>>2] = $div475$cond471$sink;
 switch ($85|0) {
 case 0:  {
  $mul492 = $88 << 4;
  $89 = HEAP32[$channels_out728>>2]|0;
  $mul494 = Math_imul($mul492, $89)|0;
  $brate496 = ((($gfp)) + 96|0);
  $brate496$sink = $brate496;$conv495$sink$in = $mul494;
  label = 97;
  break;
 }
 case 3:  {
  $mul508 = $88 << 4;
  $90 = HEAP32[$channels_out728>>2]|0;
  $mul510 = Math_imul($mul508, $90)|0;
  $VBR_mean_bitrate_kbps512 = ((($gfp)) + 168|0);
  $brate496$sink = $VBR_mean_bitrate_kbps512;$conv495$sink$in = $mul510;
  label = 97;
  break;
 }
 default: {
 }
 }
 if ((label|0) == 97) {
  $conv495$sink = (+($conv495$sink$in|0));
  $91 = HEAP32[$brate496$sink>>2]|0;
  $conv497 = (+($91|0));
  $mul498 = $conv497 * 1000.0;
  $div499 = $conv495$sink / $mul498;
  $conv500 = $div499;
  $compression_ratio501 = ((($gfp)) + 100|0);
  HEAPF32[$compression_ratio501>>2] = $conv500;
 }
 $write_lame_tag519 = ((($gfp)) + 36|0);
 $92 = HEAP32[$write_lame_tag519>>2]|0;
 $tobool520 = ($92|0)==(0);
 $findReplayGain = ((($gfp)) + 60|0);
 if ($tobool520) {
  HEAP32[$findReplayGain>>2] = 0;
  $decode_on_the_fly = ((($gfp)) + 64|0);
  HEAP32[$decode_on_the_fly>>2] = 0;
  $findPeakSample = ((($0)) + 132|0);
  HEAP32[$findPeakSample>>2] = 0;
  $findReplayGain524740 = ((($0)) + 128|0);
  HEAP32[$findReplayGain524740>>2] = 0;
  $decode_on_the_fly526741 = ((($0)) + 136|0);
  HEAP32[$decode_on_the_fly526741>>2] = 0;
 } else {
  $$pre711 = HEAP32[$findReplayGain>>2]|0;
  $decode_on_the_fly525$phi$trans$insert = ((($gfp)) + 64|0);
  $$pre712 = HEAP32[$decode_on_the_fly525$phi$trans$insert>>2]|0;
  $findReplayGain524 = ((($0)) + 128|0);
  HEAP32[$findReplayGain524>>2] = $$pre711;
  $decode_on_the_fly526 = ((($0)) + 136|0);
  HEAP32[$decode_on_the_fly526>>2] = $$pre712;
  $tobool528 = ($$pre712|0)==(0);
  if ($tobool528) {
   $294 = 0;
  } else {
   $findPeakSample530 = ((($0)) + 132|0);
   HEAP32[$findPeakSample530>>2] = 1;
   $294 = $$pre712;
  }
  $tobool533 = ($$pre711|0)==(0);
  do {
   if ($tobool533) {
    $94 = $294;
   } else {
    $93 = HEAP32[$rgdata>>2]|0;
    $call538 = (_InitGainAnalysis(($93|0),($88|0))|0);
    $cmp539 = ($call538|0)==(0);
    if (!($cmp539)) {
     $$pre713 = HEAP32[$decode_on_the_fly526>>2]|0;
     $94 = $$pre713;
     break;
    }
    _freegfc($0);
    HEAP32[$internal_flags>>2] = 0;
    $retval$0 = -6;
    STACKTOP = sp;return ($retval$0|0);
   }
  } while(0);
  $tobool546 = ($94|0)==(0);
  if (!($tobool546)) {
   $decode_only = ((($gfp)) + 40|0);
   $95 = HEAP32[$decode_only>>2]|0;
   $tobool548 = ($95|0)==(0);
   if ($tobool548) {
    $hip = ((($0)) + 85808|0);
    $96 = HEAP32[$hip>>2]|0;
    $tobool550 = ($96|0)==(0|0);
    if (!($tobool550)) {
     (_hip_decode_exit(($96|0))|0);
    }
    $call555 = (_hip_decode_init()|0);
    HEAP32[$hip>>2] = $call555;
    $97 = HEAP32[$errorf>>2]|0;
    _hip_set_errorf(($call555|0),($97|0));
    $98 = HEAP32[$hip>>2]|0;
    $99 = HEAP32[$debugf>>2]|0;
    _hip_set_debugf(($98|0),($99|0));
    $100 = HEAP32[$hip>>2]|0;
    $101 = HEAP32[$report>>2]|0;
    _hip_set_msgf(($100|0),($101|0));
   }
  }
 }
 $disable_reservoir = ((($gfp)) + 128|0);
 $102 = HEAP32[$disable_reservoir>>2]|0;
 $disable_reservoir567 = ((($0)) + 144|0);
 HEAP32[$disable_reservoir567>>2] = $102;
 $103 = HEAP32[$lowpassfreq331>>2]|0;
 $lowpassfreq569 = ((($0)) + 52|0);
 HEAP32[$lowpassfreq569>>2] = $103;
 $highpassfreq = ((($gfp)) + 188|0);
 $104 = HEAP32[$highpassfreq>>2]|0;
 $highpassfreq570 = ((($0)) + 56|0);
 HEAP32[$highpassfreq570>>2] = $104;
 $samplerate_in571 = ((($gfp)) + 12|0);
 $105 = HEAP32[$samplerate_in571>>2]|0;
 $samplerate_in572 = ((($0)) + 60|0);
 HEAP32[$samplerate_in572>>2] = $105;
 $106 = HEAP32[$samplerate_out172>>2]|0;
 $samplerate_out574 = ((($0)) + 64|0);
 HEAP32[$samplerate_out574>>2] = $106;
 $cmp576 = ($106|0)<(24001);
 $cond578 = $cmp576 ? 1 : 2;
 $mode_gr = ((($0)) + 76|0);
 HEAP32[$mode_gr>>2] = $cond578;
 $encoder_delay = ((($0)) + 84760|0);
 HEAP32[$encoder_delay>>2] = 576;
 $107 = HEAP32[$VBR>>2]|0;
 switch ($107|0) {
 case 4: case 2: case 1:  {
  $VBR_q581 = ((($gfp)) + 164|0);
  $108 = HEAP32[$VBR_q581>>2]|0;
  $arrayidx582 = (1548 + ($108<<2)|0);
  $109 = +HEAPF32[$arrayidx582>>2];
  $conv606$sink = $109;
  break;
 }
 case 3:  {
  $mul586 = $106 << 4;
  $110 = HEAP32[$channels_out728>>2]|0;
  $mul588 = Math_imul($mul586, $110)|0;
  $conv589 = (+($mul588|0));
  $VBR_mean_bitrate_kbps590 = ((($gfp)) + 168|0);
  $111 = HEAP32[$VBR_mean_bitrate_kbps590>>2]|0;
  $conv591 = (+($111|0));
  $mul592 = $conv591 * 1000.0;
  $div593 = $conv589 / $mul592;
  $conv594 = $div593;
  $conv606$sink = $conv594;
  break;
 }
 default: {
  $mul598 = $106 << 4;
  $112 = HEAP32[$channels_out728>>2]|0;
  $mul600 = Math_imul($mul598, $112)|0;
  $conv601 = (+($mul600|0));
  $brate602 = ((($gfp)) + 96|0);
  $113 = HEAP32[$brate602>>2]|0;
  $conv603 = (+($113|0));
  $mul604 = $conv603 * 1000.0;
  $div605 = $conv601 / $mul604;
  $conv606 = $div605;
  $conv606$sink = $conv606;
 }
 }
 $compression_ratio607 = ((($gfp)) + 100|0);
 HEAPF32[$compression_ratio607>>2] = $conv606$sink;
 $114 = HEAP32[$mode>>2]|0;
 $cmp610 = ($114|0)==(4);
 if ($cmp610) {
  HEAP32[$mode>>2] = 1;
  $115 = 1;
 } else {
  $115 = $114;
 }
 $mode616 = ((($0)) + 180|0);
 HEAP32[$mode616>>2] = $115;
 $cmp618 = ($104|0)>(0);
 if ($cmp618) {
  $conv622 = (+($104|0));
  $mul623 = $conv622 * 2.0;
  $conv624 = $mul623;
  $highpass1 = ((($0)) + 256|0);
  $highpasswidth = ((($gfp)) + 196|0);
  $116 = HEAP32[$highpasswidth>>2]|0;
  $cmp625 = ($116|0)>(-1);
  $add630 = (($116) + ($104))|0;
  $conv631 = (+($add630|0));
  $mul632 = $conv631 * 2.0;
  $conv633 = $mul632;
  $conv633$conv624 = $cmp625 ? $conv633 : $conv624;
  $highpass2639 = ((($0)) + 260|0);
  $conv642 = (+($106|0));
  $div644 = $conv624 / $conv642;
  HEAPF32[$highpass1>>2] = $div644;
  $div648 = $conv633$conv624 / $conv642;
  HEAPF32[$highpass2639>>2] = $div648;
  $119 = $div648;
 } else {
  $highpass1650 = ((($0)) + 256|0);
  HEAPF32[$highpass1650>>2] = 0.0;
  $highpass2651 = ((($0)) + 260|0);
  HEAPF32[$highpass2651>>2] = 0.0;
  $119 = 0.0;
 }
 $lowpass1 = ((($0)) + 248|0);
 HEAPF32[$lowpass1>>2] = 0.0;
 $lowpass2 = ((($0)) + 252|0);
 HEAPF32[$lowpass2>>2] = 0.0;
 $cmp654 = ($103|0)>(0);
 $div659 = (($106|0) / 2)&-1;
 $cmp660 = ($103|0)<($div659|0);
 $or$cond = $cmp654 & $cmp660;
 if ($or$cond) {
  $conv664 = (+($103|0));
  $mul665 = $conv664 * 2.0;
  $conv666 = $mul665;
  HEAPF32[$lowpass2>>2] = $conv666;
  $lowpasswidth = ((($gfp)) + 192|0);
  $117 = HEAP32[$lowpasswidth>>2]|0;
  $cmp668 = ($117|0)>(-1);
  if ($cmp668) {
   $sub673 = (($103) - ($117))|0;
   $conv674 = (+($sub673|0));
   $mul675 = $conv674 * 2.0;
   $conv676 = $mul675;
   $cmp679 = $conv676 < 0.0;
   if ($cmp679) {
    $$sink4 = 0.0;
    label = 123;
   } else {
    $storemerge687 = $conv676;
   }
  } else {
   $$sink4 = $conv666;
   label = 123;
  }
  if ((label|0) == 123) {
   $storemerge687 = $$sink4;
  }
  $conv692 = (+($106|0));
  $div694 = $storemerge687 / $conv692;
  HEAPF32[$lowpass1>>2] = $div694;
  $div698 = $conv666 / $conv692;
  HEAPF32[$lowpass2>>2] = $div698;
  $cmp$i651 = $div694 > 0.0;
  if ($cmp$i651) {
   $band$091$i = 0;$lowpass_band$093$i = 32;$minband$092$i = 999;
   while(1) {
    $conv$i652 = (+($band$091$i|0));
    $div$i = $conv$i652 * 0.032258064516129031;
    $conv3$i653 = $div$i;
    $cmp4$i = !($conv3$i653 >= $div698);
    $cmp7$i = ($lowpass_band$093$i|0)<($band$091$i|0);
    $118 = $cmp7$i | $cmp4$i;
    $lowpass_band$1$i = $118 ? $lowpass_band$093$i : $band$091$i;
    $cmp10$i = $div694 < $conv3$i653;
    $cmp13$i = $conv3$i653 < $div698;
    $or$cond$i = $cmp13$i & $cmp10$i;
    $cmp16$i = ($minband$092$i|0)<($band$091$i|0);
    $cond21$i = $cmp16$i ? $minband$092$i : $band$091$i;
    $minband$1$i = $or$cond$i ? $cond21$i : $minband$092$i;
    $inc$i = (($band$091$i) + 1)|0;
    $exitcond95$i = ($inc$i|0)==(32);
    if ($exitcond95$i) {
     break;
    } else {
     $band$091$i = $inc$i;$lowpass_band$093$i = $lowpass_band$1$i;$minband$092$i = $minband$1$i;
    }
   }
   $cmp23$i = ($minband$1$i|0)==(999);
   $conv26$i = (+($lowpass_band$1$i|0));
   $conv30$i = (+($minband$1$i|0));
   $conv33$sink$in$in$in$i = $cmp23$i ? $conv26$i : $conv30$i;
   $conv33$sink$in$in$i = $conv33$sink$in$in$in$i + -0.75;
   $conv33$sink$in$i = $conv33$sink$in$in$i * 0.032258064516129031;
   $conv33$sink$i = $conv33$sink$in$i;
   HEAPF32[$lowpass1>>2] = $conv33$sink$i;
   $div37$i = $conv26$i * 0.032258064516129031;
   $conv38$i = $div37$i;
   HEAPF32[$lowpass2>>2] = $conv38$i;
  }
 }
 $highpass2$i = ((($0)) + 260|0);
 $cmp41$i = $119 > 0.0;
 $conv45$i = $119;
 $cmp46$i = $conv45$i < 0.021774193548387097;
 $or$cond76$i = $cmp41$i & $cmp46$i;
 $highpass1$i = ((($0)) + 256|0);
 if ($or$cond76$i) {
  HEAPF32[$highpass1$i>>2] = 0.0;
  HEAPF32[$highpass2$i>>2] = 0.0;
  _lame_msgf($0,15446,$vararg_buffer);
  $$pr$i = +HEAPF32[$highpass2$i>>2];
  $120 = $$pr$i;
 } else {
  $120 = $119;
 }
 $cmp53$i = $120 > 0.0;
 if ($cmp53$i) {
  $121 = +HEAPF32[$highpass1$i>>2];
  $band$188$i = 0;$highpass_band$090$i = -1;$maxband$089$i = -1;
  while(1) {
   $conv60$i = (+($band$188$i|0));
   $div61$i = $conv60$i * 0.032258064516129031;
   $conv62$i = $div61$i;
   $cmp64$i = !($conv62$i <= $121);
   $cmp67$i = ($highpass_band$090$i|0)>($band$188$i|0);
   $122 = $cmp67$i | $cmp64$i;
   $highpass_band$1$i = $122 ? $highpass_band$090$i : $band$188$i;
   $cmp75$i = $121 < $conv62$i;
   $cmp79$i = $conv62$i < $120;
   $or$cond97$i = $cmp75$i & $cmp79$i;
   $cmp82$i = ($maxband$089$i|0)>($band$188$i|0);
   $cond87$i = $cmp82$i ? $maxband$089$i : $band$188$i;
   $maxband$1$i = $or$cond97$i ? $cond87$i : $maxband$089$i;
   $inc90$i = (($band$188$i) + 1)|0;
   $exitcond94$i = ($inc90$i|0)==(32);
   if ($exitcond94$i) {
    break;
   } else {
    $band$188$i = $inc90$i;$highpass_band$090$i = $highpass_band$1$i;$maxband$089$i = $maxband$1$i;
   }
  }
  $conv92$i = (+($highpass_band$1$i|0));
  $div93$i = $conv92$i * 0.032258064516129031;
  $conv94$i = $div93$i;
  HEAPF32[$highpass1$i>>2] = $conv94$i;
  $cmp96$i = ($maxband$1$i|0)==(-1);
  $conv104$i = (+($maxband$1$i|0));
  $conv107$sink$in$in$in$i = $cmp96$i ? $conv92$i : $conv104$i;
  $conv107$sink$in$in$i = $conv107$sink$in$in$in$i + 0.75;
  $conv107$sink$in$i = $conv107$sink$in$in$i * 0.032258064516129031;
  $conv107$sink$i = $conv107$sink$in$i;
  HEAPF32[$highpass2$i>>2] = $conv107$sink$i;
  $124 = $conv107$sink$i;$band$287$i = 0;
 } else {
  $124 = $120;$band$287$i = 0;
 }
 while(1) {
  $conv115$i = (+($band$287$i|0));
  $div116$i = $conv115$i * 0.032258063554763794;
  $123 = +HEAPF32[$highpass1$i>>2];
  $cmp119$i = $124 > $123;
  do {
   if ($cmp119$i) {
    $sub123$i = $124 - $div116$i;
    $conv124$i = $sub123$i;
    $sub127$i = $124 - $123;
    $conv128$i = $sub127$i;
    $add129$i = $conv128$i + 9.9999999999999995E-21;
    $div130$i = $conv124$i / $add129$i;
    $conv131$i = $div130$i;
    $cmp$i$i654 = $conv131$i > 1.0;
    if ($cmp$i$i654) {
     $fc1$0$i = 0.0;
     break;
    }
    $cmp3$i$i = !($conv131$i <= 0.0);
    if (!($cmp3$i$i)) {
     $fc1$0$i = 1.0;
     break;
    }
    $conv$i$i = $conv131$i;
    $mul$i$i = $conv$i$i * 1.5707963267948966;
    $call$i$i = (+Math_cos((+$mul$i$i)));
    $conv8$i$i = $call$i$i;
    $fc1$0$i = $conv8$i$i;
   } else {
    $fc1$0$i = 1.0;
   }
  } while(0);
  $125 = +HEAPF32[$lowpass2>>2];
  $126 = +HEAPF32[$lowpass1>>2];
  $cmp136$i = $125 > $126;
  do {
   if ($cmp136$i) {
    $sub140$i = $div116$i - $126;
    $conv141$i = $sub140$i;
    $sub144$i = $125 - $126;
    $conv145$i = $sub144$i;
    $add146$i = $conv145$i + 9.9999999999999995E-21;
    $div147$i = $conv141$i / $add146$i;
    $conv148$i = $div147$i;
    $cmp$i77$i = $conv148$i > 1.0;
    if ($cmp$i77$i) {
     $fc2$0$i = 0.0;
     break;
    }
    $cmp3$i78$i = !($conv148$i <= 0.0);
    if (!($cmp3$i78$i)) {
     $fc2$0$i = 1.0;
     break;
    }
    $conv$i80$i = $conv148$i;
    $mul$i81$i = $conv$i80$i * 1.5707963267948966;
    $call$i82$i = (+Math_cos((+$mul$i81$i)));
    $conv8$i83$i = $call$i82$i;
    $fc2$0$i = $conv8$i83$i;
   } else {
    $fc2$0$i = 1.0;
   }
  } while(0);
  $mul$i656 = $fc2$0$i * $fc1$0$i;
  $arrayidx$i = (((($0)) + 37040|0) + ($band$287$i<<2)|0);
  HEAPF32[$arrayidx$i>>2] = $mul$i656;
  $inc153$i = (($band$287$i) + 1)|0;
  $exitcond$i = ($inc153$i|0)==(32);
  if ($exitcond$i) {
   break;
  }
  $$pre$i = +HEAPF32[$highpass2$i>>2];
  $124 = $$pre$i;$band$287$i = $inc153$i;
 }
 $127 = HEAP32[$samplerate_out574>>2]|0;
 $call702 = (_SmpFrqIndex($127,$cfg1)|0);
 $samplerate_index703 = ((($0)) + 20|0);
 HEAP32[$samplerate_index703>>2] = $call702;
 $cmp705 = ($call702|0)<(0);
 if ($cmp705) {
  _freegfc($0);
  HEAP32[$internal_flags>>2] = 0;
  $retval$0 = -1;
  STACKTOP = sp;return ($retval$0|0);
 }
 $128 = HEAP32[$VBR>>2]|0;
 $cmp711 = ($128|0)==(0);
 do {
  if ($cmp711) {
   $129 = HEAP32[$free_format102733>>2]|0;
   $tobool715 = ($129|0)==(0);
   if (!($tobool715)) {
    $$sink6 = 0;
    label = 149;
    break;
   }
   $brate719 = ((($gfp)) + 96|0);
   $130 = HEAP32[$brate719>>2]|0;
   $131 = HEAP32[$cfg1>>2]|0;
   $132 = HEAP32[$samplerate_out574>>2]|0;
   $call722 = (_FindNearestBitrate($130,$131,$132)|0);
   HEAP32[$brate719>>2] = $call722;
   $133 = HEAP32[$cfg1>>2]|0;
   $134 = HEAP32[$samplerate_out574>>2]|0;
   $call727 = (_BitrateIndex($call722,$133,$134)|0);
   $bitrate_index729 = ((($0)) + 84744|0);
   HEAP32[$bitrate_index729>>2] = $call727;
   $cmp732 = ($call727|0)<(1);
   if (!($cmp732)) {
    break;
   }
   _freegfc($0);
   HEAP32[$internal_flags>>2] = 0;
   $retval$0 = -1;
   STACKTOP = sp;return ($retval$0|0);
  } else {
   $$sink6 = 1;
   label = 149;
  }
 } while(0);
 if ((label|0) == 149) {
  $bitrate_index = ((($0)) + 84744|0);
  HEAP32[$bitrate_index>>2] = $$sink6;
 }
 _init_bit_stream_w($0);
 $135 = HEAP32[$samplerate_index703>>2]|0;
 $136 = HEAP32[$cfg1>>2]|0;
 $mul744 = ($136*3)|0;
 $add745 = (($mul744) + ($135))|0;
 $137 = HEAP32[$samplerate_out574>>2]|0;
 $cmp747 = ($137|0)<(16000);
 $mul749 = $cmp747 ? 6 : 0;
 $add750 = (($add745) + ($mul749))|0;
 $arrayidx756 = (6476 + (($add750*204)|0)|0);
 $138 = HEAP32[$arrayidx756>>2]|0;
 $arrayidx758 = ((($0)) + 21360|0);
 HEAP32[$arrayidx758>>2] = $138;
 $arrayidx756$1 = (((6476 + (($add750*204)|0)|0)) + 4|0);
 $139 = HEAP32[$arrayidx756$1>>2]|0;
 $arrayidx758$1 = ((($0)) + 21364|0);
 HEAP32[$arrayidx758$1>>2] = $139;
 $arrayidx756$2 = (((6476 + (($add750*204)|0)|0)) + 8|0);
 $140 = HEAP32[$arrayidx756$2>>2]|0;
 $arrayidx758$2 = ((($0)) + 21368|0);
 HEAP32[$arrayidx758$2>>2] = $140;
 $arrayidx756$3 = (((6476 + (($add750*204)|0)|0)) + 12|0);
 $141 = HEAP32[$arrayidx756$3>>2]|0;
 $arrayidx758$3 = ((($0)) + 21372|0);
 HEAP32[$arrayidx758$3>>2] = $141;
 $arrayidx756$4 = (((6476 + (($add750*204)|0)|0)) + 16|0);
 $142 = HEAP32[$arrayidx756$4>>2]|0;
 $arrayidx758$4 = ((($0)) + 21376|0);
 HEAP32[$arrayidx758$4>>2] = $142;
 $arrayidx756$5 = (((6476 + (($add750*204)|0)|0)) + 20|0);
 $143 = HEAP32[$arrayidx756$5>>2]|0;
 $arrayidx758$5 = ((($0)) + 21380|0);
 HEAP32[$arrayidx758$5>>2] = $143;
 $arrayidx756$6 = (((6476 + (($add750*204)|0)|0)) + 24|0);
 $144 = HEAP32[$arrayidx756$6>>2]|0;
 $arrayidx758$6 = ((($0)) + 21384|0);
 HEAP32[$arrayidx758$6>>2] = $144;
 $arrayidx756$7 = (((6476 + (($add750*204)|0)|0)) + 28|0);
 $145 = HEAP32[$arrayidx756$7>>2]|0;
 $arrayidx758$7 = ((($0)) + 21388|0);
 HEAP32[$arrayidx758$7>>2] = $145;
 $arrayidx756$8 = (((6476 + (($add750*204)|0)|0)) + 32|0);
 $146 = HEAP32[$arrayidx756$8>>2]|0;
 $arrayidx758$8 = ((($0)) + 21392|0);
 HEAP32[$arrayidx758$8>>2] = $146;
 $arrayidx756$9 = (((6476 + (($add750*204)|0)|0)) + 36|0);
 $147 = HEAP32[$arrayidx756$9>>2]|0;
 $arrayidx758$9 = ((($0)) + 21396|0);
 HEAP32[$arrayidx758$9>>2] = $147;
 $arrayidx756$10 = (((6476 + (($add750*204)|0)|0)) + 40|0);
 $148 = HEAP32[$arrayidx756$10>>2]|0;
 $arrayidx758$10 = ((($0)) + 21400|0);
 HEAP32[$arrayidx758$10>>2] = $148;
 $arrayidx756$11 = (((6476 + (($add750*204)|0)|0)) + 44|0);
 $149 = HEAP32[$arrayidx756$11>>2]|0;
 $arrayidx758$11 = ((($0)) + 21404|0);
 HEAP32[$arrayidx758$11>>2] = $149;
 $arrayidx756$12 = (((6476 + (($add750*204)|0)|0)) + 48|0);
 $150 = HEAP32[$arrayidx756$12>>2]|0;
 $arrayidx758$12 = ((($0)) + 21408|0);
 HEAP32[$arrayidx758$12>>2] = $150;
 $arrayidx756$13 = (((6476 + (($add750*204)|0)|0)) + 52|0);
 $151 = HEAP32[$arrayidx756$13>>2]|0;
 $arrayidx758$13 = ((($0)) + 21412|0);
 HEAP32[$arrayidx758$13>>2] = $151;
 $arrayidx756$14 = (((6476 + (($add750*204)|0)|0)) + 56|0);
 $152 = HEAP32[$arrayidx756$14>>2]|0;
 $arrayidx758$14 = ((($0)) + 21416|0);
 HEAP32[$arrayidx758$14>>2] = $152;
 $arrayidx756$15 = (((6476 + (($add750*204)|0)|0)) + 60|0);
 $153 = HEAP32[$arrayidx756$15>>2]|0;
 $arrayidx758$15 = ((($0)) + 21420|0);
 HEAP32[$arrayidx758$15>>2] = $153;
 $arrayidx756$16 = (((6476 + (($add750*204)|0)|0)) + 64|0);
 $154 = HEAP32[$arrayidx756$16>>2]|0;
 $arrayidx758$16 = ((($0)) + 21424|0);
 HEAP32[$arrayidx758$16>>2] = $154;
 $arrayidx756$17 = (((6476 + (($add750*204)|0)|0)) + 68|0);
 $155 = HEAP32[$arrayidx756$17>>2]|0;
 $arrayidx758$17 = ((($0)) + 21428|0);
 HEAP32[$arrayidx758$17>>2] = $155;
 $arrayidx756$18 = (((6476 + (($add750*204)|0)|0)) + 72|0);
 $156 = HEAP32[$arrayidx756$18>>2]|0;
 $arrayidx758$18 = ((($0)) + 21432|0);
 HEAP32[$arrayidx758$18>>2] = $156;
 $arrayidx756$19 = (((6476 + (($add750*204)|0)|0)) + 76|0);
 $157 = HEAP32[$arrayidx756$19>>2]|0;
 $arrayidx758$19 = ((($0)) + 21436|0);
 HEAP32[$arrayidx758$19>>2] = $157;
 $arrayidx756$20 = (((6476 + (($add750*204)|0)|0)) + 80|0);
 $158 = HEAP32[$arrayidx756$20>>2]|0;
 $arrayidx758$20 = ((($0)) + 21440|0);
 HEAP32[$arrayidx758$20>>2] = $158;
 $arrayidx756$21 = (((6476 + (($add750*204)|0)|0)) + 84|0);
 $159 = HEAP32[$arrayidx756$21>>2]|0;
 $arrayidx758$21 = ((($0)) + 21444|0);
 HEAP32[$arrayidx758$21>>2] = $159;
 $arrayidx756$22 = (((6476 + (($add750*204)|0)|0)) + 88|0);
 $160 = HEAP32[$arrayidx756$22>>2]|0;
 $arrayidx758$22 = ((($0)) + 21448|0);
 HEAP32[$arrayidx758$22>>2] = $160;
 $sub772 = (($160) - ($159))|0;
 $div773 = (($sub772|0) / 6)&-1;
 $arrayidx780 = ((($0)) + 21508|0);
 HEAP32[$arrayidx780>>2] = $159;
 $add778$1 = (($div773) + ($159))|0;
 $arrayidx780$1 = ((($0)) + 21512|0);
 HEAP32[$arrayidx780$1>>2] = $add778$1;
 $mul777$2 = $div773 << 1;
 $add778$2 = (($mul777$2) + ($159))|0;
 $arrayidx780$2 = ((($0)) + 21516|0);
 HEAP32[$arrayidx780$2>>2] = $add778$2;
 $mul777$3 = ($div773*3)|0;
 $add778$3 = (($mul777$3) + ($159))|0;
 $arrayidx780$3 = ((($0)) + 21520|0);
 HEAP32[$arrayidx780$3>>2] = $add778$3;
 $mul777$4 = $div773 << 2;
 $add778$4 = (($mul777$4) + ($159))|0;
 $arrayidx780$4 = ((($0)) + 21524|0);
 HEAP32[$arrayidx780$4>>2] = $add778$4;
 $mul777$5 = ($div773*5)|0;
 $add778$5 = (($mul777$5) + ($159))|0;
 $arrayidx780$5 = ((($0)) + 21528|0);
 HEAP32[$arrayidx780$5>>2] = $add778$5;
 $arrayidx780$6 = ((($0)) + 21532|0);
 HEAP32[$arrayidx780$6>>2] = 576;
 $arrayidx792 = (((6476 + (($add750*204)|0)|0)) + 92|0);
 $161 = HEAP32[$arrayidx792>>2]|0;
 $arrayidx795 = ((($0)) + 21452|0);
 HEAP32[$arrayidx795>>2] = $161;
 $arrayidx792$1 = (((6476 + (($add750*204)|0)|0)) + 96|0);
 $162 = HEAP32[$arrayidx792$1>>2]|0;
 $arrayidx795$1 = ((($0)) + 21456|0);
 HEAP32[$arrayidx795$1>>2] = $162;
 $arrayidx792$2 = (((6476 + (($add750*204)|0)|0)) + 100|0);
 $163 = HEAP32[$arrayidx792$2>>2]|0;
 $arrayidx795$2 = ((($0)) + 21460|0);
 HEAP32[$arrayidx795$2>>2] = $163;
 $arrayidx792$3 = (((6476 + (($add750*204)|0)|0)) + 104|0);
 $164 = HEAP32[$arrayidx792$3>>2]|0;
 $arrayidx795$3 = ((($0)) + 21464|0);
 HEAP32[$arrayidx795$3>>2] = $164;
 $arrayidx792$4 = (((6476 + (($add750*204)|0)|0)) + 108|0);
 $165 = HEAP32[$arrayidx792$4>>2]|0;
 $arrayidx795$4 = ((($0)) + 21468|0);
 HEAP32[$arrayidx795$4>>2] = $165;
 $arrayidx792$5 = (((6476 + (($add750*204)|0)|0)) + 112|0);
 $166 = HEAP32[$arrayidx792$5>>2]|0;
 $arrayidx795$5 = ((($0)) + 21472|0);
 HEAP32[$arrayidx795$5>>2] = $166;
 $arrayidx792$6 = (((6476 + (($add750*204)|0)|0)) + 116|0);
 $167 = HEAP32[$arrayidx792$6>>2]|0;
 $arrayidx795$6 = ((($0)) + 21476|0);
 HEAP32[$arrayidx795$6>>2] = $167;
 $arrayidx792$7 = (((6476 + (($add750*204)|0)|0)) + 120|0);
 $168 = HEAP32[$arrayidx792$7>>2]|0;
 $arrayidx795$7 = ((($0)) + 21480|0);
 HEAP32[$arrayidx795$7>>2] = $168;
 $arrayidx792$8 = (((6476 + (($add750*204)|0)|0)) + 124|0);
 $169 = HEAP32[$arrayidx792$8>>2]|0;
 $arrayidx795$8 = ((($0)) + 21484|0);
 HEAP32[$arrayidx795$8>>2] = $169;
 $arrayidx792$9 = (((6476 + (($add750*204)|0)|0)) + 128|0);
 $170 = HEAP32[$arrayidx792$9>>2]|0;
 $arrayidx795$9 = ((($0)) + 21488|0);
 HEAP32[$arrayidx795$9>>2] = $170;
 $arrayidx792$10 = (((6476 + (($add750*204)|0)|0)) + 132|0);
 $171 = HEAP32[$arrayidx792$10>>2]|0;
 $arrayidx795$10 = ((($0)) + 21492|0);
 HEAP32[$arrayidx795$10>>2] = $171;
 $arrayidx792$11 = (((6476 + (($add750*204)|0)|0)) + 136|0);
 $172 = HEAP32[$arrayidx792$11>>2]|0;
 $arrayidx795$11 = ((($0)) + 21496|0);
 HEAP32[$arrayidx795$11>>2] = $172;
 $arrayidx792$12 = (((6476 + (($add750*204)|0)|0)) + 140|0);
 $173 = HEAP32[$arrayidx792$12>>2]|0;
 $arrayidx795$12 = ((($0)) + 21500|0);
 HEAP32[$arrayidx795$12>>2] = $173;
 $arrayidx792$13 = (((6476 + (($add750*204)|0)|0)) + 144|0);
 $174 = HEAP32[$arrayidx792$13>>2]|0;
 $arrayidx795$13 = ((($0)) + 21504|0);
 HEAP32[$arrayidx795$13>>2] = $174;
 $sub810 = (($174) - ($173))|0;
 $div811 = (($sub810|0) / 6)&-1;
 $arrayidx819 = ((($0)) + 21536|0);
 HEAP32[$arrayidx819>>2] = $173;
 $add817$1 = (($div811) + ($173))|0;
 $arrayidx819$1 = ((($0)) + 21540|0);
 HEAP32[$arrayidx819$1>>2] = $add817$1;
 $mul816$2 = $div811 << 1;
 $add817$2 = (($mul816$2) + ($173))|0;
 $arrayidx819$2 = ((($0)) + 21544|0);
 HEAP32[$arrayidx819$2>>2] = $add817$2;
 $mul816$3 = ($div811*3)|0;
 $add817$3 = (($mul816$3) + ($173))|0;
 $arrayidx819$3 = ((($0)) + 21548|0);
 HEAP32[$arrayidx819$3>>2] = $add817$3;
 $mul816$4 = $div811 << 2;
 $add817$4 = (($mul816$4) + ($173))|0;
 $arrayidx819$4 = ((($0)) + 21552|0);
 HEAP32[$arrayidx819$4>>2] = $add817$4;
 $mul816$5 = ($div811*5)|0;
 $add817$5 = (($mul816$5) + ($173))|0;
 $arrayidx819$5 = ((($0)) + 21556|0);
 HEAP32[$arrayidx819$5>>2] = $add817$5;
 $arrayidx819$6 = ((($0)) + 21560|0);
 HEAP32[$arrayidx819$6>>2] = 192;
 $175 = HEAP32[$mode_gr>>2]|0;
 $cmp827 = ($175|0)==(2);
 $176 = HEAP32[$channels_out728>>2]|0;
 $cmp831 = ($176|0)==(1);
 $cond838 = $cmp831 ? 13 : 21;
 $cond833 = $cmp831 ? 21 : 36;
 $cond838$sink = $cmp827 ? $cond833 : $cond838;
 $sideinfo_len839 = ((($0)) + 24|0);
 HEAP32[$sideinfo_len839>>2] = $cond838$sink;
 $177 = HEAP32[$error_protection75>>2]|0;
 $tobool842 = ($177|0)==(0);
 if (!($tobool842)) {
  $add845 = $cond838$sink | 2;
  HEAP32[$sideinfo_len839>>2] = $add845;
 }
 HEAP32[$0>>2] = -487877;
 $mul853758 = ($175*700)|0;
 $mul855759 = Math_imul($mul853758, $176)|0;
 $conv856760 = (+($mul855759|0));
 $arrayidx857761 = ((($0)) + 39756|0);
 HEAPF32[$arrayidx857761>>2] = $conv856760;
 $$pre714 = HEAP32[$mode_gr>>2]|0;
 $$pre715 = HEAP32[$channels_out728>>2]|0;
 $mul853 = ($$pre714*700)|0;
 $mul855 = Math_imul($mul853, $$pre715)|0;
 $conv856 = (+($mul855|0));
 $arrayidx857 = ((($0)) + 39760|0);
 HEAPF32[$arrayidx857>>2] = $conv856;
 $$pre714$1 = HEAP32[$mode_gr>>2]|0;
 $$pre715$1 = HEAP32[$channels_out728>>2]|0;
 $mul853$1 = ($$pre714$1*700)|0;
 $mul855$1 = Math_imul($mul853$1, $$pre715$1)|0;
 $conv856$1 = (+($mul855$1|0));
 $arrayidx857$1 = ((($0)) + 39764|0);
 HEAPF32[$arrayidx857$1>>2] = $conv856$1;
 $$pre714$2 = HEAP32[$mode_gr>>2]|0;
 $$pre715$2 = HEAP32[$channels_out728>>2]|0;
 $mul853$2 = ($$pre714$2*700)|0;
 $mul855$2 = Math_imul($mul853$2, $$pre715$2)|0;
 $conv856$2 = (+($mul855$2|0));
 $arrayidx857$2 = ((($0)) + 39768|0);
 HEAPF32[$arrayidx857$2>>2] = $conv856$2;
 $$pre714$3 = HEAP32[$mode_gr>>2]|0;
 $$pre715$3 = HEAP32[$channels_out728>>2]|0;
 $mul853$3 = ($$pre714$3*700)|0;
 $mul855$3 = Math_imul($mul853$3, $$pre715$3)|0;
 $conv856$3 = (+($mul855$3|0));
 $arrayidx857$3 = ((($0)) + 39772|0);
 HEAPF32[$arrayidx857$3>>2] = $conv856$3;
 $$pre714$4 = HEAP32[$mode_gr>>2]|0;
 $$pre715$4 = HEAP32[$channels_out728>>2]|0;
 $mul853$4 = ($$pre714$4*700)|0;
 $mul855$4 = Math_imul($mul853$4, $$pre715$4)|0;
 $conv856$4 = (+($mul855$4|0));
 $arrayidx857$4 = ((($0)) + 39776|0);
 HEAPF32[$arrayidx857$4>>2] = $conv856$4;
 $$pre714$5 = HEAP32[$mode_gr>>2]|0;
 $$pre715$5 = HEAP32[$channels_out728>>2]|0;
 $mul853$5 = ($$pre714$5*700)|0;
 $mul855$5 = Math_imul($mul853$5, $$pre715$5)|0;
 $conv856$5 = (+($mul855$5|0));
 $arrayidx857$5 = ((($0)) + 39780|0);
 HEAPF32[$arrayidx857$5>>2] = $conv856$5;
 $$pre714$6 = HEAP32[$mode_gr>>2]|0;
 $$pre715$6 = HEAP32[$channels_out728>>2]|0;
 $mul853$6 = ($$pre714$6*700)|0;
 $mul855$6 = Math_imul($mul853$6, $$pre715$6)|0;
 $conv856$6 = (+($mul855$6|0));
 $arrayidx857$6 = ((($0)) + 39784|0);
 HEAPF32[$arrayidx857$6>>2] = $conv856$6;
 $$pre714$7 = HEAP32[$mode_gr>>2]|0;
 $$pre715$7 = HEAP32[$channels_out728>>2]|0;
 $mul853$7 = ($$pre714$7*700)|0;
 $mul855$7 = Math_imul($mul853$7, $$pre715$7)|0;
 $conv856$7 = (+($mul855$7|0));
 $arrayidx857$7 = ((($0)) + 39788|0);
 HEAPF32[$arrayidx857$7>>2] = $conv856$7;
 $$pre714$8 = HEAP32[$mode_gr>>2]|0;
 $$pre715$8 = HEAP32[$channels_out728>>2]|0;
 $mul853$8 = ($$pre714$8*700)|0;
 $mul855$8 = Math_imul($mul853$8, $$pre715$8)|0;
 $conv856$8 = (+($mul855$8|0));
 $arrayidx857$8 = ((($0)) + 39792|0);
 HEAPF32[$arrayidx857$8>>2] = $conv856$8;
 $$pre714$9 = HEAP32[$mode_gr>>2]|0;
 $$pre715$9 = HEAP32[$channels_out728>>2]|0;
 $mul853$9 = ($$pre714$9*700)|0;
 $mul855$9 = Math_imul($mul853$9, $$pre715$9)|0;
 $conv856$9 = (+($mul855$9|0));
 $arrayidx857$9 = ((($0)) + 39796|0);
 HEAPF32[$arrayidx857$9>>2] = $conv856$9;
 $$pre714$10 = HEAP32[$mode_gr>>2]|0;
 $$pre715$10 = HEAP32[$channels_out728>>2]|0;
 $mul853$10 = ($$pre714$10*700)|0;
 $mul855$10 = Math_imul($mul853$10, $$pre715$10)|0;
 $conv856$10 = (+($mul855$10|0));
 $arrayidx857$10 = ((($0)) + 39800|0);
 HEAPF32[$arrayidx857$10>>2] = $conv856$10;
 $$pre714$11 = HEAP32[$mode_gr>>2]|0;
 $$pre715$11 = HEAP32[$channels_out728>>2]|0;
 $mul853$11 = ($$pre714$11*700)|0;
 $mul855$11 = Math_imul($mul853$11, $$pre715$11)|0;
 $conv856$11 = (+($mul855$11|0));
 $arrayidx857$11 = ((($0)) + 39804|0);
 HEAPF32[$arrayidx857$11>>2] = $conv856$11;
 $$pre714$12 = HEAP32[$mode_gr>>2]|0;
 $$pre715$12 = HEAP32[$channels_out728>>2]|0;
 $mul853$12 = ($$pre714$12*700)|0;
 $mul855$12 = Math_imul($mul853$12, $$pre715$12)|0;
 $conv856$12 = (+($mul855$12|0));
 $arrayidx857$12 = ((($0)) + 39808|0);
 HEAPF32[$arrayidx857$12>>2] = $conv856$12;
 $$pre714$13 = HEAP32[$mode_gr>>2]|0;
 $$pre715$13 = HEAP32[$channels_out728>>2]|0;
 $mul853$13 = ($$pre714$13*700)|0;
 $mul855$13 = Math_imul($mul853$13, $$pre715$13)|0;
 $conv856$13 = (+($mul855$13|0));
 $arrayidx857$13 = ((($0)) + 39812|0);
 HEAPF32[$arrayidx857$13>>2] = $conv856$13;
 $$pre714$14 = HEAP32[$mode_gr>>2]|0;
 $$pre715$14 = HEAP32[$channels_out728>>2]|0;
 $mul853$14 = ($$pre714$14*700)|0;
 $mul855$14 = Math_imul($mul853$14, $$pre715$14)|0;
 $conv856$14 = (+($mul855$14|0));
 $arrayidx857$14 = ((($0)) + 39816|0);
 HEAPF32[$arrayidx857$14>>2] = $conv856$14;
 $$pre714$15 = HEAP32[$mode_gr>>2]|0;
 $$pre715$15 = HEAP32[$channels_out728>>2]|0;
 $mul853$15 = ($$pre714$15*700)|0;
 $mul855$15 = Math_imul($mul853$15, $$pre715$15)|0;
 $conv856$15 = (+($mul855$15|0));
 $arrayidx857$15 = ((($0)) + 39820|0);
 HEAPF32[$arrayidx857$15>>2] = $conv856$15;
 $$pre714$16 = HEAP32[$mode_gr>>2]|0;
 $$pre715$16 = HEAP32[$channels_out728>>2]|0;
 $mul853$16 = ($$pre714$16*700)|0;
 $mul855$16 = Math_imul($mul853$16, $$pre715$16)|0;
 $conv856$16 = (+($mul855$16|0));
 $arrayidx857$16 = ((($0)) + 39824|0);
 HEAPF32[$arrayidx857$16>>2] = $conv856$16;
 $$pre714$17 = HEAP32[$mode_gr>>2]|0;
 $$pre715$17 = HEAP32[$channels_out728>>2]|0;
 $mul853$17 = ($$pre714$17*700)|0;
 $mul855$17 = Math_imul($mul853$17, $$pre715$17)|0;
 $conv856$17 = (+($mul855$17|0));
 $arrayidx857$17 = ((($0)) + 39828|0);
 HEAPF32[$arrayidx857$17>>2] = $conv856$17;
 $ATHtype = ((($gfp)) + 220|0);
 $178 = HEAP32[$ATHtype>>2]|0;
 $cmp861 = ($178|0)==(-1);
 if ($cmp861) {
  HEAP32[$ATHtype>>2] = 4;
 }
 $179 = HEAP32[$VBR>>2]|0;
 switch ($179|0) {
 case 4: case 1:  {
  $strict_ISO = ((($gfp)) + 124|0);
  $180 = HEAP32[$strict_ISO>>2]|0;
  $cmp868 = ($180|0)<(0);
  if ($cmp868) {
   HEAP32[$strict_ISO>>2] = 2;
  }
  $useTemporal = ((($gfp)) + 244|0);
  $181 = HEAP32[$useTemporal>>2]|0;
  $cmp873 = ($181|0)<(0);
  if ($cmp873) {
   HEAP32[$useTemporal>>2] = 0;
  }
  $VBR_q878 = ((($gfp)) + 164|0);
  $182 = HEAP32[$VBR_q878>>2]|0;
  $183 = Math_imul($182, -10)|0;
  $sub880 = (($183) + 500)|0;
  (_apply_preset($gfp,$sub880,0)|0);
  $quality = ((($gfp)) + 44|0);
  $184 = HEAP32[$quality>>2]|0;
  $cmp882 = ($184|0)<(0);
  do {
   if ($cmp882) {
    HEAP32[$quality>>2] = 3;
    $$sink = 0;
    label = 163;
   } else {
    $cmp888 = ($184|0)<(5);
    if ($cmp888) {
     $$sink = 0;
     label = 163;
     break;
    }
    $cmp894 = ($184|0)>(7);
    if ($cmp894) {
     $$sink = 7;
     label = 163;
    }
   }
  } while(0);
  if ((label|0) == 163) {
   HEAP32[$quality>>2] = $$sink;
  }
  $experimentalY = ((($gfp)) + 140|0);
  $185 = HEAP32[$experimentalY>>2]|0;
  $tobool899 = ($185|0)==(0);
  if ($tobool899) {
   $186 = HEAP32[$samplerate_out574>>2]|0;
   $cmp903 = ($186|0)>(44000);
   $conv904 = $cmp903&1;
   $conv904$sink = $conv904;
  } else {
   $conv904$sink = 0;
  }
  $sfb21_extra906 = ((($0)) + 85092|0);
  HEAP32[$sfb21_extra906>>2] = $conv904$sink;
  $iteration_loop = ((($0)) + 85812|0);
  HEAP32[$iteration_loop>>2] = 1;
  break;
 }
 case 2:  {
  $VBR_q909 = ((($gfp)) + 164|0);
  $187 = HEAP32[$VBR_q909>>2]|0;
  $188 = Math_imul($187, -10)|0;
  $sub911 = (($188) + 500)|0;
  (_apply_preset($gfp,$sub911,0)|0);
  $experimentalY913 = ((($gfp)) + 140|0);
  $189 = HEAP32[$experimentalY913>>2]|0;
  $tobool914 = ($189|0)==(0);
  if ($tobool914) {
   $190 = HEAP32[$samplerate_out574>>2]|0;
   $cmp920 = ($190|0)>(44000);
   $conv921 = $cmp920&1;
   $conv921$sink = $conv921;
  } else {
   $conv921$sink = 0;
  }
  $sfb21_extra923 = ((($0)) + 85092|0);
  HEAP32[$sfb21_extra923>>2] = $conv921$sink;
  $quality925 = ((($gfp)) + 44|0);
  $191 = HEAP32[$quality925>>2]|0;
  $cmp926 = ($191|0)>(6);
  if ($cmp926) {
   $$sink686 = 6;
   label = 171;
  } else {
   $cmp932 = ($191|0)<(0);
   if ($cmp932) {
    $$sink686 = 3;
    label = 171;
   }
  }
  if ((label|0) == 171) {
   HEAP32[$quality925>>2] = $$sink686;
  }
  $iteration_loop937 = ((($0)) + 85812|0);
  HEAP32[$iteration_loop937>>2] = 2;
  break;
 }
 default: {
  $sfb21_extra940 = ((($0)) + 85092|0);
  HEAP32[$sfb21_extra940>>2] = 0;
  $quality941 = ((($gfp)) + 44|0);
  $192 = HEAP32[$quality941>>2]|0;
  $cmp942 = ($192|0)<(0);
  if ($cmp942) {
   HEAP32[$quality941>>2] = 3;
  }
  $cmp948 = ($179|0)==(0);
  if ($cmp948) {
   $brate951 = ((($gfp)) + 96|0);
   $193 = HEAP32[$brate951>>2]|0;
   (_lame_set_VBR_mean_bitrate_kbps($gfp,$193)|0);
  }
  $VBR_mean_bitrate_kbps954 = ((($gfp)) + 168|0);
  $194 = HEAP32[$VBR_mean_bitrate_kbps954>>2]|0;
  (_apply_preset($gfp,$194,0)|0);
  HEAP32[$VBR>>2] = $179;
  $iteration_loop960 = ((($0)) + 85812|0);
  $ABR_iteration_loop$sink = $cmp948 ? 3 : 4;
  HEAP32[$iteration_loop960>>2] = $ABR_iteration_loop$sink;
 }
 }
 $maskingadjust = ((($gfp)) + 200|0);
 $195 = HEAP32[$maskingadjust>>2]|0;
 $mask_adjust = ((($0)) + 84912|0);
 HEAP32[$mask_adjust>>2] = $195;
 $maskingadjust_short = ((($gfp)) + 204|0);
 $196 = HEAP32[$maskingadjust_short>>2]|0;
 $mask_adjust_short = ((($0)) + 84916|0);
 HEAP32[$mask_adjust_short>>2] = $196;
 $tune = ((($gfp)) + 256|0);
 $197 = HEAP32[$tune>>2]|0;
 $tobool967 = ($197|0)==(0);
 if (!($tobool967)) {
  $198 = (HEAP32[tempDoublePtr>>2]=$196,+HEAPF32[tempDoublePtr>>2]);
  $199 = (HEAP32[tempDoublePtr>>2]=$195,+HEAPF32[tempDoublePtr>>2]);
  $tune_value_a = ((($gfp)) + 260|0);
  $200 = +HEAPF32[$tune_value_a>>2];
  $add971 = $199 + $200;
  HEAPF32[$mask_adjust>>2] = $add971;
  $add975 = $198 + $200;
  HEAPF32[$mask_adjust_short>>2] = $add975;
 }
 $201 = HEAP32[$VBR>>2]|0;
 $cmp978 = ($201|0)==(0);
 if ($cmp978) {
  $VBR_mean_bitrate_kbps1078$phi$trans$insert = ((($gfp)) + 168|0);
  $$pre719 = HEAP32[$VBR_mean_bitrate_kbps1078$phi$trans$insert>>2]|0;
  $222 = 0;$228 = $$pre719;
 } else {
  $vbr_min_bitrate_index = ((($0)) + 112|0);
  HEAP32[$vbr_min_bitrate_index>>2] = 1;
  $vbr_max_bitrate_index = ((($0)) + 116|0);
  $202 = HEAP32[$samplerate_out574>>2]|0;
  $cmp982 = ($202|0)<(16000);
  $$638 = $cmp982 ? 8 : 14;
  HEAP32[$vbr_max_bitrate_index>>2] = $$638;
  $VBR_min_bitrate_kbps = ((($gfp)) + 172|0);
  $203 = HEAP32[$VBR_min_bitrate_kbps>>2]|0;
  $tobool987 = ($203|0)==(0);
  do {
   if ($tobool987) {
    $295 = 1;
   } else {
    $204 = HEAP32[$cfg1>>2]|0;
    $call992 = (_FindNearestBitrate($203,$204,$202)|0);
    HEAP32[$VBR_min_bitrate_kbps>>2] = $call992;
    $205 = HEAP32[$cfg1>>2]|0;
    $206 = HEAP32[$samplerate_out574>>2]|0;
    $call997 = (_BitrateIndex($call992,$205,$206)|0);
    HEAP32[$vbr_min_bitrate_index>>2] = $call997;
    $cmp1000 = ($call997|0)<(0);
    if ($cmp1000) {
     $retval$0 = -1;
    } else {
     $295 = $call997;
     break;
    }
    STACKTOP = sp;return ($retval$0|0);
   }
  } while(0);
  $VBR_max_bitrate_kbps = ((($gfp)) + 176|0);
  $207 = HEAP32[$VBR_max_bitrate_kbps>>2]|0;
  $tobool1005 = ($207|0)==(0);
  do {
   if ($tobool1005) {
    $$pre717 = HEAP32[$vbr_max_bitrate_index>>2]|0;
    $213 = $295;$215 = $$pre717;
   } else {
    $208 = HEAP32[$cfg1>>2]|0;
    $209 = HEAP32[$samplerate_out574>>2]|0;
    $call1010 = (_FindNearestBitrate($207,$208,$209)|0);
    HEAP32[$VBR_max_bitrate_kbps>>2] = $call1010;
    $210 = HEAP32[$cfg1>>2]|0;
    $211 = HEAP32[$samplerate_out574>>2]|0;
    $call1015 = (_BitrateIndex($call1010,$210,$211)|0);
    HEAP32[$vbr_max_bitrate_index>>2] = $call1015;
    $cmp1018 = ($call1015|0)<(0);
    if ($cmp1018) {
     $retval$0 = -1;
     STACKTOP = sp;return ($retval$0|0);
    } else {
     $$pre716 = HEAP32[$vbr_min_bitrate_index>>2]|0;
     $213 = $$pre716;$215 = $call1015;
     break;
    }
   }
  } while(0);
  $212 = HEAP32[$cfg1>>2]|0;
  $arrayidx1026 = ((9980 + ($212<<6)|0) + ($213<<2)|0);
  $214 = HEAP32[$arrayidx1026>>2]|0;
  HEAP32[$VBR_min_bitrate_kbps>>2] = $214;
  $arrayidx1031 = ((9980 + ($212<<6)|0) + ($215<<2)|0);
  $216 = HEAP32[$arrayidx1031>>2]|0;
  HEAP32[$VBR_max_bitrate_kbps>>2] = $216;
  $VBR_mean_bitrate_kbps1037 = ((($gfp)) + 168|0);
  $217 = HEAP32[$VBR_mean_bitrate_kbps1037>>2]|0;
  $cmp1038 = ($216|0)<($217|0);
  $218 = $cmp1038 ? $216 : $217;
  $cmp1055 = ($214|0)>($218|0);
  $219 = $cmp1055 ? $214 : $218;
  HEAP32[$VBR_mean_bitrate_kbps1037>>2] = $219;
  $$pre718 = HEAP32[$VBR>>2]|0;
  $222 = $$pre718;$228 = $219;
 }
 $preset = ((($gfp)) + 152|0);
 $220 = HEAP32[$preset>>2]|0;
 $preset1068 = ((($0)) + 100|0);
 HEAP32[$preset1068>>2] = $220;
 $221 = HEAP32[$write_lame_tag519>>2]|0;
 $write_lame_tag1070 = ((($0)) + 156|0);
 HEAP32[$write_lame_tag1070>>2] = $221;
 $vbr = ((($0)) + 104|0);
 HEAP32[$vbr>>2] = $222;
 $substep_shaping = ((($gfp)) + 80|0);
 $223 = HEAP32[$substep_shaping>>2]|0;
 $substep_shaping1073 = ((($0)) + 85096|0);
 HEAP32[$substep_shaping1073>>2] = $223;
 $noise_shaping = ((($gfp)) + 84|0);
 $224 = HEAP32[$noise_shaping>>2]|0;
 $noise_shaping1074 = ((($0)) + 28|0);
 HEAP32[$noise_shaping1074>>2] = $224;
 $subblock_gain = ((($gfp)) + 88|0);
 $225 = HEAP32[$subblock_gain>>2]|0;
 $subblock_gain1075 = ((($0)) + 32|0);
 HEAP32[$subblock_gain1075>>2] = $225;
 $use_best_huffman = ((($gfp)) + 92|0);
 $226 = HEAP32[$use_best_huffman>>2]|0;
 $use_best_huffman1076 = ((($0)) + 36|0);
 HEAP32[$use_best_huffman1076>>2] = $226;
 $brate1077 = ((($gfp)) + 96|0);
 $227 = HEAP32[$brate1077>>2]|0;
 $avg_bitrate = ((($0)) + 120|0);
 HEAP32[$avg_bitrate>>2] = $227;
 $vbr_avg_bitrate_kbps = ((($0)) + 108|0);
 HEAP32[$vbr_avg_bitrate_kbps>>2] = $228;
 $229 = HEAP32[$compression_ratio607>>2]|0;
 $compression_ratio1080 = ((($0)) + 244|0);
 HEAP32[$compression_ratio1080>>2] = $229;
 $230 = HEAP32[$internal_flags>>2]|0;
 $quality$i = ((($gfp)) + 44|0);
 $231 = HEAP32[$quality$i>>2]|0;
 switch ($231|0) {
 case 0:  {
  $noise_shaping115$i = ((($230)) + 28|0);
  $247 = HEAP32[$noise_shaping115$i>>2]|0;
  $cmp116$i = ($247|0)==(0);
  if ($cmp116$i) {
   HEAP32[$noise_shaping115$i>>2] = 1;
  }
  $substep_shaping121$i = ((($230)) + 85096|0);
  $248 = HEAP32[$substep_shaping121$i>>2]|0;
  $cmp122$i = ($248|0)==(0);
  if ($cmp122$i) {
   HEAP32[$substep_shaping121$i>>2] = 2;
  }
  $noise_shaping_amp127$i = ((($230)) + 40|0);
  HEAP32[$noise_shaping_amp127$i>>2] = 2;
  $noise_shaping_stop128$i = ((($230)) + 44|0);
  HEAP32[$noise_shaping_stop128$i>>2] = 1;
  $subblock_gain129$i = ((($230)) + 32|0);
  $249 = HEAP32[$subblock_gain129$i>>2]|0;
  $cmp130$i = ($249|0)==(-1);
  if ($cmp130$i) {
   HEAP32[$subblock_gain129$i>>2] = 1;
  }
  $use_best_huffman134$i = ((($230)) + 36|0);
  HEAP32[$use_best_huffman134$i>>2] = 1;
  $$sink$i = 1;
  label = 234;
  break;
 }
 case 8:  {
  HEAP32[$quality$i>>2] = 7;
  label = 192;
  break;
 }
 case 7:  {
  label = 192;
  break;
 }
 case 6:  {
  $noise_shaping14$i = ((($230)) + 28|0);
  $233 = HEAP32[$noise_shaping14$i>>2]|0;
  $cmp15$i = ($233|0)==(0);
  if ($cmp15$i) {
   HEAP32[$noise_shaping14$i>>2] = 1;
  }
  $noise_shaping_amp19$i = ((($230)) + 40|0);
  HEAP32[$noise_shaping_amp19$i>>2] = 0;
  $noise_shaping_stop20$i = ((($230)) + 44|0);
  HEAP32[$noise_shaping_stop20$i>>2] = 0;
  $subblock_gain$i = ((($230)) + 32|0);
  $234 = HEAP32[$subblock_gain$i>>2]|0;
  $cmp21$i = ($234|0)==(-1);
  if ($cmp21$i) {
   HEAP32[$subblock_gain$i>>2] = 1;
  }
  $use_best_huffman25$i = ((($230)) + 36|0);
  HEAP32[$use_best_huffman25$i>>2] = 0;
  $$sink$i = 0;
  label = 234;
  break;
 }
 case 5:  {
  $noise_shaping28$i = ((($230)) + 28|0);
  $235 = HEAP32[$noise_shaping28$i>>2]|0;
  $cmp29$i = ($235|0)==(0);
  if ($cmp29$i) {
   HEAP32[$noise_shaping28$i>>2] = 1;
  }
  $noise_shaping_amp33$i = ((($230)) + 40|0);
  HEAP32[$noise_shaping_amp33$i>>2] = 0;
  $noise_shaping_stop34$i = ((($230)) + 44|0);
  HEAP32[$noise_shaping_stop34$i>>2] = 0;
  $subblock_gain35$i = ((($230)) + 32|0);
  $236 = HEAP32[$subblock_gain35$i>>2]|0;
  $cmp36$i = ($236|0)==(-1);
  if ($cmp36$i) {
   HEAP32[$subblock_gain35$i>>2] = 1;
  }
  $use_best_huffman40$i = ((($230)) + 36|0);
  HEAP32[$use_best_huffman40$i>>2] = 0;
  $$sink$i = 0;
  label = 234;
  break;
 }
 case 4:  {
  $noise_shaping43$i = ((($230)) + 28|0);
  $237 = HEAP32[$noise_shaping43$i>>2]|0;
  $cmp44$i = ($237|0)==(0);
  if ($cmp44$i) {
   HEAP32[$noise_shaping43$i>>2] = 1;
  }
  $noise_shaping_amp48$i = ((($230)) + 40|0);
  HEAP32[$noise_shaping_amp48$i>>2] = 0;
  $noise_shaping_stop49$i = ((($230)) + 44|0);
  HEAP32[$noise_shaping_stop49$i>>2] = 0;
  $subblock_gain50$i = ((($230)) + 32|0);
  $238 = HEAP32[$subblock_gain50$i>>2]|0;
  $cmp51$i = ($238|0)==(-1);
  if ($cmp51$i) {
   HEAP32[$subblock_gain50$i>>2] = 1;
  }
  $use_best_huffman55$i = ((($230)) + 36|0);
  HEAP32[$use_best_huffman55$i>>2] = 1;
  $$sink$i = 0;
  label = 234;
  break;
 }
 case 3:  {
  $noise_shaping58$i = ((($230)) + 28|0);
  $239 = HEAP32[$noise_shaping58$i>>2]|0;
  $cmp59$i = ($239|0)==(0);
  if ($cmp59$i) {
   HEAP32[$noise_shaping58$i>>2] = 1;
  }
  $noise_shaping_amp63$i = ((($230)) + 40|0);
  HEAP32[$noise_shaping_amp63$i>>2] = 1;
  $noise_shaping_stop64$i = ((($230)) + 44|0);
  HEAP32[$noise_shaping_stop64$i>>2] = 1;
  $subblock_gain65$i = ((($230)) + 32|0);
  $240 = HEAP32[$subblock_gain65$i>>2]|0;
  $cmp66$i = ($240|0)==(-1);
  if ($cmp66$i) {
   HEAP32[$subblock_gain65$i>>2] = 1;
  }
  $use_best_huffman70$i = ((($230)) + 36|0);
  HEAP32[$use_best_huffman70$i>>2] = 1;
  $$sink$i = 0;
  label = 234;
  break;
 }
 case 2:  {
  $noise_shaping73$i = ((($230)) + 28|0);
  $241 = HEAP32[$noise_shaping73$i>>2]|0;
  $cmp74$i = ($241|0)==(0);
  if ($cmp74$i) {
   HEAP32[$noise_shaping73$i>>2] = 1;
  }
  $substep_shaping$i = ((($230)) + 85096|0);
  $242 = HEAP32[$substep_shaping$i>>2]|0;
  $cmp78$i = ($242|0)==(0);
  if ($cmp78$i) {
   HEAP32[$substep_shaping$i>>2] = 2;
  }
  $noise_shaping_amp83$i = ((($230)) + 40|0);
  HEAP32[$noise_shaping_amp83$i>>2] = 1;
  $noise_shaping_stop84$i = ((($230)) + 44|0);
  HEAP32[$noise_shaping_stop84$i>>2] = 1;
  $subblock_gain85$i = ((($230)) + 32|0);
  $243 = HEAP32[$subblock_gain85$i>>2]|0;
  $cmp86$i = ($243|0)==(-1);
  if ($cmp86$i) {
   HEAP32[$subblock_gain85$i>>2] = 1;
  }
  $use_best_huffman90$i = ((($230)) + 36|0);
  HEAP32[$use_best_huffman90$i>>2] = 1;
  $$sink$i = 0;
  label = 234;
  break;
 }
 case 1:  {
  $noise_shaping93$i = ((($230)) + 28|0);
  $244 = HEAP32[$noise_shaping93$i>>2]|0;
  $cmp94$i = ($244|0)==(0);
  if ($cmp94$i) {
   HEAP32[$noise_shaping93$i>>2] = 1;
  }
  $substep_shaping99$i = ((($230)) + 85096|0);
  $245 = HEAP32[$substep_shaping99$i>>2]|0;
  $cmp100$i = ($245|0)==(0);
  if ($cmp100$i) {
   HEAP32[$substep_shaping99$i>>2] = 2;
  }
  $noise_shaping_amp105$i = ((($230)) + 40|0);
  HEAP32[$noise_shaping_amp105$i>>2] = 2;
  $noise_shaping_stop106$i = ((($230)) + 44|0);
  HEAP32[$noise_shaping_stop106$i>>2] = 1;
  $subblock_gain107$i = ((($230)) + 32|0);
  $246 = HEAP32[$subblock_gain107$i>>2]|0;
  $cmp108$i = ($246|0)==(-1);
  if ($cmp108$i) {
   HEAP32[$subblock_gain107$i>>2] = 1;
  }
  $use_best_huffman112$i = ((($230)) + 36|0);
  HEAP32[$use_best_huffman112$i>>2] = 1;
  $$sink$i = 0;
  label = 234;
  break;
 }
 default: {
  $noise_shaping$i = ((($230)) + 28|0);
  HEAP32[$noise_shaping$i>>2] = 0;
  $noise_shaping_amp$i = ((($230)) + 40|0);
  HEAP32[$noise_shaping_amp$i>>2] = 0;
  $noise_shaping_stop$i = ((($230)) + 44|0);
  HEAP32[$noise_shaping_stop$i>>2] = 0;
  $use_best_huffman$i = ((($230)) + 36|0);
  HEAP32[$use_best_huffman$i>>2] = 0;
  $$sink$i = 0;
  label = 234;
 }
 }
 if ((label|0) == 192) {
  $noise_shaping5$i = ((($230)) + 28|0);
  HEAP32[$noise_shaping5$i>>2] = 0;
  $use_best_huffman8$i = ((($230)) + 36|0);
  ;HEAP32[$use_best_huffman8$i>>2]=0|0;HEAP32[$use_best_huffman8$i+4>>2]=0|0;HEAP32[$use_best_huffman8$i+8>>2]=0|0;HEAP32[$use_best_huffman8$i+12>>2]=0|0;
  $232 = HEAP32[$VBR>>2]|0;
  switch ($232|0) {
  case 4: case 1:  {
   $$sink$i = -1;
   label = 234;
   break;
  }
  default: {
  }
  }
 }
 if ((label|0) == 234) {
  $full_outer_loop12$i = ((($230)) + 48|0);
  HEAP32[$full_outer_loop12$i>>2] = $$sink$i;
 }
 $athaa_type = ((($gfp)) + 232|0);
 $250 = HEAP32[$athaa_type>>2]|0;
 $cmp1081 = ($250|0)<(0);
 $$639 = $cmp1081 ? 3 : $250;
 $251 = HEAP32[$ATH>>2]|0;
 HEAP32[$251>>2] = $$639;
 $athaa_sensitivity = ((($gfp)) + 236|0);
 $252 = +HEAPF32[$athaa_sensitivity>>2];
 $conv1090 = $252;
 $div1091 = $conv1090 * -0.10000000000000001;
 $253 = (+Math_pow(10.0,(+$div1091)));
 $conv1092 = $253;
 $aa_sensitivity_p = ((($251)) + 4|0);
 HEAPF32[$aa_sensitivity_p>>2] = $conv1092;
 $short_blocks = ((($gfp)) + 240|0);
 $254 = HEAP32[$short_blocks>>2]|0;
 switch ($254|0) {
 case -1:  {
  HEAP32[$short_blocks>>2] = 0;
  label = 237;
  break;
 }
 case 0:  {
  label = 237;
  break;
 }
 default: {
  $256 = $254;
 }
 }
 do {
  if ((label|0) == 237) {
   $255 = HEAP32[$mode616>>2]|0;
   $switch = ($255>>>0)<(2);
   if (!($switch)) {
    $256 = 0;
    break;
   }
   HEAP32[$short_blocks>>2] = 1;
   $256 = 1;
  }
 } while(0);
 $short_blocks1114 = ((($0)) + 184|0);
 HEAP32[$short_blocks1114>>2] = $256;
 $call1115 = (_lame_get_quant_comp($gfp)|0);
 $cmp1116 = ($call1115|0)<(0);
 if ($cmp1116) {
  (_lame_set_quant_comp($gfp,1)|0);
 }
 $call1121 = (_lame_get_quant_comp_short($gfp)|0);
 $cmp1122 = ($call1121|0)<(0);
 if ($cmp1122) {
  (_lame_set_quant_comp_short($gfp,0)|0);
 }
 $call1127 = (+_lame_get_msfix($gfp));
 $cmp1128 = $call1127 < 0.0;
 if ($cmp1128) {
  _lame_set_msfix($gfp,0.0);
 }
 $call1132 = (_lame_get_exp_nspsytune($gfp)|0);
 $or = $call1132 | 1;
 (_lame_set_exp_nspsytune($gfp,$or)|0);
 $257 = HEAP32[$ATHtype>>2]|0;
 $cmp1135 = ($257|0)<(0);
 if ($cmp1135) {
  HEAP32[$ATHtype>>2] = 4;
  $268 = 4;
 } else {
  $268 = $257;
 }
 $ATHcurve = ((($gfp)) + 224|0);
 $258 = +HEAPF32[$ATHcurve>>2];
 $cmp1140 = $258 < 0.0;
 $259 = (HEAPF32[tempDoublePtr>>2]=$258,HEAP32[tempDoublePtr>>2]|0);
 if ($cmp1140) {
  HEAPF32[$ATHcurve>>2] = 4.0;
  $267 = 1082130432;
 } else {
  $267 = $259;
 }
 $interChRatio = ((($gfp)) + 248|0);
 $260 = +HEAPF32[$interChRatio>>2];
 $cmp1145 = $260 < 0.0;
 $261 = (HEAPF32[tempDoublePtr>>2]=$260,HEAP32[tempDoublePtr>>2]|0);
 if ($cmp1145) {
  HEAPF32[$interChRatio>>2] = 0.0;
  $263 = 0;
 } else {
  $263 = $261;
 }
 $useTemporal1150 = ((($gfp)) + 244|0);
 $262 = HEAP32[$useTemporal1150>>2]|0;
 $cmp1151 = ($262|0)<(0);
 if ($cmp1151) {
  HEAP32[$useTemporal1150>>2] = 1;
  $274 = 1;
 } else {
  $274 = $262;
 }
 $interChRatio1157 = ((($0)) + 188|0);
 HEAP32[$interChRatio1157>>2] = $263;
 $msfix = ((($gfp)) + 252|0);
 $264 = HEAP32[$msfix>>2]|0;
 $msfix1158 = ((($0)) + 192|0);
 HEAP32[$msfix1158>>2] = $264;
 $ATH_lower_db = ((($gfp)) + 228|0);
 $265 = +HEAPF32[$ATH_lower_db>>2];
 $sub1159 = -$265;
 $ATH_offset_db = ((($0)) + 196|0);
 HEAPF32[$ATH_offset_db>>2] = $sub1159;
 $mul1161 = $265 * -0.10000000149011612;
 $266 = (+Math_pow(10.0,(+$mul1161)));
 $ATH_offset_factor = ((($0)) + 200|0);
 HEAPF32[$ATH_offset_factor>>2] = $266;
 $ATHcurve1163 = ((($0)) + 204|0);
 HEAP32[$ATHcurve1163>>2] = $267;
 $ATHtype1165 = ((($0)) + 208|0);
 HEAP32[$ATHtype1165>>2] = $268;
 $ATHonly = ((($gfp)) + 208|0);
 $269 = HEAP32[$ATHonly>>2]|0;
 $ATHonly1166 = ((($0)) + 212|0);
 HEAP32[$ATHonly1166>>2] = $269;
 $ATHshort = ((($gfp)) + 212|0);
 $270 = HEAP32[$ATHshort>>2]|0;
 $ATHshort1167 = ((($0)) + 216|0);
 HEAP32[$ATHshort1167>>2] = $270;
 $noATH = ((($gfp)) + 216|0);
 $271 = HEAP32[$noATH>>2]|0;
 $noATH1168 = ((($0)) + 220|0);
 HEAP32[$noATH1168>>2] = $271;
 $quant_comp = ((($gfp)) + 132|0);
 $272 = HEAP32[$quant_comp>>2]|0;
 $quant_comp1169 = ((($0)) + 84|0);
 HEAP32[$quant_comp1169>>2] = $272;
 $quant_comp_short = ((($gfp)) + 136|0);
 $273 = HEAP32[$quant_comp_short>>2]|0;
 $quant_comp_short1170 = ((($0)) + 88|0);
 HEAP32[$quant_comp_short1170>>2] = $273;
 $use_temporal_masking_effect = ((($0)) + 92|0);
 HEAP32[$use_temporal_masking_effect>>2] = $274;
 $exp_nspsytune = ((($gfp)) + 148|0);
 $275 = HEAP32[$exp_nspsytune>>2]|0;
 $and = $275 & 2;
 $use_safe_joint_stereo = ((($0)) + 96|0);
 HEAP32[$use_safe_joint_stereo>>2] = $and;
 $shr625 = $275 >>> 2;
 $and1173 = $shr625 & 63;
 $conv1174 = (+($and1173|0));
 $adjust_bass_db = ((($0)) + 232|0);
 $cmp1176 = ($and1173>>>0)>(31);
 $sub1180 = $conv1174 + -64.0;
 $sub1180$conv1174 = $cmp1176 ? $sub1180 : $conv1174;
 $mul1183 = $sub1180$conv1174 * 0.25;
 HEAPF32[$adjust_bass_db>>2] = $mul1183;
 $shr1185626 = $275 >>> 8;
 $and1186 = $shr1185626 & 63;
 $conv1187 = (+($and1186|0));
 $adjust_alto_db = ((($0)) + 228|0);
 $cmp1189 = ($and1186>>>0)>(31);
 $sub1193 = $conv1187 + -64.0;
 $storemerge630 = $cmp1189 ? $sub1193 : $conv1187;
 $mul1196 = $storemerge630 * 0.25;
 HEAPF32[$adjust_alto_db>>2] = $mul1196;
 $shr1198627 = $275 >>> 14;
 $and1199 = $shr1198627 & 63;
 $conv1200 = (+($and1199|0));
 $adjust_treble_db = ((($0)) + 236|0);
 $cmp1202 = ($and1199>>>0)>(31);
 $sub1206 = $conv1200 + -64.0;
 $sub1206$conv1200 = $cmp1202 ? $sub1206 : $conv1200;
 $mul1209 = $sub1206$conv1200 * 0.25;
 HEAPF32[$adjust_treble_db>>2] = $mul1209;
 $shr1211628 = $275 >>> 20;
 $and1212 = $shr1211628 & 63;
 $conv1213 = (+($and1212|0));
 $adjust_sfb21_db = ((($0)) + 240|0);
 $cmp1215 = ($and1212>>>0)>(31);
 $sub1219 = $conv1213 + -64.0;
 $storemerge = $cmp1215 ? $sub1219 : $conv1213;
 $276 = $storemerge + $sub1206$conv1200;
 $277 = $276 * 0.25;
 HEAPF32[$adjust_sfb21_db>>2] = $277;
 $scale = ((($gfp)) + 20|0);
 $278 = +HEAPF32[$scale>>2];
 $scale_left = ((($gfp)) + 24|0);
 $279 = +HEAPF32[$scale_left>>2];
 $mul1244 = $279 * $278;
 $scale_right = ((($gfp)) + 28|0);
 $280 = +HEAPF32[$scale_right>>2];
 $mul1255 = $280 * $278;
 $281 = HEAP32[$channels_in>>2]|0;
 $cmp1257 = ($281|0)==(2);
 if ($cmp1257) {
  $282 = HEAP32[$channels_out728>>2]|0;
  $cmp1261 = ($282|0)==(1);
  $mul1269 = $mul1244 * 0.5;
  $mul1277 = $mul1255 * 0.5;
  $$mul1255 = $cmp1261 ? 0.0 : $mul1255;
  $mul1277$ = $cmp1261 ? $mul1277 : 0.0;
  $mul1269$mul1244 = $cmp1261 ? $mul1269 : $mul1244;
  $m1226$sroa$0$0 = $mul1269$mul1244;$m1226$sroa$10$0 = $mul1277$;$m1226$sroa$24$0 = $$mul1255;
 } else {
  $m1226$sroa$0$0 = $mul1244;$m1226$sroa$10$0 = 0.0;$m1226$sroa$24$0 = $mul1255;
 }
 $arrayidx1288 = ((($0)) + 264|0);
 HEAPF32[$arrayidx1288>>2] = $m1226$sroa$0$0;
 $arrayidx1293 = ((($0)) + 268|0);
 HEAPF32[$arrayidx1293>>2] = $m1226$sroa$10$0;
 $arrayidx1298 = ((($0)) + 272|0);
 HEAPF32[$arrayidx1298>>2] = 0.0;
 $arrayidx1303 = ((($0)) + 276|0);
 HEAPF32[$arrayidx1303>>2] = $m1226$sroa$24$0;
 $frac_SpF = ((($0)) + 39832|0);
 HEAP32[$frac_SpF>>2] = 0;
 $slot_lag = ((($0)) + 39836|0);
 HEAP32[$slot_lag>>2] = 0;
 $283 = HEAP32[$vbr>>2]|0;
 $cmp1307 = ($283|0)==(0);
 if ($cmp1307) {
  $284 = HEAP32[$cfg1>>2]|0;
  $285 = ($284*72000)|0;
  $mul1312 = (($285) + 72000)|0;
  $286 = HEAP32[$avg_bitrate>>2]|0;
  $mul1314 = Math_imul($mul1312, $286)|0;
  $287 = HEAP32[$samplerate_out574>>2]|0;
  $rem = (($mul1314|0) % ($287|0))&-1;
  HEAP32[$frac_SpF>>2] = $rem;
  HEAP32[$slot_lag>>2] = $rem;
 }
 $288 = HEAP32[$gfp>>2]|0;
 $cmp1$i$i = ($288|0)==(-487877);
 do {
  if ($cmp1$i$i) {
   $289 = HEAP32[$internal_flags>>2]|0;
   $cmp$i = ($289|0)==(0|0);
   if ($cmp$i) {
    break;
   }
   $ov_enc$i = ((($289)) + 84040|0);
   $frame_number$i = ((($289)) + 84748|0);
   HEAP32[$frame_number$i>>2] = 0;
   $write_id3tag_automatic$i = ((($gfp)) + 68|0);
   $290 = HEAP32[$write_id3tag_automatic$i>>2]|0;
   $tobool2$i = ($290|0)==(0);
   if (!($tobool2$i)) {
    (_id3tag_write_v2($gfp)|0);
   }
   $PeakSample$i = ((($289)) + 85684|0);
   HEAPF32[$PeakSample$i>>2] = 0.0;
   $write_lame_tag$i = ((($289)) + 156|0);
   _memset(($ov_enc$i|0),0,704)|0;
   $291 = HEAP32[$write_lame_tag$i>>2]|0;
   $tobool8$i = ($291|0)==(0);
   if ($tobool8$i) {
    break;
   }
   (_InitVbrTag($gfp)|0);
  }
 } while(0);
 _iteration_init($0);
 (_psymodel_init($gfp)|0);
 $strict_ISO1323 = ((($gfp)) + 124|0);
 $292 = HEAP32[$strict_ISO1323>>2]|0;
 $call1324 = (_get_max_frame_buffer_size_by_constraint($cfg1,$292)|0);
 $buffer_constraint = ((($0)) + 148|0);
 HEAP32[$buffer_constraint>>2] = $call1324;
 $retval$0 = 0;
 STACKTOP = sp;return ($retval$0|0);
}
function _lame_encode_buffer_template($gfp,$buffer_l,$buffer_r,$nsamples,$mp3buf,$mp3buf_size,$pcm_type,$aa,$norm) {
 $gfp = $gfp|0;
 $buffer_l = $buffer_l|0;
 $buffer_r = $buffer_r|0;
 $nsamples = $nsamples|0;
 $mp3buf = $mp3buf|0;
 $mp3buf_size = $mp3buf_size|0;
 $pcm_type = $pcm_type|0;
 $aa = $aa|0;
 $norm = +$norm;
 var $$pre = 0, $$pre51 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $add$ptr$i = 0;
 var $add$ptr37$i = 0, $add$ptr37$i$us = 0, $add$ptr42$i = 0, $add$ptr42$i$us = 0, $add$ptr42$in_buffer$sroa$6$0$i = 0, $add$ptr42$in_buffer$sroa$6$0$i$us = 0, $add$ptr65$i = 0, $add$ptr65$i$us = 0, $add45$i = 0, $add45$i$us = 0, $add51$i = 0, $add51$i$us = 0, $add66$i = 0, $add66$i$us = 0, $add78$us$i = 0, $add78$us$i$us = 0, $arraydecay$i = 0, $arraydecay15$i = 0, $arrayidx16$i = 0, $arrayidx21$i = 0;
 var $arrayidx27$i = 0, $arrayidx27$i$us = 0, $arrayidx30$i = 0, $arrayidx30$i$us = 0, $arrayidx77$us$i = 0, $arrayidx77$us$i$us = 0, $arrayidx79$us$i = 0, $arrayidx79$us$i$us = 0, $arrayidx81$us$i = 0, $arrayidx81$us$i$us = 0, $call$i = 0, $call$i33 = 0, $call10$i = 0, $call31$i = 0, $call31$i$us = 0, $call61$i = 0, $call61$i$us = 0, $cfg1$idx$val$i = 0, $ch$068$us$i = 0, $ch$068$us$i$us = 0;
 var $channels_in = 0, $channels_out38$i = 0, $cmp = 0, $cmp$i = 0, $cmp$i21 = 0, $cmp$i23 = 0, $cmp1$i = 0, $cmp1$i25 = 0, $cmp1$i30 = 0, $cmp10 = 0, $cmp12 = 0, $cmp13 = 0, $cmp17$i = 0, $cmp17$i$us = 0, $cmp17$i39 = 0, $cmp18$i = 0, $cmp32$i = 0, $cmp32$i$us = 0, $cmp39$i = 0, $cmp39$i$us = 0;
 var $cmp46$i = 0, $cmp46$i$us = 0, $cmp5$i = 0, $cmp53$i = 0, $cmp53$i$us = 0, $cmp56$i = 0, $cmp62$i = 0, $cmp62$i$us = 0, $cmp7267$i = 0, $cmp7267$i$us = 0, $cmp7565$i = 0, $cmp7565$i$us = 0, $cond$i = 0, $cond24$i = 0, $decode_on_the_fly$i = 0, $exitcond = 0, $exitcond48 = 0, $exitcond49 = 0, $exitcond50 = 0, $findReplayGain$i = 0;
 var $i$066$us$i = 0, $i$066$us$i$us = 0, $in_buffer$sroa$0$0$i44 = 0, $in_buffer$sroa$0$0$i44$us = 0, $in_buffer$sroa$6$0$i43 = 0, $in_buffer$sroa$6$0$i43$us = 0, $in_buffer_0$i29 = 0, $in_buffer_1$i31 = 0, $in_buffer_117$i$phi$trans$insert = 0, $in_buffer_117$i$pre$phiZZ2D = 0, $in_buffer_125$pre$phi$iZ2D = 0, $in_buffer_nsamples$i = 0, $in_buffer_nsamples12$i = 0, $in_buffer_nsamples32$i = 0, $in_buffer_ptr$i = 0, $inc$us$i = 0, $inc$us$i$us = 0, $inc83$us$i = 0, $inc83$us$i$us = 0, $internal_flags = 0;
 var $mf_samples_to_encode$i = 0, $mf_size44$i = 0, $mfbuf$i = 0, $mode_gr$i = 0, $mp3buf$addr$0$i41 = 0, $mp3buf$addr$0$i41$us = 0, $mp3buf$addr$3$ph$i = 0, $mp3buf$addr$3$ph$i$us = 0, $mp3size$0$i40 = 0, $mp3size$0$i40$us = 0, $mp3size$3$ph$i = 0, $mp3size$3$ph$i$us = 0, $mul$i = 0, $mul$i$i = 0, $n_in$i = 0, $n_out$i = 0, $nsamples$addr$0$i42 = 0, $nsamples$addr$0$i42$us = 0, $or$cond = 0, $or$cond$i = 0;
 var $or$cond$i$us = 0, $retval$2 = 0, $retval$3$i = 0, $retval$4$i = 0, $rgdata$i = 0, $sub$i = 0, $sub$i$i = 0, $sub$i$us = 0, $sub55$i = 0, $sub68$i = 0, $sub68$i$us = 0, $sub70$i = 0, $sub70$i$us = 0, $tobool$i = 0, $tobool$i$us = 0, $tobool24$i = 0, $tobool24$i$us = 0, $tobool26$i = 0, $tobool5$i = 0, $vararg_buffer = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $mfbuf$i = sp + 24|0;
 $in_buffer_ptr$i = sp + 16|0;
 $n_in$i = sp + 8|0;
 $n_out$i = sp + 4|0;
 $cmp$i = ($gfp|0)==(0|0);
 if ($cmp$i) {
  $retval$2 = -3;
  STACKTOP = sp;return ($retval$2|0);
 }
 $0 = HEAP32[$gfp>>2]|0;
 $cmp1$i = ($0|0)==(-487877);
 if (!($cmp1$i)) {
  $retval$2 = -3;
  STACKTOP = sp;return ($retval$2|0);
 }
 $internal_flags = ((($gfp)) + 288|0);
 $1 = HEAP32[$internal_flags>>2]|0;
 $cmp$i23 = ($1|0)==(0|0);
 if ($cmp$i23) {
  $retval$2 = -3;
  STACKTOP = sp;return ($retval$2|0);
 }
 $2 = HEAP32[$1>>2]|0;
 $cmp1$i25 = ($2|0)==(-487877);
 if (!($cmp1$i25)) {
  $retval$2 = -3;
  STACKTOP = sp;return ($retval$2|0);
 }
 $cmp = ($nsamples|0)==(0);
 if ($cmp) {
  $retval$2 = 0;
  STACKTOP = sp;return ($retval$2|0);
 }
 $in_buffer_0$i29 = ((($1)) + 52152|0);
 $3 = HEAP32[$in_buffer_0$i29>>2]|0;
 $cond$i = ($3|0)==(0|0);
 do {
  if ($cond$i) {
   label = 10;
  } else {
   $in_buffer_nsamples$i = ((($1)) + 52148|0);
   $4 = HEAP32[$in_buffer_nsamples$i>>2]|0;
   $cmp1$i30 = ($4|0)<($nsamples|0);
   if ($cmp1$i30) {
    _free($3);
    label = 10;
    break;
   } else {
    $in_buffer_117$i$phi$trans$insert = ((($1)) + 52156|0);
    $$pre = HEAP32[$in_buffer_117$i$phi$trans$insert>>2]|0;
    $6 = $$pre;$7 = $3;$in_buffer_117$i$pre$phiZZ2D = $in_buffer_117$i$phi$trans$insert;
    label = 13;
    break;
   }
  }
 } while(0);
 if ((label|0) == 10) {
  $in_buffer_1$i31 = ((($1)) + 52156|0);
  $5 = HEAP32[$in_buffer_1$i31>>2]|0;
  $tobool5$i = ($5|0)==(0|0);
  if (!($tobool5$i)) {
   _free($5);
  }
  $call$i33 = (_calloc($nsamples,4)|0);
  HEAP32[$in_buffer_0$i29>>2] = $call$i33;
  $call10$i = (_calloc($nsamples,4)|0);
  HEAP32[$in_buffer_1$i31>>2] = $call10$i;
  $in_buffer_nsamples12$i = ((($1)) + 52148|0);
  HEAP32[$in_buffer_nsamples12$i>>2] = $nsamples;
  $cond24$i = ($call$i33|0)==(0|0);
  if ($cond24$i) {
   $8 = $call10$i;$9 = $call10$i;$in_buffer_125$pre$phi$iZ2D = $in_buffer_1$i31;
  } else {
   $6 = $call10$i;$7 = $call$i33;$in_buffer_117$i$pre$phiZZ2D = $in_buffer_1$i31;
   label = 13;
  }
 }
 do {
  if ((label|0) == 13) {
   $cmp18$i = ($6|0)==(0|0);
   if ($cmp18$i) {
    _free($7);
    $$pre51 = HEAP32[$in_buffer_117$i$pre$phiZZ2D>>2]|0;
    $8 = $$pre51;$9 = $$pre51;$in_buffer_125$pre$phi$iZ2D = $in_buffer_117$i$pre$phiZZ2D;
    break;
   }
   $channels_in = ((($1)) + 68|0);
   $10 = HEAP32[$channels_in>>2]|0;
   $cmp10 = ($10|0)>(1);
   $cmp12 = ($buffer_l|0)==(0|0);
   do {
    if ($cmp10) {
     $cmp13 = ($buffer_r|0)==(0|0);
     $or$cond = $cmp12 | $cmp13;
     if ($or$cond) {
      $retval$2 = 0;
      STACKTOP = sp;return ($retval$2|0);
     } else {
      _lame_copy_inbuffer($1,$buffer_l,$buffer_r,$nsamples,$pcm_type,$aa,$norm);
      break;
     }
    } else {
     if ($cmp12) {
      $retval$2 = 0;
      STACKTOP = sp;return ($retval$2|0);
     } else {
      _lame_copy_inbuffer($1,$buffer_l,$buffer_l,$nsamples,$pcm_type,$aa,$norm);
      break;
     }
    }
   } while(0);
   $mode_gr$i = ((($1)) + 76|0);
   $11 = HEAP32[$mode_gr$i>>2]|0;
   $mul$i = ($11*576)|0;
   $12 = HEAP32[$1>>2]|0;
   $cmp$i21 = ($12|0)==(-487877);
   L41: do {
    if ($cmp$i21) {
     $call$i = (_copy_buffer($1,$mp3buf,$mp3buf_size,0)|0);
     $cmp5$i = ($call$i|0)<(0);
     if ($cmp5$i) {
      $retval$4$i = $call$i;
     } else {
      $add$ptr$i = (($mp3buf) + ($call$i)|0);
      $13 = HEAP32[$in_buffer_0$i29>>2]|0;
      $14 = HEAP32[$in_buffer_117$i$pre$phiZZ2D>>2]|0;
      $cfg1$idx$val$i = HEAP32[$mode_gr$i>>2]|0;
      $mul$i$i = ($cfg1$idx$val$i*576)|0;
      $sub$i$i = (($mul$i$i) + 752)|0;
      $arraydecay$i = ((($1)) + 52160|0);
      HEAP32[$mfbuf$i>>2] = $arraydecay$i;
      $arraydecay15$i = ((($1)) + 68096|0);
      $arrayidx16$i = ((($mfbuf$i)) + 4|0);
      HEAP32[$arrayidx16$i>>2] = $arraydecay15$i;
      $arrayidx21$i = ((($in_buffer_ptr$i)) + 4|0);
      $findReplayGain$i = ((($1)) + 128|0);
      $channels_out38$i = ((($1)) + 72|0);
      $mf_size44$i = ((($1)) + 84036|0);
      $mf_samples_to_encode$i = ((($1)) + 84032|0);
      $decode_on_the_fly$i = ((($1)) + 136|0);
      $rgdata$i = ((($1)) + 85676|0);
      $cmp17$i39 = ($nsamples|0)>(0);
      if ($cmp17$i39) {
       $cmp56$i = ($mp3buf_size|0)==(0);
       L45: do {
        if ($cmp56$i) {
         $in_buffer$sroa$0$0$i44$us = $13;$in_buffer$sroa$6$0$i43$us = $14;$mp3buf$addr$0$i41$us = $add$ptr$i;$mp3size$0$i40$us = $call$i;$nsamples$addr$0$i42$us = $nsamples;
         while(1) {
          HEAP32[$n_in$i>>2] = 0;
          HEAP32[$n_out$i>>2] = 0;
          HEAP32[$in_buffer_ptr$i>>2] = $in_buffer$sroa$0$0$i44$us;
          HEAP32[$arrayidx21$i>>2] = $in_buffer$sroa$6$0$i43$us;
          _fill_buffer($1,$mfbuf$i,$in_buffer_ptr$i,$nsamples$addr$0$i42$us,$n_in$i,$n_out$i);
          $15 = HEAP32[$findReplayGain$i>>2]|0;
          $tobool$i$us = ($15|0)==(0);
          if (!($tobool$i$us)) {
           $16 = HEAP32[$decode_on_the_fly$i>>2]|0;
           $tobool24$i$us = ($16|0)==(0);
           if ($tobool24$i$us) {
            $17 = HEAP32[$rgdata$i>>2]|0;
            $18 = HEAP32[$mfbuf$i>>2]|0;
            $19 = HEAP32[$mf_size44$i>>2]|0;
            $arrayidx27$i$us = (($18) + ($19<<2)|0);
            $20 = HEAP32[$arrayidx16$i>>2]|0;
            $arrayidx30$i$us = (($20) + ($19<<2)|0);
            $21 = HEAP32[$n_out$i>>2]|0;
            $22 = HEAP32[$channels_out38$i>>2]|0;
            $call31$i$us = (_AnalyzeSamples(($17|0),($arrayidx27$i$us|0),($arrayidx30$i$us|0),($21|0),($22|0))|0);
            $cmp32$i$us = ($call31$i$us|0)==(0);
            if ($cmp32$i$us) {
             $retval$3$i = -6;
             break L45;
            }
           }
          }
          $23 = HEAP32[$n_in$i>>2]|0;
          $sub$i$us = (($nsamples$addr$0$i42$us) - ($23))|0;
          $add$ptr37$i$us = (($in_buffer$sroa$0$0$i44$us) + ($23<<2)|0);
          $24 = HEAP32[$channels_out38$i>>2]|0;
          $cmp39$i$us = ($24|0)==(2);
          $add$ptr42$i$us = (($in_buffer$sroa$6$0$i43$us) + ($23<<2)|0);
          $add$ptr42$in_buffer$sroa$6$0$i$us = $cmp39$i$us ? $add$ptr42$i$us : $in_buffer$sroa$6$0$i43$us;
          $25 = HEAP32[$n_out$i>>2]|0;
          $26 = HEAP32[$mf_size44$i>>2]|0;
          $add45$i$us = (($26) + ($25))|0;
          HEAP32[$mf_size44$i>>2] = $add45$i$us;
          $27 = HEAP32[$mf_samples_to_encode$i>>2]|0;
          $cmp46$i$us = ($27|0)<(1);
          if ($cmp46$i$us) {
           HEAP32[$mf_samples_to_encode$i>>2] = 1728;
           $28 = 1728;
          } else {
           $28 = $27;
          }
          $add51$i$us = (($28) + ($25))|0;
          HEAP32[$mf_samples_to_encode$i>>2] = $add51$i$us;
          $cmp53$i$us = ($add45$i$us|0)<($sub$i$i|0);
          do {
           if ($cmp53$i$us) {
            $mp3buf$addr$3$ph$i$us = $mp3buf$addr$0$i41$us;$mp3size$3$ph$i$us = $mp3size$0$i40$us;
           } else {
            $29 = HEAP32[$mfbuf$i>>2]|0;
            $30 = HEAP32[$arrayidx16$i>>2]|0;
            $call61$i$us = (_lame_encode_mp3_frame($1,$29,$30,$mp3buf$addr$0$i41$us,0)|0);
            $cmp62$i$us = ($call61$i$us|0)<(0);
            if ($cmp62$i$us) {
             $retval$3$i = $call61$i$us;
             break L45;
            }
            $add$ptr65$i$us = (($mp3buf$addr$0$i41$us) + ($call61$i$us)|0);
            $add66$i$us = (($call61$i$us) + ($mp3size$0$i40$us))|0;
            $31 = HEAP32[$mf_size44$i>>2]|0;
            $sub68$i$us = (($31) - ($mul$i))|0;
            HEAP32[$mf_size44$i>>2] = $sub68$i$us;
            $32 = HEAP32[$mf_samples_to_encode$i>>2]|0;
            $sub70$i$us = (($32) - ($mul$i))|0;
            HEAP32[$mf_samples_to_encode$i>>2] = $sub70$i$us;
            $33 = HEAP32[$channels_out38$i>>2]|0;
            $cmp7267$i$us = ($33|0)>(0);
            $cmp7565$i$us = ($sub68$i$us|0)>(0);
            $or$cond$i$us = $cmp7565$i$us & $cmp7267$i$us;
            if ($or$cond$i$us) {
             $ch$068$us$i$us = 0;
            } else {
             $mp3buf$addr$3$ph$i$us = $add$ptr65$i$us;$mp3size$3$ph$i$us = $add66$i$us;
             break;
            }
            while(1) {
             $arrayidx77$us$i$us = (($mfbuf$i) + ($ch$068$us$i$us<<2)|0);
             $34 = HEAP32[$arrayidx77$us$i$us>>2]|0;
             $i$066$us$i$us = 0;
             while(1) {
              $add78$us$i$us = (($i$066$us$i$us) + ($mul$i))|0;
              $arrayidx79$us$i$us = (($34) + ($add78$us$i$us<<2)|0);
              $35 = HEAP32[$arrayidx79$us$i$us>>2]|0;
              $arrayidx81$us$i$us = (($34) + ($i$066$us$i$us<<2)|0);
              HEAP32[$arrayidx81$us$i$us>>2] = $35;
              $inc$us$i$us = (($i$066$us$i$us) + 1)|0;
              $exitcond = ($inc$us$i$us|0)==($sub68$i$us|0);
              if ($exitcond) {
               break;
              } else {
               $i$066$us$i$us = $inc$us$i$us;
              }
             }
             $inc83$us$i$us = (($ch$068$us$i$us) + 1)|0;
             $exitcond48 = ($inc83$us$i$us|0)==($33|0);
             if ($exitcond48) {
              $mp3buf$addr$3$ph$i$us = $add$ptr65$i$us;$mp3size$3$ph$i$us = $add66$i$us;
              break;
             } else {
              $ch$068$us$i$us = $inc83$us$i$us;
             }
            }
           }
          } while(0);
          $cmp17$i$us = ($sub$i$us|0)>(0);
          if ($cmp17$i$us) {
           $in_buffer$sroa$0$0$i44$us = $add$ptr37$i$us;$in_buffer$sroa$6$0$i43$us = $add$ptr42$in_buffer$sroa$6$0$i$us;$mp3buf$addr$0$i41$us = $mp3buf$addr$3$ph$i$us;$mp3size$0$i40$us = $mp3size$3$ph$i$us;$nsamples$addr$0$i42$us = $sub$i$us;
          } else {
           $retval$4$i = $mp3size$3$ph$i$us;
           break L41;
          }
         }
        } else {
         $in_buffer$sroa$0$0$i44 = $13;$in_buffer$sroa$6$0$i43 = $14;$mp3buf$addr$0$i41 = $add$ptr$i;$mp3size$0$i40 = $call$i;$nsamples$addr$0$i42 = $nsamples;
         while(1) {
          HEAP32[$n_in$i>>2] = 0;
          HEAP32[$n_out$i>>2] = 0;
          HEAP32[$in_buffer_ptr$i>>2] = $in_buffer$sroa$0$0$i44;
          HEAP32[$arrayidx21$i>>2] = $in_buffer$sroa$6$0$i43;
          _fill_buffer($1,$mfbuf$i,$in_buffer_ptr$i,$nsamples$addr$0$i42,$n_in$i,$n_out$i);
          $36 = HEAP32[$findReplayGain$i>>2]|0;
          $tobool$i = ($36|0)==(0);
          if (!($tobool$i)) {
           $37 = HEAP32[$decode_on_the_fly$i>>2]|0;
           $tobool24$i = ($37|0)==(0);
           if ($tobool24$i) {
            $38 = HEAP32[$rgdata$i>>2]|0;
            $39 = HEAP32[$mfbuf$i>>2]|0;
            $40 = HEAP32[$mf_size44$i>>2]|0;
            $arrayidx27$i = (($39) + ($40<<2)|0);
            $41 = HEAP32[$arrayidx16$i>>2]|0;
            $arrayidx30$i = (($41) + ($40<<2)|0);
            $42 = HEAP32[$n_out$i>>2]|0;
            $43 = HEAP32[$channels_out38$i>>2]|0;
            $call31$i = (_AnalyzeSamples(($38|0),($arrayidx27$i|0),($arrayidx30$i|0),($42|0),($43|0))|0);
            $cmp32$i = ($call31$i|0)==(0);
            if ($cmp32$i) {
             $retval$3$i = -6;
             break L45;
            }
           }
          }
          $44 = HEAP32[$n_in$i>>2]|0;
          $sub$i = (($nsamples$addr$0$i42) - ($44))|0;
          $add$ptr37$i = (($in_buffer$sroa$0$0$i44) + ($44<<2)|0);
          $45 = HEAP32[$channels_out38$i>>2]|0;
          $cmp39$i = ($45|0)==(2);
          $add$ptr42$i = (($in_buffer$sroa$6$0$i43) + ($44<<2)|0);
          $add$ptr42$in_buffer$sroa$6$0$i = $cmp39$i ? $add$ptr42$i : $in_buffer$sroa$6$0$i43;
          $46 = HEAP32[$n_out$i>>2]|0;
          $47 = HEAP32[$mf_size44$i>>2]|0;
          $add45$i = (($47) + ($46))|0;
          HEAP32[$mf_size44$i>>2] = $add45$i;
          $48 = HEAP32[$mf_samples_to_encode$i>>2]|0;
          $cmp46$i = ($48|0)<(1);
          if ($cmp46$i) {
           HEAP32[$mf_samples_to_encode$i>>2] = 1728;
           $49 = 1728;
          } else {
           $49 = $48;
          }
          $add51$i = (($49) + ($46))|0;
          HEAP32[$mf_samples_to_encode$i>>2] = $add51$i;
          $cmp53$i = ($add45$i|0)<($sub$i$i|0);
          do {
           if ($cmp53$i) {
            $mp3buf$addr$3$ph$i = $mp3buf$addr$0$i41;$mp3size$3$ph$i = $mp3size$0$i40;
           } else {
            $sub55$i = (($mp3buf_size) - ($mp3size$0$i40))|0;
            $50 = HEAP32[$mfbuf$i>>2]|0;
            $51 = HEAP32[$arrayidx16$i>>2]|0;
            $call61$i = (_lame_encode_mp3_frame($1,$50,$51,$mp3buf$addr$0$i41,$sub55$i)|0);
            $cmp62$i = ($call61$i|0)<(0);
            if ($cmp62$i) {
             $retval$3$i = $call61$i;
             break L45;
            }
            $add$ptr65$i = (($mp3buf$addr$0$i41) + ($call61$i)|0);
            $add66$i = (($call61$i) + ($mp3size$0$i40))|0;
            $52 = HEAP32[$mf_size44$i>>2]|0;
            $sub68$i = (($52) - ($mul$i))|0;
            HEAP32[$mf_size44$i>>2] = $sub68$i;
            $53 = HEAP32[$mf_samples_to_encode$i>>2]|0;
            $sub70$i = (($53) - ($mul$i))|0;
            HEAP32[$mf_samples_to_encode$i>>2] = $sub70$i;
            $54 = HEAP32[$channels_out38$i>>2]|0;
            $cmp7267$i = ($54|0)>(0);
            $cmp7565$i = ($sub68$i|0)>(0);
            $or$cond$i = $cmp7565$i & $cmp7267$i;
            if ($or$cond$i) {
             $ch$068$us$i = 0;
            } else {
             $mp3buf$addr$3$ph$i = $add$ptr65$i;$mp3size$3$ph$i = $add66$i;
             break;
            }
            while(1) {
             $arrayidx77$us$i = (($mfbuf$i) + ($ch$068$us$i<<2)|0);
             $55 = HEAP32[$arrayidx77$us$i>>2]|0;
             $i$066$us$i = 0;
             while(1) {
              $add78$us$i = (($i$066$us$i) + ($mul$i))|0;
              $arrayidx79$us$i = (($55) + ($add78$us$i<<2)|0);
              $56 = HEAP32[$arrayidx79$us$i>>2]|0;
              $arrayidx81$us$i = (($55) + ($i$066$us$i<<2)|0);
              HEAP32[$arrayidx81$us$i>>2] = $56;
              $inc$us$i = (($i$066$us$i) + 1)|0;
              $exitcond49 = ($inc$us$i|0)==($sub68$i|0);
              if ($exitcond49) {
               break;
              } else {
               $i$066$us$i = $inc$us$i;
              }
             }
             $inc83$us$i = (($ch$068$us$i) + 1)|0;
             $exitcond50 = ($inc83$us$i|0)==($54|0);
             if ($exitcond50) {
              $mp3buf$addr$3$ph$i = $add$ptr65$i;$mp3size$3$ph$i = $add66$i;
              break;
             } else {
              $ch$068$us$i = $inc83$us$i;
             }
            }
           }
          } while(0);
          $cmp17$i = ($sub$i|0)>(0);
          if ($cmp17$i) {
           $in_buffer$sroa$0$0$i44 = $add$ptr37$i;$in_buffer$sroa$6$0$i43 = $add$ptr42$in_buffer$sroa$6$0$i;$mp3buf$addr$0$i41 = $mp3buf$addr$3$ph$i;$mp3size$0$i40 = $mp3size$3$ph$i;$nsamples$addr$0$i42 = $sub$i;
          } else {
           $retval$4$i = $mp3size$3$ph$i;
           break L41;
          }
         }
        }
       } while(0);
       $retval$4$i = $retval$3$i;
      } else {
       $retval$4$i = $call$i;
      }
     }
    } else {
     $retval$4$i = -3;
    }
   } while(0);
   $retval$2 = $retval$4$i;
   STACKTOP = sp;return ($retval$2|0);
  }
 } while(0);
 $tobool26$i = ($8|0)==(0|0);
 if (!($tobool26$i)) {
  _free($9);
 }
 HEAP32[$in_buffer_0$i29>>2] = 0;
 HEAP32[$in_buffer_125$pre$phi$iZ2D>>2] = 0;
 $in_buffer_nsamples32$i = ((($1)) + 52148|0);
 HEAP32[$in_buffer_nsamples32$i>>2] = 0;
 _lame_errorf($1,15512,$vararg_buffer);
 $retval$2 = -2;
 STACKTOP = sp;return ($retval$2|0);
}
function _lame_copy_inbuffer($gfc,$l,$r,$nsamples,$pcm_type,$jump,$s) {
 $gfc = $gfc|0;
 $l = $l|0;
 $r = $r|0;
 $nsamples = $nsamples|0;
 $pcm_type = $pcm_type|0;
 $jump = $jump|0;
 $s = +$s;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $2 = 0.0, $3 = 0.0, $4 = 0.0, $5 = 0.0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $add = 0.0, $add$ptr = 0, $add$ptr105 = 0, $add$ptr106 = 0;
 var $add$ptr138 = 0, $add$ptr139 = 0, $add$ptr173 = 0, $add$ptr174 = 0, $add$ptr39 = 0, $add$ptr70 = 0, $add$ptr71 = 0, $add102 = 0.0, $add127 = 0.0, $add135 = 0.0, $add162 = 0.0, $add170 = 0.0, $add36 = 0.0, $add59 = 0.0, $add67 = 0.0, $add94 = 0.0, $arrayidx103 = 0, $arrayidx104 = 0, $arrayidx13 = 0, $arrayidx136 = 0;
 var $arrayidx137 = 0, $arrayidx171 = 0, $arrayidx172 = 0, $arrayidx19 = 0, $arrayidx2 = 0, $arrayidx37 = 0, $arrayidx38 = 0, $arrayidx68 = 0, $arrayidx69 = 0, $arrayidx7 = 0, $bl$0139 = 0, $bl111$0149 = 0, $bl144$0153 = 0, $bl41$0143 = 0, $bl76$0147 = 0, $br$0138 = 0, $br112$0150 = 0, $br145$0154 = 0, $br42$0142 = 0, $br77$0146 = 0;
 var $cmp115148 = 0, $cmp136 = 0, $cmp148152 = 0, $cmp45140 = 0, $cmp80144 = 0, $conv = 0.0, $conv152 = 0.0, $conv154 = 0.0, $conv23 = 0.0, $conv49 = 0.0, $conv51 = 0.0, $conv84 = 0.0, $conv86 = 0.0, $exitcond = 0, $exitcond160 = 0, $exitcond161 = 0, $exitcond162 = 0, $exitcond163 = 0, $i$0137 = 0, $i113$0151 = 0;
 var $i146$0155 = 0, $i43$0141 = 0, $i78$0145 = 0, $in_buffer_0 = 0, $in_buffer_1 = 0, $inc = 0, $inc108 = 0, $inc141 = 0, $inc176 = 0, $inc73 = 0, $mul = 0.0, $mul101 = 0.0, $mul123 = 0.0, $mul126 = 0.0, $mul131 = 0.0, $mul134 = 0.0, $mul14 = 0.0, $mul158 = 0.0, $mul161 = 0.0, $mul166 = 0.0;
 var $mul169 = 0.0, $mul20 = 0.0, $mul26 = 0.0, $mul29 = 0.0, $mul32 = 0.0, $mul35 = 0.0, $mul55 = 0.0, $mul58 = 0.0, $mul63 = 0.0, $mul66 = 0.0, $mul8 = 0.0, $mul90 = 0.0, $mul93 = 0.0, $mul98 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $in_buffer_0 = ((($gfc)) + 52152|0);
 $0 = HEAP32[$in_buffer_0>>2]|0;
 $in_buffer_1 = ((($gfc)) + 52156|0);
 $1 = HEAP32[$in_buffer_1>>2]|0;
 $arrayidx2 = ((($gfc)) + 264|0);
 $2 = +HEAPF32[$arrayidx2>>2];
 $mul = $2 * $s;
 $arrayidx7 = ((($gfc)) + 268|0);
 $3 = +HEAPF32[$arrayidx7>>2];
 $mul8 = $3 * $s;
 $arrayidx13 = ((($gfc)) + 272|0);
 $4 = +HEAPF32[$arrayidx13>>2];
 $mul14 = $4 * $s;
 $arrayidx19 = ((($gfc)) + 276|0);
 $5 = +HEAPF32[$arrayidx19>>2];
 $mul20 = $5 * $s;
 switch ($pcm_type|0) {
 case 0:  {
  $cmp136 = ($nsamples|0)>(0);
  if (!($cmp136)) {
   return;
  }
  $bl$0139 = $l;$br$0138 = $r;$i$0137 = 0;
  while(1) {
   $6 = HEAP16[$bl$0139>>1]|0;
   $conv = (+($6<<16>>16));
   $7 = HEAP16[$br$0138>>1]|0;
   $conv23 = (+($7<<16>>16));
   $mul26 = $conv * $mul;
   $mul29 = $conv23 * $mul8;
   $add = $mul29 + $mul26;
   $mul32 = $conv * $mul14;
   $mul35 = $conv23 * $mul20;
   $add36 = $mul35 + $mul32;
   $arrayidx37 = (($0) + ($i$0137<<2)|0);
   HEAPF32[$arrayidx37>>2] = $add;
   $arrayidx38 = (($1) + ($i$0137<<2)|0);
   HEAPF32[$arrayidx38>>2] = $add36;
   $add$ptr = (($bl$0139) + ($jump<<1)|0);
   $add$ptr39 = (($br$0138) + ($jump<<1)|0);
   $inc = (($i$0137) + 1)|0;
   $exitcond = ($inc|0)==($nsamples|0);
   if ($exitcond) {
    break;
   } else {
    $bl$0139 = $add$ptr;$br$0138 = $add$ptr39;$i$0137 = $inc;
   }
  }
  return;
  break;
 }
 case 1:  {
  $cmp45140 = ($nsamples|0)>(0);
  if (!($cmp45140)) {
   return;
  }
  $bl41$0143 = $l;$br42$0142 = $r;$i43$0141 = 0;
  while(1) {
   $8 = HEAP32[$bl41$0143>>2]|0;
   $conv49 = (+($8|0));
   $9 = HEAP32[$br42$0142>>2]|0;
   $conv51 = (+($9|0));
   $mul55 = $conv49 * $mul;
   $mul58 = $conv51 * $mul8;
   $add59 = $mul58 + $mul55;
   $mul63 = $conv49 * $mul14;
   $mul66 = $conv51 * $mul20;
   $add67 = $mul66 + $mul63;
   $arrayidx68 = (($0) + ($i43$0141<<2)|0);
   HEAPF32[$arrayidx68>>2] = $add59;
   $arrayidx69 = (($1) + ($i43$0141<<2)|0);
   HEAPF32[$arrayidx69>>2] = $add67;
   $add$ptr70 = (($bl41$0143) + ($jump<<2)|0);
   $add$ptr71 = (($br42$0142) + ($jump<<2)|0);
   $inc73 = (($i43$0141) + 1)|0;
   $exitcond160 = ($inc73|0)==($nsamples|0);
   if ($exitcond160) {
    break;
   } else {
    $bl41$0143 = $add$ptr70;$br42$0142 = $add$ptr71;$i43$0141 = $inc73;
   }
  }
  return;
  break;
 }
 case 2:  {
  $cmp80144 = ($nsamples|0)>(0);
  if (!($cmp80144)) {
   return;
  }
  $bl76$0147 = $l;$br77$0146 = $r;$i78$0145 = 0;
  while(1) {
   $10 = HEAP32[$bl76$0147>>2]|0;
   $conv84 = (+($10|0));
   $11 = HEAP32[$br77$0146>>2]|0;
   $conv86 = (+($11|0));
   $mul90 = $conv84 * $mul;
   $mul93 = $conv86 * $mul8;
   $add94 = $mul93 + $mul90;
   $mul98 = $conv84 * $mul14;
   $mul101 = $conv86 * $mul20;
   $add102 = $mul101 + $mul98;
   $arrayidx103 = (($0) + ($i78$0145<<2)|0);
   HEAPF32[$arrayidx103>>2] = $add94;
   $arrayidx104 = (($1) + ($i78$0145<<2)|0);
   HEAPF32[$arrayidx104>>2] = $add102;
   $add$ptr105 = (($bl76$0147) + ($jump<<2)|0);
   $add$ptr106 = (($br77$0146) + ($jump<<2)|0);
   $inc108 = (($i78$0145) + 1)|0;
   $exitcond161 = ($inc108|0)==($nsamples|0);
   if ($exitcond161) {
    break;
   } else {
    $bl76$0147 = $add$ptr105;$br77$0146 = $add$ptr106;$i78$0145 = $inc108;
   }
  }
  return;
  break;
 }
 case 3:  {
  $cmp115148 = ($nsamples|0)>(0);
  if (!($cmp115148)) {
   return;
  }
  $bl111$0149 = $l;$br112$0150 = $r;$i113$0151 = 0;
  while(1) {
   $12 = +HEAPF32[$bl111$0149>>2];
   $13 = +HEAPF32[$br112$0150>>2];
   $mul123 = $12 * $mul;
   $mul126 = $13 * $mul8;
   $add127 = $mul126 + $mul123;
   $mul131 = $12 * $mul14;
   $mul134 = $13 * $mul20;
   $add135 = $mul134 + $mul131;
   $arrayidx136 = (($0) + ($i113$0151<<2)|0);
   HEAPF32[$arrayidx136>>2] = $add127;
   $arrayidx137 = (($1) + ($i113$0151<<2)|0);
   HEAPF32[$arrayidx137>>2] = $add135;
   $add$ptr138 = (($bl111$0149) + ($jump<<2)|0);
   $add$ptr139 = (($br112$0150) + ($jump<<2)|0);
   $inc141 = (($i113$0151) + 1)|0;
   $exitcond162 = ($inc141|0)==($nsamples|0);
   if ($exitcond162) {
    break;
   } else {
    $bl111$0149 = $add$ptr138;$br112$0150 = $add$ptr139;$i113$0151 = $inc141;
   }
  }
  return;
  break;
 }
 case 4:  {
  $cmp148152 = ($nsamples|0)>(0);
  if (!($cmp148152)) {
   return;
  }
  $bl144$0153 = $l;$br145$0154 = $r;$i146$0155 = 0;
  while(1) {
   $14 = +HEAPF64[$bl144$0153>>3];
   $conv152 = $14;
   $15 = +HEAPF64[$br145$0154>>3];
   $conv154 = $15;
   $mul158 = $conv152 * $mul;
   $mul161 = $conv154 * $mul8;
   $add162 = $mul161 + $mul158;
   $mul166 = $conv152 * $mul14;
   $mul169 = $conv154 * $mul20;
   $add170 = $mul169 + $mul166;
   $arrayidx171 = (($0) + ($i146$0155<<2)|0);
   HEAPF32[$arrayidx171>>2] = $add162;
   $arrayidx172 = (($1) + ($i146$0155<<2)|0);
   HEAPF32[$arrayidx172>>2] = $add170;
   $add$ptr173 = (($bl144$0153) + ($jump<<3)|0);
   $add$ptr174 = (($br145$0154) + ($jump<<3)|0);
   $inc176 = (($i146$0155) + 1)|0;
   $exitcond163 = ($inc176|0)==($nsamples|0);
   if ($exitcond163) {
    break;
   } else {
    $bl144$0153 = $add$ptr173;$br145$0154 = $add$ptr174;$i146$0155 = $inc176;
   }
  }
  return;
  break;
 }
 default: {
  return;
 }
 }
}
function _lame_encode_buffer_ieee_float($gfp,$pcm_l,$pcm_r,$nsamples,$mp3buf,$mp3buf_size) {
 $gfp = $gfp|0;
 $pcm_l = $pcm_l|0;
 $pcm_r = $pcm_r|0;
 $nsamples = $nsamples|0;
 $mp3buf = $mp3buf|0;
 $mp3buf_size = $mp3buf_size|0;
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_lame_encode_buffer_template($gfp,$pcm_l,$pcm_r,$nsamples,$mp3buf,$mp3buf_size,3,1,32767.0)|0);
 return ($call|0);
}
function _lame_encode_flush($gfp,$mp3buffer,$mp3buffer_size) {
 $gfp = $gfp|0;
 $mp3buffer = $mp3buffer|0;
 $mp3buffer_size = $mp3buffer_size|0;
 var $$$conv34 = 0, $$$conv34$us = 0, $$conv34 = 0, $$conv34$us = 0, $$pre95 = 0, $$sink$i = 0, $$sink2$i = 0.0, $$sub63 = 0, $$sub75 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0.0, $22 = 0.0, $23 = 0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $PeakSample$i = 0, $RadioGain24$i = 0, $add = 0.0;
 var $add$i = 0.0, $add$ptr = 0, $add$ptr$us = 0, $add$ptr73 = 0, $add22 = 0, $add22$sub18 = 0, $add24 = 0, $add52 = 0, $add52$us = 0, $add74 = 0, $add88 = 0, $arraydecay50 = 0, $buffer = 0, $call$i = 0.0, $call$i85 = 0, $call$i85$us = 0, $call10 = 0, $call21$i = 0.0, $call29$i = 0.0, $call32$i = 0.0;
 var $call68 = 0, $call83 = 0, $call83$add88 = 0, $cfg5 = 0, $cmp = 0, $cmp$i = 0, $cmp$i75 = 0, $cmp$i77 = 0, $cmp1$i = 0, $cmp1$i79 = 0, $cmp16$i = 0, $cmp19 = 0, $cmp26 = 0, $cmp26$us = 0, $cmp2688 = 0, $cmp28 = 0, $cmp28$us = 0, $cmp35$i = 0, $cmp44 = 0, $cmp55 = 0;
 var $cmp55$us = 0, $cmp59 = 0, $cmp64 = 0, $cmp69 = 0, $cmp84 = 0, $cmp9$i = 0, $cond = 0, $cond$us = 0, $conv = 0.0, $conv$i = 0.0, $conv13 = 0.0, $conv15 = 0.0, $conv16 = 0, $conv22$i = 0, $conv28$i = 0.0, $conv32 = 0.0, $conv32$us = 0.0, $conv33$i = 0, $conv34 = 0, $conv34$us = 0;
 var $conv44$i = 0.0, $div = 0.0, $div$i = 0.0, $div14 = 0.0, $div25 = 0, $div43$i = 0.0, $encoder_padding = 0, $fabsf$i = 0.0, $fabsf20$i = 0.0, $findPeakSample$i = 0, $findReplayGain$i = 0, $floorf$i = 0.0, $frame_number = 0, $frames_left$089 = 0, $frames_left$089$us = 0, $imp3$0$lcssa = 0, $internal_flags = 0, $mf_samples_to_encode = 0, $mf_size = 0, $mode_gr = 0;
 var $mp3buffer$addr$0$lcssa = 0, $mp3buffer$addr$0$lcssa98 = 0, $mp3buffer$addr$091 = 0, $mp3buffer$addr$091$us = 0, $mp3count$0$lcssa = 0, $mp3count$0$lcssa97 = 0, $mp3count$090 = 0, $mp3count$090$us = 0, $mul = 0, $mul$i = 0.0, $mul20$i = 0.0, $mul31$i = 0.0, $mul33 = 0.0, $mul33$us = 0.0, $noclipGainChange$i = 0, $noclipScale46$i = 0, $rem = 0, $resample_ratio$0 = 0.0, $retval$0 = 0, $rgdata$i = 0;
 var $samplerate_in = 0, $samplerate_out = 0, $samples_to_encode$0 = 0, $sub = 0, $sub$i = 0.0, $sub$i84 = 0, $sub18 = 0, $sub31 = 0, $sub31$us = 0, $sub43 = 0, $sub57 = 0, $sub57$us = 0, $sub63 = 0, $sub75 = 0, $tobool$i = 0, $tobool11 = 0, $tobool26$i = 0, $tobool80 = 0, $write_id3tag_automatic = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4608|0;
 $buffer = sp;
 $cmp$i = ($gfp|0)==(0|0);
 if ($cmp$i) {
  $retval$0 = -3;
  STACKTOP = sp;return ($retval$0|0);
 }
 $0 = HEAP32[$gfp>>2]|0;
 $cmp1$i = ($0|0)==(-487877);
 if (!($cmp1$i)) {
  $retval$0 = -3;
  STACKTOP = sp;return ($retval$0|0);
 }
 $internal_flags = ((($gfp)) + 288|0);
 $1 = HEAP32[$internal_flags>>2]|0;
 $cmp$i77 = ($1|0)==(0|0);
 if ($cmp$i77) {
  $retval$0 = -3;
  STACKTOP = sp;return ($retval$0|0);
 }
 $2 = HEAP32[$1>>2]|0;
 $cmp1$i79 = ($2|0)==(-487877);
 if (!($cmp1$i79)) {
  $retval$0 = -3;
  STACKTOP = sp;return ($retval$0|0);
 }
 $mf_samples_to_encode = ((($1)) + 84032|0);
 $3 = HEAP32[$mf_samples_to_encode>>2]|0;
 $cmp = ($3|0)<(1);
 if ($cmp) {
  $retval$0 = 0;
  STACKTOP = sp;return ($retval$0|0);
 }
 $cfg5 = ((($1)) + 16|0);
 $mode_gr = ((($1)) + 76|0);
 $4 = HEAP32[$mode_gr>>2]|0;
 $mul = ($4*576)|0;
 $sub$i84 = (($mul) + 752)|0;
 $sub = (($3) + -1152)|0;
 _memset(($buffer|0),0,4608)|0;
 $call10 = (_isResamplingNecessary($cfg5)|0);
 $tobool11 = ($call10|0)==(0);
 if ($tobool11) {
  $resample_ratio$0 = 1.0;$samples_to_encode$0 = $sub;
 } else {
  $samplerate_in = ((($1)) + 60|0);
  $5 = HEAP32[$samplerate_in>>2]|0;
  $conv = (+($5|0));
  $samplerate_out = ((($1)) + 64|0);
  $6 = HEAP32[$samplerate_out>>2]|0;
  $conv13 = (+($6|0));
  $div = $conv / $conv13;
  $div14 = 16.0 / $div;
  $conv15 = (+($sub|0));
  $add = $div14 + $conv15;
  $conv16 = (~~(($add)));
  $resample_ratio$0 = $div;$samples_to_encode$0 = $conv16;
 }
 $rem = (($samples_to_encode$0|0) % ($mul|0))&-1;
 $sub18 = (($mul) - ($rem))|0;
 $cmp19 = ($sub18|0)<(576);
 $add22 = $cmp19 ? $mul : 0;
 $add22$sub18 = (($add22) + ($sub18))|0;
 $encoder_padding = ((($1)) + 84764|0);
 HEAP32[$encoder_padding>>2] = $add22$sub18;
 $add24 = (($add22$sub18) + ($samples_to_encode$0))|0;
 $div25 = (($add24|0) / ($mul|0))&-1;
 $cmp2688 = ($div25|0)>(0);
 if ($cmp2688) {
  $frame_number = ((($1)) + 84748|0);
  $mf_size = ((($1)) + 84036|0);
  $cmp44 = ($mp3buffer_size|0)==(0);
  $arraydecay50 = ((($buffer)) + 2304|0);
  $$pre95 = HEAP32[$frame_number>>2]|0;
  if ($cmp44) {
   $11 = $$pre95;$frames_left$089$us = $div25;$mp3buffer$addr$091$us = $mp3buffer;$mp3count$090$us = 0;
   while(1) {
    $7 = HEAP32[$mf_size>>2]|0;
    $sub31$us = (($sub$i84) - ($7))|0;
    $conv32$us = (+($sub31$us|0));
    $mul33$us = $conv32$us * $resample_ratio$0;
    $conv34$us = (~~(($mul33$us)));
    $8 = ($conv34$us|0)<(1152);
    $$conv34$us = $8 ? $conv34$us : 1152;
    $9 = ($$conv34$us|0)>(1);
    $$$conv34$us = $9 ? $$conv34$us : 1;
    $call$i85$us = (_lame_encode_buffer_template($gfp,$buffer,$arraydecay50,$$$conv34$us,$mp3buffer$addr$091$us,0,0,1,1.0)|0);
    $add$ptr$us = (($mp3buffer$addr$091$us) + ($call$i85$us)|0);
    $add52$us = (($call$i85$us) + ($mp3count$090$us))|0;
    $10 = HEAP32[$frame_number>>2]|0;
    $cmp55$us = ($11|0)!=($10|0);
    $cond$us = $cmp55$us&1;
    $sub57$us = (($frames_left$089$us) - ($cond$us))|0;
    $cmp26$us = ($sub57$us|0)>(0);
    $cmp28$us = ($call$i85$us|0)>(-1);
    $12 = $cmp26$us & $cmp28$us;
    if ($12) {
     $11 = $10;$frames_left$089$us = $sub57$us;$mp3buffer$addr$091$us = $add$ptr$us;$mp3count$090$us = $add52$us;
    } else {
     $imp3$0$lcssa = $call$i85$us;$mp3buffer$addr$0$lcssa = $add$ptr$us;$mp3count$0$lcssa = $add52$us;
     break;
    }
   }
  } else {
   $17 = $$pre95;$frames_left$089 = $div25;$mp3buffer$addr$091 = $mp3buffer;$mp3count$090 = 0;
   while(1) {
    $13 = HEAP32[$mf_size>>2]|0;
    $sub31 = (($sub$i84) - ($13))|0;
    $conv32 = (+($sub31|0));
    $mul33 = $conv32 * $resample_ratio$0;
    $conv34 = (~~(($mul33)));
    $14 = ($conv34|0)<(1152);
    $$conv34 = $14 ? $conv34 : 1152;
    $15 = ($$conv34|0)>(1);
    $$$conv34 = $15 ? $$conv34 : 1;
    $sub43 = (($mp3buffer_size) - ($mp3count$090))|0;
    $call$i85 = (_lame_encode_buffer_template($gfp,$buffer,$arraydecay50,$$$conv34,$mp3buffer$addr$091,$sub43,0,1,1.0)|0);
    $add$ptr = (($mp3buffer$addr$091) + ($call$i85)|0);
    $add52 = (($call$i85) + ($mp3count$090))|0;
    $16 = HEAP32[$frame_number>>2]|0;
    $cmp55 = ($17|0)!=($16|0);
    $cond = $cmp55&1;
    $sub57 = (($frames_left$089) - ($cond))|0;
    $cmp26 = ($sub57|0)>(0);
    $cmp28 = ($call$i85|0)>(-1);
    $18 = $cmp26 & $cmp28;
    if ($18) {
     $17 = $16;$frames_left$089 = $sub57;$mp3buffer$addr$091 = $add$ptr;$mp3count$090 = $add52;
    } else {
     $imp3$0$lcssa = $call$i85;$mp3buffer$addr$0$lcssa = $add$ptr;$mp3count$0$lcssa = $add52;
     break;
    }
   }
  }
  HEAP32[$mf_samples_to_encode>>2] = 0;
  $cmp59 = ($imp3$0$lcssa|0)<(0);
  if ($cmp59) {
   $retval$0 = $imp3$0$lcssa;
   STACKTOP = sp;return ($retval$0|0);
  } else {
   $mp3buffer$addr$0$lcssa98 = $mp3buffer$addr$0$lcssa;$mp3count$0$lcssa97 = $mp3count$0$lcssa;
  }
 } else {
  HEAP32[$mf_samples_to_encode>>2] = 0;
  $mp3buffer$addr$0$lcssa98 = $mp3buffer;$mp3count$0$lcssa97 = 0;
 }
 $sub63 = (($mp3buffer_size) - ($mp3count$0$lcssa97))|0;
 $cmp64 = ($mp3buffer_size|0)==(0);
 $$sub63 = $cmp64 ? 0 : $sub63;
 _flush_bitstream($1);
 $call68 = (_copy_buffer($1,$mp3buffer$addr$0$lcssa98,$$sub63,1)|0);
 $findReplayGain$i = ((($1)) + 128|0);
 $19 = HEAP32[$findReplayGain$i>>2]|0;
 $tobool$i = ($19|0)==(0);
 if (!($tobool$i)) {
  $rgdata$i = ((($1)) + 85676|0);
  $20 = HEAP32[$rgdata$i>>2]|0;
  $call$i = (+_GetTitleGain(($20|0)));
  $conv$i = $call$i;
  $fabsf$i = (+Math_abs((+$call$i)));
  $cmp$i75 = $fabsf$i > 24601.0;
  $sub$i = $call$i + 24601.0;
  $fabsf20$i = (+Math_abs((+$sub$i)));
  $21 = $fabsf20$i;
  if ($cmp$i75) {
   $22 = $fabsf$i;
   $mul$i = $22 * 9.9999999747524271E-7;
   $cmp9$i = !($21 <= $mul$i);
   if ($cmp9$i) {
    label = 18;
   } else {
    $$sink$i = 0;
   }
  } else {
   $cmp16$i = !($21 <= 0.024600999937888446);
   if ($cmp16$i) {
    label = 18;
   } else {
    $$sink$i = 0;
   }
  }
  if ((label|0) == 18) {
   $mul20$i = $conv$i * 10.0;
   $add$i = $mul20$i + 0.5;
   $call21$i = (+Math_floor((+$add$i)));
   $conv22$i = (~~(($call21$i)));
   $$sink$i = $conv22$i;
  }
  $RadioGain24$i = ((($1)) + 85688|0);
  HEAP32[$RadioGain24$i>>2] = $$sink$i;
 }
 $findPeakSample$i = ((($1)) + 132|0);
 $23 = HEAP32[$findPeakSample$i>>2]|0;
 $tobool26$i = ($23|0)==(0);
 if (!($tobool26$i)) {
  $PeakSample$i = ((($1)) + 85684|0);
  $24 = +HEAPF32[$PeakSample$i>>2];
  $conv28$i = $24;
  $div$i = $conv28$i * 3.0518509475997192E-5;
  $call29$i = (+_log10($div$i));
  $mul31$i = $call29$i * 200.0;
  $call32$i = (+Math_ceil((+$mul31$i)));
  $conv33$i = (~~(($call32$i)));
  $noclipGainChange$i = ((($1)) + 85692|0);
  HEAP32[$noclipGainChange$i>>2] = $conv33$i;
  $cmp35$i = ($conv33$i|0)>(0);
  if ($cmp35$i) {
   $25 = 3276700.0 / $24;
   $floorf$i = (+Math_floor((+$25)));
   $26 = $floorf$i;
   $div43$i = $26 * 0.01;
   $conv44$i = $div43$i;
   $$sink2$i = $conv44$i;
  } else {
   $$sink2$i = -1.0;
  }
  $noclipScale46$i = ((($1)) + 85680|0);
  HEAPF32[$noclipScale46$i>>2] = $$sink2$i;
 }
 $cmp69 = ($call68|0)<(0);
 if ($cmp69) {
  $retval$0 = $call68;
  STACKTOP = sp;return ($retval$0|0);
 }
 $add74 = (($call68) + ($mp3count$0$lcssa97))|0;
 $write_id3tag_automatic = ((($gfp)) + 68|0);
 $27 = HEAP32[$write_id3tag_automatic>>2]|0;
 $tobool80 = ($27|0)==(0);
 if ($tobool80) {
  $retval$0 = $add74;
  STACKTOP = sp;return ($retval$0|0);
 }
 $sub75 = (($mp3buffer_size) - ($add74))|0;
 $$sub75 = $cmp64 ? 0 : $sub75;
 $add$ptr73 = (($mp3buffer$addr$0$lcssa98) + ($call68)|0);
 (_id3tag_write_v1($gfp)|0);
 $call83 = (_copy_buffer($1,$add$ptr73,$$sub75,0)|0);
 $cmp84 = ($call83|0)<(0);
 $add88 = $cmp84 ? 0 : $add74;
 $call83$add88 = (($add88) + ($call83))|0;
 $retval$0 = $call83$add88;
 STACKTOP = sp;return ($retval$0|0);
}
function _lame_close($gfp) {
 $gfp = $gfp|0;
 var $$ = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $cmp = 0, $cmp2 = 0, $cmp4 = 0, $internal_flags = 0, $lame_allocated_gfp = 0, $ret$015 = 0, $ret$1 = 0, $tobool = 0, $tobool11 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $tobool = ($gfp|0)==(0|0);
 if ($tobool) {
  $ret$1 = 0;
  return ($ret$1|0);
 }
 $0 = HEAP32[$gfp>>2]|0;
 $cmp = ($0|0)==(-487877);
 if (!($cmp)) {
  $ret$1 = 0;
  return ($ret$1|0);
 }
 $internal_flags = ((($gfp)) + 288|0);
 $1 = HEAP32[$internal_flags>>2]|0;
 HEAP32[$gfp>>2] = 0;
 $cmp2 = ($1|0)==(0|0);
 if ($cmp2) {
  $ret$015 = -3;
 } else {
  $2 = HEAP32[$1>>2]|0;
  $cmp4 = ($2|0)==(-487877);
  $$ = $cmp4 ? 0 : -3;
  HEAP32[$1>>2] = 0;
  _freegfc($1);
  HEAP32[$internal_flags>>2] = 0;
  $ret$015 = $$;
 }
 $lame_allocated_gfp = ((($gfp)) + 284|0);
 $3 = HEAP32[$lame_allocated_gfp>>2]|0;
 $tobool11 = ($3|0)==(0);
 if ($tobool11) {
  $ret$1 = $ret$015;
  return ($ret$1|0);
 }
 _free($gfp);
 $ret$1 = $ret$015;
 return ($ret$1|0);
}
function _lame_init() {
 var $0 = 0, $ATHcurve$i = 0, $ATHtype$i = 0, $CurrentStep$i = 0, $OldValue$i = 0, $VBR$i = 0, $VBR_hard_min$i = 0, $VBR_max_bitrate_kbps$i = 0, $VBR_mean_bitrate_kbps$i = 0, $VBR_min_bitrate_kbps$i = 0, $VBR_q$i = 0, $amd3dnow$i = 0, $arrayidx4$i = 0, $arrayidx9$i = 0, $athaa_sensitivity$i = 0, $athaa_type$i = 0, $attackthre$i = 0, $attackthre_s$i = 0, $call = 0, $call$i = 0;
 var $cmp = 0, $cmp$i = 0, $debugf$i = 0, $decode_on_the_fly$i = 0, $errorf$i = 0, $findReplayGain$i = 0, $highpassfreq$i = 0, $highpasswidth$i = 0, $interChRatio$i = 0, $internal_flags$i = 0, $lame_allocated_gfp = 0, $lowpassfreq$i = 0, $lowpasswidth$i = 0, $masking_lower$i = 0, $mf_samples_to_encode$i = 0, $mf_size$i = 0, $mmx$i = 0, $mode$i = 0, $msfix$i = 0, $msgf$i = 0;
 var $num_channels$i = 0, $original$i = 0, $ov_rpg$i = 0, $preset$i = 0, $quality$i = 0, $quant_comp$i = 0, $quant_comp_short$i = 0, $retval$0 = 0, $samplerate_in$i = 0, $scale$i = 0, $scale_left$i = 0, $scale_right$i = 0, $short_blocks$i = 0, $sse$i = 0, $strict_ISO$i = 0, $subblock_gain$i = 0, $useTemporal$i = 0, $vbr_max_bitrate_index$i = 0, $vbr_min_bitrate_index$i = 0, $write_id3tag_automatic$i = 0;
 var $write_lame_tag$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 _init_log_table();
 $call = (_calloc(1,304)|0);
 $cmp = ($call|0)==(0|0);
 if ($cmp) {
  $retval$0 = 0;
  return ($retval$0|0);
 }
 $0 = ((($call)) + 4|0);
 _memset(($0|0),0,300)|0;
 HEAP32[$call>>2] = -487877;
 $call$i = (_calloc(1,85840)|0);
 $internal_flags$i = ((($call)) + 288|0);
 HEAP32[$internal_flags$i>>2] = $call$i;
 $cmp$i = ($call$i|0)==(0|0);
 if ($cmp$i) {
  _free($call);
  $retval$0 = 0;
  return ($retval$0|0);
 } else {
  $strict_ISO$i = ((($call)) + 124|0);
  HEAP32[$strict_ISO$i>>2] = 2;
  $mode$i = ((($call)) + 48|0);
  HEAP32[$mode$i>>2] = 4;
  $original$i = ((($call)) + 108|0);
  HEAP32[$original$i>>2] = 1;
  $samplerate_in$i = ((($call)) + 12|0);
  HEAP32[$samplerate_in$i>>2] = 44100;
  $num_channels$i = ((($call)) + 8|0);
  HEAP32[$num_channels$i>>2] = 2;
  HEAP32[$0>>2] = -1;
  $write_lame_tag$i = ((($call)) + 36|0);
  HEAP32[$write_lame_tag$i>>2] = 1;
  $quality$i = ((($call)) + 44|0);
  HEAP32[$quality$i>>2] = -1;
  $short_blocks$i = ((($call)) + 240|0);
  HEAP32[$short_blocks$i>>2] = -1;
  $subblock_gain$i = ((($call)) + 88|0);
  HEAP32[$subblock_gain$i>>2] = -1;
  $lowpassfreq$i = ((($call)) + 184|0);
  HEAP32[$lowpassfreq$i>>2] = 0;
  $highpassfreq$i = ((($call)) + 188|0);
  HEAP32[$highpassfreq$i>>2] = 0;
  $lowpasswidth$i = ((($call)) + 192|0);
  HEAP32[$lowpasswidth$i>>2] = -1;
  $highpasswidth$i = ((($call)) + 196|0);
  HEAP32[$highpasswidth$i>>2] = -1;
  $VBR$i = ((($call)) + 156|0);
  HEAP32[$VBR$i>>2] = 0;
  $VBR_q$i = ((($call)) + 164|0);
  HEAP32[$VBR_q$i>>2] = 4;
  $ATHcurve$i = ((($call)) + 224|0);
  HEAPF32[$ATHcurve$i>>2] = -1.0;
  $VBR_mean_bitrate_kbps$i = ((($call)) + 168|0);
  HEAP32[$VBR_mean_bitrate_kbps$i>>2] = 128;
  $VBR_min_bitrate_kbps$i = ((($call)) + 172|0);
  HEAP32[$VBR_min_bitrate_kbps$i>>2] = 0;
  $VBR_max_bitrate_kbps$i = ((($call)) + 176|0);
  HEAP32[$VBR_max_bitrate_kbps$i>>2] = 0;
  $VBR_hard_min$i = ((($call)) + 180|0);
  HEAP32[$VBR_hard_min$i>>2] = 0;
  $vbr_min_bitrate_index$i = ((($call$i)) + 112|0);
  HEAP32[$vbr_min_bitrate_index$i>>2] = 1;
  $vbr_max_bitrate_index$i = ((($call$i)) + 116|0);
  HEAP32[$vbr_max_bitrate_index$i>>2] = 13;
  $quant_comp$i = ((($call)) + 132|0);
  HEAP32[$quant_comp$i>>2] = -1;
  $quant_comp_short$i = ((($call)) + 136|0);
  HEAP32[$quant_comp_short$i>>2] = -1;
  $msfix$i = ((($call)) + 252|0);
  HEAPF32[$msfix$i>>2] = -1.0;
  $OldValue$i = ((($call$i)) + 84920|0);
  HEAP32[$OldValue$i>>2] = 180;
  $arrayidx4$i = ((($call$i)) + 84924|0);
  HEAP32[$arrayidx4$i>>2] = 180;
  $CurrentStep$i = ((($call$i)) + 84928|0);
  HEAP32[$CurrentStep$i>>2] = 4;
  $arrayidx9$i = ((($call$i)) + 84932|0);
  HEAP32[$arrayidx9$i>>2] = 4;
  $masking_lower$i = ((($call$i)) + 84908|0);
  HEAPF32[$masking_lower$i>>2] = 1.0;
  $attackthre$i = ((($call)) + 264|0);
  HEAPF32[$attackthre$i>>2] = -1.0;
  $attackthre_s$i = ((($call)) + 268|0);
  HEAPF32[$attackthre_s$i>>2] = -1.0;
  $scale$i = ((($call)) + 20|0);
  HEAPF32[$scale$i>>2] = 1.0;
  $scale_left$i = ((($call)) + 24|0);
  HEAPF32[$scale_left$i>>2] = 1.0;
  $scale_right$i = ((($call)) + 28|0);
  HEAPF32[$scale_right$i>>2] = 1.0;
  $athaa_type$i = ((($call)) + 232|0);
  HEAP32[$athaa_type$i>>2] = -1;
  $ATHtype$i = ((($call)) + 220|0);
  HEAP32[$ATHtype$i>>2] = -1;
  $athaa_sensitivity$i = ((($call)) + 236|0);
  HEAPF32[$athaa_sensitivity$i>>2] = 0.0;
  $useTemporal$i = ((($call)) + 244|0);
  HEAP32[$useTemporal$i>>2] = -1;
  $interChRatio$i = ((($call)) + 248|0);
  HEAPF32[$interChRatio$i>>2] = -1.0;
  $mf_samples_to_encode$i = ((($call$i)) + 84032|0);
  HEAP32[$mf_samples_to_encode$i>>2] = 1728;
  $mf_size$i = ((($call$i)) + 84036|0);
  HEAP32[$mf_size$i>>2] = 528;
  $findReplayGain$i = ((($call)) + 60|0);
  HEAP32[$findReplayGain$i>>2] = 0;
  $decode_on_the_fly$i = ((($call)) + 64|0);
  HEAP32[$decode_on_the_fly$i>>2] = 0;
  $ov_rpg$i = ((($call$i)) + 85680|0);
  HEAPF32[$ov_rpg$i>>2] = -1.0;
  $mmx$i = ((($call)) + 292|0);
  HEAP32[$mmx$i>>2] = 1;
  $amd3dnow$i = ((($call)) + 296|0);
  HEAP32[$amd3dnow$i>>2] = 1;
  $sse$i = ((($call)) + 300|0);
  HEAP32[$sse$i>>2] = 1;
  $preset$i = ((($call)) + 152|0);
  HEAP32[$preset$i>>2] = 0;
  $write_id3tag_automatic$i = ((($call)) + 68|0);
  HEAP32[$write_id3tag_automatic$i>>2] = 1;
  $debugf$i = ((($call)) + 276|0);
  HEAP32[$debugf$i>>2] = 2;
  $errorf$i = ((($call)) + 280|0);
  HEAP32[$errorf$i>>2] = 2;
  $msgf$i = ((($call)) + 272|0);
  HEAP32[$msgf$i>>2] = 2;
  $lame_allocated_gfp = ((($call)) + 284|0);
  HEAP32[$lame_allocated_gfp>>2] = 1;
  $retval$0 = $call;
  return ($retval$0|0);
 }
 return (0)|0;
}
function _mdct_sub48($gfc,$w0,$w1) {
 $gfc = $gfc|0;
 $w0 = $w0|0;
 $w1 = $w1|0;
 var $$ = 0, $$pre = 0.0, $$pre198 = 0.0, $$pre199 = 0.0, $$pre200 = 0.0, $0 = 0, $1 = 0, $10 = 0.0, $100 = 0.0, $101 = 0.0, $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0.0, $106 = 0.0, $107 = 0.0, $108 = 0.0, $109 = 0.0, $11 = 0.0, $110 = 0.0;
 var $111 = 0.0, $112 = 0.0, $113 = 0.0, $114 = 0.0, $115 = 0.0, $116 = 0.0, $117 = 0.0, $118 = 0.0, $119 = 0.0, $12 = 0.0, $120 = 0.0, $121 = 0.0, $122 = 0.0, $123 = 0.0, $124 = 0.0, $125 = 0.0, $126 = 0.0, $127 = 0.0, $128 = 0.0, $129 = 0.0;
 var $13 = 0.0, $130 = 0.0, $131 = 0.0, $132 = 0.0, $133 = 0.0, $134 = 0.0, $135 = 0.0, $136 = 0.0, $137 = 0.0, $138 = 0.0, $139 = 0.0, $14 = 0.0, $140 = 0.0, $141 = 0.0, $142 = 0.0, $143 = 0.0, $144 = 0.0, $145 = 0.0, $146 = 0.0, $147 = 0.0;
 var $148 = 0.0, $149 = 0.0, $15 = 0.0, $150 = 0.0, $151 = 0.0, $152 = 0.0, $153 = 0.0, $154 = 0.0, $155 = 0.0, $156 = 0.0, $157 = 0.0, $158 = 0, $159 = 0, $16 = 0.0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0.0, $20 = 0, $21 = 0.0;
 var $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $4 = 0.0;
 var $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0.0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0;
 var $59 = 0.0, $6 = 0.0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0.0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $73 = 0.0, $74 = 0.0, $75 = 0.0, $76 = 0.0;
 var $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0.0, $80 = 0.0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0.0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0.0;
 var $95 = 0.0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $add$i = 0.0, $add$i157 = 0.0, $add$ptr13 = 0, $add$ptr14 = 0, $add$ptr15 = 0, $add$ptr16 = 0, $add$ptr231 = 0, $add$ptr33 = 0, $add$ptr41 = 0, $add10$i = 0.0, $add105$i = 0.0, $add108$i = 0.0, $add108$neg$i = 0.0, $add111$i = 0.0, $add114$i = 0.0;
 var $add115 = 0.0, $add115$1 = 0.0, $add115$2 = 0.0, $add115$i = 0.0, $add116$i = 0.0, $add118$i = 0.0, $add119$i = 0.0, $add12$i = 0.0, $add125$neg$i = 0.0, $add128$i = 0.0, $add130$i = 0.0, $add137 = 0.0, $add137$1 = 0.0, $add137$2 = 0.0, $add14$i = 0.0, $add144164$i = 0.0, $add146165$i169 = 0.0, $add148$i = 0.0, $add15$i = 0.0, $add15$i158 = 0.0;
 var $add150 = 0, $add150$i = 0.0, $add152 = 0, $add152$i = 0.0, $add153$i = 0.0, $add157 = 0, $add159$i170 = 0.0, $add163 = 0.0, $add165$i171 = 0.0, $add17$i = 0.0, $add170$i = 0.0, $add172 = 0, $add176$i = 0.0, $add18$i = 0.0, $add184$i174 = 0.0, $add187$i = 0.0, $add188 = 0.0, $add19$i = 0.0, $add214 = 0.0, $add214$1 = 0.0;
 var $add214$2 = 0.0, $add214$3 = 0.0, $add214$4 = 0.0, $add214$5 = 0.0, $add214$6 = 0.0, $add214$7 = 0.0, $add27$i = 0.0, $add29$i = 0.0, $add33$i = 0.0, $add34$i = 0.0, $add41$i = 0.0, $add43$i = 0.0, $add45$i = 0.0, $add47$i = 0.0, $add49$i = 0.0, $add52$i = 0.0, $add52$i162 = 0.0, $add56$i = 0.0, $add56$i163 = 0.0, $add57$i = 0.0;
 var $add66$i = 0.0, $add68$i = 0.0, $add69$i = 0.0, $add73160$i = 0.0, $add74$i = 0.0, $add81$i167 = 0.0, $add87161$i = 0.0, $add90$i = 0.0, $add93 = 0.0, $add93$1 = 0.0, $add93$2 = 0.0, $arraydecay = 0, $arraydecay248 = 0, $arraydecay9 = 0, $arrayidx$i = 0, $arrayidx$i$phi$trans$insert = 0, $arrayidx$i154 = 0, $arrayidx1$i = 0, $arrayidx1$i$phi$trans$insert = 0, $arrayidx1$i155 = 0;
 var $arrayidx10$i = 0, $arrayidx107 = 0, $arrayidx107$1 = 0, $arrayidx107$2 = 0, $arrayidx11$i = 0, $arrayidx110 = 0, $arrayidx110$1 = 0, $arrayidx110$2 = 0, $arrayidx114$1 = 0, $arrayidx114$2 = 0, $arrayidx117$i = 0, $arrayidx118 = 0, $arrayidx118$1 = 0, $arrayidx118$2 = 0, $arrayidx129 = 0, $arrayidx129$1 = 0, $arrayidx129$2 = 0, $arrayidx13$i = 0, $arrayidx131$i = 0, $arrayidx132 = 0;
 var $arrayidx132$1 = 0, $arrayidx132$2 = 0, $arrayidx133$i = 0, $arrayidx136 = 0, $arrayidx136$1 = 0, $arrayidx136$2 = 0, $arrayidx14$i = 0, $arrayidx140 = 0, $arrayidx140$1 = 0, $arrayidx140$2 = 0, $arrayidx151 = 0, $arrayidx154 = 0, $arrayidx154$i = 0, $arrayidx156$i = 0, $arrayidx158 = 0, $arrayidx16$i = 0, $arrayidx161 = 0, $arrayidx166 = 0, $arrayidx169 = 0, $arrayidx17$i = 0;
 var $arrayidx171$i = 0, $arrayidx173 = 0, $arrayidx173$i = 0, $arrayidx176 = 0, $arrayidx18$i = 0, $arrayidx18$i$phi$trans$insert = 0, $arrayidx180 = 0, $arrayidx184 = 0, $arrayidx188$i = 0, $arrayidx190 = 0, $arrayidx190$i = 0, $arrayidx2$i = 0, $arrayidx20$i = 0, $arrayidx20$i$phi$trans$insert = 0, $arrayidx207 = 0, $arrayidx207$1 = 0, $arrayidx207$2 = 0, $arrayidx207$3 = 0, $arrayidx207$4 = 0, $arrayidx207$5 = 0;
 var $arrayidx207$6 = 0, $arrayidx21 = 0, $arrayidx21$1 = 0, $arrayidx21$10 = 0, $arrayidx21$11 = 0, $arrayidx21$12 = 0, $arrayidx21$13 = 0, $arrayidx21$14 = 0, $arrayidx21$15 = 0, $arrayidx21$2 = 0, $arrayidx21$3 = 0, $arrayidx21$4 = 0, $arrayidx21$5 = 0, $arrayidx21$6 = 0, $arrayidx21$7 = 0, $arrayidx21$8 = 0, $arrayidx21$9 = 0, $arrayidx21$i = 0, $arrayidx211 = 0, $arrayidx211$1 = 0;
 var $arrayidx211$2 = 0, $arrayidx211$3 = 0, $arrayidx211$4 = 0, $arrayidx211$5 = 0, $arrayidx211$6 = 0, $arrayidx211$7 = 0, $arrayidx24$i = 0, $arrayidx242 = 0, $arrayidx3$i = 0, $arrayidx32 = 0, $arrayidx34$i = 0, $arrayidx36$i = 0, $arrayidx37$i = 0, $arrayidx38$i = 0, $arrayidx4$i = 0, $arrayidx43 = 0, $arrayidx5$i = 0, $arrayidx58$i = 0, $arrayidx6$i = 0, $arrayidx60$1 = 0;
 var $arrayidx60$10 = 0, $arrayidx60$11 = 0, $arrayidx60$12 = 0, $arrayidx60$13 = 0, $arrayidx60$14 = 0, $arrayidx60$15 = 0, $arrayidx60$16 = 0, $arrayidx60$17 = 0, $arrayidx60$2 = 0, $arrayidx60$3 = 0, $arrayidx60$4 = 0, $arrayidx60$5 = 0, $arrayidx60$6 = 0, $arrayidx60$7 = 0, $arrayidx60$8 = 0, $arrayidx60$9 = 0, $arrayidx60$i = 0, $arrayidx75$i = 0, $arrayidx77 = 0, $arrayidx77$1 = 0;
 var $arrayidx77$2 = 0, $arrayidx77$i = 0, $arrayidx81 = 0, $arrayidx81$1 = 0, $arrayidx81$2 = 0, $arrayidx85$1 = 0, $arrayidx85$2 = 0, $arrayidx88 = 0, $arrayidx88$1 = 0, $arrayidx88$2 = 0, $arrayidx9$i = 0, $arrayidx91$i = 0, $arrayidx92 = 0, $arrayidx92$1 = 0, $arrayidx92$2 = 0, $arrayidx93$i = 0, $arrayidx96 = 0, $arrayidx96$1 = 0, $arrayidx96$2 = 0, $band$1185 = 0;
 var $block_type = 0, $ch$0191 = 0, $channels_out = 0, $cmp = 0, $cmp189 = 0, $cmp197 = 0, $cmp200 = 0, $cmp238 = 0, $cmp3 = 0, $cmp3186 = 0, $cmp42 = 0, $cmp44 = 0, $cmp50 = 0, $cmp66 = 0, $conv = 0.0, $conv$i = 0.0, $conv23$i = 0.0, $conv28$i = 0.0, $conv30$i = 0.0, $conv31$i = 0.0;
 var $conv33$i = 0.0, $conv35$i = 0.0, $conv38$i = 0.0, $conv40$i = 0.0, $conv42$i = 0.0, $conv44$i = 0.0, $conv47$i = 0.0, $conv48$i = 0.0, $conv53$i = 0.0, $conv63$i = 0.0, $conv64$i = 0.0, $conv67$i = 0.0, $exitcond = 0, $exitcond$i = 0, $exitcond195 = 0, $exitcond197 = 0, $gr$0188 = 0, $inc = 0, $inc$i = 0, $inc192 = 0;
 var $inc230 = 0, $inc234 = 0, $inc251 = 0, $incdec$ptr$i = 0, $inout$addr$048$i = 0, $k$0178 = 0, $k$3180 = 0, $l$047$i = 0, $mdct_enc$0183 = 0, $mixed_block_flag = 0, $mode_gr = 0, $mul = 0.0, $mul$1 = 0.0, $mul$10 = 0.0, $mul$11 = 0.0, $mul$12 = 0.0, $mul$13 = 0.0, $mul$14 = 0.0, $mul$15 = 0.0, $mul$2 = 0.0;
 var $mul$3 = 0.0, $mul$4 = 0.0, $mul$5 = 0.0, $mul$6 = 0.0, $mul$7 = 0.0, $mul$8 = 0.0, $mul$9 = 0.0, $mul$i = 0.0, $mul$i159 = 0.0, $mul100 = 0.0, $mul100$1 = 0.0, $mul100$2 = 0.0, $mul111 = 0.0, $mul111$1 = 0.0, $mul111$2 = 0.0, $mul12$i = 0.0, $mul122 = 0.0, $mul122$1 = 0.0, $mul122$2 = 0.0, $mul123$i = 0.0;
 var $mul129$i = 0.0, $mul133 = 0.0, $mul133$1 = 0.0, $mul133$2 = 0.0, $mul137$i = 0.0, $mul139$i = 0.0, $mul141$i = 0.0, $mul143$i$neg = 0.0, $mul145$neg$i = 0.0, $mul147$i = 0.0, $mul149$i = 0.0, $mul151$i = 0.0, $mul153 = 0, $mul155 = 0.0, $mul158$i = 0.0, $mul160 = 0, $mul160$neg$i$neg = 0.0, $mul162 = 0.0, $mul162$i = 0.0, $mul164$i = 0.0;
 var $mul166$neg$i$neg = 0.0, $mul168$neg$i = 0.0, $mul170 = 0.0, $mul175$i = 0.0, $mul177 = 0.0, $mul177$i = 0.0, $mul179$neg$i = 0.0, $mul181 = 0.0, $mul181$i = 0.0, $mul183$i = 0.0, $mul185$neg$i = 0.0, $mul187 = 0.0, $mul19$i = 0.0, $mul209 = 0.0, $mul209$1 = 0.0, $mul209$2 = 0.0, $mul209$3 = 0.0, $mul209$4 = 0.0, $mul209$5 = 0.0, $mul209$6 = 0.0;
 var $mul209$7 = 0.0, $mul213 = 0.0, $mul213$1 = 0.0, $mul213$2 = 0.0, $mul213$3 = 0.0, $mul213$4 = 0.0, $mul213$5 = 0.0, $mul213$6 = 0.0, $mul213$7 = 0.0, $mul217 = 0.0, $mul217$1 = 0.0, $mul217$2 = 0.0, $mul217$3 = 0.0, $mul217$4 = 0.0, $mul217$5 = 0.0, $mul217$6 = 0.0, $mul217$7 = 0.0, $mul22$i = 0.0, $mul221 = 0.0, $mul221$1 = 0.0;
 var $mul221$2 = 0.0, $mul221$3 = 0.0, $mul221$4 = 0.0, $mul221$5 = 0.0, $mul221$6 = 0.0, $mul221$7 = 0.0, $mul25$i = 0.0, $mul29$i = 0.0, $mul3$i = 0.0, $mul32$i = 0.0, $mul32$i160 = 0.0, $mul39$i = 0.0, $mul40$i = 0.0, $mul41$i = 0.0, $mul44$i = 0.0, $mul46$i = 0.0, $mul46$i161 = 0.0, $mul48$i = 0.0, $mul50$i = 0.0, $mul51$i = 0.0;
 var $mul53$i = 0.0, $mul55$i = 0.0, $mul60$i = 0.0, $mul61 = 0.0, $mul61$1 = 0.0, $mul61$10 = 0.0, $mul61$11 = 0.0, $mul61$12 = 0.0, $mul61$13 = 0.0, $mul61$14 = 0.0, $mul61$15 = 0.0, $mul61$16 = 0.0, $mul61$17 = 0.0, $mul61$2 = 0.0, $mul61$3 = 0.0, $mul61$4 = 0.0, $mul61$5 = 0.0, $mul61$6 = 0.0, $mul61$7 = 0.0, $mul61$8 = 0.0;
 var $mul61$9 = 0.0, $mul61$i = 0.0, $mul63$neg$i$neg = 0.0, $mul65$i = 0.0, $mul66$i = 0.0, $mul68$i = 0.0, $mul70$neg$i = 0.0, $mul72$i$neg = 0.0, $mul78 = 0.0, $mul78$1 = 0.0, $mul78$2 = 0.0, $mul78$i = 0.0, $mul8$i = 0.0, $mul80$i = 0.0, $mul82$neg$i = 0.0, $mul84$i = 0.0, $mul86$neg$i$neg = 0.0, $mul88$i = 0.0, $mul89 = 0.0, $mul89$1 = 0.0;
 var $mul89$2 = 0.0, $or$cond = 0, $or$cond1 = 0, $samp$0176 = 0, $scevgep = 0, $sub = 0, $sub$i = 0.0, $sub$i156 = 0.0, $sub102$i = 0.0, $sub104 = 0.0, $sub104$1 = 0.0, $sub104$2 = 0.0, $sub126 = 0.0, $sub126$1 = 0.0, $sub126$2 = 0.0, $sub126$i = 0.0, $sub127$i = 0.0, $sub132$i = 0.0, $sub136$i = 0.0, $sub140$i = 0.0;
 var $sub142$i = 0.0, $sub155$i = 0.0, $sub159 = 0, $sub161$i = 0.0, $sub163166$i = 0.0, $sub167$i172 = 0.0, $sub169$i = 0.0, $sub172$i = 0.0, $sub178 = 0.0, $sub178167$i173 = 0.0, $sub180$i = 0.0, $sub182 = 0.0, $sub182$i = 0.0, $sub186$i = 0.0, $sub189$i = 0.0, $sub20$i = 0.0, $sub21$i = 0.0, $sub22$neg$i = 0.0, $sub222 = 0.0, $sub222$1 = 0.0;
 var $sub222$2 = 0.0, $sub222$3 = 0.0, $sub222$4 = 0.0, $sub222$5 = 0.0, $sub222$6 = 0.0, $sub222$7 = 0.0, $sub23$i = 0.0, $sub28$i = 0.0, $sub30$i = 0.0, $sub31$i = 0.0, $sub35$i = 0.0, $sub37$i = 0.0, $sub39$i = 0.0, $sub4$i = 0.0, $sub5$i = 0.0, $sub54$i = 0.0, $sub54159$i = 0.0, $sub59$i = 0.0, $sub6$i = 0.0, $sub62$i = 0.0;
 var $sub62$i164165 = 0.0, $sub64$i = 0.0, $sub7$i = 0.0, $sub70$i = 0.0, $sub71$i166 = 0.0, $sub76$i = 0.0, $sub79$i = 0.0, $sub82 = 0.0, $sub82$1 = 0.0, $sub82$2 = 0.0, $sub83$i = 0.0, $sub85$i168 = 0.0, $sub89162$i = 0.0, $sub92$i = 0.0, $sub96$i = 0.0, $sub99$i = 0.0, $tobool = 0, $w0$pn190 = 0, $wk$0 = 0, $wk$1187 = 0;
 var $wk$2177 = 0, $work = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $work = sp;
 $channels_out = ((($gfc)) + 72|0);
 $0 = HEAP32[$channels_out>>2]|0;
 $cmp189 = ($0|0)>(0);
 if (!($cmp189)) {
  STACKTOP = sp;return;
 }
 $mode_gr = ((($gfc)) + 76|0);
 $arrayidx$i154 = ((($work)) + 68|0);
 $arrayidx1$i155 = ((($work)) + 36|0);
 $arrayidx2$i = ((($work)) + 60|0);
 $arrayidx3$i = ((($work)) + 44|0);
 $arrayidx5$i = ((($work)) + 56|0);
 $arrayidx6$i = ((($work)) + 48|0);
 $arrayidx9$i = ((($work)) + 32|0);
 $arrayidx10$i = ((($work)) + 4|0);
 $arrayidx11$i = ((($work)) + 28|0);
 $arrayidx13$i = ((($work)) + 8|0);
 $arrayidx14$i = ((($work)) + 24|0);
 $arrayidx16$i = ((($work)) + 12|0);
 $arrayidx17$i = ((($work)) + 20|0);
 $arrayidx21$i = ((($work)) + 16|0);
 $arrayidx37$i = ((($work)) + 64|0);
 $arrayidx38$i = ((($work)) + 40|0);
 $arrayidx117$i = ((($work)) + 52|0);
 $ch$0191 = 0;$w0$pn190 = $w0;
 while(1) {
  $1 = HEAP32[$mode_gr>>2]|0;
  $cmp3186 = ($1|0)>(0);
  if ($cmp3186) {
   $wk$0 = ((($w0$pn190)) + 1144|0);
   $gr$0188 = 0;$wk$1187 = $wk$0;
   while(1) {
    $sub = (1 - ($gr$0188))|0;
    $arraydecay9 = ((((($gfc)) + 27824|0) + (($ch$0191*4608)|0)|0) + (($sub*2304)|0)|0);
    $k$0178 = 0;$samp$0176 = $arraydecay9;$wk$2177 = $wk$1187;
    while(1) {
     _window_subband($wk$2177,$samp$0176);
     $add$ptr13 = ((($wk$2177)) + 128|0);
     $add$ptr14 = ((($samp$0176)) + 128|0);
     _window_subband($add$ptr13,$add$ptr14);
     $add$ptr15 = ((($samp$0176)) + 256|0);
     $arrayidx21 = ((($samp$0176)) + 132|0);
     $2 = +HEAPF32[$arrayidx21>>2];
     $mul = -$2;
     HEAPF32[$arrayidx21>>2] = $mul;
     $arrayidx21$1 = ((($samp$0176)) + 140|0);
     $3 = +HEAPF32[$arrayidx21$1>>2];
     $mul$1 = -$3;
     HEAPF32[$arrayidx21$1>>2] = $mul$1;
     $arrayidx21$2 = ((($samp$0176)) + 148|0);
     $4 = +HEAPF32[$arrayidx21$2>>2];
     $mul$2 = -$4;
     HEAPF32[$arrayidx21$2>>2] = $mul$2;
     $arrayidx21$3 = ((($samp$0176)) + 156|0);
     $5 = +HEAPF32[$arrayidx21$3>>2];
     $mul$3 = -$5;
     HEAPF32[$arrayidx21$3>>2] = $mul$3;
     $arrayidx21$4 = ((($samp$0176)) + 164|0);
     $6 = +HEAPF32[$arrayidx21$4>>2];
     $mul$4 = -$6;
     HEAPF32[$arrayidx21$4>>2] = $mul$4;
     $arrayidx21$5 = ((($samp$0176)) + 172|0);
     $7 = +HEAPF32[$arrayidx21$5>>2];
     $mul$5 = -$7;
     HEAPF32[$arrayidx21$5>>2] = $mul$5;
     $arrayidx21$6 = ((($samp$0176)) + 180|0);
     $8 = +HEAPF32[$arrayidx21$6>>2];
     $mul$6 = -$8;
     HEAPF32[$arrayidx21$6>>2] = $mul$6;
     $arrayidx21$7 = ((($samp$0176)) + 188|0);
     $9 = +HEAPF32[$arrayidx21$7>>2];
     $mul$7 = -$9;
     HEAPF32[$arrayidx21$7>>2] = $mul$7;
     $arrayidx21$8 = ((($samp$0176)) + 196|0);
     $10 = +HEAPF32[$arrayidx21$8>>2];
     $mul$8 = -$10;
     HEAPF32[$arrayidx21$8>>2] = $mul$8;
     $arrayidx21$9 = ((($samp$0176)) + 204|0);
     $11 = +HEAPF32[$arrayidx21$9>>2];
     $mul$9 = -$11;
     HEAPF32[$arrayidx21$9>>2] = $mul$9;
     $arrayidx21$10 = ((($samp$0176)) + 212|0);
     $12 = +HEAPF32[$arrayidx21$10>>2];
     $mul$10 = -$12;
     HEAPF32[$arrayidx21$10>>2] = $mul$10;
     $arrayidx21$11 = ((($samp$0176)) + 220|0);
     $13 = +HEAPF32[$arrayidx21$11>>2];
     $mul$11 = -$13;
     HEAPF32[$arrayidx21$11>>2] = $mul$11;
     $arrayidx21$12 = ((($samp$0176)) + 228|0);
     $14 = +HEAPF32[$arrayidx21$12>>2];
     $mul$12 = -$14;
     HEAPF32[$arrayidx21$12>>2] = $mul$12;
     $arrayidx21$13 = ((($samp$0176)) + 236|0);
     $15 = +HEAPF32[$arrayidx21$13>>2];
     $mul$13 = -$15;
     HEAPF32[$arrayidx21$13>>2] = $mul$13;
     $arrayidx21$14 = ((($samp$0176)) + 244|0);
     $16 = +HEAPF32[$arrayidx21$14>>2];
     $mul$14 = -$16;
     HEAPF32[$arrayidx21$14>>2] = $mul$14;
     $arrayidx21$15 = ((($samp$0176)) + 252|0);
     $17 = +HEAPF32[$arrayidx21$15>>2];
     $mul$15 = -$17;
     HEAPF32[$arrayidx21$15>>2] = $mul$15;
     $add$ptr16 = ((($wk$2177)) + 256|0);
     $inc = (($k$0178) + 1)|0;
     $exitcond = ($inc|0)==(9);
     if ($exitcond) {
      break;
     } else {
      $k$0178 = $inc;$samp$0176 = $add$ptr15;$wk$2177 = $add$ptr16;
     }
    }
    $arraydecay = ((((($gfc)) + 304|0) + (($gr$0188*10504)|0)|0) + (($ch$0191*5252)|0)|0);
    $block_type = ((((((($gfc)) + 304|0) + (($gr$0188*10504)|0)|0) + (($ch$0191*5252)|0)|0)) + 4788|0);
    $mixed_block_flag = ((((((($gfc)) + 304|0) + (($gr$0188*10504)|0)|0) + (($ch$0191*5252)|0)|0)) + 4792|0);
    $band$1185 = 0;$mdct_enc$0183 = $arraydecay;
    while(1) {
     $18 = HEAP32[$block_type>>2]|0;
     $arrayidx32 = (1588 + ($band$1185<<2)|0);
     $19 = HEAP32[$arrayidx32>>2]|0;
     $add$ptr33 = (((((($gfc)) + 27824|0) + (($ch$0191*4608)|0)|0) + (($gr$0188*2304)|0)|0) + ($19<<2)|0);
     $add$ptr41 = (((((($gfc)) + 27824|0) + (($ch$0191*4608)|0)|0) + (($sub*2304)|0)|0) + ($19<<2)|0);
     $20 = HEAP32[$mixed_block_flag>>2]|0;
     $tobool = ($20|0)!=(0);
     $cmp42 = ($band$1185|0)<(2);
     $or$cond = $cmp42 & $tobool;
     $$ = $or$cond ? 0 : $18;
     $arrayidx43 = (((($gfc)) + 37040|0) + ($band$1185<<2)|0);
     $21 = +HEAPF32[$arrayidx43>>2];
     $conv = $21;
     $cmp44 = $conv < 9.9999999999999998E-13;
     L15: do {
      if ($cmp44) {
       dest=$mdct_enc$0183; stop=dest+72|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
      } else {
       $cmp50 = $21 < 1.0;
       if ($cmp50) {
        $22 = +HEAPF32[$add$ptr41>>2];
        $mul61 = $22 * $21;
        HEAPF32[$add$ptr41>>2] = $mul61;
        $23 = +HEAPF32[$arrayidx43>>2];
        $arrayidx60$1 = ((($add$ptr41)) + 128|0);
        $24 = +HEAPF32[$arrayidx60$1>>2];
        $mul61$1 = $24 * $23;
        HEAPF32[$arrayidx60$1>>2] = $mul61$1;
        $25 = +HEAPF32[$arrayidx43>>2];
        $arrayidx60$2 = ((($add$ptr41)) + 256|0);
        $26 = +HEAPF32[$arrayidx60$2>>2];
        $mul61$2 = $26 * $25;
        HEAPF32[$arrayidx60$2>>2] = $mul61$2;
        $27 = +HEAPF32[$arrayidx43>>2];
        $arrayidx60$3 = ((($add$ptr41)) + 384|0);
        $28 = +HEAPF32[$arrayidx60$3>>2];
        $mul61$3 = $28 * $27;
        HEAPF32[$arrayidx60$3>>2] = $mul61$3;
        $29 = +HEAPF32[$arrayidx43>>2];
        $arrayidx60$4 = ((($add$ptr41)) + 512|0);
        $30 = +HEAPF32[$arrayidx60$4>>2];
        $mul61$4 = $30 * $29;
        HEAPF32[$arrayidx60$4>>2] = $mul61$4;
        $31 = +HEAPF32[$arrayidx43>>2];
        $arrayidx60$5 = ((($add$ptr41)) + 640|0);
        $32 = +HEAPF32[$arrayidx60$5>>2];
        $mul61$5 = $32 * $31;
        HEAPF32[$arrayidx60$5>>2] = $mul61$5;
        $33 = +HEAPF32[$arrayidx43>>2];
        $arrayidx60$6 = ((($add$ptr41)) + 768|0);
        $34 = +HEAPF32[$arrayidx60$6>>2];
        $mul61$6 = $34 * $33;
        HEAPF32[$arrayidx60$6>>2] = $mul61$6;
        $35 = +HEAPF32[$arrayidx43>>2];
        $arrayidx60$7 = ((($add$ptr41)) + 896|0);
        $36 = +HEAPF32[$arrayidx60$7>>2];
        $mul61$7 = $36 * $35;
        HEAPF32[$arrayidx60$7>>2] = $mul61$7;
        $37 = +HEAPF32[$arrayidx43>>2];
        $arrayidx60$8 = ((($add$ptr41)) + 1024|0);
        $38 = +HEAPF32[$arrayidx60$8>>2];
        $mul61$8 = $38 * $37;
        HEAPF32[$arrayidx60$8>>2] = $mul61$8;
        $39 = +HEAPF32[$arrayidx43>>2];
        $arrayidx60$9 = ((($add$ptr41)) + 1152|0);
        $40 = +HEAPF32[$arrayidx60$9>>2];
        $mul61$9 = $40 * $39;
        HEAPF32[$arrayidx60$9>>2] = $mul61$9;
        $41 = +HEAPF32[$arrayidx43>>2];
        $arrayidx60$10 = ((($add$ptr41)) + 1280|0);
        $42 = +HEAPF32[$arrayidx60$10>>2];
        $mul61$10 = $42 * $41;
        HEAPF32[$arrayidx60$10>>2] = $mul61$10;
        $43 = +HEAPF32[$arrayidx43>>2];
        $arrayidx60$11 = ((($add$ptr41)) + 1408|0);
        $44 = +HEAPF32[$arrayidx60$11>>2];
        $mul61$11 = $44 * $43;
        HEAPF32[$arrayidx60$11>>2] = $mul61$11;
        $45 = +HEAPF32[$arrayidx43>>2];
        $arrayidx60$12 = ((($add$ptr41)) + 1536|0);
        $46 = +HEAPF32[$arrayidx60$12>>2];
        $mul61$12 = $46 * $45;
        HEAPF32[$arrayidx60$12>>2] = $mul61$12;
        $47 = +HEAPF32[$arrayidx43>>2];
        $arrayidx60$13 = ((($add$ptr41)) + 1664|0);
        $48 = +HEAPF32[$arrayidx60$13>>2];
        $mul61$13 = $48 * $47;
        HEAPF32[$arrayidx60$13>>2] = $mul61$13;
        $49 = +HEAPF32[$arrayidx43>>2];
        $arrayidx60$14 = ((($add$ptr41)) + 1792|0);
        $50 = +HEAPF32[$arrayidx60$14>>2];
        $mul61$14 = $50 * $49;
        HEAPF32[$arrayidx60$14>>2] = $mul61$14;
        $51 = +HEAPF32[$arrayidx43>>2];
        $arrayidx60$15 = ((($add$ptr41)) + 1920|0);
        $52 = +HEAPF32[$arrayidx60$15>>2];
        $mul61$15 = $52 * $51;
        HEAPF32[$arrayidx60$15>>2] = $mul61$15;
        $53 = +HEAPF32[$arrayidx43>>2];
        $arrayidx60$16 = ((($add$ptr41)) + 2048|0);
        $54 = +HEAPF32[$arrayidx60$16>>2];
        $mul61$16 = $54 * $53;
        HEAPF32[$arrayidx60$16>>2] = $mul61$16;
        $55 = +HEAPF32[$arrayidx43>>2];
        $arrayidx60$17 = ((($add$ptr41)) + 2176|0);
        $56 = +HEAPF32[$arrayidx60$17>>2];
        $mul61$17 = $56 * $55;
        HEAPF32[$arrayidx60$17>>2] = $mul61$17;
       }
       $cmp66 = ($$|0)==(2);
       if ($cmp66) {
        $arrayidx77 = ((($add$ptr33)) + 768|0);
        $57 = +HEAPF32[$arrayidx77>>2];
        $mul78 = $57 * 0.13165250420570374;
        $arrayidx81 = ((($add$ptr33)) + 1408|0);
        $58 = +HEAPF32[$arrayidx81>>2];
        $sub82 = $mul78 - $58;
        HEAPF32[$mdct_enc$0183>>2] = $sub82;
        $arrayidx88 = ((($add$ptr33)) + 2176|0);
        $59 = +HEAPF32[$arrayidx88>>2];
        $mul89 = $59 * 0.13165250420570374;
        $arrayidx92 = ((($add$ptr33)) + 1536|0);
        $60 = +HEAPF32[$arrayidx92>>2];
        $add93 = $mul89 + $60;
        $arrayidx96 = ((($mdct_enc$0183)) + 36|0);
        HEAPF32[$arrayidx96>>2] = $add93;
        $61 = +HEAPF32[$arrayidx92>>2];
        $mul100 = $61 * 0.13165250420570374;
        $62 = +HEAPF32[$arrayidx88>>2];
        $sub104 = $mul100 - $62;
        $arrayidx107 = ((($mdct_enc$0183)) + 4|0);
        HEAPF32[$arrayidx107>>2] = $sub104;
        $arrayidx110 = ((($add$ptr41)) + 640|0);
        $63 = +HEAPF32[$arrayidx110>>2];
        $mul111 = $63 * 0.13165250420570374;
        $64 = +HEAPF32[$add$ptr41>>2];
        $add115 = $mul111 + $64;
        $arrayidx118 = ((($mdct_enc$0183)) + 40|0);
        HEAPF32[$arrayidx118>>2] = $add115;
        $65 = +HEAPF32[$add$ptr41>>2];
        $mul122 = $65 * 0.13165250420570374;
        $66 = +HEAPF32[$arrayidx110>>2];
        $sub126 = $mul122 - $66;
        $arrayidx129 = ((($mdct_enc$0183)) + 8|0);
        HEAPF32[$arrayidx129>>2] = $sub126;
        $arrayidx132 = ((($add$ptr41)) + 1408|0);
        $67 = +HEAPF32[$arrayidx132>>2];
        $mul133 = $67 * 0.13165250420570374;
        $arrayidx136 = ((($add$ptr41)) + 768|0);
        $68 = +HEAPF32[$arrayidx136>>2];
        $add137 = $mul133 + $68;
        $arrayidx140 = ((($mdct_enc$0183)) + 44|0);
        HEAPF32[$arrayidx140>>2] = $add137;
        $arrayidx77$1 = ((($add$ptr33)) + 896|0);
        $69 = +HEAPF32[$arrayidx77$1>>2];
        $mul78$1 = $69 * 0.41421356797218323;
        $arrayidx81$1 = ((($add$ptr33)) + 1280|0);
        $70 = +HEAPF32[$arrayidx81$1>>2];
        $sub82$1 = $mul78$1 - $70;
        $arrayidx85$1 = ((($mdct_enc$0183)) + 12|0);
        HEAPF32[$arrayidx85$1>>2] = $sub82$1;
        $arrayidx88$1 = ((($add$ptr33)) + 2048|0);
        $71 = +HEAPF32[$arrayidx88$1>>2];
        $mul89$1 = $71 * 0.41421356797218323;
        $arrayidx92$1 = ((($add$ptr33)) + 1664|0);
        $72 = +HEAPF32[$arrayidx92$1>>2];
        $add93$1 = $mul89$1 + $72;
        $arrayidx96$1 = ((($mdct_enc$0183)) + 48|0);
        HEAPF32[$arrayidx96$1>>2] = $add93$1;
        $73 = +HEAPF32[$arrayidx92$1>>2];
        $mul100$1 = $73 * 0.41421356797218323;
        $74 = +HEAPF32[$arrayidx88$1>>2];
        $sub104$1 = $mul100$1 - $74;
        $arrayidx107$1 = ((($mdct_enc$0183)) + 16|0);
        HEAPF32[$arrayidx107$1>>2] = $sub104$1;
        $arrayidx110$1 = ((($add$ptr41)) + 512|0);
        $75 = +HEAPF32[$arrayidx110$1>>2];
        $mul111$1 = $75 * 0.41421356797218323;
        $arrayidx114$1 = ((($add$ptr41)) + 128|0);
        $76 = +HEAPF32[$arrayidx114$1>>2];
        $add115$1 = $mul111$1 + $76;
        $arrayidx118$1 = ((($mdct_enc$0183)) + 52|0);
        HEAPF32[$arrayidx118$1>>2] = $add115$1;
        $77 = +HEAPF32[$arrayidx114$1>>2];
        $mul122$1 = $77 * 0.41421356797218323;
        $78 = +HEAPF32[$arrayidx110$1>>2];
        $sub126$1 = $mul122$1 - $78;
        $arrayidx129$1 = ((($mdct_enc$0183)) + 20|0);
        HEAPF32[$arrayidx129$1>>2] = $sub126$1;
        $arrayidx132$1 = ((($add$ptr41)) + 1280|0);
        $79 = +HEAPF32[$arrayidx132$1>>2];
        $mul133$1 = $79 * 0.41421356797218323;
        $arrayidx136$1 = ((($add$ptr41)) + 896|0);
        $80 = +HEAPF32[$arrayidx136$1>>2];
        $add137$1 = $mul133$1 + $80;
        $arrayidx140$1 = ((($mdct_enc$0183)) + 56|0);
        HEAPF32[$arrayidx140$1>>2] = $add137$1;
        $arrayidx77$2 = ((($add$ptr33)) + 1024|0);
        $81 = +HEAPF32[$arrayidx77$2>>2];
        $mul78$2 = $81 * 0.76732701063156128;
        $arrayidx81$2 = ((($add$ptr33)) + 1152|0);
        $82 = +HEAPF32[$arrayidx81$2>>2];
        $sub82$2 = $mul78$2 - $82;
        $arrayidx85$2 = ((($mdct_enc$0183)) + 24|0);
        HEAPF32[$arrayidx85$2>>2] = $sub82$2;
        $arrayidx88$2 = ((($add$ptr33)) + 1920|0);
        $83 = +HEAPF32[$arrayidx88$2>>2];
        $mul89$2 = $83 * 0.76732701063156128;
        $arrayidx92$2 = ((($add$ptr33)) + 1792|0);
        $84 = +HEAPF32[$arrayidx92$2>>2];
        $add93$2 = $mul89$2 + $84;
        $arrayidx96$2 = ((($mdct_enc$0183)) + 60|0);
        HEAPF32[$arrayidx96$2>>2] = $add93$2;
        $85 = +HEAPF32[$arrayidx92$2>>2];
        $mul100$2 = $85 * 0.76732701063156128;
        $86 = +HEAPF32[$arrayidx88$2>>2];
        $sub104$2 = $mul100$2 - $86;
        $arrayidx107$2 = ((($mdct_enc$0183)) + 28|0);
        HEAPF32[$arrayidx107$2>>2] = $sub104$2;
        $arrayidx110$2 = ((($add$ptr41)) + 384|0);
        $87 = +HEAPF32[$arrayidx110$2>>2];
        $mul111$2 = $87 * 0.76732701063156128;
        $arrayidx114$2 = ((($add$ptr41)) + 256|0);
        $88 = +HEAPF32[$arrayidx114$2>>2];
        $add115$2 = $mul111$2 + $88;
        $arrayidx118$2 = ((($mdct_enc$0183)) + 64|0);
        HEAPF32[$arrayidx118$2>>2] = $add115$2;
        $89 = +HEAPF32[$arrayidx114$2>>2];
        $mul122$2 = $89 * 0.76732701063156128;
        $90 = +HEAPF32[$arrayidx110$2>>2];
        $sub126$2 = $mul122$2 - $90;
        $arrayidx129$2 = ((($mdct_enc$0183)) + 32|0);
        HEAPF32[$arrayidx129$2>>2] = $sub126$2;
        $arrayidx132$2 = ((($add$ptr41)) + 1152|0);
        $91 = +HEAPF32[$arrayidx132$2>>2];
        $mul133$2 = $91 * 0.76732701063156128;
        $arrayidx136$2 = ((($add$ptr41)) + 1024|0);
        $92 = +HEAPF32[$arrayidx136$2>>2];
        $add137$2 = $mul133$2 + $92;
        $arrayidx140$2 = ((($mdct_enc$0183)) + 68|0);
        HEAPF32[$arrayidx140$2>>2] = $add137$2;
        $93 = $sub82$2;$94 = $add93$2;$97 = $sub82$1;$98 = $add93$1;$inout$addr$048$i = $mdct_enc$0183;$l$047$i = 0;
        while(1) {
         $arrayidx$i = ((($inout$addr$048$i)) + 24|0);
         $mul$i = $93 * 0.13165250420570374;
         $arrayidx1$i = ((($inout$addr$048$i)) + 60|0);
         $sub$i = $mul$i - $94;
         $95 = +HEAPF32[$inout$addr$048$i>>2];
         $mul3$i = $95 * 0.76732701063156128;
         $arrayidx4$i = ((($inout$addr$048$i)) + 36|0);
         $96 = +HEAPF32[$arrayidx4$i>>2];
         $sub5$i = $mul3$i - $96;
         $add$i = $sub5$i + $sub$i;
         $sub6$i = $sub$i - $sub5$i;
         $mul8$i = $94 * 0.13165250420570374;
         $add10$i = $mul8$i + $93;
         $mul12$i = $96 * 0.76732701063156128;
         $add14$i = $mul12$i + $95;
         $add15$i = $add14$i + $add10$i;
         $add17$i = $add14$i - $add10$i;
         $arrayidx18$i = ((($inout$addr$048$i)) + 12|0);
         $mul19$i = $97 * 0.41421356797218323;
         $arrayidx20$i = ((($inout$addr$048$i)) + 48|0);
         $sub21$i = $mul19$i - $98;
         $conv$i = $sub21$i;
         $mul22$i = $conv$i * 2.0699781119530891E-11;
         $conv23$i = $mul22$i;
         $mul25$i = $98 * 0.41421356797218323;
         $add27$i = $mul25$i + $97;
         $conv28$i = $add27$i;
         $mul29$i = $conv28$i * 2.0699781119530891E-11;
         $conv30$i = $mul29$i;
         $conv31$i = $add$i;
         $mul32$i = $conv31$i * 1.9075251917372799E-11;
         $conv33$i = $conv23$i;
         $add34$i = $conv33$i + $mul32$i;
         $conv35$i = $add34$i;
         HEAPF32[$inout$addr$048$i>>2] = $conv35$i;
         $sub37$i = -$add15$i;
         $conv38$i = $sub37$i;
         $mul39$i = $conv38$i * 1.9075251917372799E-11;
         $conv40$i = $conv30$i;
         $add41$i = $conv40$i + $mul39$i;
         $conv42$i = $add41$i;
         HEAPF32[$arrayidx1$i>>2] = $conv42$i;
         $conv44$i = $sub6$i;
         $mul46$i = $conv44$i * 1.6519652744032674E-11;
         $conv47$i = $mul46$i;
         $conv48$i = $add15$i;
         $mul50$i = $conv48$i * 9.5376259586864042E-12;
         $add52$i = $conv40$i + $mul50$i;
         $conv53$i = $add52$i;
         $sub54$i = $conv47$i - $conv53$i;
         HEAPF32[$arrayidx18$i>>2] = $sub54$i;
         $add56$i = $conv53$i + $conv47$i;
         HEAPF32[$arrayidx$i>>2] = $add56$i;
         $mul60$i = $conv31$i * 9.5376259586864042E-12;
         $sub62$i = $mul60$i - $conv33$i;
         $conv63$i = $sub62$i;
         $conv64$i = $add17$i;
         $mul66$i = $conv64$i * 1.6519652744032674E-11;
         $conv67$i = $mul66$i;
         $add68$i = $conv63$i + $conv67$i;
         HEAPF32[$arrayidx4$i>>2] = $add68$i;
         $sub70$i = $conv63$i - $conv67$i;
         HEAPF32[$arrayidx20$i>>2] = $sub70$i;
         $inc$i = (($l$047$i) + 1)|0;
         $exitcond$i = ($inc$i|0)==(3);
         if ($exitcond$i) {
          break L15;
         }
         $incdec$ptr$i = ((($inout$addr$048$i)) + 4|0);
         $arrayidx$i$phi$trans$insert = ((($inout$addr$048$i)) + 28|0);
         $$pre = +HEAPF32[$arrayidx$i$phi$trans$insert>>2];
         $arrayidx1$i$phi$trans$insert = ((($inout$addr$048$i)) + 64|0);
         $$pre198 = +HEAPF32[$arrayidx1$i$phi$trans$insert>>2];
         $arrayidx18$i$phi$trans$insert = ((($inout$addr$048$i)) + 16|0);
         $$pre199 = +HEAPF32[$arrayidx18$i$phi$trans$insert>>2];
         $arrayidx20$i$phi$trans$insert = ((($inout$addr$048$i)) + 52|0);
         $$pre200 = +HEAPF32[$arrayidx20$i$phi$trans$insert>>2];
         $93 = $$pre;$94 = $$pre198;$97 = $$pre199;$98 = $$pre200;$inout$addr$048$i = $incdec$ptr$i;$l$047$i = $inc$i;
        }
       } else {
        $k$3180 = -9;
        while(1) {
         $add150 = (($k$3180) + 27)|0;
         $arrayidx151 = ((1716 + (($$*144)|0)|0) + ($add150<<2)|0);
         $99 = +HEAPF32[$arrayidx151>>2];
         $add152 = (($k$3180) + 9)|0;
         $mul153 = $add152 << 5;
         $arrayidx154 = (($add$ptr41) + ($mul153<<2)|0);
         $100 = +HEAPF32[$arrayidx154>>2];
         $mul155 = $100 * $99;
         $add157 = (($k$3180) + 36)|0;
         $arrayidx158 = ((1716 + (($$*144)|0)|0) + ($add157<<2)|0);
         $101 = +HEAPF32[$arrayidx158>>2];
         $sub159 = (8 - ($k$3180))|0;
         $mul160 = $sub159 << 5;
         $arrayidx161 = (($add$ptr41) + ($mul160<<2)|0);
         $102 = +HEAPF32[$arrayidx161>>2];
         $mul162 = $102 * $101;
         $add163 = $mul162 + $mul155;
         $arrayidx166 = ((1716 + (($$*144)|0)|0) + ($add152<<2)|0);
         $103 = +HEAPF32[$arrayidx166>>2];
         $arrayidx169 = (($add$ptr33) + ($mul153<<2)|0);
         $104 = +HEAPF32[$arrayidx169>>2];
         $mul170 = $104 * $103;
         $add172 = (($k$3180) + 18)|0;
         $arrayidx173 = ((1716 + (($$*144)|0)|0) + ($add172<<2)|0);
         $105 = +HEAPF32[$arrayidx173>>2];
         $arrayidx176 = (($add$ptr33) + ($mul160<<2)|0);
         $106 = +HEAPF32[$arrayidx176>>2];
         $mul177 = $106 * $105;
         $sub178 = $mul170 - $mul177;
         $arrayidx180 = ((2016) + ($add152<<2)|0);
         $107 = +HEAPF32[$arrayidx180>>2];
         $mul181 = $sub178 * $107;
         $sub182 = $add163 - $mul181;
         $arrayidx184 = (($work) + ($add152<<2)|0);
         HEAPF32[$arrayidx184>>2] = $sub182;
         $mul187 = $107 * $add163;
         $add188 = $mul187 + $sub178;
         $arrayidx190 = (($work) + ($add172<<2)|0);
         HEAPF32[$arrayidx190>>2] = $add188;
         $inc192 = (($k$3180) + 1)|0;
         $exitcond195 = ($inc192|0)==(0);
         if ($exitcond195) {
          break;
         } else {
          $k$3180 = $inc192;
         }
        }
        $108 = +HEAPF32[$arrayidx$i154>>2];
        $109 = +HEAPF32[$arrayidx1$i155>>2];
        $sub$i156 = $108 - $109;
        $110 = +HEAPF32[$arrayidx2$i>>2];
        $111 = +HEAPF32[$arrayidx3$i>>2];
        $sub4$i = $110 - $111;
        $112 = +HEAPF32[$arrayidx5$i>>2];
        $113 = +HEAPF32[$arrayidx6$i>>2];
        $sub7$i = $112 - $113;
        $114 = +HEAPF32[$work>>2];
        $115 = +HEAPF32[$arrayidx9$i>>2];
        $add$i157 = $115 + $114;
        $116 = +HEAPF32[$arrayidx10$i>>2];
        $117 = +HEAPF32[$arrayidx11$i>>2];
        $add12$i = $117 + $116;
        $118 = +HEAPF32[$arrayidx13$i>>2];
        $119 = +HEAPF32[$arrayidx14$i>>2];
        $add15$i158 = $119 + $118;
        $120 = +HEAPF32[$arrayidx16$i>>2];
        $121 = +HEAPF32[$arrayidx17$i>>2];
        $add18$i = $121 + $120;
        $add19$i = $add15$i158 + $add$i157;
        $sub20$i = $add19$i - $add18$i;
        $122 = +HEAPF32[$arrayidx21$i>>2];
        $sub22$neg$i = $122 - $add12$i;
        $sub23$i = $sub22$neg$i + $sub20$i;
        $arrayidx24$i = ((($mdct_enc$0183)) + 68|0);
        HEAPF32[$arrayidx24$i>>2] = $sub23$i;
        $mul$i159 = $sub20$i * 0.5;
        $sub28$i = $add12$i - $122;
        $add29$i = $mul$i159 + $sub28$i;
        $sub30$i = $sub$i156 - $sub4$i;
        $sub31$i = $sub30$i - $sub7$i;
        $mul32$i160 = $sub31$i * 0.86602538824081421;
        $add33$i = $add29$i + $mul32$i160;
        $arrayidx34$i = ((($mdct_enc$0183)) + 20|0);
        HEAPF32[$arrayidx34$i>>2] = $add33$i;
        $sub35$i = $mul32$i160 - $add29$i;
        $arrayidx36$i = ((($mdct_enc$0183)) + 24|0);
        HEAPF32[$arrayidx36$i>>2] = $sub35$i;
        $123 = +HEAPF32[$arrayidx37$i>>2];
        $124 = +HEAPF32[$arrayidx38$i>>2];
        $sub39$i = $123 - $124;
        $mul40$i = $sub39$i * 0.86602538824081421;
        $mul41$i = $add12$i * 0.5;
        $add43$i = $122 + $mul41$i;
        $mul44$i = $sub$i156 * 0.98480772972106933;
        $mul46$i161 = $sub4$i * 0.6427876353263855;
        $mul48$i = $sub7$i * 0.34202015399932861;
        $add45$i = $mul46$i161 + $mul44$i;
        $add47$i = $add45$i + $mul48$i;
        $add49$i = $add47$i + $mul40$i;
        $mul51$i = $add$i157 * 0.1736481785774231;
        $mul53$i = $add15$i158 * 0.76604443788528442;
        $mul55$i = $add18$i * 0.93969261646270751;
        $add52$i162 = $mul53$i + $mul51$i;
        $sub54159$i = $add52$i162 + $mul55$i;
        $add56$i163 = $sub54159$i + $add43$i;
        $add57$i = $add49$i + $add56$i163;
        $arrayidx58$i = ((($mdct_enc$0183)) + 4|0);
        HEAPF32[$arrayidx58$i>>2] = $add57$i;
        $sub59$i = $add49$i - $add56$i163;
        $arrayidx60$i = ((($mdct_enc$0183)) + 8|0);
        HEAPF32[$arrayidx60$i>>2] = $sub59$i;
        $mul61$i = $sub$i156 * 0.6427876353263855;
        $mul65$i = $sub7$i * 0.98480772972106933;
        $mul63$neg$i$neg = $sub4$i * -0.34202015399932861;
        $sub62$i164165 = $mul63$neg$i$neg + $mul61$i;
        $sub64$i = $sub62$i164165 + $mul65$i;
        $add66$i = $sub64$i - $mul40$i;
        $mul68$i = $add$i157 * 0.76604443788528442;
        $add69$i = $mul68$i + $add43$i;
        $mul70$neg$i = $add15$i158 * 0.93969261646270751;
        $sub71$i166 = $add69$i - $mul70$neg$i;
        $mul72$i$neg = $add18$i * -0.1736481785774231;
        $add73160$i = $sub71$i166 + $mul72$i$neg;
        $add74$i = $add73160$i + $add66$i;
        $arrayidx75$i = ((($mdct_enc$0183)) + 36|0);
        HEAPF32[$arrayidx75$i>>2] = $add74$i;
        $sub76$i = $add66$i - $add73160$i;
        $arrayidx77$i = ((($mdct_enc$0183)) + 40|0);
        HEAPF32[$arrayidx77$i>>2] = $sub76$i;
        $mul78$i = $sub$i156 * 0.34202015399932861;
        $mul80$i = $sub4$i * 0.98480772972106933;
        $mul82$neg$i = $sub7$i * 0.6427876353263855;
        $sub79$i = $mul78$i + $mul80$i;
        $add81$i167 = $sub79$i - $mul82$neg$i;
        $sub83$i = $add81$i167 - $mul40$i;
        $mul84$i = $add$i157 * 0.93969261646270751;
        $mul88$i = $add18$i * 0.76604443788528442;
        $mul86$neg$i$neg = $add15$i158 * -0.1736481785774231;
        $sub85$i168 = $mul86$neg$i$neg + $mul84$i;
        $add87161$i = $sub85$i168 + $mul88$i;
        $sub89162$i = $add87161$i - $add43$i;
        $add90$i = $sub83$i + $sub89162$i;
        $arrayidx91$i = ((($mdct_enc$0183)) + 52|0);
        HEAPF32[$arrayidx91$i>>2] = $add90$i;
        $sub92$i = $sub83$i - $sub89162$i;
        $arrayidx93$i = ((($mdct_enc$0183)) + 56|0);
        HEAPF32[$arrayidx93$i>>2] = $sub92$i;
        $125 = +HEAPF32[$arrayidx9$i>>2];
        $sub96$i = $125 - $114;
        $126 = +HEAPF32[$arrayidx14$i>>2];
        $127 = +HEAPF32[$arrayidx13$i>>2];
        $sub99$i = $126 - $127;
        $128 = +HEAPF32[$arrayidx17$i>>2];
        $129 = +HEAPF32[$arrayidx16$i>>2];
        $sub102$i = $128 - $129;
        $130 = +HEAPF32[$arrayidx$i154>>2];
        $131 = +HEAPF32[$arrayidx1$i155>>2];
        $add105$i = $131 + $130;
        $132 = +HEAPF32[$arrayidx37$i>>2];
        $133 = +HEAPF32[$arrayidx38$i>>2];
        $add108$i = $133 + $132;
        $134 = +HEAPF32[$arrayidx2$i>>2];
        $135 = +HEAPF32[$arrayidx3$i>>2];
        $add111$i = $135 + $134;
        $136 = +HEAPF32[$arrayidx5$i>>2];
        $137 = +HEAPF32[$arrayidx6$i>>2];
        $add114$i = $137 + $136;
        $add115$i = $add111$i + $add105$i;
        $add116$i = $add115$i + $add114$i;
        $138 = +HEAPF32[$arrayidx117$i>>2];
        $add118$i = $138 + $add108$i;
        $add119$i = $add118$i + $add116$i;
        HEAPF32[$mdct_enc$0183>>2] = $add119$i;
        $mul123$i = $add116$i * 0.5;
        $add108$neg$i = -$add108$i;
        $add125$neg$i = $add108$neg$i - $138;
        $sub126$i = $add125$neg$i + $mul123$i;
        $sub127$i = $sub96$i - $sub99$i;
        $add128$i = $sub127$i + $sub102$i;
        $mul129$i = $add128$i * 0.86602538824081421;
        $add130$i = $sub126$i + $mul129$i;
        $arrayidx131$i = ((($mdct_enc$0183)) + 44|0);
        HEAPF32[$arrayidx131$i>>2] = $add130$i;
        $sub132$i = $sub126$i - $mul129$i;
        $arrayidx133$i = ((($mdct_enc$0183)) + 48|0);
        HEAPF32[$arrayidx133$i>>2] = $sub132$i;
        $139 = +HEAPF32[$arrayidx11$i>>2];
        $140 = +HEAPF32[$arrayidx10$i>>2];
        $sub136$i = $139 - $140;
        $mul137$i = $sub136$i * 0.86602538824081421;
        $141 = +HEAPF32[$arrayidx117$i>>2];
        $mul139$i = $add108$i * 0.5;
        $sub140$i = $141 - $mul139$i;
        $mul141$i = $add105$i * 0.93969261646270751;
        $sub142$i = $mul141$i - $sub140$i;
        $mul143$i$neg = $add111$i * -0.1736481785774231;
        $add144164$i = $mul143$i$neg + $sub142$i;
        $mul145$neg$i = $add114$i * 0.76604443788528442;
        $add146165$i169 = $add144164$i - $mul145$neg$i;
        $mul147$i = $sub96$i * 0.34202015399932861;
        $mul149$i = $sub99$i * 0.98480772972106933;
        $mul151$i = $sub102$i * 0.6427876353263855;
        $add148$i = $mul149$i + $mul147$i;
        $add150$i = $add148$i + $mul151$i;
        $add152$i = $add150$i + $mul137$i;
        $add153$i = $add146165$i169 + $add152$i;
        $arrayidx154$i = ((($mdct_enc$0183)) + 12|0);
        HEAPF32[$arrayidx154$i>>2] = $add153$i;
        $sub155$i = $add146165$i169 - $add152$i;
        $arrayidx156$i = ((($mdct_enc$0183)) + 16|0);
        HEAPF32[$arrayidx156$i>>2] = $sub155$i;
        $mul158$i = $add105$i * 0.76604443788528442;
        $mul162$i = $add114$i * 0.1736481785774231;
        $mul160$neg$i$neg = $add111$i * -0.93969261646270751;
        $add159$i170 = $mul160$neg$i$neg + $mul158$i;
        $sub161$i = $add159$i170 + $mul162$i;
        $sub163166$i = $sub161$i + $sub140$i;
        $mul164$i = $sub96$i * 0.6427876353263855;
        $mul168$neg$i = $sub102$i * 0.98480772972106933;
        $mul166$neg$i$neg = $sub99$i * -0.34202015399932861;
        $add165$i171 = $mul164$i + $mul166$neg$i$neg;
        $sub167$i172 = $add165$i171 - $mul168$neg$i;
        $sub169$i = $mul137$i + $sub167$i172;
        $add170$i = $sub163166$i + $sub169$i;
        $arrayidx171$i = ((($mdct_enc$0183)) + 28|0);
        HEAPF32[$arrayidx171$i>>2] = $add170$i;
        $sub172$i = $sub163166$i - $sub169$i;
        $arrayidx173$i = ((($mdct_enc$0183)) + 32|0);
        HEAPF32[$arrayidx173$i>>2] = $sub172$i;
        $mul175$i = $add105$i * 0.1736481785774231;
        $mul177$i = $add111$i * 0.76604443788528442;
        $mul179$neg$i = $add114$i * 0.93969261646270751;
        $add176$i = $mul175$i + $mul177$i;
        $sub178167$i173 = $add176$i - $mul179$neg$i;
        $sub180$i = $sub140$i + $sub178167$i173;
        $mul181$i = $sub96$i * 0.98480772972106933;
        $mul183$i = $sub99$i * 0.6427876353263855;
        $mul185$neg$i = $sub102$i * 0.34202015399932861;
        $sub182$i = $mul181$i + $mul183$i;
        $add184$i174 = $sub182$i - $mul185$neg$i;
        $sub186$i = $add184$i174 - $mul137$i;
        $add187$i = $sub180$i + $sub186$i;
        $arrayidx188$i = ((($mdct_enc$0183)) + 60|0);
        HEAPF32[$arrayidx188$i>>2] = $add187$i;
        $sub189$i = $sub180$i - $sub186$i;
        $arrayidx190$i = ((($mdct_enc$0183)) + 64|0);
        HEAPF32[$arrayidx190$i>>2] = $sub189$i;
        break;
       }
      }
     } while(0);
     $cmp197 = ($$|0)!=(2);
     $cmp200 = ($band$1185|0)!=(0);
     $or$cond1 = $cmp200 & $cmp197;
     if ($or$cond1) {
      $arrayidx207 = ((($mdct_enc$0183)) + 28|0);
      $142 = +HEAPF32[$arrayidx207>>2];
      $mul209 = $142 * -0.0036999746225774288;
      $arrayidx211 = ((($mdct_enc$0183)) + -32|0);
      $143 = +HEAPF32[$arrayidx211>>2];
      $mul213 = $143 * 0.99999314546585083;
      $add214 = $mul213 + $mul209;
      $mul217 = $142 * 0.99999314546585083;
      $mul221 = $143 * -0.0036999746225774288;
      $sub222 = $mul217 - $mul221;
      HEAPF32[$arrayidx211>>2] = $add214;
      HEAPF32[$arrayidx207>>2] = $sub222;
      $arrayidx207$1 = ((($mdct_enc$0183)) + 24|0);
      $144 = +HEAPF32[$arrayidx207$1>>2];
      $mul209$1 = $144 * -0.014198568649590015;
      $arrayidx211$1 = ((($mdct_enc$0183)) + -28|0);
      $145 = +HEAPF32[$arrayidx211$1>>2];
      $mul213$1 = $145 * 0.99989920854568481;
      $add214$1 = $mul213$1 + $mul209$1;
      $mul217$1 = $144 * 0.99989920854568481;
      $mul221$1 = $145 * -0.014198568649590015;
      $sub222$1 = $mul217$1 - $mul221$1;
      HEAPF32[$arrayidx211$1>>2] = $add214$1;
      HEAPF32[$arrayidx207$1>>2] = $sub222$1;
      $arrayidx207$2 = ((($mdct_enc$0183)) + 20|0);
      $146 = +HEAPF32[$arrayidx207$2>>2];
      $mul209$2 = $146 * -0.040965583175420761;
      $arrayidx211$2 = ((($mdct_enc$0183)) + -24|0);
      $147 = +HEAPF32[$arrayidx211$2>>2];
      $mul213$2 = $147 * 0.99916058778762817;
      $add214$2 = $mul213$2 + $mul209$2;
      $mul217$2 = $146 * 0.99916058778762817;
      $mul221$2 = $147 * -0.040965583175420761;
      $sub222$2 = $mul217$2 - $mul221$2;
      HEAPF32[$arrayidx211$2>>2] = $add214$2;
      HEAPF32[$arrayidx207$2>>2] = $sub222$2;
      $arrayidx207$3 = ((($mdct_enc$0183)) + 16|0);
      $148 = +HEAPF32[$arrayidx207$3>>2];
      $mul209$3 = $148 * -0.09457419067621231;
      $arrayidx211$3 = ((($mdct_enc$0183)) + -20|0);
      $149 = +HEAPF32[$arrayidx211$3>>2];
      $mul213$3 = $149 * 0.9955177903175354;
      $add214$3 = $mul213$3 + $mul209$3;
      $mul217$3 = $148 * 0.9955177903175354;
      $mul221$3 = $149 * -0.09457419067621231;
      $sub222$3 = $mul217$3 - $mul221$3;
      HEAPF32[$arrayidx211$3>>2] = $add214$3;
      HEAPF32[$arrayidx207$3>>2] = $sub222$3;
      $arrayidx207$4 = ((($mdct_enc$0183)) + 12|0);
      $150 = +HEAPF32[$arrayidx207$4>>2];
      $mul209$4 = $150 * -0.18191319704055786;
      $arrayidx211$4 = ((($mdct_enc$0183)) + -16|0);
      $151 = +HEAPF32[$arrayidx211$4>>2];
      $mul213$4 = $151 * 0.98331457376480103;
      $add214$4 = $mul213$4 + $mul209$4;
      $mul217$4 = $150 * 0.98331457376480103;
      $mul221$4 = $151 * -0.18191319704055786;
      $sub222$4 = $mul217$4 - $mul221$4;
      HEAPF32[$arrayidx211$4>>2] = $add214$4;
      HEAPF32[$arrayidx207$4>>2] = $sub222$4;
      $arrayidx207$5 = ((($mdct_enc$0183)) + 8|0);
      $152 = +HEAPF32[$arrayidx207$5>>2];
      $mul209$5 = $152 * -0.31337743997573853;
      $arrayidx211$5 = ((($mdct_enc$0183)) + -12|0);
      $153 = +HEAPF32[$arrayidx211$5>>2];
      $mul213$5 = $153 * 0.94962865114212036;
      $add214$5 = $mul213$5 + $mul209$5;
      $mul217$5 = $152 * 0.94962865114212036;
      $mul221$5 = $153 * -0.31337743997573853;
      $sub222$5 = $mul217$5 - $mul221$5;
      HEAPF32[$arrayidx211$5>>2] = $add214$5;
      HEAPF32[$arrayidx207$5>>2] = $sub222$5;
      $arrayidx207$6 = ((($mdct_enc$0183)) + 4|0);
      $154 = +HEAPF32[$arrayidx207$6>>2];
      $mul209$6 = $154 * -0.47173196077346802;
      $arrayidx211$6 = ((($mdct_enc$0183)) + -8|0);
      $155 = +HEAPF32[$arrayidx211$6>>2];
      $mul213$6 = $155 * 0.88174200057983398;
      $add214$6 = $mul213$6 + $mul209$6;
      $mul217$6 = $154 * 0.88174200057983398;
      $mul221$6 = $155 * -0.47173196077346802;
      $sub222$6 = $mul217$6 - $mul221$6;
      HEAPF32[$arrayidx211$6>>2] = $add214$6;
      HEAPF32[$arrayidx207$6>>2] = $sub222$6;
      $156 = +HEAPF32[$mdct_enc$0183>>2];
      $mul209$7 = $156 * -0.51449573040008545;
      $arrayidx211$7 = ((($mdct_enc$0183)) + -4|0);
      $157 = +HEAPF32[$arrayidx211$7>>2];
      $mul213$7 = $157 * 0.85749292373657227;
      $add214$7 = $mul213$7 + $mul209$7;
      $mul217$7 = $156 * 0.85749292373657227;
      $mul221$7 = $157 * -0.51449573040008545;
      $sub222$7 = $mul217$7 - $mul221$7;
      HEAPF32[$arrayidx211$7>>2] = $add214$7;
      HEAPF32[$mdct_enc$0183>>2] = $sub222$7;
     }
     $inc230 = (($band$1185) + 1)|0;
     $add$ptr231 = ((($mdct_enc$0183)) + 72|0);
     $exitcond197 = ($inc230|0)==(32);
     if ($exitcond197) {
      break;
     } else {
      $band$1185 = $inc230;$mdct_enc$0183 = $add$ptr231;
     }
    }
    $scevgep = ((($wk$1187)) + 2304|0);
    $inc234 = (($gr$0188) + 1)|0;
    $158 = HEAP32[$mode_gr>>2]|0;
    $cmp3 = ($inc234|0)<($158|0);
    if ($cmp3) {
     $gr$0188 = $inc234;$wk$1187 = $scevgep;
    } else {
     break;
    }
   }
   $cmp238 = ($158|0)==(1);
   if ($cmp238) {
    $arraydecay248 = (((((($gfc)) + 27824|0) + (($ch$0191*4608)|0)|0)) + 2304|0);
    $arrayidx242 = (((($gfc)) + 27824|0) + (($ch$0191*4608)|0)|0);
    _memcpy(($arrayidx242|0),($arraydecay248|0),2304)|0;
   }
  }
  $inc251 = (($ch$0191) + 1)|0;
  $159 = HEAP32[$channels_out>>2]|0;
  $cmp = ($inc251|0)<($159|0);
  if ($cmp) {
   $ch$0191 = $inc251;$w0$pn190 = $w1;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function _window_subband($x1,$a) {
 $x1 = $x1|0;
 $a = $a|0;
 var $0 = 0, $1 = 0.0, $10 = 0.0, $100 = 0.0, $101 = 0.0, $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0.0, $106 = 0.0, $107 = 0.0, $108 = 0.0, $109 = 0.0, $11 = 0, $110 = 0.0, $111 = 0.0, $112 = 0.0, $113 = 0.0, $114 = 0.0, $115 = 0.0;
 var $116 = 0.0, $117 = 0.0, $118 = 0.0, $119 = 0.0, $12 = 0.0, $120 = 0.0, $121 = 0.0, $122 = 0.0, $123 = 0.0, $124 = 0.0, $125 = 0.0, $126 = 0.0, $127 = 0.0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0.0, $131 = 0.0, $132 = 0.0, $133 = 0.0;
 var $134 = 0.0, $135 = 0.0, $136 = 0.0, $137 = 0.0, $138 = 0.0, $139 = 0.0, $14 = 0.0, $140 = 0.0, $141 = 0.0, $142 = 0.0, $143 = 0.0, $144 = 0.0, $145 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0.0, $149 = 0.0, $15 = 0, $150 = 0.0, $151 = 0.0;
 var $152 = 0.0, $153 = 0.0, $154 = 0.0, $155 = 0.0, $156 = 0.0, $157 = 0.0, $158 = 0.0, $159 = 0.0, $16 = 0.0, $160 = 0.0, $161 = 0.0, $162 = 0.0, $163 = 0.0, $164 = 0.0, $165 = 0.0, $166 = 0.0, $167 = 0.0, $168 = 0.0, $17 = 0, $18 = 0.0;
 var $19 = 0, $2 = 0, $20 = 0.0, $21 = 0, $22 = 0.0, $23 = 0, $24 = 0.0, $25 = 0, $26 = 0.0, $27 = 0, $28 = 0.0, $29 = 0, $3 = 0.0, $30 = 0.0, $31 = 0, $32 = 0.0, $33 = 0, $34 = 0.0, $35 = 0, $36 = 0.0;
 var $37 = 0, $38 = 0.0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0.0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0;
 var $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $6 = 0.0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0.0, $71 = 0.0, $72 = 0.0;
 var $73 = 0.0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0.0, $80 = 0.0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0.0;
 var $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $add = 0.0, $add$ptr = 0, $add104 = 0.0, $add111 = 0.0, $add113 = 0, $add118 = 0, $add134 = 0.0, $add14 = 0.0, $add141 = 0.0, $add144 = 0.0, $add148 = 0.0;
 var $add154 = 0.0, $add158 = 0.0, $add161 = 0.0, $add164 = 0.0, $add174 = 0.0, $add181 = 0.0, $add184 = 0.0, $add194 = 0.0, $add198 = 0.0, $add202 = 0.0, $add204 = 0.0, $add21 = 0.0, $add215 = 0.0, $add224 = 0.0, $add233 = 0.0, $add242 = 0.0, $add251 = 0.0, $add260 = 0.0, $add269 = 0.0, $add278 = 0.0;
 var $add28 = 0.0, $add300 = 0.0, $add307 = 0.0, $add314 = 0.0, $add321 = 0.0, $add328 = 0.0, $add337 = 0.0, $add346 = 0.0, $add35 = 0.0, $add355 = 0.0, $add364 = 0.0, $add373 = 0.0, $add38 = 0.0, $add380 = 0.0, $add383 = 0.0, $add390 = 0.0, $add393 = 0.0, $add402 = 0.0, $add411 = 0.0, $add42 = 0.0;
 var $add420 = 0.0, $add429 = 0.0, $add438 = 0.0, $add445 = 0.0, $add448 = 0.0, $add45 = 0.0, $add460 = 0.0, $add470 = 0.0, $add475 = 0.0, $add481 = 0.0, $add488 = 0.0, $add49 = 0.0, $add494 = 0.0, $add508 = 0.0, $add519 = 0.0, $add52 = 0.0, $add530 = 0.0, $add538 = 0.0, $add546 = 0.0, $add554 = 0.0;
 var $add56 = 0.0, $add562 = 0.0, $add568 = 0.0, $add577 = 0.0, $add587 = 0.0, $add597 = 0.0, $add607 = 0.0, $add617 = 0.0, $add62 = 0.0, $add629 = 0.0, $add641 = 0.0, $add647 = 0.0, $add69 = 0.0, $add748 = 0.0, $add754 = 0.0, $add76 = 0.0, $add760 = 0.0, $add766 = 0.0, $add772 = 0.0, $add778 = 0.0;
 var $add784 = 0.0, $add790 = 0.0, $add796 = 0.0, $add802 = 0.0, $add808 = 0.0, $add814 = 0.0, $add820 = 0.0, $add826 = 0.0, $add83 = 0.0, $add832 = 0.0, $add838 = 0.0, $add90 = 0.0, $add97 = 0.0, $arrayidx = 0, $arrayidx101 = 0, $arrayidx102 = 0, $arrayidx105 = 0, $arrayidx108 = 0, $arrayidx114 = 0, $arrayidx115 = 0;
 var $arrayidx119 = 0, $arrayidx12 = 0, $arrayidx123 = 0, $arrayidx129 = 0, $arrayidx130 = 0, $arrayidx139 = 0, $arrayidx140 = 0, $arrayidx149 = 0, $arrayidx150 = 0, $arrayidx159 = 0, $arrayidx160 = 0, $arrayidx169 = 0, $arrayidx170 = 0, $arrayidx179 = 0, $arrayidx180 = 0, $arrayidx189 = 0, $arrayidx19 = 0, $arrayidx190 = 0, $arrayidx199 = 0, $arrayidx2 = 0;
 var $arrayidx200 = 0, $arrayidx203 = 0, $arrayidx205 = 0, $arrayidx210 = 0, $arrayidx219 = 0, $arrayidx220 = 0, $arrayidx228 = 0, $arrayidx229 = 0, $arrayidx237 = 0, $arrayidx238 = 0, $arrayidx246 = 0, $arrayidx247 = 0, $arrayidx255 = 0, $arrayidx256 = 0, $arrayidx26 = 0, $arrayidx264 = 0, $arrayidx265 = 0, $arrayidx273 = 0, $arrayidx274 = 0, $arrayidx323 = 0;
 var $arrayidx324 = 0, $arrayidx33 = 0, $arrayidx332 = 0, $arrayidx333 = 0, $arrayidx341 = 0, $arrayidx342 = 0, $arrayidx350 = 0, $arrayidx351 = 0, $arrayidx359 = 0, $arrayidx360 = 0, $arrayidx368 = 0, $arrayidx369 = 0, $arrayidx40 = 0, $arrayidx47 = 0, $arrayidx54 = 0, $arrayidx57 = 0, $arrayidx6 = 0, $arrayidx60 = 0, $arrayidx63 = 0, $arrayidx67 = 0;
 var $arrayidx70 = 0, $arrayidx74 = 0, $arrayidx77 = 0, $arrayidx87 = 0, $arrayidx88 = 0, $arrayidx91 = 0, $arrayidx94 = 0, $arrayidx95 = 0, $arrayidx98 = 0, $conv = 0.0, $conv271 = 0.0, $conv279 = 0.0, $conv282 = 0.0, $conv284 = 0.0, $conv455 = 0.0, $conv457 = 0.0, $conv465 = 0.0, $conv467 = 0.0, $conv476 = 0.0, $conv478 = 0.0;
 var $conv489 = 0.0, $conv491 = 0.0, $conv572 = 0.0, $conv574 = 0.0, $conv582 = 0.0, $conv584 = 0.0, $conv592 = 0.0, $conv594 = 0.0, $conv602 = 0.0, $conv604 = 0.0, $conv612 = 0.0, $conv614 = 0.0, $conv624 = 0.0, $conv626 = 0.0, $conv636 = 0.0, $conv638 = 0.0, $conv648 = 0.0, $conv650 = 0.0, $exitcond = 0, $i$0 = 0;
 var $inc = 0, $incdec$ptr = 0, $incdec$ptr120 = 0, $mul = 0.0, $mul103 = 0.0, $mul106$neg = 0.0, $mul109 = 0.0, $mul112 = 0, $mul116 = 0.0, $mul125 = 0.0, $mul128 = 0.0, $mul13 = 0.0, $mul133 = 0.0, $mul137 = 0.0, $mul143 = 0.0, $mul147 = 0.0, $mul153 = 0.0, $mul157 = 0.0, $mul16 = 0.0, $mul163 = 0.0;
 var $mul167 = 0.0, $mul173 = 0.0, $mul177$neg = 0.0, $mul183 = 0.0, $mul187$neg = 0.0, $mul193 = 0.0, $mul20 = 0.0, $mul217 = 0.0, $mul226 = 0.0, $mul23 = 0.0, $mul235 = 0.0, $mul244 = 0.0, $mul253 = 0.0, $mul262 = 0.0, $mul27 = 0.0, $mul270 = 0.0, $mul280 = 0.0, $mul30 = 0.0, $mul330 = 0.0, $mul339 = 0.0;
 var $mul34 = 0.0, $mul348 = 0.0, $mul357 = 0.0, $mul366 = 0.0, $mul37 = 0.0, $mul375 = 0.0, $mul385 = 0.0, $mul395 = 0.0, $mul4 = 0.0, $mul404 = 0.0, $mul41 = 0.0, $mul413 = 0.0, $mul422 = 0.0, $mul431 = 0.0, $mul44 = 0.0, $mul440 = 0.0, $mul450 = 0.0, $mul456 = 0.0, $mul466 = 0.0, $mul477 = 0.0;
 var $mul48 = 0.0, $mul490 = 0.0, $mul51 = 0.0, $mul55 = 0.0, $mul573 = 0.0, $mul58$neg = 0.0, $mul583 = 0.0, $mul593 = 0.0, $mul603 = 0.0, $mul61 = 0.0, $mul613 = 0.0, $mul625 = 0.0, $mul637 = 0.0, $mul64$neg = 0.0, $mul649 = 0.0, $mul68 = 0.0, $mul7 = 0.0, $mul71$neg = 0.0, $mul75 = 0.0, $mul78$neg = 0.0;
 var $mul82 = 0.0, $mul85$neg = 0.0, $mul89 = 0.0, $mul9 = 0.0, $mul92$neg = 0.0, $mul96 = 0.0, $mul99$neg = 0.0, $sub = 0.0, $sub100730 = 0.0, $sub107727 = 0.0, $sub110 = 0.0, $sub131 = 0.0, $sub151 = 0.0, $sub168 = 0.0, $sub171 = 0.0, $sub178 = 0.0, $sub188 = 0.0, $sub191 = 0.0, $sub196724 = 0.0, $sub197 = 0.0;
 var $sub201 = 0.0, $sub206 = 0.0, $sub208 = 0.0, $sub212 = 0.0, $sub221 = 0.0, $sub230 = 0.0, $sub239 = 0.0, $sub248 = 0.0, $sub257 = 0.0, $sub266 = 0.0, $sub275 = 0.0, $sub283 = 0.0, $sub288 = 0.0, $sub291 = 0.0, $sub294 = 0.0, $sub297 = 0.0, $sub304 = 0.0, $sub311 = 0.0, $sub318 = 0.0, $sub325 = 0.0;
 var $sub334 = 0.0, $sub343 = 0.0, $sub352 = 0.0, $sub361 = 0.0, $sub370 = 0.0, $sub399 = 0.0, $sub408 = 0.0, $sub417 = 0.0, $sub426 = 0.0, $sub435 = 0.0, $sub454 = 0.0, $sub464 = 0.0, $sub483 = 0.0, $sub496 = 0.0, $sub501 = 0.0, $sub503 = 0.0, $sub505 = 0.0, $sub512 = 0.0, $sub514 = 0.0, $sub516 = 0.0;
 var $sub523 = 0.0, $sub525 = 0.0, $sub527 = 0.0, $sub533 = 0.0, $sub535 = 0.0, $sub541 = 0.0, $sub543 = 0.0, $sub549 = 0.0, $sub551 = 0.0, $sub557 = 0.0, $sub559 = 0.0, $sub565 = 0.0, $sub571 = 0.0, $sub581 = 0.0, $sub591 = 0.0, $sub601 = 0.0, $sub611 = 0.0, $sub619 = 0.0, $sub623 = 0.0, $sub631 = 0.0;
 var $sub635 = 0.0, $sub643 = 0.0, $sub65 = 0.0, $sub653 = 0.0, $sub655 = 0.0, $sub659 = 0.0, $sub662 = 0.0, $sub665 = 0.0, $sub669 = 0.0, $sub672 = 0.0, $sub675 = 0.0, $sub679 = 0.0, $sub682 = 0.0, $sub685 = 0.0, $sub688 = 0.0, $sub691 = 0.0, $sub694 = 0.0, $sub697 = 0.0, $sub701 = 0.0, $sub704 = 0.0;
 var $sub707 = 0.0, $sub710 = 0.0, $sub713 = 0.0, $sub716 = 0.0, $sub719 = 0.0, $sub72 = 0.0, $sub722 = 0.0, $sub725 = 0.0, $sub728 = 0.0, $sub731 = 0.0, $sub734 = 0.0, $sub737 = 0.0, $sub740 = 0.0, $sub743 = 0.0, $sub750 = 0.0, $sub756 = 0.0, $sub762 = 0.0, $sub768 = 0.0, $sub774 = 0.0, $sub780 = 0.0;
 var $sub786 = 0.0, $sub79 = 0.0, $sub792 = 0.0, $sub798 = 0.0, $sub804 = 0.0, $sub810 = 0.0, $sub816 = 0.0, $sub822 = 0.0, $sub828 = 0.0, $sub834 = 0.0, $sub840 = 0.0, $sub86736 = 0.0, $sub93733 = 0.0, $tmp = 0.0, $tmp725 = 0.0, $tmp728 = 0.0, $tmp731 = 0.0, $tmp734 = 0.0, $wp$0 = 0, $x1$addr$0 = 0;
 var $x2$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $arrayidx = ((($x1)) + -248|0);
 $i$0 = -15;$wp$0 = (2332);$x1$addr$0 = $x1;$x2$0 = $arrayidx;
 while(1) {
  $0 = ((($wp$0)) + -40|0);
  $1 = +HEAPF32[$0>>2];
  $2 = ((($wp$0)) + -36|0);
  $3 = +HEAPF32[$2>>2];
  $4 = ((($x1$addr$0)) + 384|0);
  $5 = +HEAPF32[$4>>2];
  $6 = +HEAPF32[$wp$0>>2];
  $7 = ((($wp$0)) + -8|0);
  $8 = +HEAPF32[$7>>2];
  $9 = ((($x1$addr$0)) + 640|0);
  $10 = +HEAPF32[$9>>2];
  $11 = ((($wp$0)) + -4|0);
  $12 = +HEAPF32[$11>>2];
  $13 = ((($wp$0)) + -16|0);
  $14 = +HEAPF32[$13>>2];
  $15 = ((($x1$addr$0)) + -896|0);
  $16 = +HEAPF32[$15>>2];
  $17 = ((($x1$addr$0)) + 128|0);
  $18 = +HEAPF32[$17>>2];
  $19 = ((($wp$0)) + -32|0);
  $20 = +HEAPF32[$19>>2];
  $21 = ((($x1$addr$0)) + -640|0);
  $22 = +HEAPF32[$21>>2];
  $23 = ((($x1$addr$0)) + -384|0);
  $24 = +HEAPF32[$23>>2];
  $25 = ((($wp$0)) + -20|0);
  $26 = +HEAPF32[$25>>2];
  $27 = ((($wp$0)) + -28|0);
  $28 = +HEAPF32[$27>>2];
  $29 = ((($wp$0)) + -24|0);
  $30 = +HEAPF32[$29>>2];
  $31 = ((($x1$addr$0)) + -128|0);
  $32 = +HEAPF32[$31>>2];
  $33 = ((($x1$addr$0)) + 896|0);
  $34 = +HEAPF32[$33>>2];
  $35 = ((($wp$0)) + 4|0);
  $36 = +HEAPF32[$35>>2];
  $37 = ((($wp$0)) + -12|0);
  $38 = +HEAPF32[$37>>2];
  $39 = ((($wp$0)) + 8|0);
  $40 = +HEAPF32[$39>>2];
  $exitcond = ($i$0|0)==(0);
  if ($exitcond) {
   break;
  }
  $arrayidx2 = ((($x2$0)) + -896|0);
  $41 = +HEAPF32[$arrayidx2>>2];
  $mul = $41 * $1;
  $mul4 = $34 * $1;
  $arrayidx6 = ((($x2$0)) + -640|0);
  $42 = +HEAPF32[$arrayidx6>>2];
  $mul7 = $42 * $3;
  $add = $mul7 + $mul;
  $mul9 = $10 * $3;
  $arrayidx12 = ((($x2$0)) + -384|0);
  $43 = +HEAPF32[$arrayidx12>>2];
  $mul13 = $43 * $20;
  $add14 = $add + $mul13;
  $mul16 = $20 * $5;
  $arrayidx19 = ((($x2$0)) + -128|0);
  $44 = +HEAPF32[$arrayidx19>>2];
  $mul20 = $44 * $28;
  $add21 = $add14 + $mul20;
  $mul23 = $28 * $18;
  $arrayidx26 = ((($x2$0)) + 128|0);
  $45 = +HEAPF32[$arrayidx26>>2];
  $mul27 = $45 * $30;
  $add28 = $add21 + $mul27;
  $mul30 = $32 * $30;
  $arrayidx33 = ((($x2$0)) + 384|0);
  $46 = +HEAPF32[$arrayidx33>>2];
  $mul34 = $46 * $26;
  $add35 = $add28 + $mul34;
  $mul37 = $26 * $24;
  $arrayidx40 = ((($x2$0)) + 640|0);
  $47 = +HEAPF32[$arrayidx40>>2];
  $mul41 = $47 * $14;
  $add42 = $add35 + $mul41;
  $mul44 = $22 * $14;
  $arrayidx47 = ((($x2$0)) + 896|0);
  $48 = +HEAPF32[$arrayidx47>>2];
  $mul48 = $48 * $38;
  $add49 = $add42 + $mul48;
  $mul51 = $38 * $16;
  $arrayidx54 = ((($x1$addr$0)) + -1024|0);
  $49 = +HEAPF32[$arrayidx54>>2];
  $mul55 = $49 * $8;
  $add56 = $add49 + $mul55;
  $arrayidx57 = ((($x2$0)) + 1024|0);
  $50 = +HEAPF32[$arrayidx57>>2];
  $mul58$neg = $50 * $8;
  $arrayidx60 = ((($x1$addr$0)) + -768|0);
  $51 = +HEAPF32[$arrayidx60>>2];
  $mul61 = $51 * $12;
  $add62 = $add56 + $mul61;
  $arrayidx63 = ((($x2$0)) + 768|0);
  $52 = +HEAPF32[$arrayidx63>>2];
  $mul64$neg = $52 * $12;
  $arrayidx67 = ((($x1$addr$0)) + -512|0);
  $53 = +HEAPF32[$arrayidx67>>2];
  $mul68 = $53 * $6;
  $add69 = $add62 + $mul68;
  $arrayidx70 = ((($x2$0)) + 512|0);
  $54 = +HEAPF32[$arrayidx70>>2];
  $mul71$neg = $54 * $6;
  $arrayidx74 = ((($x1$addr$0)) + -256|0);
  $55 = +HEAPF32[$arrayidx74>>2];
  $mul75 = $55 * $36;
  $add76 = $add69 + $mul75;
  $arrayidx77 = ((($x2$0)) + 256|0);
  $56 = +HEAPF32[$arrayidx77>>2];
  $mul78$neg = $56 * $36;
  $57 = +HEAPF32[$x1$addr$0>>2];
  $mul82 = $57 * $40;
  $add83 = $add76 + $mul82;
  $58 = +HEAPF32[$x2$0>>2];
  $mul85$neg = $58 * $40;
  $arrayidx87 = ((($wp$0)) + 12|0);
  $59 = +HEAPF32[$arrayidx87>>2];
  $arrayidx88 = ((($x1$addr$0)) + 256|0);
  $60 = +HEAPF32[$arrayidx88>>2];
  $mul89 = $60 * $59;
  $add90 = $add83 + $mul89;
  $arrayidx91 = ((($x2$0)) + -256|0);
  $61 = +HEAPF32[$arrayidx91>>2];
  $mul92$neg = $61 * $59;
  $arrayidx94 = ((($wp$0)) + 16|0);
  $62 = +HEAPF32[$arrayidx94>>2];
  $arrayidx95 = ((($x1$addr$0)) + 512|0);
  $63 = +HEAPF32[$arrayidx95>>2];
  $mul96 = $63 * $62;
  $add97 = $add90 + $mul96;
  $arrayidx98 = ((($x2$0)) + -512|0);
  $64 = +HEAPF32[$arrayidx98>>2];
  $mul99$neg = $64 * $62;
  $arrayidx101 = ((($wp$0)) + 20|0);
  $65 = +HEAPF32[$arrayidx101>>2];
  $arrayidx102 = ((($x1$addr$0)) + 768|0);
  $66 = +HEAPF32[$arrayidx102>>2];
  $mul103 = $66 * $65;
  $add104 = $add97 + $mul103;
  $arrayidx105 = ((($x2$0)) + -768|0);
  $67 = +HEAPF32[$arrayidx105>>2];
  $mul106$neg = $67 * $65;
  $tmp725 = $mul106$neg + $mul99$neg;
  $tmp728 = $mul92$neg + $mul85$neg;
  $tmp731 = $mul78$neg + $mul71$neg;
  $tmp734 = $mul64$neg + $mul58$neg;
  $add38 = $mul16 + $mul9;
  $add45 = $add38 + $mul44;
  $add52 = $add45 + $mul37;
  $sub = $add52 + $mul23;
  $sub65 = $sub + $mul30;
  $sub72 = $sub65 + $mul4;
  $sub79 = $sub72 + $mul51;
  $sub86736 = $sub79 - $tmp734;
  $sub93733 = $sub86736 - $tmp731;
  $sub100730 = $sub93733 - $tmp728;
  $sub107727 = $sub100730 - $tmp725;
  $arrayidx108 = ((($wp$0)) + 24|0);
  $68 = +HEAPF32[$arrayidx108>>2];
  $mul109 = $add104 * $68;
  $sub110 = $sub107727 - $mul109;
  $add111 = $sub107727 + $mul109;
  $mul112 = $i$0 << 1;
  $add113 = (($mul112) + 30)|0;
  $arrayidx114 = (($a) + ($add113<<2)|0);
  HEAPF32[$arrayidx114>>2] = $add111;
  $arrayidx115 = ((($wp$0)) + 28|0);
  $69 = +HEAPF32[$arrayidx115>>2];
  $mul116 = $69 * $sub110;
  $add118 = (($mul112) + 31)|0;
  $arrayidx119 = (($a) + ($add118<<2)|0);
  HEAPF32[$arrayidx119>>2] = $mul116;
  $add$ptr = ((($wp$0)) + 72|0);
  $incdec$ptr = ((($x1$addr$0)) + -4|0);
  $incdec$ptr120 = ((($x2$0)) + 4|0);
  $inc = (($i$0) + 1)|0;
  $i$0 = $inc;$wp$0 = $add$ptr;$x1$addr$0 = $incdec$ptr;$x2$0 = $incdec$ptr120;
 }
 $arrayidx123 = ((($x1)) + -124|0);
 $70 = +HEAPF32[$arrayidx123>>2];
 $mul125 = $70 * $1;
 $mul128 = $32 * $8;
 $arrayidx129 = ((($x1)) + -252|0);
 $71 = +HEAPF32[$arrayidx129>>2];
 $arrayidx130 = ((($x1)) + 4|0);
 $72 = +HEAPF32[$arrayidx130>>2];
 $sub131 = $71 - $72;
 $mul133 = $sub131 * $3;
 $add134 = $mul133 + $mul125;
 $mul137 = $24 * $12;
 $arrayidx139 = ((($x1)) + -380|0);
 $73 = +HEAPF32[$arrayidx139>>2];
 $arrayidx140 = ((($x1)) + 132|0);
 $74 = +HEAPF32[$arrayidx140>>2];
 $add141 = $74 + $73;
 $mul143 = $add141 * $20;
 $add144 = $add134 + $mul143;
 $mul147 = $22 * $6;
 $arrayidx149 = ((($x1)) + -508|0);
 $75 = +HEAPF32[$arrayidx149>>2];
 $arrayidx150 = ((($x1)) + 260|0);
 $76 = +HEAPF32[$arrayidx150>>2];
 $sub151 = $75 - $76;
 $mul153 = $sub151 * $28;
 $add154 = $add144 + $mul153;
 $mul157 = $36 * $16;
 $arrayidx159 = ((($x1)) + -636|0);
 $77 = +HEAPF32[$arrayidx159>>2];
 $arrayidx160 = ((($x1)) + 388|0);
 $78 = +HEAPF32[$arrayidx160>>2];
 $add161 = $78 + $77;
 $mul163 = $add161 * $30;
 $add164 = $add154 + $mul163;
 $mul167 = $40 * $18;
 $arrayidx169 = ((($x1)) + -764|0);
 $79 = +HEAPF32[$arrayidx169>>2];
 $arrayidx170 = ((($x1)) + 516|0);
 $80 = +HEAPF32[$arrayidx170>>2];
 $sub171 = $79 - $80;
 $mul173 = $sub171 * $26;
 $add174 = $add164 + $mul173;
 $mul177$neg = $5 * 9.0008392333984375;
 $arrayidx179 = ((($x1)) + -892|0);
 $81 = +HEAPF32[$arrayidx179>>2];
 $arrayidx180 = ((($x1)) + 644|0);
 $82 = +HEAPF32[$arrayidx180>>2];
 $add181 = $82 + $81;
 $mul183 = $add181 * $14;
 $add184 = $add174 + $mul183;
 $mul187$neg = $10 * -29.202180862426758;
 $arrayidx189 = ((($x1)) + -1020|0);
 $83 = +HEAPF32[$arrayidx189>>2];
 $arrayidx190 = ((($x1)) + 772|0);
 $84 = +HEAPF32[$arrayidx190>>2];
 $sub191 = $83 - $84;
 $mul193 = $sub191 * $38;
 $add194 = $add184 + $mul193;
 $tmp = $mul187$neg + $mul177$neg;
 $add148 = $mul137 + $mul147;
 $add158 = $add148 + $mul128;
 $sub168 = $add158 - $34;
 $sub178 = $sub168 + $mul157;
 $sub188 = $sub178 - $mul167;
 $sub196724 = $sub188 - $tmp;
 $sub197 = $sub196724 - $add194;
 $add198 = $add194 + $sub196724;
 $arrayidx199 = ((($a)) + 56|0);
 $85 = +HEAPF32[$arrayidx199>>2];
 $arrayidx200 = ((($a)) + 60|0);
 $86 = +HEAPF32[$arrayidx200>>2];
 $sub201 = $86 - $85;
 $add202 = $add198 + $85;
 $arrayidx203 = ((($a)) + 124|0);
 $add204 = $sub197 + $sub201;
 $arrayidx205 = ((($a)) + 120|0);
 $sub206 = $sub197 - $sub201;
 $sub208 = $add198 - $85;
 $arrayidx210 = ((($a)) + 112|0);
 $87 = +HEAPF32[$arrayidx210>>2];
 $88 = +HEAPF32[$a>>2];
 $sub212 = $87 - $88;
 $add215 = $88 + $87;
 HEAPF32[$a>>2] = $add215;
 $mul217 = $sub212 * 1.9615705013275146;
 HEAPF32[$arrayidx210>>2] = $mul217;
 $arrayidx219 = ((($a)) + 116|0);
 $89 = +HEAPF32[$arrayidx219>>2];
 $arrayidx220 = ((($a)) + 4|0);
 $90 = +HEAPF32[$arrayidx220>>2];
 $sub221 = $89 - $90;
 $add224 = $90 + $89;
 HEAPF32[$arrayidx220>>2] = $add224;
 $mul226 = $sub221 * 1.9615705013275146;
 HEAPF32[$arrayidx219>>2] = $mul226;
 $arrayidx228 = ((($a)) + 104|0);
 $91 = +HEAPF32[$arrayidx228>>2];
 $arrayidx229 = ((($a)) + 8|0);
 $92 = +HEAPF32[$arrayidx229>>2];
 $sub230 = $91 - $92;
 $add233 = $92 + $91;
 HEAPF32[$arrayidx229>>2] = $add233;
 $mul235 = $sub230 * 1.8477590084075928;
 HEAPF32[$arrayidx228>>2] = $mul235;
 $arrayidx237 = ((($a)) + 108|0);
 $93 = +HEAPF32[$arrayidx237>>2];
 $arrayidx238 = ((($a)) + 12|0);
 $94 = +HEAPF32[$arrayidx238>>2];
 $sub239 = $93 - $94;
 $add242 = $94 + $93;
 HEAPF32[$arrayidx238>>2] = $add242;
 $mul244 = $sub239 * 1.8477590084075928;
 HEAPF32[$arrayidx237>>2] = $mul244;
 $arrayidx246 = ((($a)) + 96|0);
 $95 = +HEAPF32[$arrayidx246>>2];
 $arrayidx247 = ((($a)) + 16|0);
 $96 = +HEAPF32[$arrayidx247>>2];
 $sub248 = $95 - $96;
 $add251 = $96 + $95;
 HEAPF32[$arrayidx247>>2] = $add251;
 $mul253 = $sub248 * 1.662939190864563;
 HEAPF32[$arrayidx246>>2] = $mul253;
 $arrayidx255 = ((($a)) + 100|0);
 $97 = +HEAPF32[$arrayidx255>>2];
 $arrayidx256 = ((($a)) + 20|0);
 $98 = +HEAPF32[$arrayidx256>>2];
 $sub257 = $97 - $98;
 $add260 = $98 + $97;
 HEAPF32[$arrayidx256>>2] = $add260;
 $mul262 = $sub257 * 1.662939190864563;
 HEAPF32[$arrayidx255>>2] = $mul262;
 $arrayidx264 = ((($a)) + 88|0);
 $99 = +HEAPF32[$arrayidx264>>2];
 $arrayidx265 = ((($a)) + 24|0);
 $100 = +HEAPF32[$arrayidx265>>2];
 $sub266 = $99 - $100;
 $add269 = $100 + $99;
 $conv = $sub266;
 $mul270 = $conv * 1.4142135623730951;
 $conv271 = $mul270;
 $arrayidx273 = ((($a)) + 92|0);
 $101 = +HEAPF32[$arrayidx273>>2];
 $arrayidx274 = ((($a)) + 28|0);
 $102 = +HEAPF32[$arrayidx274>>2];
 $sub275 = $101 - $102;
 $add278 = $102 + $101;
 $conv279 = $sub275;
 $mul280 = $conv279 * 1.4142135623730951;
 $conv282 = $add278;
 $sub283 = $mul280 - $conv282;
 $conv284 = $sub283;
 $sub288 = $add278 - $add269;
 $sub291 = $conv271 - $sub288;
 $sub294 = $conv284 - $sub291;
 $sub297 = $add202 - $add269;
 HEAPF32[$arrayidx265>>2] = $sub297;
 $add300 = $add202 + $add269;
 HEAPF32[$arrayidx203>>2] = $add300;
 $sub304 = $add204 - $sub288;
 HEAPF32[$arrayidx274>>2] = $sub304;
 $add307 = $add204 + $sub288;
 HEAPF32[$arrayidx205>>2] = $add307;
 $sub311 = $sub206 - $sub291;
 HEAPF32[$arrayidx264>>2] = $sub311;
 $add314 = $sub206 + $sub291;
 HEAPF32[$arrayidx200>>2] = $add314;
 $sub318 = $sub208 - $sub294;
 HEAPF32[$arrayidx273>>2] = $sub318;
 $add321 = $sub208 + $sub294;
 HEAPF32[$arrayidx199>>2] = $add321;
 $arrayidx323 = ((($a)) + 80|0);
 $103 = +HEAPF32[$arrayidx323>>2];
 $arrayidx324 = ((($a)) + 32|0);
 $104 = +HEAPF32[$arrayidx324>>2];
 $sub325 = $103 - $104;
 $add328 = $104 + $103;
 $mul330 = $sub325 * 1.1111404895782471;
 $arrayidx332 = ((($a)) + 84|0);
 $105 = +HEAPF32[$arrayidx332>>2];
 $arrayidx333 = ((($a)) + 36|0);
 $106 = +HEAPF32[$arrayidx333>>2];
 $sub334 = $105 - $106;
 $add337 = $106 + $105;
 $mul339 = $sub334 * 1.1111404895782471;
 $arrayidx341 = ((($a)) + 72|0);
 $107 = +HEAPF32[$arrayidx341>>2];
 $arrayidx342 = ((($a)) + 40|0);
 $108 = +HEAPF32[$arrayidx342>>2];
 $sub343 = $107 - $108;
 $add346 = $108 + $107;
 $mul348 = $sub343 * 0.76536685228347778;
 $arrayidx350 = ((($a)) + 76|0);
 $109 = +HEAPF32[$arrayidx350>>2];
 $arrayidx351 = ((($a)) + 44|0);
 $110 = +HEAPF32[$arrayidx351>>2];
 $sub352 = $109 - $110;
 $add355 = $110 + $109;
 $mul357 = $sub352 * 0.76536685228347778;
 $arrayidx359 = ((($a)) + 64|0);
 $111 = +HEAPF32[$arrayidx359>>2];
 $arrayidx360 = ((($a)) + 48|0);
 $112 = +HEAPF32[$arrayidx360>>2];
 $sub361 = $111 - $112;
 $add364 = $112 + $111;
 $mul366 = $sub361 * 0.39018064737319946;
 $arrayidx368 = ((($a)) + 68|0);
 $113 = +HEAPF32[$arrayidx368>>2];
 $arrayidx369 = ((($a)) + 52|0);
 $114 = +HEAPF32[$arrayidx369>>2];
 $sub370 = $113 - $114;
 $add373 = $114 + $113;
 $mul375 = $sub370 * 0.39018064737319946;
 $115 = +HEAPF32[$arrayidx246>>2];
 $add380 = $115 - $mul330;
 $add383 = $115 + $mul330;
 HEAPF32[$arrayidx323>>2] = $add383;
 $mul385 = $add380 * 0.76536685228347778;
 HEAPF32[$arrayidx246>>2] = $mul385;
 $116 = +HEAPF32[$arrayidx255>>2];
 $add390 = $116 - $mul339;
 $add393 = $116 + $mul339;
 HEAPF32[$arrayidx332>>2] = $add393;
 $mul395 = $add390 * 0.76536685228347778;
 HEAPF32[$arrayidx255>>2] = $mul395;
 $117 = +HEAPF32[$arrayidx247>>2];
 $sub399 = $117 - $add328;
 $add402 = $add328 + $117;
 HEAPF32[$arrayidx247>>2] = $add402;
 $mul404 = $sub399 * 0.76536685228347778;
 HEAPF32[$arrayidx324>>2] = $mul404;
 $118 = +HEAPF32[$arrayidx256>>2];
 $sub408 = $118 - $add337;
 $add411 = $add337 + $118;
 HEAPF32[$arrayidx256>>2] = $add411;
 $mul413 = $sub408 * 0.76536685228347778;
 HEAPF32[$arrayidx333>>2] = $mul413;
 $119 = +HEAPF32[$a>>2];
 $sub417 = $119 - $add364;
 $add420 = $add364 + $119;
 HEAPF32[$a>>2] = $add420;
 $mul422 = $sub417 * 1.8477590084075928;
 HEAPF32[$arrayidx360>>2] = $mul422;
 $120 = +HEAPF32[$arrayidx220>>2];
 $sub426 = $120 - $add373;
 $add429 = $add373 + $120;
 HEAPF32[$arrayidx220>>2] = $add429;
 $mul431 = $sub426 * 1.8477590084075928;
 HEAPF32[$arrayidx369>>2] = $mul431;
 $121 = +HEAPF32[$arrayidx210>>2];
 $sub435 = $mul366 - $121;
 $add438 = $121 + $mul366;
 HEAPF32[$arrayidx359>>2] = $add438;
 $mul440 = $sub435 * 1.8477590084075928;
 HEAPF32[$arrayidx210>>2] = $mul440;
 $122 = +HEAPF32[$arrayidx219>>2];
 $add445 = $122 - $mul375;
 $add448 = $122 + $mul375;
 HEAPF32[$arrayidx368>>2] = $add448;
 $mul450 = $add445 * 1.8477590084075928;
 HEAPF32[$arrayidx219>>2] = $mul450;
 $123 = +HEAPF32[$arrayidx229>>2];
 $sub454 = $123 - $add346;
 $conv455 = $sub454;
 $mul456 = $conv455 * 1.4142135623730951;
 $conv457 = $mul456;
 $add460 = $add346 + $123;
 $124 = +HEAPF32[$arrayidx238>>2];
 $sub464 = $124 - $add355;
 $conv465 = $sub464;
 $mul466 = $conv465 * 1.4142135623730951;
 $conv467 = $mul466;
 $add470 = $add355 + $124;
 $125 = +HEAPF32[$arrayidx228>>2];
 $add475 = $125 - $mul348;
 $conv476 = $add475;
 $mul477 = $conv476 * 1.4142135623730951;
 $conv478 = $mul477;
 $add481 = $125 + $mul348;
 $sub483 = $conv478 - $add481;
 $126 = +HEAPF32[$arrayidx237>>2];
 $add488 = $126 - $mul357;
 $conv489 = $add488;
 $mul490 = $conv489 * 1.4142135623730951;
 $conv491 = $mul490;
 $add494 = $126 + $mul357;
 $sub496 = $conv491 - $add494;
 $sub501 = $add494 - $add470;
 $sub503 = $add470 - $add460;
 $127 = +HEAPF32[$arrayidx203>>2];
 $sub505 = $127 - $add460;
 HEAPF32[$arrayidx229>>2] = $sub505;
 $add508 = $127 + $add460;
 HEAPF32[$arrayidx203>>2] = $add508;
 $sub512 = $conv467 - $sub501;
 $sub514 = $add481 - $sub503;
 $128 = +HEAPF32[$arrayidx205>>2];
 $sub516 = $128 - $sub503;
 HEAPF32[$arrayidx238>>2] = $sub516;
 $add519 = $128 + $sub503;
 HEAPF32[$arrayidx205>>2] = $add519;
 $sub523 = $sub496 - $sub512;
 $sub525 = $sub501 - $sub514;
 $129 = +HEAPF32[$arrayidx200>>2];
 $sub527 = $129 - $sub514;
 HEAPF32[$arrayidx341>>2] = $sub527;
 $add530 = $129 + $sub514;
 HEAPF32[$arrayidx200>>2] = $add530;
 $sub533 = $conv457 - $sub525;
 $130 = +HEAPF32[$arrayidx199>>2];
 $sub535 = $130 - $sub525;
 HEAPF32[$arrayidx350>>2] = $sub535;
 $add538 = $130 + $sub525;
 HEAPF32[$arrayidx199>>2] = $add538;
 $sub541 = $sub512 - $sub533;
 $131 = +HEAPF32[$arrayidx273>>2];
 $sub543 = $131 - $sub533;
 HEAPF32[$arrayidx342>>2] = $sub543;
 $add546 = $131 + $sub533;
 HEAPF32[$arrayidx273>>2] = $add546;
 $sub549 = $sub483 - $sub541;
 $132 = +HEAPF32[$arrayidx264>>2];
 $sub551 = $132 - $sub541;
 HEAPF32[$arrayidx351>>2] = $sub551;
 $add554 = $132 + $sub541;
 HEAPF32[$arrayidx264>>2] = $add554;
 $sub557 = $sub523 - $sub549;
 $133 = +HEAPF32[$arrayidx274>>2];
 $sub559 = $133 - $sub549;
 HEAPF32[$arrayidx228>>2] = $sub559;
 $add562 = $133 + $sub549;
 HEAPF32[$arrayidx274>>2] = $add562;
 $134 = +HEAPF32[$arrayidx265>>2];
 $sub565 = $134 - $sub557;
 HEAPF32[$arrayidx237>>2] = $sub565;
 $add568 = $134 + $sub557;
 HEAPF32[$arrayidx265>>2] = $add568;
 $135 = +HEAPF32[$a>>2];
 $136 = +HEAPF32[$arrayidx247>>2];
 $sub571 = $135 - $136;
 $conv572 = $sub571;
 $mul573 = $conv572 * 1.4142135623730951;
 $conv574 = $mul573;
 $add577 = $136 + $135;
 HEAPF32[$a>>2] = $add577;
 HEAPF32[$arrayidx247>>2] = $conv574;
 $137 = +HEAPF32[$arrayidx220>>2];
 $138 = +HEAPF32[$arrayidx256>>2];
 $sub581 = $137 - $138;
 $conv582 = $sub581;
 $mul583 = $conv582 * 1.4142135623730951;
 $conv584 = $mul583;
 $add587 = $138 + $137;
 $139 = +HEAPF32[$arrayidx359>>2];
 $140 = +HEAPF32[$arrayidx323>>2];
 $sub591 = $139 - $140;
 $conv592 = $sub591;
 $mul593 = $conv592 * 1.4142135623730951;
 $conv594 = $mul593;
 $add597 = $140 + $139;
 $141 = +HEAPF32[$arrayidx368>>2];
 $142 = +HEAPF32[$arrayidx332>>2];
 $sub601 = $141 - $142;
 $conv602 = $sub601;
 $mul603 = $conv602 * 1.4142135623730951;
 $conv604 = $mul603;
 $add607 = $142 + $141;
 $143 = +HEAPF32[$arrayidx324>>2];
 $144 = +HEAPF32[$arrayidx360>>2];
 $sub611 = $143 - $144;
 $conv612 = $sub611;
 $mul613 = $conv612 * -1.4142135623730951;
 $conv614 = $mul613;
 $add617 = $144 + $143;
 $sub619 = $conv614 - $add617;
 $145 = +HEAPF32[$arrayidx333>>2];
 $146 = +HEAPF32[$arrayidx369>>2];
 $sub623 = $145 - $146;
 $conv624 = $sub623;
 $mul625 = $conv624 * -1.4142135623730951;
 $conv626 = $mul625;
 $add629 = $146 + $145;
 $sub631 = $conv626 - $add629;
 $147 = +HEAPF32[$arrayidx255>>2];
 $148 = +HEAPF32[$arrayidx219>>2];
 $sub635 = $147 - $148;
 $conv636 = $sub635;
 $mul637 = $conv636 * -1.4142135623730951;
 $conv638 = $mul637;
 $add641 = $148 + $147;
 $sub643 = $conv638 - $add641;
 $149 = +HEAPF32[$arrayidx246>>2];
 $150 = +HEAPF32[$arrayidx210>>2];
 $add647 = $150 + $149;
 $conv648 = $add647;
 $mul649 = $conv648 * -1.4142135623730951;
 $conv650 = $mul649;
 $sub653 = $149 - $150;
 $sub655 = $conv650 - $sub653;
 $sub659 = $sub653 - $add597;
 $sub662 = $conv594 - $sub659;
 $sub665 = $sub655 - $sub662;
 $sub669 = $add641 - $add607;
 $sub672 = $conv604 - $sub669;
 $sub675 = $sub643 - $sub672;
 $sub679 = $add607 - $add587;
 $sub682 = $add629 - $sub679;
 $sub685 = $sub669 - $sub682;
 $sub688 = $conv584 - $sub685;
 $sub691 = $sub672 - $sub688;
 $sub694 = $sub631 - $sub691;
 $sub697 = $sub675 - $sub694;
 $sub701 = $add587 - $add577;
 $sub704 = $add597 - $sub701;
 $sub707 = $sub679 - $sub704;
 $sub710 = $add617 - $sub707;
 $sub713 = $sub682 - $sub710;
 $sub716 = $sub659 - $sub713;
 $sub719 = $sub685 - $sub716;
 $151 = +HEAPF32[$arrayidx247>>2];
 $sub722 = $151 - $sub719;
 $sub725 = $sub688 - $sub722;
 $sub728 = $sub662 - $sub725;
 $sub731 = $sub691 - $sub728;
 $sub734 = $sub619 - $sub731;
 $sub737 = $sub694 - $sub734;
 $sub740 = $sub665 - $sub737;
 $sub743 = $sub697 - $sub740;
 $152 = +HEAPF32[$a>>2];
 $153 = +HEAPF32[$arrayidx203>>2];
 $add748 = $153 + $152;
 HEAPF32[$a>>2] = $add748;
 $sub750 = $153 - $152;
 HEAPF32[$arrayidx203>>2] = $sub750;
 $154 = +HEAPF32[$arrayidx205>>2];
 $add754 = $154 + $sub701;
 HEAPF32[$arrayidx220>>2] = $add754;
 $sub756 = $154 - $sub701;
 HEAPF32[$arrayidx205>>2] = $sub756;
 $155 = +HEAPF32[$arrayidx200>>2];
 $add760 = $155 + $sub704;
 HEAPF32[$arrayidx359>>2] = $add760;
 $sub762 = $155 - $sub704;
 HEAPF32[$arrayidx200>>2] = $sub762;
 $156 = +HEAPF32[$arrayidx199>>2];
 $add766 = $156 + $sub707;
 HEAPF32[$arrayidx368>>2] = $add766;
 $sub768 = $156 - $sub707;
 HEAPF32[$arrayidx199>>2] = $sub768;
 $157 = +HEAPF32[$arrayidx273>>2];
 $add772 = $157 + $sub710;
 HEAPF32[$arrayidx324>>2] = $add772;
 $sub774 = $157 - $sub710;
 HEAPF32[$arrayidx273>>2] = $sub774;
 $158 = +HEAPF32[$arrayidx264>>2];
 $add778 = $158 + $sub713;
 HEAPF32[$arrayidx333>>2] = $add778;
 $sub780 = $158 - $sub713;
 HEAPF32[$arrayidx264>>2] = $sub780;
 $159 = +HEAPF32[$arrayidx274>>2];
 $add784 = $159 + $sub716;
 HEAPF32[$arrayidx246>>2] = $add784;
 $sub786 = $159 - $sub716;
 HEAPF32[$arrayidx274>>2] = $sub786;
 $160 = +HEAPF32[$arrayidx265>>2];
 $add790 = $160 + $sub719;
 HEAPF32[$arrayidx255>>2] = $add790;
 $sub792 = $160 - $sub719;
 HEAPF32[$arrayidx265>>2] = $sub792;
 $161 = +HEAPF32[$arrayidx237>>2];
 $add796 = $161 + $sub722;
 HEAPF32[$arrayidx247>>2] = $add796;
 $sub798 = $161 - $sub722;
 HEAPF32[$arrayidx237>>2] = $sub798;
 $162 = +HEAPF32[$arrayidx228>>2];
 $add802 = $162 + $sub725;
 HEAPF32[$arrayidx256>>2] = $add802;
 $sub804 = $162 - $sub725;
 HEAPF32[$arrayidx228>>2] = $sub804;
 $163 = +HEAPF32[$arrayidx351>>2];
 $add808 = $163 + $sub728;
 HEAPF32[$arrayidx323>>2] = $add808;
 $sub810 = $163 - $sub728;
 HEAPF32[$arrayidx351>>2] = $sub810;
 $164 = +HEAPF32[$arrayidx342>>2];
 $add814 = $164 + $sub731;
 HEAPF32[$arrayidx332>>2] = $add814;
 $sub816 = $164 - $sub731;
 HEAPF32[$arrayidx342>>2] = $sub816;
 $165 = +HEAPF32[$arrayidx350>>2];
 $add820 = $165 + $sub734;
 HEAPF32[$arrayidx360>>2] = $add820;
 $sub822 = $165 - $sub734;
 HEAPF32[$arrayidx350>>2] = $sub822;
 $166 = +HEAPF32[$arrayidx341>>2];
 $add826 = $166 + $sub737;
 HEAPF32[$arrayidx369>>2] = $add826;
 $sub828 = $166 - $sub737;
 HEAPF32[$arrayidx341>>2] = $sub828;
 $167 = +HEAPF32[$arrayidx238>>2];
 $add832 = $167 + $sub740;
 HEAPF32[$arrayidx210>>2] = $add832;
 $sub834 = $167 - $sub740;
 HEAPF32[$arrayidx238>>2] = $sub834;
 $168 = +HEAPF32[$arrayidx229>>2];
 $add838 = $168 + $sub743;
 HEAPF32[$arrayidx219>>2] = $add838;
 $sub840 = $168 - $sub743;
 HEAPF32[$arrayidx229>>2] = $sub840;
 return;
}
function _apply_preset($gfp,$preset,$enforce) {
 $gfp = $gfp|0;
 $preset = $preset|0;
 $enforce = $enforce|0;
 var $0 = 0, $call24 = 0, $preset$addr$0$off = 0, $preset11 = 0, $preset1149 = 0, $preset1152 = 0, $preset1155 = 0, $preset1158 = 0, $preset8 = 0, $retval$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 L1: do {
  switch ($preset|0) {
  case 1000:  {
   (_lame_set_VBR($gfp,4)|0);
   $preset1152 = ((($gfp)) + 152|0);
   HEAP32[$preset1152>>2] = 470;
   label = 14;
   break;
  }
  case 1007: case 1006:  {
   (_lame_set_VBR($gfp,4)|0);
   $preset1149 = ((($gfp)) + 152|0);
   HEAP32[$preset1149>>2] = 460;
   label = 13;
   break;
  }
  case 1004: case 1001:  {
   (_lame_set_VBR($gfp,4)|0);
   $preset1155 = ((($gfp)) + 152|0);
   HEAP32[$preset1155>>2] = 480;
   label = 15;
   break;
  }
  case 1005: case 1002:  {
   (_lame_set_VBR($gfp,4)|0);
   $preset1158 = ((($gfp)) + 152|0);
   HEAP32[$preset1158>>2] = 500;
   label = 17;
   break;
  }
  case 1003:  {
   $preset8 = ((($gfp)) + 152|0);
   HEAP32[$preset8>>2] = 320;
   (_apply_abr_preset($gfp,320,$enforce)|0);
   (_lame_set_VBR($gfp,0)|0);
   $retval$0 = 320;
   break;
  }
  default: {
   $preset11 = ((($gfp)) + 152|0);
   HEAP32[$preset11>>2] = $preset;
   switch ($preset|0) {
   case 460:  {
    label = 13;
    break L1;
    break;
   }
   case 470:  {
    label = 14;
    break L1;
    break;
   }
   case 480:  {
    label = 15;
    break L1;
    break;
   }
   case 500:  {
    label = 17;
    break L1;
    break;
   }
   case 410:  {
    _apply_vbr_preset($gfp,9,$enforce);
    $retval$0 = 410;
    break L1;
    break;
   }
   case 420:  {
    _apply_vbr_preset($gfp,8,$enforce);
    $retval$0 = 420;
    break L1;
    break;
   }
   case 430:  {
    _apply_vbr_preset($gfp,7,$enforce);
    $retval$0 = 430;
    break L1;
    break;
   }
   case 440:  {
    _apply_vbr_preset($gfp,6,$enforce);
    $retval$0 = 440;
    break L1;
    break;
   }
   case 450:  {
    _apply_vbr_preset($gfp,5,$enforce);
    $retval$0 = 450;
    break L1;
    break;
   }
   case 490:  {
    _apply_vbr_preset($gfp,1,$enforce);
    $retval$0 = 490;
    break L1;
    break;
   }
   default: {
    $preset$addr$0$off = (($preset) + -8)|0;
    $0 = ($preset$addr$0$off>>>0)<(313);
    if ($0) {
     $call24 = (_apply_abr_preset($gfp,$preset,$enforce)|0);
     $retval$0 = $call24;
     break L1;
    } else {
     HEAP32[$preset11>>2] = 0;
     $retval$0 = $preset;
     break L1;
    }
   }
   }
  }
  }
 } while(0);
 if ((label|0) == 13) {
  _apply_vbr_preset($gfp,4,$enforce);
  $retval$0 = 460;
 }
 else if ((label|0) == 14) {
  _apply_vbr_preset($gfp,3,$enforce);
  $retval$0 = 470;
 }
 else if ((label|0) == 15) {
  _apply_vbr_preset($gfp,2,$enforce);
  $retval$0 = 480;
 }
 else if ((label|0) == 17) {
  _apply_vbr_preset($gfp,0,$enforce);
  $retval$0 = 500;
 }
 return ($retval$0|0);
}
function _apply_abr_preset($gfp,$preset,$enforce) {
 $gfp = $gfp|0;
 $preset = $preset|0;
 $enforce = $enforce|0;
 var $0 = 0, $1 = 0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = 0, $20 = 0, $21 = 0, $3 = 0.0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0.0;
 var $8 = 0.0, $9 = 0.0, $a$$i = 0, $a$$i76 = 0, $abr_kbps = 0, $ath_curve = 0, $ath_curve207 = 0, $ath_lower = 0, $ath_lower190 = 0, $call = 0, $call102 = 0.0, $call110 = 0.0, $call12 = 0, $call161 = 0.0, $call182 = 0.0, $call199 = 0.0, $call216 = 0.0, $call23 = 0, $call3 = 0, $call39 = 0;
 var $call56 = 0.0, $call6 = 0, $call73 = 0.0, $call9 = 0, $call90 = 0.0, $cmp = 0, $cmp$i = 0, $cmp$i75 = 0, $cmp114 = 0, $cmp15 = 0, $cmp165 = 0, $cmp186 = 0, $cmp203 = 0, $cmp220 = 0, $cmp26 = 0, $cmp43 = 0, $cmp60 = 0, $cmp77 = 0, $cmp94 = 0, $conv = 0;
 var $conv156 = 0.0, $conv158 = 0.0, $conv170 = 0.0, $conv172 = 0.0, $conv231 = 0.0, $conv233 = 0.0, $conv54 = 0.0, $conv65 = 0.0, $interch = 0, $interch224 = 0, $internal_flags = 0, $masking_adj = 0, $masking_adj118 = 0, $minval = 0, $mul = 0.0, $mul157 = 0.0, $mul171 = 0.0, $mul232 = 0.0, $nsmsfix = 0, $nsmsfix64 = 0;
 var $or = 0, $quant_comp = 0, $quant_comp30 = 0, $quant_comp_s = 0, $quant_comp_s47 = 0, $scale = 0, $st_lrm = 0, $st_lrm81 = 0, $st_s = 0, $st_s98 = 0, $sub200 = 0.0, $sub217 = 0.0, $sub57 = 0.0, $sub74 = 0.0, $sub91 = 0.0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $conv = $preset&65535;
 $call = (_nearestBitrateFullIndex($conv)|0);
 (_lame_set_VBR($gfp,3)|0);
 (_lame_set_VBR_mean_bitrate_kbps($gfp,$preset)|0);
 $call3 = (_lame_get_VBR_mean_bitrate_kbps($gfp)|0);
 $cmp$i = ($call3|0)<(320);
 $a$$i = $cmp$i ? $call3 : 320;
 (_lame_set_VBR_mean_bitrate_kbps($gfp,$a$$i)|0);
 $call6 = (_lame_get_VBR_mean_bitrate_kbps($gfp)|0);
 $cmp$i75 = ($call6|0)>(8);
 $a$$i76 = $cmp$i75 ? $call6 : 8;
 (_lame_set_VBR_mean_bitrate_kbps($gfp,$a$$i76)|0);
 $call9 = (_lame_get_VBR_mean_bitrate_kbps($gfp)|0);
 (_lame_set_brate($gfp,$call9)|0);
 $0 = (($call) + -12)|0;
 $cmp = ($0>>>0)<(5);
 if ($cmp) {
  $call12 = (_lame_get_exp_nspsytune($gfp)|0);
  $or = $call12 | 2;
  (_lame_set_exp_nspsytune($gfp,$or)|0);
 }
 $cmp15 = ($call>>>0)<(13);
 if ($cmp15) {
  (_lame_set_sfscale($gfp,1)|0);
 }
 $tobool = ($enforce|0)!=(0);
 if ($tobool) {
  $quant_comp = (((4928 + (($call*52)|0)|0)) + 4|0);
  $5 = HEAP32[$quant_comp>>2]|0;
  (_lame_set_quant_comp($gfp,$5)|0);
  $quant_comp_s = (((4928 + (($call*52)|0)|0)) + 8|0);
  $6 = HEAP32[$quant_comp_s>>2]|0;
  (_lame_set_quant_comp_short($gfp,$6)|0);
  $nsmsfix = (((4928 + (($call*52)|0)|0)) + 16|0);
  $7 = +HEAPF32[$nsmsfix>>2];
  $conv54 = $7;
  _lame_set_msfix($gfp,$conv54);
  $st_lrm = (((4928 + (($call*52)|0)|0)) + 20|0);
  $8 = +HEAPF32[$st_lrm>>2];
  (_lame_set_short_threshold_lrm($gfp,$8)|0);
  $st_s = (((4928 + (($call*52)|0)|0)) + 24|0);
  $9 = +HEAPF32[$st_s>>2];
  (_lame_set_short_threshold_s($gfp,$9)|0);
 } else {
  $call23 = (_lame_get_quant_comp($gfp)|0);
  $cmp26 = ($call23|0)==(-1);
  if ($cmp26) {
   $quant_comp30 = (((4928 + (($call*52)|0)|0)) + 4|0);
   $1 = HEAP32[$quant_comp30>>2]|0;
   (_lame_set_quant_comp($gfp,$1)|0);
  }
  $call39 = (_lame_get_quant_comp_short($gfp)|0);
  $cmp43 = ($call39|0)==(-1);
  if ($cmp43) {
   $quant_comp_s47 = (((4928 + (($call*52)|0)|0)) + 8|0);
   $2 = HEAP32[$quant_comp_s47>>2]|0;
   (_lame_set_quant_comp_short($gfp,$2)|0);
  }
  $call56 = (+_lame_get_msfix($gfp));
  $sub57 = $call56 + 1.0;
  $cmp60 = ($sub57 != $sub57) | (0.0 != 0.0) |($sub57 == 0.0);
  if ($cmp60) {
   $nsmsfix64 = (((4928 + (($call*52)|0)|0)) + 16|0);
   $3 = +HEAPF32[$nsmsfix64>>2];
   $conv65 = $3;
   _lame_set_msfix($gfp,$conv65);
  }
  $call73 = (+_lame_get_short_threshold_lrm($gfp));
  $sub74 = $call73 + 1.0;
  $cmp77 = ($sub74 != $sub74) | (0.0 != 0.0) |($sub74 == 0.0);
  if ($cmp77) {
   $st_lrm81 = (((4928 + (($call*52)|0)|0)) + 20|0);
   $4 = +HEAPF32[$st_lrm81>>2];
   (_lame_set_short_threshold_lrm($gfp,$4)|0);
  }
  $call90 = (+_lame_get_short_threshold_s($gfp));
  $sub91 = $call90 + 1.0;
  $cmp94 = ($sub91 != $sub91) | (0.0 != 0.0) |($sub91 == 0.0);
  if ($cmp94) {
   $st_s98 = (((4928 + (($call*52)|0)|0)) + 24|0);
   $10 = +HEAPF32[$st_s98>>2];
   (_lame_set_short_threshold_s($gfp,$10)|0);
  }
 }
 $call102 = (+_lame_get_scale($gfp));
 $scale = (((4928 + (($call*52)|0)|0)) + 28|0);
 $11 = +HEAPF32[$scale>>2];
 $mul = $11 * $call102;
 (_lame_set_scale($gfp,$mul)|0);
 if ($tobool) {
  $masking_adj = (((4928 + (($call*52)|0)|0)) + 32|0);
  $15 = +HEAPF32[$masking_adj>>2];
  (_lame_set_maskingadjust($gfp,$15)|0);
  $conv156 = $15;
  $mul157 = $conv156 * 1.1000000000000001;
  $conv158 = $mul157;
  (_lame_set_maskingadjust_short($gfp,$conv158)|0);
  $ath_lower = (((4928 + (($call*52)|0)|0)) + 36|0);
  $16 = +HEAPF32[$ath_lower>>2];
  (_lame_set_ATHlower($gfp,$16)|0);
  $ath_curve = (((4928 + (($call*52)|0)|0)) + 40|0);
  $17 = +HEAPF32[$ath_curve>>2];
  (_lame_set_ATHcurve($gfp,$17)|0);
  $interch = (((4928 + (($call*52)|0)|0)) + 44|0);
  $18 = +HEAPF32[$interch>>2];
  (_lame_set_interChRatio($gfp,$18)|0);
  $abr_kbps = (4928 + (($call*52)|0)|0);
  $20 = HEAP32[$abr_kbps>>2]|0;
  $conv231 = (+($20|0));
  $mul232 = $conv231 * 0.015625;
  $conv233 = $mul232;
  $internal_flags = ((($gfp)) + 288|0);
  $21 = HEAP32[$internal_flags>>2]|0;
  $minval = ((($21)) + 280|0);
  HEAPF32[$minval>>2] = $conv233;
  return ($preset|0);
 }
 $call110 = (+_lame_get_maskingadjust($gfp));
 $cmp114 = ($call110 != $call110) | (0.0 != 0.0) |($call110 == 0.0);
 $masking_adj118 = (((4928 + (($call*52)|0)|0)) + 32|0);
 $12 = +HEAPF32[$masking_adj118>>2];
 if ($cmp114) {
  (_lame_set_maskingadjust($gfp,$12)|0);
 }
 $call161 = (+_lame_get_maskingadjust_short($gfp));
 $cmp165 = ($call161 != $call161) | (0.0 != 0.0) |($call161 == 0.0);
 if ($cmp165) {
  $conv170 = $12;
  $mul171 = $conv170 * 1.1000000000000001;
  $conv172 = $mul171;
  (_lame_set_maskingadjust_short($gfp,$conv172)|0);
 }
 $call182 = (+_lame_get_ATHlower($gfp));
 $cmp186 = ($call182 != $call182) | (0.0 != 0.0) |($call182 == 0.0);
 if ($cmp186) {
  $ath_lower190 = (((4928 + (($call*52)|0)|0)) + 36|0);
  $13 = +HEAPF32[$ath_lower190>>2];
  (_lame_set_ATHlower($gfp,$13)|0);
 }
 $call199 = (+_lame_get_ATHcurve($gfp));
 $sub200 = $call199 + 1.0;
 $cmp203 = ($sub200 != $sub200) | (0.0 != 0.0) |($sub200 == 0.0);
 if ($cmp203) {
  $ath_curve207 = (((4928 + (($call*52)|0)|0)) + 40|0);
  $14 = +HEAPF32[$ath_curve207>>2];
  (_lame_set_ATHcurve($gfp,$14)|0);
 }
 $call216 = (+_lame_get_interChRatio($gfp));
 $sub217 = $call216 + 1.0;
 $cmp220 = ($sub217 != $sub217) | (0.0 != 0.0) |($sub217 == 0.0);
 if (!($cmp220)) {
  $abr_kbps = (4928 + (($call*52)|0)|0);
  $20 = HEAP32[$abr_kbps>>2]|0;
  $conv231 = (+($20|0));
  $mul232 = $conv231 * 0.015625;
  $conv233 = $mul232;
  $internal_flags = ((($gfp)) + 288|0);
  $21 = HEAP32[$internal_flags>>2]|0;
  $minval = ((($21)) + 280|0);
  HEAPF32[$minval>>2] = $conv233;
  return ($preset|0);
 }
 $interch224 = (((4928 + (($call*52)|0)|0)) + 44|0);
 $19 = +HEAPF32[$interch224>>2];
 (_lame_set_interChRatio($gfp,$19)|0);
 $abr_kbps = (4928 + (($call*52)|0)|0);
 $20 = HEAP32[$abr_kbps>>2]|0;
 $conv231 = (+($20|0));
 $mul232 = $conv231 * 0.015625;
 $conv233 = $mul232;
 $internal_flags = ((($gfp)) + 288|0);
 $21 = HEAP32[$internal_flags>>2]|0;
 $minval = ((($21)) + 280|0);
 HEAPF32[$minval>>2] = $conv233;
 return ($preset|0);
}
function _apply_vbr_preset($gfp,$a,$enforce) {
 $gfp = $gfp|0;
 $a = $a|0;
 $enforce = $enforce|0;
 var $0 = 0.0, $1 = 0, $ATHfixpoint = 0, $VBR_q = 0, $VBR_q_frac = 0, $add = 0, $add11 = 0.0, $add17 = 0.0, $add23 = 0.0, $add29 = 0.0, $add35 = 0.0, $add41 = 0.0, $add47 = 0.0, $add5 = 0.0, $add54 = 0.0, $add61 = 0.0, $add67 = 0.0, $add73 = 0.0, $and = 0, $call = 0;
 var $call115 = 0.0, $call131 = 0.0, $call147 = 0.0, $call163 = 0.0, $call174 = 0, $call177 = 0, $call188 = 0.0, $call204 = 0.0, $call220 = 0.0, $call240 = 0.0, $call256 = 0, $call263 = 0, $call277 = 0.0, $call79 = 0, $call93 = 0, $cmp = 0, $cmp119 = 0, $cmp135 = 0, $cmp151 = 0, $cmp167 = 0;
 var $cmp175 = 0, $cmp178 = 0, $cmp192 = 0, $cmp208 = 0, $cmp224 = 0, $cmp232 = 0, $cmp244 = 0, $cmp253 = 0, $cmp260 = 0, $cmp264 = 0, $cmp281 = 0, $cmp97 = 0, $conv = 0.0, $conv275 = 0.0, $conv285 = 0.0, $conv52 = 0.0, $conv55 = 0, $internal_flags = 0, $minval294 = 0, $mul = 0.0;
 var $mul10 = 0.0, $mul16 = 0.0, $mul22 = 0.0, $mul28 = 0.0, $mul34 = 0.0, $mul40 = 0.0, $mul46 = 0.0, $mul53 = 0.0, $mul60 = 0.0, $mul66 = 0.0, $mul72 = 0.0, $or = 0, $or268 = 0, $p$sroa$0$0$$sroa_idx = 0, $p$sroa$0$0$copyload = 0, $p$sroa$11$0$$sroa_idx142 = 0, $p$sroa$11$0$copyload = 0, $p$sroa$14$0$$sroa_idx146 = 0, $p$sroa$14$0$copyload = 0.0, $p$sroa$19$0$$sroa_idx151 = 0;
 var $p$sroa$19$0$copyload = 0.0, $p$sroa$24$0$$sroa_idx156 = 0, $p$sroa$24$0$copyload = 0.0, $p$sroa$29$0$$sroa_idx161 = 0, $p$sroa$29$0$copyload = 0.0, $p$sroa$34$0$$sroa_idx166 = 0, $p$sroa$34$0$copyload = 0.0, $p$sroa$39$0$$sroa_idx171 = 0, $p$sroa$39$0$copyload = 0.0, $p$sroa$44$0$$sroa_idx176 = 0, $p$sroa$44$0$copyload = 0.0, $p$sroa$49$0$$sroa_idx181 = 0, $p$sroa$49$0$copyload = 0.0, $p$sroa$5$0$$sroa_idx134 = 0, $p$sroa$5$0$copyload = 0, $p$sroa$55$0$$sroa_idx187 = 0, $p$sroa$55$0$copyload = 0, $p$sroa$57$0$$sroa_idx190 = 0, $p$sroa$57$0$copyload = 0, $p$sroa$62$0$$sroa_idx195 = 0;
 var $p$sroa$62$0$copyload = 0.0, $p$sroa$67$0$$sroa_idx200 = 0, $p$sroa$67$0$copyload = 0.0, $p$sroa$71$0$$sroa_idx204 = 0, $p$sroa$71$0$copyload = 0.0, $p$sroa$8$0$$sroa_idx138 = 0, $p$sroa$8$0$copyload = 0, $q$sroa$10$0$$sroa_idx53 = 0, $q$sroa$10$0$copyload = 0.0, $q$sroa$1157$0$$sroa_idx58 = 0, $q$sroa$1157$0$copyload = 0, $q$sroa$12$0$$sroa_idx60 = 0, $q$sroa$12$0$copyload = 0.0, $q$sroa$13$0$$sroa_idx62 = 0, $q$sroa$13$0$copyload = 0.0, $q$sroa$14$0$$sroa_idx64 = 0, $q$sroa$14$0$copyload = 0.0, $q$sroa$3$0$$sroa_idx39 = 0, $q$sroa$3$0$copyload = 0.0, $q$sroa$4$0$$sroa_idx41 = 0;
 var $q$sroa$4$0$copyload = 0.0, $q$sroa$5$0$$sroa_idx43 = 0, $q$sroa$5$0$copyload = 0.0, $q$sroa$6$0$$sroa_idx45 = 0, $q$sroa$6$0$copyload = 0.0, $q$sroa$7$0$$sroa_idx47 = 0, $q$sroa$7$0$copyload = 0.0, $q$sroa$8$0$$sroa_idx49 = 0, $q$sroa$8$0$copyload = 0.0, $q$sroa$9$0$$sroa_idx51 = 0, $q$sroa$9$0$copyload = 0.0, $retval$0$i = 0, $shl = 0, $sub = 0.0, $sub116 = 0.0, $sub132 = 0.0, $sub15 = 0.0, $sub205 = 0.0, $sub21 = 0.0, $sub241 = 0.0;
 var $sub27 = 0.0, $sub278 = 0.0, $sub33 = 0.0, $sub39 = 0.0, $sub45 = 0.0, $sub51 = 0, $sub59 = 0.0, $sub65 = 0.0, $sub71 = 0.0, $sub9 = 0.0, $tobool = 0, $tobool105 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_lame_get_VBR($gfp)|0);
 switch ($call|0) {
 case 1: case 4:  {
  $retval$0$i = 4180;
  break;
 }
 default: {
  $retval$0$i = 3432;
 }
 }
 $VBR_q_frac = ((($gfp)) + 160|0);
 $0 = +HEAPF32[$VBR_q_frac>>2];
 $p$sroa$0$0$$sroa_idx = (($retval$0$i) + (($a*68)|0)|0);
 $p$sroa$0$0$copyload = HEAP32[$p$sroa$0$0$$sroa_idx>>2]|0;
 $p$sroa$5$0$$sroa_idx134 = (((($retval$0$i) + (($a*68)|0)|0)) + 4|0);
 $p$sroa$5$0$copyload = HEAP32[$p$sroa$5$0$$sroa_idx134>>2]|0;
 $p$sroa$8$0$$sroa_idx138 = (((($retval$0$i) + (($a*68)|0)|0)) + 8|0);
 $p$sroa$8$0$copyload = HEAP32[$p$sroa$8$0$$sroa_idx138>>2]|0;
 $p$sroa$11$0$$sroa_idx142 = (((($retval$0$i) + (($a*68)|0)|0)) + 12|0);
 $p$sroa$11$0$copyload = HEAP32[$p$sroa$11$0$$sroa_idx142>>2]|0;
 $p$sroa$14$0$$sroa_idx146 = (((($retval$0$i) + (($a*68)|0)|0)) + 16|0);
 $p$sroa$14$0$copyload = +HEAPF32[$p$sroa$14$0$$sroa_idx146>>2];
 $p$sroa$19$0$$sroa_idx151 = (((($retval$0$i) + (($a*68)|0)|0)) + 20|0);
 $p$sroa$19$0$copyload = +HEAPF32[$p$sroa$19$0$$sroa_idx151>>2];
 $p$sroa$24$0$$sroa_idx156 = (((($retval$0$i) + (($a*68)|0)|0)) + 24|0);
 $p$sroa$24$0$copyload = +HEAPF32[$p$sroa$24$0$$sroa_idx156>>2];
 $p$sroa$29$0$$sroa_idx161 = (((($retval$0$i) + (($a*68)|0)|0)) + 28|0);
 $p$sroa$29$0$copyload = +HEAPF32[$p$sroa$29$0$$sroa_idx161>>2];
 $p$sroa$34$0$$sroa_idx166 = (((($retval$0$i) + (($a*68)|0)|0)) + 32|0);
 $p$sroa$34$0$copyload = +HEAPF32[$p$sroa$34$0$$sroa_idx166>>2];
 $p$sroa$39$0$$sroa_idx171 = (((($retval$0$i) + (($a*68)|0)|0)) + 36|0);
 $p$sroa$39$0$copyload = +HEAPF32[$p$sroa$39$0$$sroa_idx171>>2];
 $p$sroa$44$0$$sroa_idx176 = (((($retval$0$i) + (($a*68)|0)|0)) + 40|0);
 $p$sroa$44$0$copyload = +HEAPF32[$p$sroa$44$0$$sroa_idx176>>2];
 $p$sroa$49$0$$sroa_idx181 = (((($retval$0$i) + (($a*68)|0)|0)) + 44|0);
 $p$sroa$49$0$copyload = +HEAPF32[$p$sroa$49$0$$sroa_idx181>>2];
 $p$sroa$55$0$$sroa_idx187 = (((($retval$0$i) + (($a*68)|0)|0)) + 48|0);
 $p$sroa$55$0$copyload = HEAP32[$p$sroa$55$0$$sroa_idx187>>2]|0;
 $p$sroa$57$0$$sroa_idx190 = (((($retval$0$i) + (($a*68)|0)|0)) + 52|0);
 $p$sroa$57$0$copyload = HEAP32[$p$sroa$57$0$$sroa_idx190>>2]|0;
 $p$sroa$62$0$$sroa_idx195 = (((($retval$0$i) + (($a*68)|0)|0)) + 56|0);
 $p$sroa$62$0$copyload = +HEAPF32[$p$sroa$62$0$$sroa_idx195>>2];
 $p$sroa$67$0$$sroa_idx200 = (((($retval$0$i) + (($a*68)|0)|0)) + 60|0);
 $p$sroa$67$0$copyload = +HEAPF32[$p$sroa$67$0$$sroa_idx200>>2];
 $p$sroa$71$0$$sroa_idx204 = (((($retval$0$i) + (($a*68)|0)|0)) + 64|0);
 $p$sroa$71$0$copyload = +HEAPF32[$p$sroa$71$0$$sroa_idx204>>2];
 $add = (($a) + 1)|0;
 $q$sroa$3$0$$sroa_idx39 = (((($retval$0$i) + (($add*68)|0)|0)) + 16|0);
 $q$sroa$3$0$copyload = +HEAPF32[$q$sroa$3$0$$sroa_idx39>>2];
 $q$sroa$4$0$$sroa_idx41 = (((($retval$0$i) + (($add*68)|0)|0)) + 20|0);
 $q$sroa$4$0$copyload = +HEAPF32[$q$sroa$4$0$$sroa_idx41>>2];
 $q$sroa$5$0$$sroa_idx43 = (((($retval$0$i) + (($add*68)|0)|0)) + 24|0);
 $q$sroa$5$0$copyload = +HEAPF32[$q$sroa$5$0$$sroa_idx43>>2];
 $q$sroa$6$0$$sroa_idx45 = (((($retval$0$i) + (($add*68)|0)|0)) + 28|0);
 $q$sroa$6$0$copyload = +HEAPF32[$q$sroa$6$0$$sroa_idx45>>2];
 $q$sroa$7$0$$sroa_idx47 = (((($retval$0$i) + (($add*68)|0)|0)) + 32|0);
 $q$sroa$7$0$copyload = +HEAPF32[$q$sroa$7$0$$sroa_idx47>>2];
 $q$sroa$8$0$$sroa_idx49 = (((($retval$0$i) + (($add*68)|0)|0)) + 36|0);
 $q$sroa$8$0$copyload = +HEAPF32[$q$sroa$8$0$$sroa_idx49>>2];
 $q$sroa$9$0$$sroa_idx51 = (((($retval$0$i) + (($add*68)|0)|0)) + 40|0);
 $q$sroa$9$0$copyload = +HEAPF32[$q$sroa$9$0$$sroa_idx51>>2];
 $q$sroa$10$0$$sroa_idx53 = (((($retval$0$i) + (($add*68)|0)|0)) + 44|0);
 $q$sroa$10$0$copyload = +HEAPF32[$q$sroa$10$0$$sroa_idx53>>2];
 $q$sroa$1157$0$$sroa_idx58 = (((($retval$0$i) + (($add*68)|0)|0)) + 52|0);
 $q$sroa$1157$0$copyload = HEAP32[$q$sroa$1157$0$$sroa_idx58>>2]|0;
 $q$sroa$12$0$$sroa_idx60 = (((($retval$0$i) + (($add*68)|0)|0)) + 56|0);
 $q$sroa$12$0$copyload = +HEAPF32[$q$sroa$12$0$$sroa_idx60>>2];
 $q$sroa$13$0$$sroa_idx62 = (((($retval$0$i) + (($add*68)|0)|0)) + 60|0);
 $q$sroa$13$0$copyload = +HEAPF32[$q$sroa$13$0$$sroa_idx62>>2];
 $q$sroa$14$0$$sroa_idx64 = (((($retval$0$i) + (($add*68)|0)|0)) + 64|0);
 $q$sroa$14$0$copyload = +HEAPF32[$q$sroa$14$0$$sroa_idx64>>2];
 $sub = $q$sroa$3$0$copyload - $p$sroa$14$0$copyload;
 $mul = $sub * $0;
 $add5 = $mul + $p$sroa$14$0$copyload;
 $sub9 = $q$sroa$4$0$copyload - $p$sroa$19$0$copyload;
 $mul10 = $sub9 * $0;
 $add11 = $mul10 + $p$sroa$19$0$copyload;
 $sub15 = $q$sroa$5$0$copyload - $p$sroa$24$0$copyload;
 $mul16 = $sub15 * $0;
 $add17 = $mul16 + $p$sroa$24$0$copyload;
 $sub21 = $q$sroa$6$0$copyload - $p$sroa$29$0$copyload;
 $mul22 = $sub21 * $0;
 $add23 = $mul22 + $p$sroa$29$0$copyload;
 $sub27 = $q$sroa$7$0$copyload - $p$sroa$34$0$copyload;
 $mul28 = $sub27 * $0;
 $add29 = $mul28 + $p$sroa$34$0$copyload;
 $sub33 = $q$sroa$8$0$copyload - $p$sroa$39$0$copyload;
 $mul34 = $sub33 * $0;
 $add35 = $mul34 + $p$sroa$39$0$copyload;
 $sub39 = $q$sroa$9$0$copyload - $p$sroa$44$0$copyload;
 $mul40 = $sub39 * $0;
 $add41 = $mul40 + $p$sroa$44$0$copyload;
 $sub45 = $q$sroa$10$0$copyload - $p$sroa$49$0$copyload;
 $mul46 = $sub45 * $0;
 $add47 = $mul46 + $p$sroa$49$0$copyload;
 $conv = (+($p$sroa$57$0$copyload|0));
 $sub51 = (($q$sroa$1157$0$copyload) - ($p$sroa$57$0$copyload))|0;
 $conv52 = (+($sub51|0));
 $mul53 = $conv52 * $0;
 $add54 = $mul53 + $conv;
 $conv55 = (~~(($add54)));
 $sub59 = $q$sroa$12$0$copyload - $p$sroa$62$0$copyload;
 $mul60 = $sub59 * $0;
 $add61 = $mul60 + $p$sroa$62$0$copyload;
 $sub65 = $q$sroa$13$0$copyload - $p$sroa$67$0$copyload;
 $mul66 = $sub65 * $0;
 $add67 = $mul66 + $p$sroa$67$0$copyload;
 $sub71 = $q$sroa$14$0$copyload - $p$sroa$71$0$copyload;
 $mul72 = $sub71 * $0;
 $add73 = $mul72 + $p$sroa$71$0$copyload;
 (_lame_set_VBR_q($gfp,$p$sroa$0$0$copyload)|0);
 $tobool = ($enforce|0)!=(0);
 if ($tobool) {
  (_lame_set_quant_comp($gfp,$p$sroa$5$0$copyload)|0);
  (_lame_set_quant_comp_short($gfp,$p$sroa$8$0$copyload)|0);
 } else {
  $call79 = (_lame_get_quant_comp($gfp)|0);
  $cmp = ($call79|0)==(-1);
  if ($cmp) {
   (_lame_set_quant_comp($gfp,$p$sroa$5$0$copyload)|0);
  }
  $call93 = (_lame_get_quant_comp_short($gfp)|0);
  $cmp97 = ($call93|0)==(-1);
  if ($cmp97) {
   (_lame_set_quant_comp_short($gfp,$p$sroa$8$0$copyload)|0);
  }
 }
 $tobool105 = ($p$sroa$11$0$copyload|0)==(0);
 if (!($tobool105)) {
  (_lame_set_experimentalY($gfp,$p$sroa$11$0$copyload)|0);
 }
 if ($tobool) {
  (_lame_set_short_threshold_lrm($gfp,$add5)|0);
  (_lame_set_short_threshold_s($gfp,$add11)|0);
  (_lame_set_maskingadjust($gfp,$add17)|0);
  (_lame_set_maskingadjust_short($gfp,$add23)|0);
 } else {
  $call115 = (+_lame_get_short_threshold_lrm($gfp));
  $sub116 = $call115 + 1.0;
  $cmp119 = ($sub116 != $sub116) | (0.0 != 0.0) |($sub116 == 0.0);
  if ($cmp119) {
   (_lame_set_short_threshold_lrm($gfp,$add5)|0);
  }
  $call131 = (+_lame_get_short_threshold_s($gfp));
  $sub132 = $call131 + 1.0;
  $cmp135 = ($sub132 != $sub132) | (0.0 != 0.0) |($sub132 == 0.0);
  if ($cmp135) {
   (_lame_set_short_threshold_s($gfp,$add11)|0);
  }
  $call147 = (+_lame_get_maskingadjust($gfp));
  $cmp151 = ($call147 != $call147) | (0.0 != 0.0) |($call147 == 0.0);
  if ($cmp151) {
   (_lame_set_maskingadjust($gfp,$add17)|0);
  }
  $call163 = (+_lame_get_maskingadjust_short($gfp));
  $cmp167 = ($call163 != $call163) | (0.0 != 0.0) |($call163 == 0.0);
  if ($cmp167) {
   (_lame_set_maskingadjust_short($gfp,$add23)|0);
  }
 }
 $call174 = (_lame_get_VBR($gfp)|0);
 $cmp175 = ($call174|0)==(1);
 if ($cmp175) {
  label = 23;
 } else {
  $call177 = (_lame_get_VBR($gfp)|0);
  $cmp178 = ($call177|0)==(4);
  if ($cmp178) {
   label = 23;
  }
 }
 if ((label|0) == 23) {
  (_lame_set_ATHtype($gfp,5)|0);
 }
 if ($tobool) {
  (_lame_set_ATHlower($gfp,$add29)|0);
  (_lame_set_ATHcurve($gfp,$add35)|0);
  (_lame_set_athaa_sensitivity($gfp,$add41)|0);
 } else {
  $call188 = (+_lame_get_ATHlower($gfp));
  $cmp192 = ($call188 != $call188) | (0.0 != 0.0) |($call188 == 0.0);
  if ($cmp192) {
   (_lame_set_ATHlower($gfp,$add29)|0);
  }
  $call204 = (+_lame_get_ATHcurve($gfp));
  $sub205 = $call204 + 1.0;
  $cmp208 = ($sub205 != $sub205) | (0.0 != 0.0) |($sub205 == 0.0);
  if ($cmp208) {
   (_lame_set_ATHcurve($gfp,$add35)|0);
  }
  $call220 = (+_lame_get_athaa_sensitivity($gfp));
  $cmp224 = ($call220 != $call220) | (0.0 != 0.0) |($call220 == 0.0);
  if ($cmp224) {
   (_lame_set_athaa_sensitivity($gfp,$add41)|0);
  }
 }
 $cmp232 = $add47 > 0.0;
 do {
  if ($cmp232) {
   if ($tobool) {
    (_lame_set_interChRatio($gfp,$add47)|0);
    break;
   }
   $call240 = (+_lame_get_interChRatio($gfp));
   $sub241 = $call240 + 1.0;
   $cmp244 = ($sub241 != $sub241) | (0.0 != 0.0) |($sub241 == 0.0);
   if ($cmp244) {
    (_lame_set_interChRatio($gfp,$add47)|0);
   }
  }
 } while(0);
 $cmp253 = ($p$sroa$55$0$copyload|0)>(0);
 if ($cmp253) {
  $call256 = (_lame_get_exp_nspsytune($gfp)|0);
  $or = $call256 | 2;
  (_lame_set_exp_nspsytune($gfp,$or)|0);
 }
 $cmp260 = ($conv55|0)>(0);
 if ($cmp260) {
  $call263 = (_lame_get_exp_nspsytune($gfp)|0);
  $and = $call263 & 66060288;
  $cmp264 = ($and|0)==(0);
  if ($cmp264) {
   $shl = $conv55 << 20;
   $or268 = $call263 | $shl;
   (_lame_set_exp_nspsytune($gfp,$or268)|0);
  }
 }
 if ($tobool) {
  $conv275 = $add61;
  _lame_set_msfix($gfp,$conv275);
  $internal_flags = ((($gfp)) + 288|0);
  $1 = HEAP32[$internal_flags>>2]|0;
  $minval294 = ((($1)) + 280|0);
  HEAPF32[$minval294>>2] = $add67;
  $ATHfixpoint = ((($1)) + 224|0);
  HEAPF32[$ATHfixpoint>>2] = $add73;
  return;
 }
 $call277 = (+_lame_get_msfix($gfp));
 $sub278 = $call277 + 1.0;
 $cmp281 = ($sub278 != $sub278) | (0.0 != 0.0) |($sub278 == 0.0);
 if ($cmp281) {
  $conv285 = $add61;
  _lame_set_msfix($gfp,$conv285);
 }
 $VBR_q = ((($gfp)) + 164|0);
 HEAP32[$VBR_q>>2] = $a;
 HEAPF32[$VBR_q_frac>>2] = $0;
 $internal_flags = ((($gfp)) + 288|0);
 $1 = HEAP32[$internal_flags>>2]|0;
 $minval294 = ((($1)) + 280|0);
 HEAPF32[$minval294>>2] = $add67;
 $ATHfixpoint = ((($1)) + 224|0);
 HEAPF32[$ATHfixpoint>>2] = $add73;
 return;
}
function _L3psycho_anal_vbr($gfc,$buffer,$gr_out,$masking_ratio,$masking_MS_ratio,$percep_entropy,$percep_MS_entropy,$energy,$blocktype_d) {
 $gfc = $gfc|0;
 $buffer = $buffer|0;
 $gr_out = $gr_out|0;
 $masking_ratio = $masking_ratio|0;
 $masking_MS_ratio = $masking_MS_ratio|0;
 $percep_entropy = $percep_entropy|0;
 $percep_MS_entropy = $percep_MS_entropy|0;
 $energy = $energy|0;
 $blocktype_d = $blocktype_d|0;
 var $$$i = 0, $$conv111$i$i = 0, $$conv112$i$i = 0, $$conv18$i$i = 0, $$conv18$i$i511 = 0, $$conv73$i$i = 0, $$conv74$i$i = 0, $$lcssa = 0, $$pre = 0.0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i$i303 = 0, $$pre$i$i400 = 0, $$pre$i194 = 0, $$pre$i253 = 0.0, $$pre$i492 = 0.0, $$pre151$i = 0.0, $$pre152$i = 0, $$pre153$i = 0, $$pre165$i = 0.0;
 var $$pre166$i = 0, $$pre167$i = 0, $$pre253$i = 0.0, $$pre254$i = 0.0, $$pre256$i = 0, $$pre257$i = 0, $$pre713 = 0.0, $$pre714 = 0.0, $$pre715 = 0.0, $$pre716 = 0.0, $$pre717 = 0.0, $$pre718 = 0.0, $$pre719 = 0.0, $$pre720 = 0.0, $$pre721 = 0.0, $$pre722 = 0.0, $$pre723 = 0.0, $$pre724 = 0.0, $$pre725 = 0.0, $$pre726 = 0.0;
 var $$pre727 = 0.0, $$pre728 = 0.0, $$pre729 = 0.0, $$pre730 = 0.0, $$pre731 = 0.0, $$pre732 = 0.0, $$pre733 = 0.0, $$pre734 = 0.0, $$pre735 = 0.0, $$pre736 = 0.0, $$pre737 = 0.0, $$pre738 = 0.0, $$pre739 = 0.0, $$sink$i = 0, $$sink$i$i = 0, $$sink$i$i514 = 0, $$sink1$i$i = 0, $$sink1$i$i529 = 0, $$sink2$i$i = 0, $$sink2$i$i538 = 0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0.0, $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0.0, $115 = 0.0;
 var $116 = 0.0, $117 = 0.0, $118 = 0.0, $119 = 0.0, $12 = 0.0, $120 = 0.0, $121 = 0.0, $122 = 0, $123 = 0, $124 = 0.0, $125 = 0.0, $126 = 0, $127 = 0, $128 = 0, $129 = 0.0, $13 = 0.0, $130 = 0, $131 = 0.0, $132 = 0.0, $133 = 0.0;
 var $134 = 0.0, $135 = 0.0, $136 = 0, $137 = 0, $138 = 0, $139 = 0.0, $14 = 0.0, $14$phi = 0.0, $140 = 0.0, $141 = 0.0, $142 = 0.0, $143 = 0.0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0.0, $149 = 0, $15 = 0.0, $150 = 0.0;
 var $151 = 0.0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0.0, $158 = 0.0, $159 = 0, $16 = 0.0, $16$phi = 0.0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0.0, $166 = 0.0, $167 = 0.0, $168 = 0;
 var $169 = 0, $17 = 0.0, $170 = 0.0, $171 = 0.0, $172 = 0.0, $173 = 0, $174 = 0.0, $175 = 0.0, $176 = 0.0, $177 = 0, $178 = 0, $179 = 0, $18 = 0.0, $18$phi = 0.0, $180 = 0, $181 = 0.0, $182 = 0, $183 = 0.0, $184 = 0.0, $185 = 0.0;
 var $186 = 0.0, $187 = 0, $188 = 0.0, $189 = 0.0, $19 = 0.0, $190 = 0.0, $191 = 0.0, $192 = 0.0, $193 = 0.0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0.0, $2 = 0, $20 = 0.0, $20$phi = 0.0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0.0, $206 = 0.0, $207 = 0.0, $208 = 0.0, $209 = 0.0, $21 = 0.0, $210 = 0, $211 = 0, $212 = 0, $213 = 0.0, $214 = 0.0, $215 = 0.0, $216 = 0.0, $217 = 0.0, $218 = 0, $219 = 0.0, $22 = 0.0;
 var $22$phi = 0.0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0.0, $229 = 0.0, $23 = 0.0, $230 = 0.0, $231 = 0.0, $232 = 0.0, $233 = 0, $234 = 0, $235 = 0, $236 = 0.0, $237 = 0;
 var $238 = 0.0, $239 = 0.0, $24 = 0.0, $24$phi = 0.0, $240 = 0.0, $241 = 0.0, $242 = 0.0, $243 = 0, $244 = 0, $245 = 0, $246 = 0.0, $247 = 0.0, $248 = 0.0, $249 = 0.0, $25 = 0.0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0.0;
 var $255 = 0, $256 = 0.0, $257 = 0.0, $258 = 0, $259 = 0, $26 = 0.0, $26$phi = 0.0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0.0, $268 = 0.0, $269 = 0, $27 = 0.0, $270 = 0, $271 = 0.0;
 var $272 = 0.0, $273 = 0.0, $274 = 0, $275 = 0, $276 = 0.0, $277 = 0.0, $278 = 0.0, $279 = 0, $28 = 0.0, $28$phi = 0.0, $280 = 0.0, $281 = 0.0, $282 = 0.0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0.0, $288 = 0, $289 = 0.0;
 var $29 = 0.0, $290 = 0.0, $291 = 0.0, $292 = 0.0, $293 = 0.0, $294 = 0.0, $295 = 0, $296 = 0, $297 = 0, $298 = 0.0, $299 = 0, $3 = 0.0, $30 = 0.0, $30$phi = 0.0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0.0, $305 = 0.0;
 var $306 = 0.0, $307 = 0.0, $308 = 0.0, $309 = 0, $31 = 0.0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0.0, $320 = 0, $321 = 0, $322 = 0, $323 = 0;
 var $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0.0, $336 = 0, $337 = 0, $338 = 0.0, $339 = 0.0, $34 = 0.0, $340 = 0, $341 = 0;
 var $342 = 0.0, $343 = 0.0, $344 = 0.0, $345 = 0.0, $346 = 0.0, $347 = 0, $348 = 0, $349 = 0, $35 = 0.0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0.0, $356 = 0.0, $357 = 0.0, $358 = 0.0, $359 = 0.0, $36 = 0.0;
 var $36$phi = 0.0, $360 = 0.0, $361 = 0.0, $362 = 0.0, $363 = 0.0, $364 = 0.0, $365 = 0.0, $366 = 0.0, $367 = 0.0, $37 = 0.0, $38 = 0.0, $38$phi = 0.0, $39 = 0.0, $4 = 0.0, $40 = 0.0, $40$phi = 0.0, $41 = 0.0, $42 = 0.0, $42$phi = 0.0, $43 = 0.0;
 var $44 = 0.0, $44$phi = 0.0, $45 = 0.0, $46 = 0.0, $46$phi = 0.0, $47 = 0.0, $48 = 0.0, $48$phi = 0.0, $49 = 0.0, $5 = 0, $50 = 0.0, $50$phi = 0.0, $51 = 0.0, $52 = 0.0, $52$phi = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0;
 var $58 = 0.0, $59 = 0.0, $6 = 0.0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $73 = 0.0, $74 = 0.0, $75 = 0.0;
 var $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0, $85 = 0.0, $86 = 0.0, $87 = 0.0, $88 = 0, $89 = 0.0, $9 = 0, $90 = 0, $91 = 0, $92 = 0.0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ATH = 0, $ATH$i = 0, $ATH35 = 0, $ATH89 = 0, $ATH_offset_factor = 0, $add = 0, $add$1$i = 0.0, $add$2$i = 0.0, $add$i = 0, $add$i$i = 0.0, $add$i$i250 = 0.0, $add$i$i286 = 0.0, $add$i$i318 = 0.0, $add$i$i415 = 0.0;
 var $add$i$i574 = 0.0, $add$i131$i = 0.0, $add$i203 = 0.0, $add$i220 = 0.0, $add$i237 = 0.0, $add$i462 = 0.0, $add$i484 = 0.0, $add$ptr = 0, $add$ptr254 = 0, $add$ptr68 = 0, $add$us$i = 0, $add104$1$i = 0.0, $add104$2$i = 0.0, $add106$i$i = 0, $add107$i$i = 0, $add124$i = 0, $add13$i$i = 0.0, $add13$i$i333 = 0.0, $add13$i$i430 = 0.0, $add130$i = 0;
 var $add132$i = 0.0, $add147 = 0, $add15$i$i = 0, $add15$i$i505 = 0, $add16$i$i = 0.0, $add16$i$i336 = 0.0, $add16$i$i433 = 0.0, $add173$1$i = 0.0, $add173$2$i = 0.0, $add173$i = 0.0, $add177$1$i = 0.0, $add177$2$i = 0.0, $add177$i = 0.0, $add2$i$i = 0.0, $add2$i$i495 = 0.0, $add20$i = 0, $add20$us$i = 0, $add21$i = 0.0, $add21$i$i = 0.0, $add21$i$i578 = 0.0;
 var $add22$1$i = 0.0, $add22$2$i = 0.0, $add22$3$i = 0.0, $add22$4$i = 0.0, $add22$i = 0.0, $add22$us$1$i = 0.0, $add22$us$2$i = 0.0, $add22$us$3$i = 0.0, $add22$us$4$i = 0.0, $add22$us$i = 0.0, $add23$1$i606 = 0.0, $add23$2$i607 = 0.0, $add23$3$i609 = 0.0, $add23$4$i610 = 0.0, $add23$i604 = 0.0, $add23$us$1$i614 = 0.0, $add23$us$2$i615 = 0.0, $add23$us$3$i617 = 0.0, $add23$us$4$i618 = 0.0, $add23$us$i612 = 0.0;
 var $add240$i = 0, $add25$i = 0, $add26$1$i = 0.0, $add26$2$i = 0.0, $add26$i = 0.0, $add26$i271 = 0, $add27$i = 0, $add27$i$i = 0.0, $add27$i$i584 = 0.0, $add27$us$i = 0, $add29$i = 0.0, $add309$i = 0, $add312$i = 0, $add315$i = 0, $add33$1$i = 0.0, $add33$2$i = 0.0, $add33$3$i = 0.0, $add33$4$i = 0.0, $add33$i = 0.0, $add33$i$i = 0.0;
 var $add33$i$i531 = 0.0, $add33$lcssa$i$i = 0.0, $add33$lcssa$i$i534 = 0.0, $add33$us$1$i = 0.0, $add33$us$2$i = 0.0, $add33$us$3$i = 0.0, $add33$us$4$i = 0.0, $add33$us$i = 0.0, $add334$i$i = 0.0, $add337$i$i = 0.0, $add337$i$i519 = 0.0, $add34$i = 0, $add34$i$i = 0, $add34$i$i522 = 0, $add35$1$i605 = 0.0, $add35$2$i608 = 0.0, $add35$3$i = 0.0, $add35$4$i611 = 0.0, $add35$us$1$i613 = 0.0, $add35$us$2$i616 = 0.0;
 var $add35$us$3$i = 0.0, $add35$us$4$i619 = 0.0, $add36$i$i = 0.0, $add36$i$i524 = 0.0, $add37$i = 0.0, $add37$us$i = 0.0, $add38$i = 0.0, $add40$i = 0.0, $add40$i274 = 0, $add47$i = 0, $add55$us$i = 0, $add6$i$i = 0.0, $add6$i$i320 = 0.0, $add6$i$i417 = 0.0, $add61$i = 0, $add64$i$i = 0, $add65$i$i = 0, $add68$i$i = 0, $add69$i$i = 0, $add79$i = 0.0;
 var $add83 = 0, $adjust_factor = 0, $analysis = 0, $and = 0, $and$i = 0, $and62 = 0, $and99 = 0, $arraydecay$i = 0, $arraydecay34 = 0, $arraydecay36 = 0, $arraydecay88 = 0, $arraydecay90 = 0, $arrayidx$1$i = 0, $arrayidx$10$i = 0, $arrayidx$11$i = 0, $arrayidx$12$i = 0, $arrayidx$2$i = 0, $arrayidx$3$i = 0, $arrayidx$4$i = 0, $arrayidx$5$i = 0;
 var $arrayidx$6$i = 0, $arrayidx$7$i = 0, $arrayidx$8$i = 0, $arrayidx$9$i = 0, $arrayidx$i = 0, $arrayidx$i$i = 0, $arrayidx$i$i249 = 0, $arrayidx$i$i283 = 0, $arrayidx$i$i309 = 0, $arrayidx$i$i406 = 0, $arrayidx$i$i579 = 0, $arrayidx$i116$i = 0, $arrayidx$i133$i = 0, $arrayidx$i141$i = 0, $arrayidx$i230 = 0, $arrayidx$i258 = 0, $arrayidx$i355 = 0, $arrayidx$i369 = 0, $arrayidx$i481 = 0, $arrayidx1$i$i = 0;
 var $arrayidx10$1$i = 0, $arrayidx10$2$i = 0, $arrayidx10$i = 0, $arrayidx10$i$i = 0, $arrayidx10$i487 = 0, $arrayidx10$us$i = 0, $arrayidx100 = 0, $arrayidx100$1$i = 0, $arrayidx100$i = 0, $arrayidx101$1$i = 0, $arrayidx101$2$i = 0, $arrayidx103$i$i = 0, $arrayidx104$i$i = 0, $arrayidx105$i$i = 0, $arrayidx106$i$i = 0, $arrayidx11$1$i = 0, $arrayidx11$10$i = 0, $arrayidx11$11$i = 0, $arrayidx11$12$i = 0, $arrayidx11$2$i = 0;
 var $arrayidx11$3$i = 0, $arrayidx11$4$i = 0, $arrayidx11$5$i = 0, $arrayidx11$6$i = 0, $arrayidx11$7$i = 0, $arrayidx11$8$i = 0, $arrayidx11$9$i = 0, $arrayidx11$i = 0, $arrayidx11$i$i = 0, $arrayidx11$i$i290 = 0, $arrayidx11$i$i329 = 0, $arrayidx11$i$i426 = 0, $arrayidx11$i$i503 = 0, $arrayidx11$i261 = 0, $arrayidx11$i453 = 0, $arrayidx11$i488 = 0, $arrayidx110$i = 0, $arrayidx114$pre$phi$iZ2D = 0, $arrayidx117$i = 0, $arrayidx119$sink$i$i = 0;
 var $arrayidx12$i = 0, $arrayidx12$i$i = 0, $arrayidx12$i$i331 = 0, $arrayidx12$i$i428 = 0, $arrayidx12$i490 = 0, $arrayidx120$sink$i$i = 0, $arrayidx121$i = 0, $arrayidx122$i = 0, $arrayidx125$i = 0, $arrayidx128 = 0, $arrayidx128$i = 0, $arrayidx13$1$i = 0, $arrayidx13$2$i = 0, $arrayidx13$i = 0, $arrayidx13$i263 = 0, $arrayidx13$i359 = 0, $arrayidx13$us$i = 0, $arrayidx131$i = 0, $arrayidx134 = 0, $arrayidx135$i = 0;
 var $arrayidx138$i = 0, $arrayidx139 = 0, $arrayidx14$i$i = 0, $arrayidx14$i$i293 = 0, $arrayidx14$i$i334 = 0, $arrayidx14$i$i431 = 0, $arrayidx14$i$i504 = 0, $arrayidx142 = 0, $arrayidx148 = 0, $arrayidx15$i265 = 0, $arrayidx159$i = 0, $arrayidx16$i = 0, $arrayidx16$i266 = 0, $arrayidx169 = 0, $arrayidx169$1$i = 0, $arrayidx169$2$i = 0, $arrayidx169$i = 0, $arrayidx17$i$i = 0, $arrayidx17$i$i337 = 0, $arrayidx17$i$i434 = 0;
 var $arrayidx172$1$i = 0, $arrayidx172$2$i = 0, $arrayidx172$i = 0, $arrayidx176$1$i = 0, $arrayidx176$2$i = 0, $arrayidx176$i = 0, $arrayidx178 = 0, $arrayidx18$i$i = 0, $arrayidx18$i$i338 = 0, $arrayidx18$i$i435 = 0, $arrayidx185 = 0, $arrayidx19$1$i$phi$trans$insert = 0, $arrayidx19$2$i$phi$trans$insert = 0, $arrayidx19$3$i$phi$trans$insert = 0, $arrayidx19$4$i$phi$trans$insert = 0, $arrayidx19$i = 0, $arrayidx19$i469 = 0, $arrayidx19$us$1$i$phi$trans$insert = 0, $arrayidx19$us$2$i$phi$trans$insert = 0, $arrayidx19$us$3$i$phi$trans$insert = 0;
 var $arrayidx19$us$4$i$phi$trans$insert = 0, $arrayidx197$1$i = 0, $arrayidx197$2$i = 0, $arrayidx197$i = 0, $arrayidx2$i = 0, $arrayidx2$i356 = 0, $arrayidx208$10$i = 0, $arrayidx208$2$i = 0, $arrayidx208$3$i = 0, $arrayidx208$4$i = 0, $arrayidx208$5$i = 0, $arrayidx208$6$i = 0, $arrayidx208$7$i = 0, $arrayidx208$8$i = 0, $arrayidx208$9$i = 0, $arrayidx209 = 0, $arrayidx21$1$i = 0, $arrayidx21$2$i = 0, $arrayidx21$3$i = 0, $arrayidx21$4$i = 0;
 var $arrayidx21$i = 0, $arrayidx21$i376 = 0, $arrayidx21$i470 = 0, $arrayidx21$us$1$i = 0, $arrayidx21$us$2$i = 0, $arrayidx21$us$3$i = 0, $arrayidx21$us$4$i = 0, $arrayidx21$us$i = 0, $arrayidx211 = 0, $arrayidx217$i = 0, $arrayidx219$i = 0, $arrayidx225$i = 0, $arrayidx232$i = 0, $arrayidx236$i = 0, $arrayidx239 = 0, $arrayidx24$i = 0, $arrayidx24$i269 = 0, $arrayidx24$i540 = 0, $arrayidx241 = 0, $arrayidx255$1$i = 0;
 var $arrayidx255$2$i = 0, $arrayidx255$i = 0, $arrayidx259 = 0, $arrayidx26$i = 0, $arrayidx266 = 0, $arrayidx268 = 0, $arrayidx27$i = 0, $arrayidx270 = 0, $arrayidx276$i = 0, $arrayidx278$i = 0, $arrayidx28$1$i$phi$trans$insert = 0, $arrayidx28$2$i$phi$trans$insert = 0, $arrayidx28$3$i$phi$trans$insert = 0, $arrayidx28$4$i$phi$trans$insert = 0, $arrayidx28$i$phi$trans$insert = 0, $arrayidx28$i541 = 0, $arrayidx28$us$1$i$phi$trans$insert = 0, $arrayidx28$us$2$i$phi$trans$insert = 0, $arrayidx28$us$3$i$phi$trans$insert = 0, $arrayidx28$us$4$i$phi$trans$insert = 0;
 var $arrayidx28$us$i$phi$trans$insert = 0, $arrayidx281$sink = 0, $arrayidx288 = 0, $arrayidx29$i = 0, $arrayidx294$i = 0, $arrayidx30 = 0, $arrayidx30$i = 0, $arrayidx30$i543 = 0, $arrayidx311$i = 0, $arrayidx314$i = 0, $arrayidx319$phi$trans$insert$i = 0, $arrayidx32$1$i$phi$trans$insert = 0, $arrayidx32$2$i$phi$trans$insert = 0, $arrayidx32$3$i$phi$trans$insert = 0, $arrayidx32$4$i$phi$trans$insert = 0, $arrayidx32$i$phi$trans$insert = 0, $arrayidx32$i224 = 0, $arrayidx32$i472 = 0, $arrayidx32$us$1$i$phi$trans$insert = 0, $arrayidx32$us$2$i$phi$trans$insert = 0;
 var $arrayidx32$us$3$i$phi$trans$insert = 0, $arrayidx32$us$4$i$phi$trans$insert = 0, $arrayidx32$us$i$phi$trans$insert = 0, $arrayidx33$i = 0, $arrayidx330$i = 0, $arrayidx34$i = 0, $arrayidx341$i = 0, $arrayidx35$i = 0, $arrayidx35$i$i = 0, $arrayidx35$i$i523 = 0, $arrayidx35$i544 = 0, $arrayidx355$i = 0, $arrayidx36$i = 0, $arrayidx360$i = 0, $arrayidx361$sink$i = 0, $arrayidx364$i = 0, $arrayidx365$i = 0, $arrayidx39$i = 0, $arrayidx39$i225 = 0, $arrayidx39$i546 = 0;
 var $arrayidx39$us$i = 0, $arrayidx4$i$i = 0, $arrayidx4$i$i285 = 0, $arrayidx4$i$i317 = 0, $arrayidx4$i$i414 = 0, $arrayidx41$i$i = 0, $arrayidx42$i = 0, $arrayidx42$i$i = 0, $arrayidx42$i$i526 = 0, $arrayidx42$i474 = 0, $arrayidx43$i = 0, $arrayidx43$i$i = 0, $arrayidx45$i = 0, $arrayidx45$i256 = 0, $arrayidx45$i549 = 0, $arrayidx45$us$i = 0, $arrayidx49$i = 0, $arrayidx49$i$i = 0, $arrayidx49$i276 = 0, $arrayidx49$us$i = 0;
 var $arrayidx5$1$i = 0, $arrayidx5$1$i454 = 0, $arrayidx5$10$i = 0, $arrayidx5$11$i = 0, $arrayidx5$12$i = 0, $arrayidx5$2$i = 0, $arrayidx5$2$i455 = 0, $arrayidx5$3$i = 0, $arrayidx5$4$i = 0, $arrayidx5$5$i = 0, $arrayidx5$6$i = 0, $arrayidx5$7$i = 0, $arrayidx5$8$i = 0, $arrayidx5$9$i = 0, $arrayidx5$i = 0, $arrayidx5$i$i = 0, $arrayidx5$i$i287 = 0, $arrayidx5$i$i319 = 0, $arrayidx5$i$i416 = 0, $arrayidx5$i$i497 = 0;
 var $arrayidx5$i219 = 0, $arrayidx5$i232 = 0, $arrayidx5$i371 = 0, $arrayidx5$i452 = 0, $arrayidx50$i = 0, $arrayidx50$i$i = 0, $arrayidx50$i550 = 0, $arrayidx51$i = 0, $arrayidx53$i = 0, $arrayidx54$i = 0, $arrayidx55$i = 0, $arrayidx56$us$i = 0, $arrayidx58$i = 0, $arrayidx6$1$i = 0, $arrayidx6$10$i = 0, $arrayidx6$11$i = 0, $arrayidx6$12$i = 0, $arrayidx6$2$i = 0, $arrayidx6$3$i = 0, $arrayidx6$4$i = 0;
 var $arrayidx6$5$i = 0, $arrayidx6$6$i = 0, $arrayidx6$7$i = 0, $arrayidx6$8$i = 0, $arrayidx6$9$i = 0, $arrayidx6$i = 0, $arrayidx6$i460 = 0, $arrayidx6$i483 = 0, $arrayidx61$i$i = 0, $arrayidx62$i$i = 0, $arrayidx62$us$i = 0, $arrayidx63 = 0, $arrayidx63$i = 0, $arrayidx63$i$i = 0, $arrayidx64$i$i = 0, $arrayidx66$i = 0, $arrayidx67$i$i = 0, $arrayidx68$i = 0, $arrayidx68$i$i = 0, $arrayidx7$i = 0;
 var $arrayidx7$i$i = 0, $arrayidx7$i365 = 0, $arrayidx70$i = 0, $arrayidx74$i = 0, $arrayidx75$i = 0, $arrayidx75$i594 = 0, $arrayidx76$i = 0, $arrayidx78$i = 0, $arrayidx79$i = 0, $arrayidx8$1$i = 0, $arrayidx8$2$i = 0, $arrayidx8$i = 0, $arrayidx8$i$i = 0, $arrayidx8$i$i295 = 0, $arrayidx8$i$i348 = 0, $arrayidx8$i$i445 = 0, $arrayidx8$i260 = 0, $arrayidx8$i358 = 0, $arrayidx8$us$i = 0, $arrayidx81$sink$i$i = 0;
 var $arrayidx82 = 0, $arrayidx82$sink$i$i = 0, $arrayidx9$i = 0, $arrayidx9$i$i = 0, $arrayidx9$i$i296 = 0, $arrayidx9$i$i349 = 0, $arrayidx9$i$i446 = 0, $arrayidx9$i461 = 0, $arrayidx9$i486 = 0, $arrayidx9$us$i = 0, $arrayidx91$i = 0, $arrayidx91$i$i = 0, $arrayidx92$i$i = 0, $arrayidx92$i$i536 = 0, $arrayidx93$i$i = 0, $arrayidx94$1$i = 0, $arrayidx94$2$i = 0, $arrayidx94$i = 0, $arrayidx95$1$i = 0, $arrayidx95$2$i = 0;
 var $avg$i = 0, $b$0$lcssa$i$i = 0, $b$0$lcssa$i$i532 = 0, $b$012$i = 0, $b$0143$i = 0, $b$0156$i = 0, $b$031$i$i = 0, $b$05$i$i = 0, $b$05$i$i521 = 0, $b$069$i$i = 0, $b$069$i$i308 = 0, $b$069$i$i405 = 0, $b$1$lcssa$i$i = 0, $b$1$lcssa$i$i324 = 0, $b$1$lcssa$i$i421 = 0, $b$1131$i = 0, $b$1143$i$ph = 0, $b$163$i$i = 0, $b$163$i$i316 = 0, $b$163$i$i413 = 0;
 var $b$2118$i$ph = 0, $blocktype$0$i = 0, $brmerge = 0, $call$1$i = 0.0, $call$2$i = 0.0, $call$i = 0.0, $call$i239 = 0.0, $call19$i$i = 0.0, $call19$i$i576 = 0.0, $call280$sink = 0.0, $cd_psy = 0, $channels_out = 0, $channels_out$i = 0, $chn$014$us$i = 0, $chn$021$i = 0, $chn$0238$i = 0, $chn$0238$us$i = 0, $chn$0665 = 0, $chn$1231$i = 0, $chn$1659 = 0;
 var $chn$1660 = 0, $chn$1661 = 0, $chn$1662 = 0, $chn$1663 = 0, $chn$2645 = 0, $chn$3651 = 0, $chn$3652 = 0, $chn$3653 = 0, $chn$3654 = 0, $chn$4643 = 0, $chn$5638 = 0, $chn$6635 = 0, $cmp = 0, $cmp$i$i = 0, $cmp$i$i343 = 0, $cmp$i$i440 = 0, $cmp$i$i496 = 0, $cmp$i112$i = 0, $cmp$i130$i = 0, $cmp$i134$i = 0;
 var $cmp$i192 = 0, $cmp$i213 = 0, $cmp$i280 = 0, $cmp$i456 = 0, $cmp1$i = 0, $cmp1$i$i = 0, $cmp1$i$i553 = 0, $cmp10$i$i = 0, $cmp10$i$i562 = 0, $cmp104$i = 0, $cmp108117$i = 0, $cmp11$1$i = 0, $cmp11$2$i = 0, $cmp11$i = 0, $cmp115$i = 0, $cmp126$i = 0, $cmp131 = 0, $cmp131$i = 0, $cmp136$i = 0, $cmp139$i = 0;
 var $cmp14$1$i = 0, $cmp14$2$i = 0, $cmp14$i = 0, $cmp14$i$i = 0, $cmp14$i$i570 = 0, $cmp142$i = 0, $cmp143 = 0, $cmp145$i = 0, $cmp147$i = 0, $cmp149 = 0, $cmp153 = 0, $cmp153142$i = 0, $cmp16$i$i = 0, $cmp16$i$i572 = 0, $cmp161 = 0, $cmp166 = 0, $cmp170 = 0, $cmp179 = 0, $cmp182$1$i = 0, $cmp182$2$i = 0;
 var $cmp182$i = 0, $cmp18664 = 0, $cmp190$1$i = 0, $cmp190$2$i = 0, $cmp190$i = 0, $cmp2$i = 0, $cmp2$i$i = 0, $cmp2$i$i310 = 0, $cmp2$i$i407 = 0, $cmp2$i217 = 0, $cmp2$i373 = 0, $cmp2$i459 = 0, $cmp20$i = 0, $cmp202 = 0, $cmp209$1$i = 0, $cmp209$10$i = 0, $cmp209$2$i = 0, $cmp209$3$i = 0, $cmp209$4$i = 0, $cmp209$5$i = 0;
 var $cmp209$6$i = 0, $cmp209$7$i = 0, $cmp209$8$i = 0, $cmp209$9$i = 0, $cmp209$i = 0, $cmp21$i = 0, $cmp21$i597 = 0, $cmp22146$i = 0, $cmp222$i$i = 0, $cmp233$i = 0, $cmp237$i = 0, $cmp24$i$i = 0, $cmp24$i$i582 = 0, $cmp251 = 0, $cmp256 = 0, $cmp256$1$i = 0, $cmp256$2$i = 0, $cmp256$i = 0, $cmp260 = 0, $cmp262$1$i = 0;
 var $cmp262$2$i = 0, $cmp262$i = 0, $cmp266$1$i = 0, $cmp266$2$i = 0, $cmp266$i = 0, $cmp269$1$i = 0, $cmp269$2$i = 0, $cmp269$i = 0, $cmp272 = 0, $cmp279$i = 0, $cmp28 = 0, $cmp28$i = 0, $cmp28$i$i297 = 0, $cmp28$i$i353 = 0, $cmp28$i$i450 = 0, $cmp282$i$i = 0, $cmp282$i$i516 = 0, $cmp29$i$i = 0, $cmp295$i = 0, $cmp3$i$i = 0;
 var $cmp3$i$i322 = 0, $cmp3$i$i419 = 0, $cmp303$i = 0, $cmp31 = 0, $cmp3134$i = 0, $cmp352$i = 0, $cmp357$i = 0, $cmp362$i$i = 0, $cmp362$i$i312 = 0, $cmp362$i$i409 = 0, $cmp37$i$i = 0, $cmp38$i$i = 0, $cmp4$i = 0, $cmp4$i$i = 0, $cmp4$i$i555 = 0, $cmp4$i379 = 0, $cmp4$i382 = 0, $cmp4$i388 = 0, $cmp4$i467 = 0, $cmp40 = 0;
 var $cmp43$i$i = 0, $cmp43121$i = 0, $cmp44$i$i = 0, $cmp46$i = 0, $cmp5$i$i = 0, $cmp50$i = 0, $cmp50$i$i = 0, $cmp51$i = 0, $cmp51$i$i = 0, $cmp511$i = 0, $cmp54$i = 0, $cmp6$1$i = 0, $cmp6$2$i = 0, $cmp6$i$i = 0, $cmp6$i$i498 = 0, $cmp6$i201 = 0, $cmp6$i233 = 0, $cmp6$us$i = 0, $cmp61$i = 0, $cmp613$i = 0;
 var $cmp67230$i = 0, $cmp68$i$i = 0, $cmp68$i$i301 = 0, $cmp68$i$i398 = 0, $cmp7$i = 0, $cmp7$i$i = 0, $cmp7$i$i289 = 0, $cmp7$i$i327 = 0, $cmp7$i$i424 = 0, $cmp7$i$i560 = 0, $cmp70$i = 0, $cmp7237$i = 0, $cmp79$i = 0, $cmp79$not = 0, $cmp8 = 0, $cmp82$i = 0, $cmp84$i = 0, $cmp84$not = 0, $cmp86$i = 0, $cmp87$i$i = 0;
 var $cmp88$i$i = 0, $cmp9$i = 0, $cmp92$i = 0, $cmp93$i = 0, $cmp93$i$i = 0, $cmp94$i$i = 0, $cmp96 = 0, $cmp96$i = 0, $cmp98$i = 0, $cond = 0, $cond$i = 0, $cond$i$i = 0, $cond$i$i311 = 0, $cond$i$i408 = 0, $cond$i212 = 0, $cond$i278 = 0.0, $cond101$i = 0.0, $cond109$i = 0.0, $cond109$sink$i = 0.0, $cond12 = 0;
 var $cond158 = 0.0, $cond207 = 0.0, $cond261$1$i = 0.0, $cond261$2$i = 0.0, $cond261$i = 0.0, $cond5$i = 0, $cond6 = 0.0, $conv = 0.0, $conv$1$i = 0.0, $conv$2$i = 0.0, $conv$i = 0.0, $conv$i$i = 0.0, $conv$i$i273 = 0.0, $conv$i$i507 = 0.0, $conv$i114$i = 0.0, $conv$i136$i = 0.0, $conv$i227 = 0.0, $conv$i236 = 0.0, $conv$i262 = 0, $conv$i542 = 0;
 var $conv108$i$i = 0.0, $conv109$i$i = 0.0, $conv111$i$i = 0, $conv112$i$i = 0, $conv116$i$i = 0, $conv117$i$i = 0, $conv13$i = 0.0, $conv130 = 0.0, $conv14$i = 0.0, $conv14$i264 = 0, $conv17$i = 0.0, $conv18$1$i = 0.0, $conv18$2$i = 0.0, $conv18$i = 0.0, $conv18$i$i = 0, $conv18$i$i510 = 0, $conv19$1$i = 0.0, $conv19$2$i = 0.0, $conv19$i = 0.0, $conv20$i = 0.0;
 var $conv20$i$i = 0, $conv20$i$i577 = 0, $conv22$1$i = 0.0, $conv22$2$i = 0.0, $conv22$i = 0.0, $conv22$i240 = 0.0, $conv220$i = 0.0, $conv23$i$i = 0, $conv23$i$i512 = 0, $conv25$1$i = 0.0, $conv25$2$i = 0.0, $conv25$i = 0.0, $conv25$i270 = 0, $conv27$1$i = 0.0, $conv27$2$i = 0.0, $conv27$i = 0.0, $conv286 = 0.0, $conv3$i$i = 0.0, $conv34$i = 0, $conv46$i = 0;
 var $conv57$i = 0.0, $conv57$mul60$i = 0.0, $conv59$i = 0.0, $conv70$i$i = 0.0, $conv71$i = 0.0, $conv71$i$i = 0.0, $conv73$i$i = 0, $conv74$i$i = 0, $conv78$i$i = 0, $conv79$i$i = 0, $dd$0$lcssa$i = 0, $dd$0$lcssa$i589 = 0, $dd$0122$i = 0, $dd$0148$i = 0, $dd_n$0$lcssa$i = 0, $dd_n$0$lcssa$i590 = 0, $dec$i = 0, $dec$i466 = 0, $dec34$i = 0, $dec44$i = 0;
 var $div$1$i = 0.0, $div$1$i243 = 0.0, $div$2$i = 0.0, $div$2$i245 = 0.0, $div$i = 0.0, $div$i$i = 0.0, $div$i$i509 = 0.0, $div$i113$i = 0.0, $div$i137$i = 0.0, $div$i204 = 0.0, $div$i238 = 0.0, $div$i275 = 0, $div$i380 = 0.0, $div$i383 = 0.0, $div$i389 = 0.0, $div$i593 = 0, $div110$i$i = 0.0, $div111$i$i = 0.0, $div12$i$i = 0.0, $div12$i$i565 = 0.0;
 var $div129$i = 0, $div142$i = 0.0, $div154$i = 0.0, $div231$i = 0, $div72$i$i = 0.0, $div73$i$i = 0.0, $eb = 0, $ebb$0$lcssa$i = 0.0, $ebb$0$lcssa$i$i = 0.0, $ebb$0136$i = 0.0, $ebb$024$i$i = 0.0, $ecb$0$be$i = 0.0, $ecb$0$be$i557 = 0.0, $ecb$0$lcssa$i = 0.0, $ecb$0$lcssa$i591 = 0.0, $ecb$0124$i = 0.0, $ecb$0147$i = 0.0, $ecb_limit81$0$i = 0.0, $ecb_limit_1$0$i = 0.0, $ecb_limit_2$0$i = 0.0;
 var $en$i = 0, $en$us$i = 0, $en53$us$i = 0, $en_short$i = 0, $enn$072$i$i = 0.0, $enn$072$i$i305 = 0.0, $enn$072$i$i402 = 0.0, $enn$1$lcssa$i$i = 0.0, $enn$1$lcssa$i$i326 = 0.0, $enn$1$lcssa$i$i423 = 0.0, $enn$1$sink$i$i = 0.0, $enn$1$sink$i$i346 = 0.0, $enn$1$sink$i$i443 = 0.0, $enn$165$i$i = 0.0, $enn$165$i$i314 = 0.0, $enn$165$i$i411 = 0.0, $exitcond = 0, $exitcond$i = 0, $exitcond$i$i = 0, $exitcond$i207 = 0;
 var $exitcond$i228 = 0, $exitcond$i246 = 0, $exitcond$i360 = 0, $exitcond$i367 = 0, $exitcond$i378 = 0, $exitcond149$i = 0, $exitcond150$i = 0, $exitcond162$i = 0, $exitcond163$i = 0, $exitcond164$i = 0, $exitcond241$i = 0, $exitcond242$i = 0, $exitcond245$i = 0, $exitcond247$i = 0, $exitcond249$i = 0, $exitcond250$i = 0, $exitcond251$i = 0, $exitcond252$i = 0, $exitcond65$i = 0, $exitcond683 = 0;
 var $exitcond684 = 0, $exitcond687 = 0, $exitcond688 = 0, $exitcond691 = 0, $exitcond692 = 0, $exitcond699 = 0, $exitcond700 = 0, $exitcond703 = 0, $exitcond710 = 0, $fabsf$i = 0.0, $factor$0$1$i = 0.0, $factor$0$2$i = 0.0, $factor$0$i = 0.0, $fftenergy = 0, $fftenergy_s = 0, $force_short_block_calc54 = 0, $i$0138$i = 0, $i$0236$i = 0, $i$0236$us$i = 0, $i$026$i$i = 0;
 var $i$08$i$i = 0, $i$1216$i = 0, $i$3224$i = 0, $i$6228$i = 0, $inc = 0, $inc$i$i = 0, $inc$i$i251 = 0, $inc$i$i288 = 0, $inc$i$i321 = 0, $inc$i$i418 = 0, $inc$i206 = 0, $inc$i226 = 0, $inc$i366 = 0, $inc$i377 = 0, $inc$i485 = 0, $inc$us$i = 0, $inc10$i$i = 0, $inc10$i$i350 = 0, $inc10$i$i447 = 0, $inc105$i = 0;
 var $inc110 = 0, $inc113 = 0, $inc12$i$i = 0, $inc14$i = 0, $inc15$i = 0, $inc151$i = 0, $inc213 = 0, $inc229 = 0, $inc232 = 0, $inc243 = 0, $inc247$i = 0, $inc25$i$i = 0, $inc25$i$i341 = 0, $inc25$i$i438 = 0, $inc26$i$i = 0, $inc26$i$i342 = 0, $inc26$i$i439 = 0, $inc291 = 0, $inc31$i = 0, $inc367$i = 0;
 var $inc51 = 0, $inc59$i = 0, $inc6$i$i = 0, $inc64$i = 0, $inc64$us$i = 0, $inc76 = 0, $inc8$i = 0, $inc86$i = 0, $ispos$i$i = 0, $ispos$i$i568 = 0, $j$0144$i = 0, $j$030$i$i = 0, $j$046$i = 0, $j$063$i = 0, $j$1$lcssa$i = 0, $j$1$lcssa$i$i = 0, $j$1137$i = 0, $j$123$i$i = 0, $j$145$i = 0, $j$162$i = 0;
 var $j$2132$i = 0, $j$260$i = 0, $j$3$i = 0, $j$3$lcssa$i = 0, $j$3119$i = 0, $j$3125$i = 0, $j$359$i = 0, $k$0157$i = 0, $k$1$i = 0, $k$1$lcssa$i = 0, $k$1144$i = 0, $k$1150$i = 0, $kk$0126$i = 0, $kk$0126$in$i = 0, $kk$0151$i = 0, $kk$0151$in$i = 0, $last_thm = 0, $loudness_power$09$i$i = 0.0, $m$0$i$i = 0.0, $m$0$i$i499 = 0.0;
 var $m$0$lcssa$i = 0.0, $m$0$lcssa$i$i = 0.0, $m$0135$i = 0.0, $m$025$i$i = 0.0, $m$1$i = 0.0, $m$1$i$i = 0.0, $m$1$i$i527 = 0.0, $m$1$i139$i = 0.0, $m$2$i$i = 0.0, $m$2$i$i528 = 0.0, $m$3$i$i = 0.0, $m$3$i$i537 = 0.0, $m1$addr$0$i$i = 0.0, $m1$addr$0$i$i552 = 0.0, $m1$addr$1$i$i = 0.0, $m1$addr$1$i$i586 = 0.0, $m2$addr$0$i$i = 0.0, $m2$addr$0$i$i554 = 0.0, $mask_idx_s$i = 0, $masking_lower31$i = 0;
 var $masking_lower6$i = 0, $mode = 0, $mr$0 = 0, $msfix = 0, $mul = 0.0, $mul$1$i$neg = 0.0, $mul$1$i242 = 0.0, $mul$2$i$neg = 0.0, $mul$2$i244 = 0.0, $mul$3$i$neg = 0.0, $mul$4$i$neg = 0.0, $mul$i$i = 0.0, $mul$i$i252 = 0.0, $mul$i$i292 = 0.0, $mul$i$i332 = 0.0, $mul$i$i429 = 0.0, $mul$i$i500 = 0.0, $mul$i$neg = 0.0, $mul$i115$i = 0.0, $mul$i132$i = 0.0;
 var $mul$i135$i = 0.0, $mul$i200 = 0.0, $mul$i221 = 0.0, $mul$i234 = 0.0, $mul$i259 = 0.0, $mul$i357 = 0.0, $mul$i381 = 0.0, $mul$i384 = 0.0, $mul$i390 = 0.0, $mul$i463 = 0.0, $mul$i489 = 0.0, $mul$us$1$i$neg = 0.0, $mul$us$2$i$neg = 0.0, $mul$us$3$i$neg = 0.0, $mul$us$4$i$neg = 0.0, $mul$us$i$neg = 0.0, $mul10$i = 0.0, $mul10$i$i = 0.0, $mul10$i$i502 = 0.0, $mul100$i$i = 0.0;
 var $mul101$i$i = 0.0, $mul102$i = 0.0, $mul109$i$i = 0.0, $mul110$i$i = 0.0, $mul12$i = 0.0, $mul123$i = 0.0, $mul124$i = 0.0, $mul129 = 0.0, $mul13$1$i = 0.0, $mul13$2$i = 0.0, $mul13$i = 0.0, $mul13$i465 = 0.0, $mul135$i = 0.0, $mul146$i = 0.0, $mul149$i = 0.0, $mul15$i$i = 0.0, $mul15$i$i335 = 0.0, $mul15$i$i432 = 0.0, $mul17$1$i = 0.0, $mul17$2$i = 0.0;
 var $mul17$i = 0.0, $mul17$i$i = 0.0, $mul17$i$i508 = 0.0, $mul17$i267 = 0.0, $mul18$i = 0.0, $mul181$1$i = 0.0, $mul181$2$i = 0.0, $mul181$i = 0.0, $mul189$1$i = 0.0, $mul189$2$i = 0.0, $mul189$i = 0.0, $mul19$i = 0.0, $mul19$i223 = 0.0, $mul2$i$i = 0.0, $mul20$i = 0.0, $mul20$i$i = 0.0, $mul20$i$i339 = 0.0, $mul20$i$i436 = 0.0, $mul210 = 0.0, $mul22$i$i = 0.0;
 var $mul22$i$i294 = 0.0, $mul22$i$i340 = 0.0, $mul22$i$i437 = 0.0, $mul22$i$i580 = 0.0, $mul23$1$i = 0.0, $mul23$2$i = 0.0, $mul23$i = 0.0, $mul24$1$i = 0.0, $mul24$2$i = 0.0, $mul24$i = 0.0, $mul26$i = 0.0, $mul265$1$i = 0.0, $mul265$2$i = 0.0, $mul265$i = 0.0, $mul268$i = 0.0, $mul27$i = 0.0, $mul28$i = 0.0, $mul30$i = 0.0, $mul31$i = 0.0, $mul32$i = 0.0;
 var $mul34$1$i = 0.0, $mul34$2$i$neg = 0.0, $mul34$3$i = 0.0, $mul34$4$i$neg = 0.0, $mul34$i$neg = 0.0, $mul34$us$1$i = 0.0, $mul34$us$2$i$neg = 0.0, $mul34$us$3$i = 0.0, $mul34$us$4$i$neg = 0.0, $mul34$us$i$neg = 0.0, $mul35$i = 0.0, $mul36$i = 0.0, $mul37$i = 0.0, $mul37$i545 = 0.0, $mul39$i = 0, $mul39$i473 = 0.0, $mul40$i = 0.0, $mul41$i = 0, $mul43$i = 0.0, $mul44$i = 0.0;
 var $mul50$i = 0.0, $mul52$i = 0.0, $mul56$i = 0.0, $mul56$i$i = 0.0, $mul57$i$i = 0.0, $mul58$i$i = 0.0, $mul59$i$i = 0.0, $mul60$i = 0.0, $mul60$i592 = 0, $mul62$i = 0, $mul64$i = 0.0, $mul65$i = 0.0, $mul71$i$i = 0.0, $mul72$i$i = 0.0, $mul76$i = 0.0, $mul76$i595 = 0.0, $mul77$i = 0.0, $mul8$i = 0.0, $mul80$i = 0.0, $mul88$i = 0.0;
 var $mul98$i$i = 0.0, $mul99$i$i = 0.0, $n_sb$i$i = 0, $n_sb$i$i300 = 0, $n_sb$i$i397 = 0, $neg$i$i = 0, $neg$i$i569 = 0, $npart = 0, $npart$i = 0, $npart$i$i = 0, $npart$i480 = 0, $npart1$i$i = 0, $npart1$i$i302 = 0, $npart1$i$i399 = 0, $npart92 = 0, $ns_attacks = 0, $ns_uselongblock$0$i = 0, $or$cond = 0, $or$cond$1$i = 0, $or$cond$2$i = 0;
 var $or$cond$i = 0, $or$cond$i457 = 0, $or$cond1 = 0, $or$cond214$1$i = 0, $or$cond214$2$i = 0, $or$cond214$i = 0, $or$cond603 = 0, $p$0221$i = 0.0, $p$1$i = 0.0, $p$2$i = 0.0, $pe_l$019$i = 0.0, $pe_l$2$i = 0.0, $pe_s$025$i = 0.0, $pe_s$3$1$i = 0.0, $pe_s$3$2$i = 0.0, $pe_s$3$i = 0.0, $pf$0223$i = 0, $pf$1$add$i = 0, $pf$1$idx220$i = 0, $pf$1$ptr$i = 0;
 var $pf$1$ptr222$i = 0, $pinfo = 0, $pinfo$i = 0, $pinfo$i210 = 0, $ppe$0 = 0, $prev_thm$0 = 0.0, $prev_thm$0$in = 0, $prev_thm$1 = 0.0, $ratio$0$i$i = 0.0, $ratio$0$i$i567 = 0.0, $rem$i = 0, $s3$i = 0, $s3$i539 = 0, $sb$0$sink60$i$i = 0, $sb$0$sink60$i$i345 = 0, $sb$0$sink60$i$i442 = 0, $sb$018$i = 0, $sb$023$i = 0, $sb$024$i = 0, $sb$0641 = 0;
 var $sb$070$i$i = 0, $sb$070$i$i307 = 0, $sb$070$i$i404 = 0, $sb$2$i$i = 0, $sb$2$i$i352 = 0, $sb$2$i$i449 = 0, $sblock$0655 = 0, $sblock$1639 = 0, $scevgep = 0, $scevgep$i = 0, $scevgep694 = 0, $scevgep697 = 0, $scevgep705 = 0, $scevgep708 = 0, $short_blocks$i = 0, $smax = 0, $sub = 0, $sub$1$i = 0, $sub$2$i = 0, $sub$3$i = 0;
 var $sub$4$i = 0, $sub$i = 0.0, $sub$i$i = 0.0, $sub$i$i291 = 0.0, $sub$i$i330 = 0.0, $sub$i$i427 = 0.0, $sub$i$i501 = 0.0, $sub$i272 = 0, $sub$i464 = 0.0, $sub$i551 = 0, $sub$us$1$i = 0, $sub$us$2$i = 0, $sub$us$3$i = 0, $sub$us$4$i = 0, $sub100$i$i = 0.0, $sub107$i$i = 0, $sub108$i$i = 0, $sub134$i = 0, $sub16$i$i = 0, $sub16$i$i506 = 0;
 var $sub23$i = 0, $sub265 = 0, $sub271$i$i = 0, $sub271$i$i515 = 0, $sub30$lcssa$i$i = 0, $sub30$lcssa$i$i533 = 0, $sub306$i$i = 0, $sub306$i$i$phi = 0, $sub306$i$i520 = 0, $sub306$i$i520$phi = 0, $sub31$i471 = 0, $sub57$i$i = 0.0, $sub58$i$i = 0.0, $sub69$i$i = 0, $sub70$i$i = 0, $sub82$i = 0.0, $sub99$i$i = 0.0, $sub_short_factor = 0, $t1$0 = 0.0, $t2$0 = 0.0;
 var $thm = 0, $thm$i = 0, $thm$i298 = 0, $thm$us$i = 0, $thm59$us$i = 0, $thmm$071$i$i = 0.0, $thmm$071$i$i306 = 0.0, $thmm$071$i$i403 = 0.0, $thmm$1$lcssa$i$i = 0.0, $thmm$1$lcssa$i$i325 = 0.0, $thmm$1$lcssa$i$i422 = 0.0, $thmm$1$sink$i$i = 0.0, $thmm$1$sink$i$i347 = 0.0, $thmm$1$sink$i$i444 = 0.0, $thmm$164$i$i = 0.0, $thmm$164$i$i315 = 0.0, $thmm$164$i$i412 = 0.0, $thr = 0, $tobool = 0, $tobool$i193 = 0;
 var $tobool$i209 = 0, $tobool$i370 = 0, $tobool101 = 0, $tobool102 = 0, $tobool201$i = 0, $tobool283 = 0, $tobool3$i = 0, $tobool316$i = 0, $tobool320$i = 0, $tobool324$i = 0, $tobool331$i = 0, $tobool335$i = 0, $tobool342$i = 0, $tobool44$i = 0, $tobool64 = 0, $totalenergy$061$i = 0.0, $type$0 = 0, $type$1 = 0, $uselongblock = 0, $wsamp_L = 0;
 var $wsamp_S = 0, $x$1$1$i = 0.0, $x$1$10$i = 0.0, $x$1$2$i = 0.0, $x$1$3$i = 0.0, $x$1$4$i = 0.0, $x$1$5$i = 0.0, $x$1$6$i = 0.0, $x$1$7$i = 0.0, $x$1$8$i = 0.0, $x$1$9$i = 0.0, $x$1$i = 0.0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 26224|0;
 $mask_idx_s$i = sp + 21608|0;
 $thm$i298 = sp + 21352|0;
 $avg$i = sp + 21096|0;
 $en_short$i = sp + 21080|0;
 $last_thm = sp + 20104|0;
 $fftenergy = sp + 18052|0;
 $fftenergy_s = sp + 16504|0;
 $wsamp_L = sp + 8312|0;
 $wsamp_S = sp + 2168|0;
 $eb = sp + 1144|0;
 $thr = sp + 120|0;
 $sub_short_factor = sp + 72|0;
 $ns_attacks = sp + 8|0;
 $uselongblock = sp;
 $cd_psy = ((($gfc)) + 85800|0);
 $0 = HEAP32[$cd_psy>>2]|0;
 $analysis = ((($gfc)) + 140|0);
 $1 = HEAP32[$analysis>>2]|0;
 $tobool = ($1|0)==(0);
 if ($tobool) {
  $cond = 0;
 } else {
  $pinfo = ((($gfc)) + 85804|0);
  $2 = HEAP32[$pinfo>>2]|0;
  $cond = $2;
 }
 $msfix = ((($gfc)) + 192|0);
 $3 = +HEAPF32[$msfix>>2];
 $cmp = $3 > 0.0;
 if ($cmp) {
  $ATH_offset_factor = ((($gfc)) + 200|0);
  $4 = +HEAPF32[$ATH_offset_factor>>2];
  $ATH = ((($gfc)) + 85796|0);
  $5 = HEAP32[$ATH>>2]|0;
  $adjust_factor = ((($5)) + 8|0);
  $6 = +HEAPF32[$adjust_factor>>2];
  $mul = $6 * $4;
  $cond6 = $mul;
 } else {
  $cond6 = 1.0;
 }
 dest=$ns_attacks; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $mode = ((($gfc)) + 180|0);
 $7 = HEAP32[$mode>>2]|0;
 $cmp8 = ($7|0)==(1);
 if ($cmp8) {
  $cond12 = 4;
 } else {
  $channels_out = ((($gfc)) + 72|0);
  $8 = HEAP32[$channels_out>>2]|0;
  $cond12 = $8;
 }
 $thm = ((($gfc)) + 25660|0);
 _memcpy(($last_thm|0),($thm|0),976)|0;
 if ($tobool) {
  $cond$i = 0;
 } else {
  $pinfo$i = ((($gfc)) + 85804|0);
  $9 = HEAP32[$pinfo$i>>2]|0;
  $cond$i = $9;
 }
 $channels_out$i = ((($gfc)) + 72|0);
 $10 = HEAP32[$channels_out$i>>2]|0;
 $cond5$i = $cmp8 ? 4 : $10;
 _memset(($mask_idx_s$i|0),0,4608)|0;
 $cmp7237$i = ($10|0)>(0);
 if ($cmp7237$i) {
  $cmp50$i = ($cond5$i|0)>(2);
  if ($cmp50$i) {
   $chn$0238$us$i = 0;
   while(1) {
    $arrayidx8$us$i = (($buffer) + ($chn$0238$us$i<<2)|0);
    $11 = HEAP32[$arrayidx8$us$i>>2]|0;
    $arrayidx9$us$i = ((($11)) + 1588|0);
    $$pre254$i = +HEAPF32[$arrayidx9$us$i>>2];
    $arrayidx28$us$i$phi$trans$insert = ((($11)) + 1592|0);
    $$pre726 = +HEAPF32[$arrayidx28$us$i$phi$trans$insert>>2];
    $arrayidx32$us$i$phi$trans$insert = ((($11)) + 1668|0);
    $$pre727 = +HEAPF32[$arrayidx32$us$i$phi$trans$insert>>2];
    $arrayidx19$us$1$i$phi$trans$insert = ((($11)) + 1596|0);
    $$pre728 = +HEAPF32[$arrayidx19$us$1$i$phi$trans$insert>>2];
    $arrayidx28$us$1$i$phi$trans$insert = ((($11)) + 1600|0);
    $$pre729 = +HEAPF32[$arrayidx28$us$1$i$phi$trans$insert>>2];
    $arrayidx32$us$1$i$phi$trans$insert = ((($11)) + 1660|0);
    $$pre730 = +HEAPF32[$arrayidx32$us$1$i$phi$trans$insert>>2];
    $arrayidx19$us$2$i$phi$trans$insert = ((($11)) + 1604|0);
    $$pre731 = +HEAPF32[$arrayidx19$us$2$i$phi$trans$insert>>2];
    $arrayidx28$us$2$i$phi$trans$insert = ((($11)) + 1608|0);
    $$pre732 = +HEAPF32[$arrayidx28$us$2$i$phi$trans$insert>>2];
    $arrayidx32$us$2$i$phi$trans$insert = ((($11)) + 1652|0);
    $$pre733 = +HEAPF32[$arrayidx32$us$2$i$phi$trans$insert>>2];
    $arrayidx19$us$3$i$phi$trans$insert = ((($11)) + 1612|0);
    $$pre734 = +HEAPF32[$arrayidx19$us$3$i$phi$trans$insert>>2];
    $arrayidx28$us$3$i$phi$trans$insert = ((($11)) + 1616|0);
    $$pre735 = +HEAPF32[$arrayidx28$us$3$i$phi$trans$insert>>2];
    $arrayidx32$us$3$i$phi$trans$insert = ((($11)) + 1644|0);
    $$pre736 = +HEAPF32[$arrayidx32$us$3$i$phi$trans$insert>>2];
    $arrayidx19$us$4$i$phi$trans$insert = ((($11)) + 1620|0);
    $$pre737 = +HEAPF32[$arrayidx19$us$4$i$phi$trans$insert>>2];
    $arrayidx28$us$4$i$phi$trans$insert = ((($11)) + 1624|0);
    $$pre738 = +HEAPF32[$arrayidx28$us$4$i$phi$trans$insert>>2];
    $arrayidx32$us$4$i$phi$trans$insert = ((($11)) + 1636|0);
    $$pre739 = +HEAPF32[$arrayidx32$us$4$i$phi$trans$insert>>2];
    $14 = $$pre254$i;$15 = $$pre727;$16 = $$pre726;$18 = $$pre728;$19 = $$pre730;$20 = $$pre729;$22 = $$pre731;$23 = $$pre733;$24 = $$pre732;$26 = $$pre734;$27 = $$pre736;$28 = $$pre735;$30 = $$pre737;$31 = $$pre739;$32 = $$pre738;$i$0236$us$i = 0;
    while(1) {
     $add$us$i = (($i$0236$us$i) + 10)|0;
     $arrayidx13$us$i = (($arrayidx9$us$i) + ($add$us$i<<2)|0);
     $12 = +HEAPF32[$arrayidx13$us$i>>2];
     $add20$us$i = (($i$0236$us$i) + 21)|0;
     $arrayidx21$us$i = (($arrayidx9$us$i) + ($add20$us$i<<2)|0);
     $13 = +HEAPF32[$arrayidx21$us$i>>2];
     $add22$us$i = $13 + $14;
     $mul$us$i$neg = $add22$us$i * -1.7303260184043527E-17;
     $add27$us$i = (($i$0236$us$i) + 1)|0;
     $add33$us$i = $15 + $16;
     $sub$us$1$i = (($i$0236$us$i) + 19)|0;
     $arrayidx21$us$1$i = (($arrayidx9$us$i) + ($sub$us$1$i<<2)|0);
     $17 = +HEAPF32[$arrayidx21$us$1$i>>2];
     $add22$us$1$i = $17 + $18;
     $mul$us$1$i$neg = $add22$us$1$i * -1.3495279640235235E-17;
     $add33$us$1$i = $19 + $20;
     $mul34$us$1$i = $add33$us$1$i * 0.041807200759649277;
     $mul34$us$i$neg = $add33$us$i * -0.017031719908118248;
     $sub$us$2$i = (($i$0236$us$i) + 17)|0;
     $arrayidx21$us$2$i = (($arrayidx9$us$i) + ($sub$us$2$i<<2)|0);
     $21 = +HEAPF32[$arrayidx21$us$2$i>>2];
     $add22$us$2$i = $21 + $22;
     $mul$us$2$i$neg = $add22$us$2$i * -6.7327796858492251E-17;
     $add33$us$2$i = $23 + $24;
     $mul34$us$2$i$neg = $add33$us$2$i * -0.087632402777671814;
     $sub$us$3$i = (($i$0236$us$i) + 15)|0;
     $arrayidx21$us$3$i = (($arrayidx9$us$i) + ($sub$us$3$i<<2)|0);
     $25 = +HEAPF32[$arrayidx21$us$3$i>>2];
     $add22$us$3$i = $25 + $26;
     $mul$us$3$i$neg = $add22$us$3$i * -3.0835000291318875E-17;
     $add33$us$3$i = $27 + $28;
     $mul34$us$3$i = $add33$us$3$i * 0.1863476037979126;
     $sub$us$4$i = (($i$0236$us$i) + 13)|0;
     $arrayidx21$us$4$i = (($arrayidx9$us$i) + ($sub$us$4$i<<2)|0);
     $29 = +HEAPF32[$arrayidx21$us$4$i>>2];
     $add22$us$4$i = $29 + $30;
     $mul$us$4$i$neg = $add22$us$4$i * -1.1044240253100168E-16;
     $add33$us$4$i = $31 + $32;
     $mul34$us$4$i$neg = $add33$us$4$i * -0.62763798236846924;
     $add35$us$1$i613 = $mul$us$i$neg + $12;
     $add35$us$2$i616 = $add35$us$1$i613 + $mul34$us$i$neg;
     $add35$us$3$i = $add35$us$2$i616 + $mul$us$1$i$neg;
     $add35$us$4$i619 = $add35$us$3$i + $mul34$us$1$i;
     $add23$us$i612 = $add35$us$4$i619 + $mul$us$2$i$neg;
     $add23$us$1$i614 = $add23$us$i612 + $mul34$us$2$i$neg;
     $add23$us$2$i615 = $add23$us$1$i614 + $mul$us$3$i$neg;
     $add23$us$3$i617 = $add23$us$2$i615 + $mul34$us$3$i;
     $add23$us$4$i618 = $add23$us$3$i617 + $mul$us$4$i$neg;
     $add37$us$i = $add23$us$4$i618 + $mul34$us$4$i$neg;
     $arrayidx39$us$i = ((($mask_idx_s$i) + (($chn$0238$us$i*2304)|0)|0) + ($i$0236$us$i<<2)|0);
     HEAPF32[$arrayidx39$us$i>>2] = $add37$us$i;
     $exitcond249$i = ($add27$us$i|0)==(576);
     if ($exitcond249$i) {
      break;
     } else {
      $30$phi = $32;$28$phi = $30;$26$phi = $28;$24$phi = $26;$22$phi = $24;$20$phi = $22;$18$phi = $20;$16$phi = $18;$14$phi = $16;$15 = $13;$19 = $17;$23 = $21;$27 = $25;$31 = $29;$32 = $12;$i$0236$us$i = $add27$us$i;$30 = $30$phi;$28 = $28$phi;$26 = $26$phi;$24 = $24$phi;$22 = $22$phi;$20 = $20$phi;$18 = $18$phi;$16 = $16$phi;$14 = $14$phi;
     }
    }
    $en$us$i = ((((($masking_ratio) + (($gr_out*976)|0)|0) + (($chn$0238$us$i*488)|0)|0)) + 244|0);
    $arrayidx45$us$i = (((($gfc)) + 26636|0) + (($chn$0238$us$i*244)|0)|0);
    _memcpy(($en$us$i|0),($arrayidx45$us$i|0),244)|0;
    $thm$us$i = ((($masking_ratio) + (($gr_out*976)|0)|0) + (($chn$0238$us$i*488)|0)|0);
    $arrayidx49$us$i = (((($gfc)) + 25660|0) + (($chn$0238$us$i*244)|0)|0);
    _memcpy(($thm$us$i|0),($arrayidx49$us$i|0),244)|0;
    $add55$us$i = (($chn$0238$us$i) + 2)|0;
    $arrayidx62$us$i = (((($gfc)) + 25660|0) + (($add55$us$i*244)|0)|0);
    $thm59$us$i = ((($masking_MS_ratio) + (($gr_out*976)|0)|0) + (($chn$0238$us$i*488)|0)|0);
    $arrayidx56$us$i = (((($gfc)) + 26636|0) + (($add55$us$i*244)|0)|0);
    $en53$us$i = ((((($masking_MS_ratio) + (($gr_out*976)|0)|0) + (($chn$0238$us$i*488)|0)|0)) + 244|0);
    _memcpy(($en53$us$i|0),($arrayidx56$us$i|0),244)|0;
    _memcpy(($thm59$us$i|0),($arrayidx62$us$i|0),244)|0;
    $inc64$us$i = (($chn$0238$us$i) + 1)|0;
    $exitcond250$i = ($inc64$us$i|0)==($10|0);
    if ($exitcond250$i) {
     break;
    } else {
     $chn$0238$us$i = $inc64$us$i;
    }
   }
  } else {
   $chn$0238$i = 0;
   while(1) {
    $arrayidx8$i = (($buffer) + ($chn$0238$i<<2)|0);
    $33 = HEAP32[$arrayidx8$i>>2]|0;
    $arrayidx9$i = ((($33)) + 1588|0);
    $$pre253$i = +HEAPF32[$arrayidx9$i>>2];
    $arrayidx28$i$phi$trans$insert = ((($33)) + 1592|0);
    $$pre = +HEAPF32[$arrayidx28$i$phi$trans$insert>>2];
    $arrayidx32$i$phi$trans$insert = ((($33)) + 1668|0);
    $$pre713 = +HEAPF32[$arrayidx32$i$phi$trans$insert>>2];
    $arrayidx19$1$i$phi$trans$insert = ((($33)) + 1596|0);
    $$pre714 = +HEAPF32[$arrayidx19$1$i$phi$trans$insert>>2];
    $arrayidx28$1$i$phi$trans$insert = ((($33)) + 1600|0);
    $$pre715 = +HEAPF32[$arrayidx28$1$i$phi$trans$insert>>2];
    $arrayidx32$1$i$phi$trans$insert = ((($33)) + 1660|0);
    $$pre716 = +HEAPF32[$arrayidx32$1$i$phi$trans$insert>>2];
    $arrayidx19$2$i$phi$trans$insert = ((($33)) + 1604|0);
    $$pre717 = +HEAPF32[$arrayidx19$2$i$phi$trans$insert>>2];
    $arrayidx28$2$i$phi$trans$insert = ((($33)) + 1608|0);
    $$pre718 = +HEAPF32[$arrayidx28$2$i$phi$trans$insert>>2];
    $arrayidx32$2$i$phi$trans$insert = ((($33)) + 1652|0);
    $$pre719 = +HEAPF32[$arrayidx32$2$i$phi$trans$insert>>2];
    $arrayidx19$3$i$phi$trans$insert = ((($33)) + 1612|0);
    $$pre720 = +HEAPF32[$arrayidx19$3$i$phi$trans$insert>>2];
    $arrayidx28$3$i$phi$trans$insert = ((($33)) + 1616|0);
    $$pre721 = +HEAPF32[$arrayidx28$3$i$phi$trans$insert>>2];
    $arrayidx32$3$i$phi$trans$insert = ((($33)) + 1644|0);
    $$pre722 = +HEAPF32[$arrayidx32$3$i$phi$trans$insert>>2];
    $arrayidx19$4$i$phi$trans$insert = ((($33)) + 1620|0);
    $$pre723 = +HEAPF32[$arrayidx19$4$i$phi$trans$insert>>2];
    $arrayidx28$4$i$phi$trans$insert = ((($33)) + 1624|0);
    $$pre724 = +HEAPF32[$arrayidx28$4$i$phi$trans$insert>>2];
    $arrayidx32$4$i$phi$trans$insert = ((($33)) + 1636|0);
    $$pre725 = +HEAPF32[$arrayidx32$4$i$phi$trans$insert>>2];
    $36 = $$pre253$i;$37 = $$pre713;$38 = $$pre;$40 = $$pre714;$41 = $$pre716;$42 = $$pre715;$44 = $$pre717;$45 = $$pre719;$46 = $$pre718;$48 = $$pre720;$49 = $$pre722;$50 = $$pre721;$52 = $$pre723;$53 = $$pre725;$54 = $$pre724;$i$0236$i = 0;
    while(1) {
     $add$i = (($i$0236$i) + 10)|0;
     $arrayidx13$i = (($arrayidx9$i) + ($add$i<<2)|0);
     $34 = +HEAPF32[$arrayidx13$i>>2];
     $add20$i = (($i$0236$i) + 21)|0;
     $arrayidx21$i = (($arrayidx9$i) + ($add20$i<<2)|0);
     $35 = +HEAPF32[$arrayidx21$i>>2];
     $add22$i = $35 + $36;
     $mul$i$neg = $add22$i * -1.7303260184043527E-17;
     $add27$i = (($i$0236$i) + 1)|0;
     $add33$i = $37 + $38;
     $sub$1$i = (($i$0236$i) + 19)|0;
     $arrayidx21$1$i = (($arrayidx9$i) + ($sub$1$i<<2)|0);
     $39 = +HEAPF32[$arrayidx21$1$i>>2];
     $add22$1$i = $39 + $40;
     $mul$1$i$neg = $add22$1$i * -1.3495279640235235E-17;
     $add33$1$i = $41 + $42;
     $mul34$1$i = $add33$1$i * 0.041807200759649277;
     $mul34$i$neg = $add33$i * -0.017031719908118248;
     $sub$2$i = (($i$0236$i) + 17)|0;
     $arrayidx21$2$i = (($arrayidx9$i) + ($sub$2$i<<2)|0);
     $43 = +HEAPF32[$arrayidx21$2$i>>2];
     $add22$2$i = $43 + $44;
     $mul$2$i$neg = $add22$2$i * -6.7327796858492251E-17;
     $add33$2$i = $45 + $46;
     $mul34$2$i$neg = $add33$2$i * -0.087632402777671814;
     $sub$3$i = (($i$0236$i) + 15)|0;
     $arrayidx21$3$i = (($arrayidx9$i) + ($sub$3$i<<2)|0);
     $47 = +HEAPF32[$arrayidx21$3$i>>2];
     $add22$3$i = $47 + $48;
     $mul$3$i$neg = $add22$3$i * -3.0835000291318875E-17;
     $add33$3$i = $49 + $50;
     $mul34$3$i = $add33$3$i * 0.1863476037979126;
     $sub$4$i = (($i$0236$i) + 13)|0;
     $arrayidx21$4$i = (($arrayidx9$i) + ($sub$4$i<<2)|0);
     $51 = +HEAPF32[$arrayidx21$4$i>>2];
     $add22$4$i = $51 + $52;
     $mul$4$i$neg = $add22$4$i * -1.1044240253100168E-16;
     $add33$4$i = $53 + $54;
     $mul34$4$i$neg = $add33$4$i * -0.62763798236846924;
     $add35$1$i605 = $mul$i$neg + $34;
     $add35$2$i608 = $add35$1$i605 + $mul34$i$neg;
     $add35$3$i = $add35$2$i608 + $mul$1$i$neg;
     $add35$4$i611 = $add35$3$i + $mul34$1$i;
     $add23$i604 = $add35$4$i611 + $mul$2$i$neg;
     $add23$1$i606 = $add23$i604 + $mul34$2$i$neg;
     $add23$2$i607 = $add23$1$i606 + $mul$3$i$neg;
     $add23$3$i609 = $add23$2$i607 + $mul34$3$i;
     $add23$4$i610 = $add23$3$i609 + $mul$4$i$neg;
     $add37$i = $add23$4$i610 + $mul34$4$i$neg;
     $arrayidx39$i = ((($mask_idx_s$i) + (($chn$0238$i*2304)|0)|0) + ($i$0236$i<<2)|0);
     HEAPF32[$arrayidx39$i>>2] = $add37$i;
     $exitcond251$i = ($add27$i|0)==(576);
     if ($exitcond251$i) {
      break;
     } else {
      $52$phi = $54;$50$phi = $52;$48$phi = $50;$46$phi = $48;$44$phi = $46;$42$phi = $44;$40$phi = $42;$38$phi = $40;$36$phi = $38;$37 = $35;$41 = $39;$45 = $43;$49 = $47;$53 = $51;$54 = $34;$i$0236$i = $add27$i;$52 = $52$phi;$50 = $50$phi;$48 = $48$phi;$46 = $46$phi;$44 = $44$phi;$42 = $42$phi;$40 = $40$phi;$38 = $38$phi;$36 = $36$phi;
     }
    }
    $en$i = ((((($masking_ratio) + (($gr_out*976)|0)|0) + (($chn$0238$i*488)|0)|0)) + 244|0);
    $arrayidx45$i = (((($gfc)) + 26636|0) + (($chn$0238$i*244)|0)|0);
    _memcpy(($en$i|0),($arrayidx45$i|0),244)|0;
    $thm$i = ((($masking_ratio) + (($gr_out*976)|0)|0) + (($chn$0238$i*488)|0)|0);
    $arrayidx49$i = (((($gfc)) + 25660|0) + (($chn$0238$i*244)|0)|0);
    _memcpy(($thm$i|0),($arrayidx49$i|0),244)|0;
    $inc64$i = (($chn$0238$i) + 1)|0;
    $exitcond252$i = ($inc64$i|0)==($10|0);
    if ($exitcond252$i) {
     break;
    } else {
     $chn$0238$i = $inc64$i;
    }
   }
  }
 }
 $cmp67230$i = ($cond5$i|0)>(0);
 if ($cmp67230$i) {
  $tobool201$i = ($cond$i|0)==(0|0);
  $arrayidx360$i = ((($uselongblock)) + 4|0);
  $arrayidx95$1$i = ((($avg$i)) + 4|0);
  $arrayidx101$1$i = ((($thm$i298)) + 4|0);
  $arrayidx95$2$i = ((($avg$i)) + 8|0);
  $arrayidx101$2$i = ((($thm$i298)) + 8|0);
  $arrayidx169$i = ((($avg$i)) + 12|0);
  $arrayidx172$i = ((($avg$i)) + 16|0);
  $arrayidx176$i = ((($avg$i)) + 20|0);
  $arrayidx169$1$i = ((($avg$i)) + 24|0);
  $arrayidx172$1$i = ((($avg$i)) + 28|0);
  $arrayidx176$1$i = ((($avg$i)) + 32|0);
  $arrayidx169$2$i = ((($avg$i)) + 36|0);
  $arrayidx172$2$i = ((($avg$i)) + 40|0);
  $arrayidx176$2$i = ((($avg$i)) + 44|0);
  $arrayidx255$i = ((($en_short$i)) + 4|0);
  $arrayidx255$1$i = ((($en_short$i)) + 8|0);
  $arrayidx255$2$i = ((($en_short$i)) + 12|0);
  $arrayidx208$2$i = ((($thm$i298)) + 12|0);
  $arrayidx208$3$i = ((($thm$i298)) + 16|0);
  $arrayidx208$4$i = ((($thm$i298)) + 20|0);
  $arrayidx208$5$i = ((($thm$i298)) + 24|0);
  $arrayidx208$6$i = ((($thm$i298)) + 28|0);
  $arrayidx208$7$i = ((($thm$i298)) + 32|0);
  $arrayidx208$8$i = ((($thm$i298)) + 36|0);
  $arrayidx208$9$i = ((($thm$i298)) + 40|0);
  $arrayidx208$10$i = ((($thm$i298)) + 44|0);
  $chn$1231$i = 0;
  while(1) {
   ;HEAP32[$en_short$i>>2]=0|0;HEAP32[$en_short$i+4>>2]=0|0;HEAP32[$en_short$i+8>>2]=0|0;HEAP32[$en_short$i+12>>2]=0|0;
   $and$i = $chn$1231$i & 1;
   $arraydecay$i = (($mask_idx_s$i) + (($and$i*2304)|0)|0);
   $cmp70$i = ($chn$1231$i|0)==(2);
   if ($cmp70$i) {
    $i$1216$i = 0;
    while(1) {
     $arrayidx76$i = (($mask_idx_s$i) + ($i$1216$i<<2)|0);
     $60 = +HEAPF32[$arrayidx76$i>>2];
     $arrayidx78$i = (((($mask_idx_s$i)) + 2304|0) + ($i$1216$i<<2)|0);
     $61 = +HEAPF32[$arrayidx78$i>>2];
     $add79$i = $61 + $60;
     HEAPF32[$arrayidx76$i>>2] = $add79$i;
     $sub82$i = $60 - $61;
     HEAPF32[$arrayidx78$i>>2] = $sub82$i;
     $inc86$i = (($i$1216$i) + 1)|0;
     $exitcond$i = ($inc86$i|0)==(576);
     if ($exitcond$i) {
      break;
     } else {
      $i$1216$i = $inc86$i;
     }
    }
   }
   $arrayidx94$i = (((((($gfc)) + 27636|0) + (($chn$1231$i*36)|0)|0)) + 24|0);
   $55 = +HEAPF32[$arrayidx94$i>>2];
   HEAPF32[$avg$i>>2] = $55;
   $arrayidx100$i = (((((($gfc)) + 27636|0) + (($chn$1231$i*36)|0)|0)) + 16|0);
   $56 = +HEAPF32[$arrayidx100$i>>2];
   $div$i = $55 / $56;
   HEAPF32[$thm$i298>>2] = $div$i;
   $arrayidx94$1$i = (((((($gfc)) + 27636|0) + (($chn$1231$i*36)|0)|0)) + 28|0);
   $57 = +HEAPF32[$arrayidx94$1$i>>2];
   HEAPF32[$arrayidx95$1$i>>2] = $57;
   $arrayidx100$1$i = (((((($gfc)) + 27636|0) + (($chn$1231$i*36)|0)|0)) + 20|0);
   $58 = +HEAPF32[$arrayidx100$1$i>>2];
   $div$1$i = $57 / $58;
   HEAPF32[$arrayidx101$1$i>>2] = $div$1$i;
   $add104$1$i = $57 + $55;
   $arrayidx94$2$i = (((((($gfc)) + 27636|0) + (($chn$1231$i*36)|0)|0)) + 32|0);
   $59 = +HEAPF32[$arrayidx94$2$i>>2];
   HEAPF32[$arrayidx95$2$i>>2] = $59;
   $div$2$i = $59 / $55;
   HEAPF32[$arrayidx101$2$i>>2] = $div$2$i;
   $add104$2$i = $add104$1$i + $59;
   HEAPF32[$en_short$i>>2] = $add104$2$i;
   $i$3224$i = 0;$pf$0223$i = $arraydecay$i;
   while(1) {
    $p$0221$i = 1.0;$pf$1$idx220$i = 0;$pf$1$ptr222$i = $pf$0223$i;
    while(1) {
     $62 = +HEAPF32[$pf$1$ptr222$i>>2];
     $fabsf$i = (+Math_abs((+$62)));
     $cmp115$i = $p$0221$i < $fabsf$i;
     $p$1$i = $cmp115$i ? $fabsf$i : $p$0221$i;
     $pf$1$add$i = (($pf$1$idx220$i) + 1)|0;
     $pf$1$ptr$i = (($pf$0223$i) + ($pf$1$add$i<<2)|0);
     $exitcond241$i = ($pf$1$add$i|0)==(64);
     if ($exitcond241$i) {
      break;
     } else {
      $p$0221$i = $p$1$i;$pf$1$idx220$i = $pf$1$add$i;$pf$1$ptr222$i = $pf$1$ptr$i;
     }
    }
    $scevgep$i = ((($pf$0223$i)) + 256|0);
    $add124$i = (($i$3224$i) + 3)|0;
    $arrayidx125$i = (($avg$i) + ($add124$i<<2)|0);
    HEAPF32[$arrayidx125$i>>2] = $p$1$i;
    $arrayidx128$i = ((((($gfc)) + 27636|0) + (($chn$1231$i*36)|0)|0) + ($i$3224$i<<2)|0);
    HEAPF32[$arrayidx128$i>>2] = $p$1$i;
    $div129$i = (($i$3224$i|0) / 3)&-1;
    $add130$i = (($div129$i) + 1)|0;
    $arrayidx131$i = (($en_short$i) + ($add130$i<<2)|0);
    $63 = +HEAPF32[$arrayidx131$i>>2];
    $add132$i = $63 + $p$1$i;
    HEAPF32[$arrayidx131$i>>2] = $add132$i;
    $sub134$i = (($i$3224$i) + 1)|0;
    $arrayidx135$i = (($avg$i) + ($sub134$i<<2)|0);
    $64 = +HEAPF32[$arrayidx135$i>>2];
    $cmp136$i = $p$1$i > $64;
    if ($cmp136$i) {
     $div142$i = $p$1$i / $64;
     $p$2$i = $div142$i;
    } else {
     $mul146$i = $p$1$i * 10.0;
     $cmp147$i = $64 > $mul146$i;
     if ($cmp147$i) {
      $div154$i = $64 / $mul146$i;
      $p$2$i = $div154$i;
     } else {
      $p$2$i = 0.0;
     }
    }
    $arrayidx159$i = (($thm$i298) + ($add124$i<<2)|0);
    HEAPF32[$arrayidx159$i>>2] = $p$2$i;
    $exitcond242$i = ($sub134$i|0)==(9);
    if ($exitcond242$i) {
     break;
    } else {
     $i$3224$i = $sub134$i;$pf$0223$i = $scevgep$i;
    }
   }
   $65 = +HEAPF32[$arrayidx169$i>>2];
   $66 = +HEAPF32[$arrayidx172$i>>2];
   $add173$i = $66 + $65;
   $67 = +HEAPF32[$arrayidx176$i>>2];
   $add177$i = $add173$i + $67;
   $mul181$i = $67 * 6.0;
   $cmp182$i = $mul181$i < $add177$i;
   if ($cmp182$i) {
    $mul189$i = $66 * 6.0;
    $cmp190$i = $mul189$i < $add177$i;
    if ($cmp190$i) {
     $factor$0$i = 0.25;
    } else {
     $factor$0$i = 0.5;
    }
   } else {
    $factor$0$i = 1.0;
   }
   $arrayidx197$i = (($sub_short_factor) + (($chn$1231$i*12)|0)|0);
   HEAPF32[$arrayidx197$i>>2] = $factor$0$i;
   $68 = +HEAPF32[$arrayidx169$1$i>>2];
   $69 = +HEAPF32[$arrayidx172$1$i>>2];
   $add173$1$i = $69 + $68;
   $70 = +HEAPF32[$arrayidx176$1$i>>2];
   $add177$1$i = $add173$1$i + $70;
   $mul181$1$i = $70 * 6.0;
   $cmp182$1$i = $mul181$1$i < $add177$1$i;
   if ($cmp182$1$i) {
    $mul189$1$i = $69 * 6.0;
    $cmp190$1$i = $mul189$1$i < $add177$1$i;
    if ($cmp190$1$i) {
     $factor$0$1$i = 0.25;
    } else {
     $factor$0$1$i = 0.5;
    }
   } else {
    $factor$0$1$i = 1.0;
   }
   $arrayidx197$1$i = (((($sub_short_factor) + (($chn$1231$i*12)|0)|0)) + 4|0);
   HEAPF32[$arrayidx197$1$i>>2] = $factor$0$1$i;
   $101 = +HEAPF32[$arrayidx169$2$i>>2];
   $102 = +HEAPF32[$arrayidx172$2$i>>2];
   $add173$2$i = $102 + $101;
   $103 = +HEAPF32[$arrayidx176$2$i>>2];
   $add177$2$i = $add173$2$i + $103;
   $mul181$2$i = $103 * 6.0;
   $cmp182$2$i = $mul181$2$i < $add177$2$i;
   if ($cmp182$2$i) {
    $mul189$2$i = $102 * 6.0;
    $cmp190$2$i = $mul189$2$i < $add177$2$i;
    if ($cmp190$2$i) {
     $factor$0$2$i = 0.25;
    } else {
     $factor$0$2$i = 0.5;
    }
   } else {
    $factor$0$2$i = 1.0;
   }
   $arrayidx197$2$i = (((($sub_short_factor) + (($chn$1231$i*12)|0)|0)) + 8|0);
   HEAPF32[$arrayidx197$2$i>>2] = $factor$0$2$i;
   if (!($tobool201$i)) {
    $71 = +HEAPF32[$thm$i298>>2];
    $72 = +HEAPF32[$arrayidx101$1$i>>2];
    $cmp209$i = $71 < $72;
    $x$1$i = $cmp209$i ? $72 : $71;
    $73 = +HEAPF32[$arrayidx101$2$i>>2];
    $cmp209$1$i = $x$1$i < $73;
    $x$1$1$i = $cmp209$1$i ? $73 : $x$1$i;
    $74 = +HEAPF32[$arrayidx208$2$i>>2];
    $cmp209$2$i = $x$1$1$i < $74;
    $x$1$2$i = $cmp209$2$i ? $74 : $x$1$1$i;
    $75 = +HEAPF32[$arrayidx208$3$i>>2];
    $cmp209$3$i = $x$1$2$i < $75;
    $x$1$3$i = $cmp209$3$i ? $75 : $x$1$2$i;
    $76 = +HEAPF32[$arrayidx208$4$i>>2];
    $cmp209$4$i = $x$1$3$i < $76;
    $x$1$4$i = $cmp209$4$i ? $76 : $x$1$3$i;
    $77 = +HEAPF32[$arrayidx208$5$i>>2];
    $cmp209$5$i = $x$1$4$i < $77;
    $x$1$5$i = $cmp209$5$i ? $77 : $x$1$4$i;
    $78 = +HEAPF32[$arrayidx208$6$i>>2];
    $cmp209$6$i = $x$1$5$i < $78;
    $x$1$6$i = $cmp209$6$i ? $78 : $x$1$5$i;
    $79 = +HEAPF32[$arrayidx208$7$i>>2];
    $cmp209$7$i = $x$1$6$i < $79;
    $x$1$7$i = $cmp209$7$i ? $79 : $x$1$6$i;
    $80 = +HEAPF32[$arrayidx208$8$i>>2];
    $cmp209$8$i = $x$1$7$i < $80;
    $x$1$8$i = $cmp209$8$i ? $80 : $x$1$7$i;
    $81 = +HEAPF32[$arrayidx208$9$i>>2];
    $cmp209$9$i = $x$1$8$i < $81;
    $x$1$9$i = $cmp209$9$i ? $81 : $x$1$8$i;
    $82 = +HEAPF32[$arrayidx208$10$i>>2];
    $cmp209$10$i = $x$1$9$i < $82;
    $x$1$10$i = $cmp209$10$i ? $82 : $x$1$9$i;
    $arrayidx217$i = (((($cond$i)) + 197112|0) + ($chn$1231$i<<3)|0);
    $83 = +HEAPF64[$arrayidx217$i>>3];
    $arrayidx219$i = ((((($cond$i)) + 197144|0) + ($gr_out<<5)|0) + ($chn$1231$i<<3)|0);
    HEAPF64[$arrayidx219$i>>3] = $83;
    $conv220$i = $x$1$10$i;
    HEAPF64[$arrayidx217$i>>3] = $conv220$i;
   }
   $84 = HEAP32[$cd_psy>>2]|0;
   $arrayidx225$i = (((($84)) + 6480|0) + ($chn$1231$i<<2)|0);
   $85 = +HEAPF32[$arrayidx225$i>>2];
   $i$6228$i = 0;
   while(1) {
    $div231$i = (($i$6228$i|0) / 3)&-1;
    $arrayidx232$i = ((($ns_attacks) + ($chn$1231$i<<4)|0) + ($div231$i<<2)|0);
    $88 = HEAP32[$arrayidx232$i>>2]|0;
    $cmp233$i = ($88|0)==(0);
    if ($cmp233$i) {
     $arrayidx236$i = (($thm$i298) + ($i$6228$i<<2)|0);
     $89 = +HEAPF32[$arrayidx236$i>>2];
     $cmp237$i = $89 > $85;
     if ($cmp237$i) {
      $rem$i = (($i$6228$i|0) % 3)&-1;
      $add240$i = (($rem$i) + 1)|0;
      HEAP32[$arrayidx232$i>>2] = $add240$i;
     }
    }
    $inc247$i = (($i$6228$i) + 1)|0;
    $exitcond245$i = ($inc247$i|0)==(12);
    if ($exitcond245$i) {
     break;
    } else {
     $i$6228$i = $inc247$i;
    }
   }
   $arrayidx276$i = (($ns_attacks) + ($chn$1231$i<<4)|0);
   $86 = +HEAPF32[$en_short$i>>2];
   $87 = +HEAPF32[$arrayidx255$i>>2];
   $cmp256$i = $86 > $87;
   $cond261$i = $cmp256$i ? $86 : $87;
   $cmp262$i = $cond261$i < 4.0E+4;
   $mul265$i = $87 * 1.7000000476837158;
   $cmp266$i = $86 < $mul265$i;
   $or$cond$i = $cmp266$i & $cmp262$i;
   $mul268$i = $86 * 1.7000000476837158;
   $cmp269$i = $87 < $mul268$i;
   $or$cond214$i = $cmp269$i & $or$cond$i;
   if ($or$cond214$i) {
    $90 = HEAP32[$arrayidx276$i>>2]|0;
    $arrayidx278$i = (((($ns_attacks) + ($chn$1231$i<<4)|0)) + 4|0);
    $91 = HEAP32[$arrayidx278$i>>2]|0;
    $cmp279$i = ($90|0)>($91|0);
    if (!($cmp279$i)) {
     HEAP32[$arrayidx276$i>>2] = 0;
    }
    HEAP32[$arrayidx278$i>>2] = 0;
   }
   $92 = +HEAPF32[$arrayidx255$1$i>>2];
   $cmp256$1$i = $87 > $92;
   $cond261$1$i = $cmp256$1$i ? $87 : $92;
   $cmp262$1$i = $cond261$1$i < 4.0E+4;
   $mul265$1$i = $92 * 1.7000000476837158;
   $cmp266$1$i = $87 < $mul265$1$i;
   $or$cond$1$i = $cmp266$1$i & $cmp262$1$i;
   $cmp269$1$i = $92 < $mul265$i;
   $or$cond214$1$i = $cmp269$1$i & $or$cond$1$i;
   if ($or$cond214$1$i) {
    $$pre256$i = (((($ns_attacks) + ($chn$1231$i<<4)|0)) + 8|0);
    HEAP32[$$pre256$i>>2] = 0;
   }
   $104 = +HEAPF32[$arrayidx255$2$i>>2];
   $cmp256$2$i = $92 > $104;
   $cond261$2$i = $cmp256$2$i ? $92 : $104;
   $cmp262$2$i = $cond261$2$i < 4.0E+4;
   $mul265$2$i = $104 * 1.7000000476837158;
   $cmp266$2$i = $92 < $mul265$2$i;
   $or$cond$2$i = $cmp266$2$i & $cmp262$2$i;
   $cmp269$2$i = $104 < $mul265$1$i;
   $or$cond214$2$i = $cmp269$2$i & $or$cond$2$i;
   if ($or$cond214$2$i) {
    $$pre257$i = (((($ns_attacks) + ($chn$1231$i<<4)|0)) + 12|0);
    HEAP32[$$pre257$i>>2] = 0;
   }
   $105 = HEAP32[$arrayidx276$i>>2]|0;
   $arrayidx294$i = (((($gfc)) + 27780|0) + ($chn$1231$i<<2)|0);
   $93 = HEAP32[$arrayidx294$i>>2]|0;
   $cmp295$i = ($105|0)>($93|0);
   if ($cmp295$i) {
    $94 = $105;
   } else {
    HEAP32[$arrayidx276$i>>2] = 0;
    $94 = 0;
   }
   $cmp303$i = ($93|0)==(3);
   $arrayidx319$phi$trans$insert$i = (((($ns_attacks) + ($chn$1231$i<<4)|0)) + 4|0);
   $$pre$i = HEAP32[$arrayidx319$phi$trans$insert$i>>2]|0;
   if ($cmp303$i) {
    label = 47;
   } else {
    $add309$i = (($$pre$i) + ($94))|0;
    $arrayidx311$i = (((($ns_attacks) + ($chn$1231$i<<4)|0)) + 8|0);
    $95 = HEAP32[$arrayidx311$i>>2]|0;
    $add312$i = (($add309$i) + ($95))|0;
    $arrayidx314$i = (((($ns_attacks) + ($chn$1231$i<<4)|0)) + 12|0);
    $96 = HEAP32[$arrayidx314$i>>2]|0;
    $add315$i = (0 - ($96))|0;
    $tobool316$i = ($add312$i|0)==($add315$i|0);
    if ($tobool316$i) {
     $ns_uselongblock$0$i = 1;
    } else {
     label = 47;
    }
   }
   do {
    if ((label|0) == 47) {
     label = 0;
     $tobool320$i = ($$pre$i|0)==(0);
     do {
      if ($tobool320$i) {
       $98 = 0;
      } else {
       $tobool324$i = ($94|0)==(0);
       if ($tobool324$i) {
        $98 = $$pre$i;
        break;
       }
       HEAP32[$arrayidx319$phi$trans$insert$i>>2] = 0;
       $98 = 0;
      }
     } while(0);
     $arrayidx330$i = (((($ns_attacks) + ($chn$1231$i<<4)|0)) + 8|0);
     $97 = HEAP32[$arrayidx330$i>>2]|0;
     $tobool331$i = ($97|0)==(0);
     if ($tobool331$i) {
      $ns_uselongblock$0$i = 0;
      break;
     }
     $tobool335$i = ($98|0)==(0);
     if (!($tobool335$i)) {
      HEAP32[$arrayidx330$i>>2] = 0;
      $ns_uselongblock$0$i = 0;
      break;
     }
     $arrayidx341$i = (((($ns_attacks) + ($chn$1231$i<<4)|0)) + 12|0);
     $99 = HEAP32[$arrayidx341$i>>2]|0;
     $tobool342$i = ($99|0)==(0);
     if ($tobool342$i) {
      $ns_uselongblock$0$i = 0;
      break;
     }
     HEAP32[$arrayidx341$i>>2] = 0;
     $ns_uselongblock$0$i = 0;
    }
   } while(0);
   $cmp352$i = ($chn$1231$i|0)<(2);
   do {
    if ($cmp352$i) {
     $arrayidx355$i = (($uselongblock) + ($chn$1231$i<<2)|0);
     $$sink$i = $ns_uselongblock$0$i;$arrayidx361$sink$i = $arrayidx355$i;
     label = 59;
    } else {
     $cmp357$i = ($ns_uselongblock$0$i|0)==(0);
     if (!($cmp357$i)) {
      break;
     }
     HEAP32[$arrayidx360$i>>2] = 0;
     $$sink$i = 0;$arrayidx361$sink$i = $uselongblock;
     label = 59;
    }
   } while(0);
   if ((label|0) == 59) {
    label = 0;
    HEAP32[$arrayidx361$sink$i>>2] = $$sink$i;
   }
   $arrayidx364$i = (((($gfc)) + 27620|0) + ($chn$1231$i<<2)|0);
   $100 = HEAP32[$arrayidx364$i>>2]|0;
   $arrayidx365$i = (($energy) + ($chn$1231$i<<2)|0);
   HEAP32[$arrayidx365$i>>2] = $100;
   $inc367$i = (($chn$1231$i) + 1)|0;
   $exitcond247$i = ($inc367$i|0)==($cond5$i|0);
   if ($exitcond247$i) {
    break;
   } else {
    $chn$1231$i = $inc367$i;
   }
  }
 }
 $short_blocks$i = ((($gfc)) + 184|0);
 $106 = HEAP32[$short_blocks$i>>2]|0;
 $cmp$i192 = ($106|0)==(1);
 if ($cmp$i192) {
  $107 = HEAP32[$uselongblock>>2]|0;
  $tobool$i193 = ($107|0)==(0);
  $$pre$i194 = ((($uselongblock)) + 4|0);
  $108 = HEAP32[$$pre$i194>>2]|0;
  $tobool3$i = ($108|0)==(0);
  $or$cond603 = $tobool$i193 | $tobool3$i;
  if ($or$cond603) {
   HEAP32[$$pre$i194>>2] = 0;
   HEAP32[$uselongblock>>2] = 0;
  }
 }
 $109 = HEAP32[$channels_out$i>>2]|0;
 $cmp613$i = ($109|0)>(0);
 L109: do {
  if ($cmp613$i) {
   switch ($106|0) {
   case 2:  {
    $chn$014$us$i = 0;
    while(1) {
     $arrayidx10$us$i = (($uselongblock) + ($chn$014$us$i<<2)|0);
     HEAP32[$arrayidx10$us$i>>2] = 1;
     $inc$us$i = (($chn$014$us$i) + 1)|0;
     $cmp6$us$i = ($inc$us$i|0)<($109|0);
     if ($cmp6$us$i) {
      $chn$014$us$i = $inc$us$i;
     } else {
      break;
     }
    }
    break;
   }
   case 3:  {
    $110 = ($109|0)>(1);
    $smax = $110 ? $109 : 1;
    $111 = $smax << 2;
    _memset(($uselongblock|0),0,($111|0))|0;
    break L109;
    break;
   }
   default: {
    break L109;
   }
   }
  }
 } while(0);
 $cmp18664 = ($cond12|0)>(0);
 if ($cmp18664) {
  $ATH$i = ((($gfc)) + 85796|0);
  $arrayidx5$i$i = ((($thm$i298)) + 4|0);
  $masking_lower6$i = ((($gfc)) + 84908|0);
  $$pre167$i = ((($avg$i)) + 4|0);
  $pinfo$i210 = ((($gfc)) + 85804|0);
  $chn$0665 = 0;
  while(1) {
   $and = $chn$0665 & 1;
   $add$ptr = (($wsamp_L) + ($and<<12)|0);
   $112 = HEAP32[$analysis>>2]|0;
   $tobool$i209 = ($112|0)==(0);
   if ($tobool$i209) {
    $cond$i212 = 0;
   } else {
    $113 = HEAP32[$pinfo$i210>>2]|0;
    $cond$i212 = $113;
   }
   $cmp$i213 = ($chn$0665|0)<(2);
   if ($cmp$i213) {
    _fft_long($gfc,$add$ptr,$chn$0665,$buffer);
   } else {
    $cmp2$i217 = ($chn$0665|0)==(2);
    if ($cmp2$i217) {
     $j$063$i = 1023;
     while(1) {
      $arrayidx5$i219 = ((($wsamp_L) + ($and<<12)|0) + ($j$063$i<<2)|0);
      $114 = +HEAPF32[$arrayidx5$i219>>2];
      $arrayidx7$i = (((($add$ptr)) + 4096|0) + ($j$063$i<<2)|0);
      $115 = +HEAPF32[$arrayidx7$i>>2];
      $add$i220 = $115 + $114;
      $mul$i221 = $add$i220 * 0.70710676908493042;
      HEAPF32[$arrayidx5$i219>>2] = $mul$i221;
      $sub$i = $114 - $115;
      $mul10$i = $sub$i * 0.70710676908493042;
      HEAPF32[$arrayidx7$i>>2] = $mul10$i;
      $dec$i = (($j$063$i) + -1)|0;
      $cmp4$i = ($j$063$i|0)>(0);
      if ($cmp4$i) {
       $j$063$i = $dec$i;
      } else {
       break;
      }
     }
    }
   }
   $116 = +HEAPF32[$add$ptr>>2];
   $mul19$i223 = $116 * $116;
   HEAPF32[$fftenergy>>2] = $mul19$i223;
   $j$162$i = 511;
   while(1) {
    $sub23$i = (512 - ($j$162$i))|0;
    $arrayidx24$i = ((($wsamp_L) + ($and<<12)|0) + ($sub23$i<<2)|0);
    $117 = +HEAPF32[$arrayidx24$i>>2];
    $add25$i = (($j$162$i) + 512)|0;
    $arrayidx26$i = ((($wsamp_L) + ($and<<12)|0) + ($add25$i<<2)|0);
    $118 = +HEAPF32[$arrayidx26$i>>2];
    $mul27$i = $117 * $117;
    $mul28$i = $118 * $118;
    $add29$i = $mul28$i + $mul27$i;
    $mul30$i = $add29$i * 0.5;
    $arrayidx32$i224 = (($fftenergy) + ($sub23$i<<2)|0);
    HEAPF32[$arrayidx32$i224>>2] = $mul30$i;
    $dec34$i = (($j$162$i) + -1)|0;
    $cmp21$i = ($j$162$i|0)>(0);
    if ($cmp21$i) {
     $j$162$i = $dec34$i;
    } else {
     $j$260$i = 11;$totalenergy$061$i = 0.0;
     break;
    }
   }
   while(1) {
    $arrayidx39$i225 = (($fftenergy) + ($j$260$i<<2)|0);
    $119 = +HEAPF32[$arrayidx39$i225>>2];
    $add40$i = $119 + $totalenergy$061$i;
    $inc$i226 = (($j$260$i) + 1)|0;
    $exitcond65$i = ($inc$i226|0)==(513);
    if ($exitcond65$i) {
     break;
    } else {
     $j$260$i = $inc$i226;$totalenergy$061$i = $add40$i;
    }
   }
   $arrayidx43$i = (((($gfc)) + 27620|0) + ($chn$0665<<2)|0);
   HEAPF32[$arrayidx43$i>>2] = $add40$i;
   $tobool44$i = ($cond$i212|0)==(0|0);
   if (!($tobool44$i)) {
    $j$359$i = 0;
    while(1) {
     $arrayidx50$i = ((((($cond$i212)) + 90936|0) + ($chn$0665<<13)|0) + ($j$359$i<<3)|0);
     $120 = +HEAPF64[$arrayidx50$i>>3];
     $arrayidx53$i = (((((($cond$i212)) + 123704|0) + ($gr_out<<15)|0) + ($chn$0665<<13)|0) + ($j$359$i<<3)|0);
     HEAPF64[$arrayidx53$i>>3] = $120;
     $arrayidx54$i = (($fftenergy) + ($j$359$i<<2)|0);
     $121 = +HEAPF32[$arrayidx54$i>>2];
     $conv$i227 = $121;
     HEAPF64[$arrayidx50$i>>3] = $conv$i227;
     $inc59$i = (($j$359$i) + 1)|0;
     $exitcond$i228 = ($inc59$i|0)==(513);
     if ($exitcond$i228) {
      break;
     } else {
      $j$359$i = $inc59$i;
     }
    }
   }
   if ($cmp$i213) {
    $arrayidx$i230 = (((($gfc)) + 27612|0) + ($chn$0665<<2)|0);
    $122 = HEAP32[$arrayidx$i230>>2]|0;
    $arrayidx2$i = ((((($gfc)) + 27804|0) + ($gr_out<<3)|0) + ($chn$0665<<2)|0);
    HEAP32[$arrayidx2$i>>2] = $122;
    $123 = HEAP32[$ATH$i>>2]|0;
    $i$08$i$i = 0;$loudness_power$09$i$i = 0.0;
    while(1) {
     $arrayidx$i$i = (($fftenergy) + ($i$08$i$i<<2)|0);
     $124 = +HEAPF32[$arrayidx$i$i>>2];
     $arrayidx1$i$i = (((($123)) + 724|0) + ($i$08$i$i<<2)|0);
     $125 = +HEAPF32[$arrayidx1$i$i>>2];
     $mul$i$i = $125 * $124;
     $add$i$i = $mul$i$i + $loudness_power$09$i$i;
     $inc$i$i = (($i$08$i$i) + 1)|0;
     $exitcond$i$i = ($inc$i$i|0)==(512);
     if ($exitcond$i$i) {
      break;
     } else {
      $i$08$i$i = $inc$i$i;$loudness_power$09$i$i = $add$i$i;
     }
    }
    $conv$i$i = $add$i$i;
    $mul2$i$i = $conv$i$i * 8.9748713435966334E-12;
    $conv3$i$i = $mul2$i$i;
    HEAPF32[$arrayidx$i230>>2] = $conv3$i$i;
   }
   $126 = HEAP32[$cd_psy>>2]|0;
   $npart$i$i = ((($126)) + 2148|0);
   $127 = HEAP32[$npart$i$i>>2]|0;
   $cmp29$i$i = ($127|0)>(0);
   if ($cmp29$i$i) {
    $b$031$i$i = 0;$j$030$i$i = 0;
    while(1) {
     $arrayidx$i$i249 = (((($126)) + 1716|0) + ($b$031$i$i<<2)|0);
     $128 = HEAP32[$arrayidx$i$i249>>2]|0;
     $cmp222$i$i = ($128|0)>(0);
     if ($cmp222$i$i) {
      $ebb$024$i$i = 0.0;$i$026$i$i = 0;$j$123$i$i = $j$030$i$i;$m$025$i$i = 0.0;
      while(1) {
       $arrayidx4$i$i = (($fftenergy) + ($j$123$i$i<<2)|0);
       $129 = +HEAPF32[$arrayidx4$i$i>>2];
       $add$i$i250 = $129 + $ebb$024$i$i;
       $cmp5$i$i = $m$025$i$i < $129;
       $m$1$i$i = $cmp5$i$i ? $129 : $m$025$i$i;
       $inc$i$i251 = (($i$026$i$i) + 1)|0;
       $inc6$i$i = (($j$123$i$i) + 1)|0;
       $exitcond163$i = ($inc$i$i251|0)==($128|0);
       if ($exitcond163$i) {
        break;
       } else {
        $ebb$024$i$i = $add$i$i250;$i$026$i$i = $inc$i$i251;$j$123$i$i = $inc6$i$i;$m$025$i$i = $m$1$i$i;
       }
      }
      $130 = (($128) + ($j$030$i$i))|0;
      $ebb$0$lcssa$i$i = $add$i$i250;$j$1$lcssa$i$i = $130;$m$0$lcssa$i$i = $m$1$i$i;
     } else {
      $ebb$0$lcssa$i$i = 0.0;$j$1$lcssa$i$i = $j$030$i$i;$m$0$lcssa$i$i = 0.0;
     }
     $arrayidx7$i$i = ((($eb) + ($chn$0665<<8)|0) + ($b$031$i$i<<2)|0);
     HEAPF32[$arrayidx7$i$i>>2] = $ebb$0$lcssa$i$i;
     $arrayidx8$i$i = (($thm$i298) + ($b$031$i$i<<2)|0);
     HEAPF32[$arrayidx8$i$i>>2] = $m$0$lcssa$i$i;
     $arrayidx9$i$i = (((($126)) + 512|0) + ($b$031$i$i<<2)|0);
     $131 = +HEAPF32[$arrayidx9$i$i>>2];
     $mul$i$i252 = $131 * $ebb$0$lcssa$i$i;
     $arrayidx10$i$i = (($avg$i) + ($b$031$i$i<<2)|0);
     HEAPF32[$arrayidx10$i$i>>2] = $mul$i$i252;
     $inc12$i$i = (($b$031$i$i) + 1)|0;
     $exitcond164$i = ($inc12$i$i|0)==($127|0);
     if ($exitcond164$i) {
      break;
     } else {
      $b$031$i$i = $inc12$i$i;$j$030$i$i = $j$1$lcssa$i$i;
     }
    }
    $$pre$i253 = +HEAPF32[$avg$i>>2];
    $$pre165$i = +HEAPF32[$$pre167$i>>2];
    $132 = $$pre$i253;$133 = $$pre165$i;
   } else {
    $132 = 0.0;$133 = 0.0;
   }
   $add2$i$i = $132 + $133;
   $cmp$i134$i = $add2$i$i > 0.0;
   if ($cmp$i134$i) {
    $134 = +HEAPF32[$thm$i298>>2];
    $135 = +HEAPF32[$arrayidx5$i$i>>2];
    $cmp6$i$i = $134 < $135;
    $m$0$i$i = $cmp6$i$i ? $135 : $134;
    $mul$i135$i = $m$0$i$i * 2.0;
    $sub$i$i = $mul$i135$i - $add2$i$i;
    $mul10$i$i = $sub$i$i * 20.0;
    $arrayidx11$i$i = ((($126)) + 1716|0);
    $136 = HEAP32[$arrayidx11$i$i>>2]|0;
    $arrayidx14$i$i = ((($126)) + 1720|0);
    $137 = HEAP32[$arrayidx14$i$i>>2]|0;
    $add15$i$i = (($136) + -1)|0;
    $sub16$i$i = (($add15$i$i) + ($137))|0;
    $conv$i136$i = (+($sub16$i$i|0));
    $mul17$i$i = $conv$i136$i * $add2$i$i;
    $div$i137$i = $mul10$i$i / $mul17$i$i;
    $conv18$i$i = (~~(($div$i137$i)));
    $138 = ($conv18$i$i|0)<(8);
    $$conv18$i$i = $138 ? $conv18$i$i : 8;
    $conv23$i$i = $$conv18$i$i&255;
    $$sink$i$i = $conv23$i$i;
   } else {
    $$sink$i$i = 0;
   }
   HEAP8[$mask_idx_s$i>>0] = $$sink$i$i;
   $sub271$i$i = (($127) + -1)|0;
   $cmp282$i$i = ($sub271$i$i|0)>(1);
   $139 = +HEAPF32[$$pre167$i>>2];
   $add334$i$i = $139 + $132;
   if ($cmp282$i$i) {
    $148 = $139;$add337$i$i = $add334$i$i;$b$05$i$i = 1;$sub306$i$i = 0;
    while(1) {
     $add34$i$i = (($b$05$i$i) + 1)|0;
     $arrayidx35$i$i = (($avg$i) + ($add34$i$i<<2)|0);
     $140 = +HEAPF32[$arrayidx35$i$i>>2];
     $add36$i$i = $140 + $add337$i$i;
     $cmp37$i$i = $add36$i$i > 0.0;
     if ($cmp37$i$i) {
      $arrayidx41$i$i = (($thm$i298) + ($sub306$i$i<<2)|0);
      $141 = +HEAPF32[$arrayidx41$i$i>>2];
      $arrayidx42$i$i = (($thm$i298) + ($b$05$i$i<<2)|0);
      $142 = +HEAPF32[$arrayidx42$i$i>>2];
      $cmp43$i$i = $141 < $142;
      $m$1$i139$i = $cmp43$i$i ? $142 : $141;
      $arrayidx49$i$i = (($thm$i298) + ($add34$i$i<<2)|0);
      $143 = +HEAPF32[$arrayidx49$i$i>>2];
      $cmp50$i$i = $m$1$i139$i < $143;
      $m$2$i$i = $cmp50$i$i ? $143 : $m$1$i139$i;
      $mul56$i$i = $m$2$i$i * 3.0;
      $sub57$i$i = $mul56$i$i - $add36$i$i;
      $mul58$i$i = $sub57$i$i * 20.0;
      $arrayidx61$i$i = (((($126)) + 1716|0) + ($sub306$i$i<<2)|0);
      $144 = HEAP32[$arrayidx61$i$i>>2]|0;
      $arrayidx63$i$i = (((($126)) + 1716|0) + ($b$05$i$i<<2)|0);
      $145 = HEAP32[$arrayidx63$i$i>>2]|0;
      $arrayidx67$i$i = (((($126)) + 1716|0) + ($add34$i$i<<2)|0);
      $146 = HEAP32[$arrayidx67$i$i>>2]|0;
      $add64$i$i = (($144) + -1)|0;
      $add68$i$i = (($add64$i$i) + ($145))|0;
      $sub69$i$i = (($add68$i$i) + ($146))|0;
      $conv70$i$i = (+($sub69$i$i|0));
      $mul71$i$i = $conv70$i$i * $add36$i$i;
      $div72$i$i = $mul58$i$i / $mul71$i$i;
      $conv73$i$i = (~~(($div72$i$i)));
      $147 = ($conv73$i$i|0)<(8);
      $$conv73$i$i = $147 ? $conv73$i$i : 8;
      $conv78$i$i = $$conv73$i$i&255;
      $$sink1$i$i = $conv78$i$i;
     } else {
      $$sink1$i$i = 0;
     }
     $arrayidx81$sink$i$i = (($mask_idx_s$i) + ($b$05$i$i)|0);
     HEAP8[$arrayidx81$sink$i$i>>0] = $$sink1$i$i;
     $add33$i$i = $140 + $148;
     $exitcond703 = ($add34$i$i|0)==($sub271$i$i|0);
     if ($exitcond703) {
      break;
     } else {
      $sub306$i$i$phi = $b$05$i$i;$148 = $140;$add337$i$i = $add33$i$i;$b$05$i$i = $add34$i$i;$sub306$i$i = $sub306$i$i$phi;
     }
    }
    $149 = (($127) + -2)|0;
    $add33$lcssa$i$i = $add33$i$i;$b$0$lcssa$i$i = $sub271$i$i;$sub30$lcssa$i$i = $149;
   } else {
    $add33$lcssa$i$i = $add334$i$i;$b$0$lcssa$i$i = 1;$sub30$lcssa$i$i = 0;
   }
   $cmp87$i$i = $add33$lcssa$i$i > 0.0;
   if ($cmp87$i$i) {
    $arrayidx91$i$i = (($thm$i298) + ($sub30$lcssa$i$i<<2)|0);
    $150 = +HEAPF32[$arrayidx91$i$i>>2];
    $arrayidx92$i$i = (($thm$i298) + ($b$0$lcssa$i$i<<2)|0);
    $151 = +HEAPF32[$arrayidx92$i$i>>2];
    $cmp93$i$i = $150 < $151;
    $m$3$i$i = $cmp93$i$i ? $151 : $150;
    $mul98$i$i = $m$3$i$i * 2.0;
    $sub99$i$i = $mul98$i$i - $add33$lcssa$i$i;
    $mul100$i$i = $sub99$i$i * 20.0;
    $arrayidx103$i$i = (((($126)) + 1716|0) + ($sub30$lcssa$i$i<<2)|0);
    $152 = HEAP32[$arrayidx103$i$i>>2]|0;
    $arrayidx105$i$i = (((($126)) + 1716|0) + ($b$0$lcssa$i$i<<2)|0);
    $153 = HEAP32[$arrayidx105$i$i>>2]|0;
    $add106$i$i = (($152) + -1)|0;
    $sub107$i$i = (($add106$i$i) + ($153))|0;
    $conv108$i$i = (+($sub107$i$i|0));
    $mul109$i$i = $conv108$i$i * $add33$lcssa$i$i;
    $div110$i$i = $mul100$i$i / $mul109$i$i;
    $conv111$i$i = (~~(($div110$i$i)));
    $154 = ($conv111$i$i|0)<(8);
    $$conv111$i$i = $154 ? $conv111$i$i : 8;
    $conv116$i$i = $$conv111$i$i&255;
    $$sink2$i$i = $conv116$i$i;
   } else {
    $$sink2$i$i = 0;
   }
   $arrayidx119$sink$i$i = (($mask_idx_s$i) + ($b$0$lcssa$i$i)|0);
   HEAP8[$arrayidx119$sink$i$i>>0] = $$sink2$i$i;
   if ($cmp29$i$i) {
    $s3$i = ((($126)) + 2156|0);
    $arrayidx45$i256 = (((($gfc)) + 27796|0) + ($and<<2)|0);
    $b$0156$i = 0;$k$0157$i = 0;
    while(1) {
     $arrayidx$i258 = (($126) + ($b$0156$i<<2)|0);
     $157 = +HEAPF32[$arrayidx$i258>>2];
     $158 = +HEAPF32[$masking_lower6$i>>2];
     $mul$i259 = $158 * $157;
     $arrayidx8$i260 = (((($126)) + 1204|0) + ($b$0156$i<<3)|0);
     $159 = HEAP32[$arrayidx8$i260>>2]|0;
     $arrayidx11$i261 = (((((($126)) + 1204|0) + ($b$0156$i<<3)|0)) + 4|0);
     $160 = HEAP32[$arrayidx11$i261>>2]|0;
     $arrayidx12$i = (($mask_idx_s$i) + ($b$0156$i)|0);
     $161 = HEAP8[$arrayidx12$i>>0]|0;
     $conv$i262 = $161&255;
     $arrayidx$i141$i = (5812 + ($conv$i262<<2)|0);
     $162 = HEAP32[$arrayidx$i141$i>>2]|0;
     $arrayidx13$i263 = (($mask_idx_s$i) + ($159)|0);
     $163 = HEAP8[$arrayidx13$i263>>0]|0;
     $conv14$i264 = $163&255;
     $164 = HEAP32[$s3$i>>2]|0;
     $arrayidx15$i265 = (($164) + ($k$0157$i<<2)|0);
     $165 = +HEAPF32[$arrayidx15$i265>>2];
     $arrayidx16$i266 = ((($eb) + ($chn$0665<<8)|0) + ($159<<2)|0);
     $166 = +HEAPF32[$arrayidx16$i266>>2];
     $mul17$i267 = $166 * $165;
     $arrayidx19$i = (5848 + ($conv14$i264<<2)|0);
     $167 = +HEAPF32[$arrayidx19$i>>2];
     $mul20$i = $mul17$i267 * $167;
     $k$1144$i = (($k$0157$i) + 1)|0;
     $cmp22146$i = ($159|0)<($160|0);
     if ($cmp22146$i) {
      $169 = $164;$dd$0148$i = $conv14$i264;$ecb$0147$i = $mul20$i;$k$1150$i = $k$1144$i;$kk$0151$in$i = $159;
      while(1) {
       $kk$0151$i = (($kk$0151$in$i) + 1)|0;
       $arrayidx24$i269 = (($mask_idx_s$i) + ($kk$0151$i)|0);
       $168 = HEAP8[$arrayidx24$i269>>0]|0;
       $conv25$i270 = $168&255;
       $add26$i271 = (($conv25$i270) + ($dd$0148$i))|0;
       $arrayidx29$i = (($169) + ($k$1150$i<<2)|0);
       $170 = +HEAPF32[$arrayidx29$i>>2];
       $arrayidx30$i = ((($eb) + ($chn$0665<<8)|0) + ($kk$0151$i<<2)|0);
       $171 = +HEAPF32[$arrayidx30$i>>2];
       $mul31$i = $171 * $170;
       $arrayidx34$i = (5848 + ($conv25$i270<<2)|0);
       $172 = +HEAPF32[$arrayidx34$i>>2];
       $mul35$i = $mul31$i * $172;
       $sub$i272 = (($kk$0151$i) - ($b$0156$i))|0;
       $cmp$i130$i = $ecb$0147$i < 0.0;
       $m1$addr$0$i$i = $cmp$i130$i ? 0.0 : $ecb$0147$i;
       $cmp1$i$i = $mul35$i < 0.0;
       $m2$addr$0$i$i = $cmp1$i$i ? 0.0 : $mul35$i;
       $cmp4$i$i = !($m1$addr$0$i$i <= 0.0);
       do {
        if ($cmp4$i$i) {
         $cmp7$i$i = !($m2$addr$0$i$i <= 0.0);
         if (!($cmp7$i$i)) {
          $ecb$0$be$i = $m1$addr$0$i$i;
          break;
         }
         $cmp10$i$i = $m2$addr$0$i$i > $m1$addr$0$i$i;
         if ($cmp10$i$i) {
          $div$i$i = $m2$addr$0$i$i / $m1$addr$0$i$i;
          $ratio$0$i$i = $div$i$i;
         } else {
          $div12$i$i = $m1$addr$0$i$i / $m2$addr$0$i$i;
          $ratio$0$i$i = $div12$i$i;
         }
         $ispos$i$i = ($sub$i272|0)>(-1);
         $neg$i$i = (0 - ($sub$i272))|0;
         $173 = $ispos$i$i ? $sub$i272 : $neg$i$i;
         $cmp14$i$i = ($173|0)>($162|0);
         if ($cmp14$i$i) {
          $176 = +HEAPF32[6080];
          $cmp24$i$i = $ratio$0$i$i < $176;
          if ($cmp24$i$i) {
           $add27$i$i = $m2$addr$0$i$i + $m1$addr$0$i$i;
           $ecb$0$be$i = $add27$i$i;
           break;
          } else {
           $m1$addr$1$i$i = $cmp10$i$i ? $m2$addr$0$i$i : $m1$addr$0$i$i;
           $ecb$0$be$i = $m1$addr$1$i$i;
           break;
          }
         } else {
          $174 = +HEAPF32[6079];
          $cmp16$i$i = !($ratio$0$i$i >= $174);
          if ($cmp16$i$i) {
           $call19$i$i = (+_fast_log2($ratio$0$i$i));
           $conv$i$i273 = $call19$i$i;
           $mul$i132$i = $conv$i$i273 * 4.8164799306236983;
           $conv20$i$i = (~~(($mul$i132$i)));
           $add21$i$i = $m2$addr$0$i$i + $m1$addr$0$i$i;
           $arrayidx$i133$i = (5884 + ($conv20$i$i<<2)|0);
           $175 = +HEAPF32[$arrayidx$i133$i>>2];
           $mul22$i$i = $175 * $add21$i$i;
           $ecb$0$be$i = $mul22$i$i;
           break;
          } else {
           $add$i131$i = $m2$addr$0$i$i + $m1$addr$0$i$i;
           $ecb$0$be$i = $add$i131$i;
           break;
          }
         }
        } else {
         $ecb$0$be$i = $m2$addr$0$i$i;
        }
       } while(0);
       $exitcond162$i = ($kk$0151$i|0)==($160|0);
       if ($exitcond162$i) {
        break;
       }
       $k$1$i = (($k$1150$i) + 1)|0;
       $$pre166$i = HEAP32[$s3$i>>2]|0;
       $169 = $$pre166$i;$dd$0148$i = $add26$i271;$ecb$0147$i = $ecb$0$be$i;$k$1150$i = $k$1$i;$kk$0151$in$i = $kk$0151$i;
      }
      $177 = (1 - ($159))|0;
      $178 = (($177) + ($160))|0;
      $179 = (($k$1144$i) - ($159))|0;
      $180 = (($179) + ($160))|0;
      $dd$0$lcssa$i = $add26$i271;$dd_n$0$lcssa$i = $178;$ecb$0$lcssa$i = $ecb$0$be$i;$k$1$lcssa$i = $180;
     } else {
      $dd$0$lcssa$i = $conv14$i264;$dd_n$0$lcssa$i = 1;$ecb$0$lcssa$i = $mul20$i;$k$1$lcssa$i = $k$1144$i;
     }
     $mul39$i = $dd$0$lcssa$i << 1;
     $add40$i274 = $mul39$i | 1;
     $mul41$i = $dd_n$0$lcssa$i << 1;
     $div$i275 = (($add40$i274|0) / ($mul41$i|0))&-1;
     $arrayidx42$i = (5848 + ($div$i275<<2)|0);
     $181 = +HEAPF32[$arrayidx42$i>>2];
     $mul43$i = $181 * 0.5;
     $mul44$i = $mul43$i * $ecb$0$lcssa$i;
     $182 = HEAP32[$arrayidx45$i256>>2]|0;
     $cmp46$i = ($182|0)==(2);
     do {
      if ($cmp46$i) {
       $arrayidx49$i276 = ((((($gfc)) + 21564|0) + ($chn$0665<<8)|0) + ($b$0156$i<<2)|0);
       $183 = +HEAPF32[$arrayidx49$i276>>2];
       $mul50$i = $183 * 2.0;
       $cmp51$i = $mul50$i > 0.0;
       if ($cmp51$i) {
        $cmp54$i = $mul44$i < $mul50$i;
        $cond$i278 = $cmp54$i ? $mul44$i : $mul50$i;
        $arrayidx114$pre$phi$iZ2D = $arrayidx49$i276;$cond109$sink$i = $cond$i278;
        break;
       } else {
        $conv57$i = $mul44$i;
        $arrayidx58$i = ((($eb) + ($chn$0665<<8)|0) + ($b$0156$i<<2)|0);
        $184 = +HEAPF32[$arrayidx58$i>>2];
        $conv59$i = $184;
        $mul60$i = $conv59$i * 0.29999999999999999;
        $cmp61$i = $conv57$i < $mul60$i;
        $conv57$mul60$i = $cmp61$i ? $conv57$i : $mul60$i;
        $conv71$i = $conv57$mul60$i;
        $arrayidx114$pre$phi$iZ2D = $arrayidx49$i276;$cond109$sink$i = $conv71$i;
        break;
       }
      } else {
       $arrayidx75$i = ((((($gfc)) + 22588|0) + ($chn$0665<<8)|0) + ($b$0156$i<<2)|0);
       $185 = +HEAPF32[$arrayidx75$i>>2];
       $mul76$i = $185 * 16.0;
       $arrayidx79$i = ((((($gfc)) + 21564|0) + ($chn$0665<<8)|0) + ($b$0156$i<<2)|0);
       $186 = +HEAPF32[$arrayidx79$i>>2];
       $mul80$i = $186 * 2.0;
       $cmp82$i = !($mul76$i <= 0.0);
       $ecb_limit_2$0$i = $cmp82$i ? $mul76$i : $mul44$i;
       $cmp86$i = !($mul80$i <= 0.0);
       $ecb_limit_1$0$i = $cmp86$i ? $mul80$i : $mul44$i;
       $cmp93$i = ($182|0)==(0);
       $cmp96$i = $ecb_limit_1$0$i < $ecb_limit_2$0$i;
       $cond101$i = $cmp96$i ? $ecb_limit_1$0$i : $ecb_limit_2$0$i;
       $ecb_limit81$0$i = $cmp93$i ? $cond101$i : $ecb_limit_1$0$i;
       $cmp104$i = $mul44$i < $ecb_limit81$0$i;
       $cond109$i = $cmp104$i ? $mul44$i : $ecb_limit81$0$i;
       $arrayidx114$pre$phi$iZ2D = $arrayidx79$i;$cond109$sink$i = $cond109$i;
      }
     } while(0);
     $arrayidx110$i = ((($thr) + ($chn$0665<<8)|0) + ($b$0156$i<<2)|0);
     HEAPF32[$arrayidx110$i>>2] = $cond109$sink$i;
     $187 = HEAP32[$arrayidx114$pre$phi$iZ2D>>2]|0;
     $arrayidx117$i = ((((($gfc)) + 22588|0) + ($chn$0665<<8)|0) + ($b$0156$i<<2)|0);
     HEAP32[$arrayidx117$i>>2] = $187;
     HEAPF32[$arrayidx114$pre$phi$iZ2D>>2] = $mul44$i;
     $arrayidx121$i = (($thm$i298) + ($b$0156$i<<2)|0);
     $188 = +HEAPF32[$arrayidx121$i>>2];
     $arrayidx122$i = (((($126)) + 256|0) + ($b$0156$i<<2)|0);
     $189 = +HEAPF32[$arrayidx122$i>>2];
     $mul123$i = $188 * $mul43$i;
     $mul124$i = $mul123$i * $189;
     $cmp126$i = $cond109$sink$i > $mul124$i;
     if ($cmp126$i) {
      HEAPF32[$arrayidx110$i>>2] = $mul124$i;
      $190 = $mul124$i;
     } else {
      $190 = $cond109$sink$i;
     }
     $cmp131$i = $mul$i259 > 1.0;
     $mul135$i = $190 * $mul$i259;
     if ($cmp131$i) {
      HEAPF32[$arrayidx110$i>>2] = $mul135$i;
      $192 = $mul135$i;
     } else {
      $192 = $190;
     }
     $arrayidx138$i = ((($eb) + ($chn$0665<<8)|0) + ($b$0156$i<<2)|0);
     $191 = +HEAPF32[$arrayidx138$i>>2];
     $cmp139$i = $192 > $191;
     if ($cmp139$i) {
      HEAPF32[$arrayidx110$i>>2] = $191;
      $193 = $191;
     } else {
      $193 = $192;
     }
     $cmp145$i = $mul$i259 < 1.0;
     if ($cmp145$i) {
      $mul149$i = $193 * $mul$i259;
      HEAPF32[$arrayidx110$i>>2] = $mul149$i;
     }
     $inc151$i = (($b$0156$i) + 1)|0;
     $194 = HEAP32[$npart$i$i>>2]|0;
     $cmp$i280 = ($inc151$i|0)<($194|0);
     if ($cmp$i280) {
      $b$0156$i = $inc151$i;$k$0157$i = $k$1$lcssa$i;
     } else {
      break;
     }
    }
    $cmp153142$i = ($inc151$i|0)<(64);
    if ($cmp153142$i) {
     $b$1143$i$ph = $inc151$i;
     label = 113;
    }
   } else {
    $b$1143$i$ph = 0;
    label = 113;
   }
   if ((label|0) == 113) {
    label = 0;
    $scevgep705 = ((($eb) + ($chn$0665<<8)|0) + ($b$1143$i$ph<<2)|0);
    $155 = $b$1143$i$ph << 2;
    $156 = (256 - ($155))|0;
    _memset(($scevgep705|0),0,($156|0))|0;
    $scevgep708 = ((($thr) + ($chn$0665<<8)|0) + ($b$1143$i$ph<<2)|0);
    _memset(($scevgep708|0),0,($156|0))|0;
   }
   $inc = (($chn$0665) + 1)|0;
   $exitcond710 = ($inc|0)==($cond12|0);
   if ($exitcond710) {
    break;
   } else {
    $chn$0665 = $inc;
   }
  }
 }
 $195 = HEAP32[$mode>>2]|0;
 $cmp28 = ($195|0)==(1);
 if ($cmp28) {
  $196 = HEAP32[$uselongblock>>2]|0;
  $arrayidx30 = ((($uselongblock)) + 4|0);
  $197 = HEAP32[$arrayidx30>>2]|0;
  $add = (($197) + ($196))|0;
  $cmp31 = ($add|0)==(2);
  if ($cmp31) {
   $arraydecay34 = ((($0)) + 768|0);
   $ATH35 = ((($gfc)) + 85796|0);
   $198 = HEAP32[$ATH35>>2]|0;
   $arraydecay36 = ((($198)) + 212|0);
   $199 = +HEAPF32[$msfix>>2];
   $npart = ((($0)) + 2148|0);
   $200 = HEAP32[$npart>>2]|0;
   _vbrpsy_compute_MS_thresholds($eb,$thr,$arraydecay34,$arraydecay36,$cond6,$199,$200);
  }
 }
 $201 = HEAP32[$cd_psy>>2]|0;
 if ($cmp18664) {
  $202 = $201;$chn$1659 = 0;
  while(1) {
   $n_sb$i$i = ((($202)) + 2152|0);
   $203 = HEAP32[$n_sb$i$i>>2]|0;
   $cmp68$i$i = ($203|0)>(0);
   L226: do {
    if ($cmp68$i$i) {
     $npart1$i$i = ((($202)) + 2148|0);
     $$pre$i$i = HEAP32[$npart1$i$i>>2]|0;
     $b$069$i$i = 0;$enn$072$i$i = 0.0;$sb$070$i$i = 0;$thmm$071$i$i = 0.0;
     while(1) {
      $arrayidx$i$i283 = (((($202)) + 2060|0) + ($sb$070$i$i<<2)|0);
      $204 = HEAP32[$arrayidx$i$i283>>2]|0;
      $cmp2$i$i = ($204|0)<($$pre$i$i|0);
      $cond$i$i = $cmp2$i$i ? $204 : $$pre$i$i;
      $cmp362$i$i = ($b$069$i$i|0)<($cond$i$i|0);
      if ($cmp362$i$i) {
       $b$163$i$i = $b$069$i$i;$enn$165$i$i = $enn$072$i$i;$thmm$164$i$i = $thmm$071$i$i;
       while(1) {
        $arrayidx4$i$i285 = ((($eb) + ($chn$1659<<8)|0) + ($b$163$i$i<<2)|0);
        $205 = +HEAPF32[$arrayidx4$i$i285>>2];
        $add$i$i286 = $205 + $enn$165$i$i;
        $arrayidx5$i$i287 = ((($thr) + ($chn$1659<<8)|0) + ($b$163$i$i<<2)|0);
        $206 = +HEAPF32[$arrayidx5$i$i287>>2];
        $add6$i$i = $206 + $thmm$164$i$i;
        $inc$i$i288 = (($b$163$i$i) + 1)|0;
        $cmp3$i$i = ($inc$i$i288|0)<($cond$i$i|0);
        if ($cmp3$i$i) {
         $b$163$i$i = $inc$i$i288;$enn$165$i$i = $add$i$i286;$thmm$164$i$i = $add6$i$i;
        } else {
         $b$1$lcssa$i$i = $cond$i$i;$enn$1$lcssa$i$i = $add$i$i286;$thmm$1$lcssa$i$i = $add6$i$i;
         break;
        }
       }
      } else {
       $b$1$lcssa$i$i = $b$069$i$i;$enn$1$lcssa$i$i = $enn$072$i$i;$thmm$1$lcssa$i$i = $thmm$071$i$i;
      }
      $cmp7$i$i289 = ($b$1$lcssa$i$i|0)<($$pre$i$i|0);
      if (!($cmp7$i$i289)) {
       $chn$1660 = $chn$1659;$enn$1$sink$i$i = $enn$1$lcssa$i$i;$sb$0$sink60$i$i = $sb$070$i$i;$thmm$1$sink$i$i = $thmm$1$lcssa$i$i;
       label = 155;
       break L226;
      }
      $arrayidx11$i$i290 = (((($202)) + 1112|0) + ($sb$070$i$i<<2)|0);
      $207 = +HEAPF32[$arrayidx11$i$i290>>2];
      $sub$i$i291 = 1.0 - $207;
      $arrayidx12$i$i = ((($eb) + ($chn$1659<<8)|0) + ($b$1$lcssa$i$i<<2)|0);
      $208 = +HEAPF32[$arrayidx12$i$i>>2];
      $mul$i$i292 = $208 * $207;
      $add13$i$i = $mul$i$i292 + $enn$1$lcssa$i$i;
      $arrayidx14$i$i293 = ((($thr) + ($chn$1659<<8)|0) + ($b$1$lcssa$i$i<<2)|0);
      $209 = +HEAPF32[$arrayidx14$i$i293>>2];
      $mul15$i$i = $209 * $207;
      $add16$i$i = $mul15$i$i + $thmm$1$lcssa$i$i;
      $arrayidx17$i$i = ((((($gfc)) + 26636|0) + (($chn$1659*244)|0)|0) + ($sb$070$i$i<<2)|0);
      HEAPF32[$arrayidx17$i$i>>2] = $add13$i$i;
      $arrayidx18$i$i = ((((($gfc)) + 25660|0) + (($chn$1659*244)|0)|0) + ($sb$070$i$i<<2)|0);
      HEAPF32[$arrayidx18$i$i>>2] = $add16$i$i;
      $mul20$i$i = $208 * $sub$i$i291;
      $mul22$i$i294 = $209 * $sub$i$i291;
      $inc25$i$i = (($b$1$lcssa$i$i) + 1)|0;
      $inc26$i$i = (($sb$070$i$i) + 1)|0;
      $cmp$i$i = ($inc26$i$i|0)<($203|0);
      if ($cmp$i$i) {
       $b$069$i$i = $inc25$i$i;$enn$072$i$i = $mul20$i$i;$sb$070$i$i = $inc26$i$i;$thmm$071$i$i = $mul22$i$i294;
      } else {
       $chn$1661 = $chn$1659;$sb$2$i$i = $inc26$i$i;
       label = 156;
       break;
      }
     }
    } else {
     $chn$1661 = $chn$1659;$sb$2$i$i = 0;
     label = 156;
    }
   } while(0);
   while(1) {
    if ((label|0) == 155) {
     label = 0;
     $arrayidx8$i$i295 = ((((($gfc)) + 26636|0) + (($chn$1660*244)|0)|0) + ($sb$0$sink60$i$i<<2)|0);
     HEAPF32[$arrayidx8$i$i295>>2] = $enn$1$sink$i$i;
     $arrayidx9$i$i296 = ((((($gfc)) + 25660|0) + (($chn$1660*244)|0)|0) + ($sb$0$sink60$i$i<<2)|0);
     HEAPF32[$arrayidx9$i$i296>>2] = $thmm$1$sink$i$i;
     $inc10$i$i = (($sb$0$sink60$i$i) + 1)|0;
     $chn$1661 = $chn$1660;$sb$2$i$i = $inc10$i$i;
     label = 156;
     continue;
    }
    else if ((label|0) == 156) {
     label = 0;
     $cmp28$i$i297 = ($sb$2$i$i|0)<($203|0);
     if ($cmp28$i$i297) {
      $chn$1660 = $chn$1661;$enn$1$sink$i$i = 0.0;$sb$0$sink60$i$i = $sb$2$i$i;$thmm$1$sink$i$i = 0.0;
      label = 155;
      continue;
     } else {
      break;
     }
    }
   }
   $210 = HEAP32[$cd_psy>>2]|0;
   $n_sb$i$i300 = ((($210)) + 6472|0);
   $211 = HEAP32[$n_sb$i$i300>>2]|0;
   $cmp68$i$i301 = ($211|0)>(0);
   L240: do {
    if ($cmp68$i$i301) {
     $npart1$i$i302 = ((($210)) + 6468|0);
     $$pre$i$i303 = HEAP32[$npart1$i$i302>>2]|0;
     $b$069$i$i308 = 0;$enn$072$i$i305 = 0.0;$sb$070$i$i307 = 0;$thmm$071$i$i306 = 0.0;
     while(1) {
      $arrayidx$i$i309 = (((($210)) + 6380|0) + ($sb$070$i$i307<<2)|0);
      $212 = HEAP32[$arrayidx$i$i309>>2]|0;
      $cmp2$i$i310 = ($212|0)<($$pre$i$i303|0);
      $cond$i$i311 = $cmp2$i$i310 ? $212 : $$pre$i$i303;
      $cmp362$i$i312 = ($b$069$i$i308|0)<($cond$i$i311|0);
      if ($cmp362$i$i312) {
       $b$163$i$i316 = $b$069$i$i308;$enn$165$i$i314 = $enn$072$i$i305;$thmm$164$i$i315 = $thmm$071$i$i306;
       while(1) {
        $arrayidx4$i$i317 = ((($eb) + ($chn$1661<<8)|0) + ($b$163$i$i316<<2)|0);
        $213 = +HEAPF32[$arrayidx4$i$i317>>2];
        $add$i$i318 = $213 + $enn$165$i$i314;
        $arrayidx5$i$i319 = ((($thr) + ($chn$1661<<8)|0) + ($b$163$i$i316<<2)|0);
        $214 = +HEAPF32[$arrayidx5$i$i319>>2];
        $add6$i$i320 = $214 + $thmm$164$i$i315;
        $inc$i$i321 = (($b$163$i$i316) + 1)|0;
        $cmp3$i$i322 = ($inc$i$i321|0)<($cond$i$i311|0);
        if ($cmp3$i$i322) {
         $b$163$i$i316 = $inc$i$i321;$enn$165$i$i314 = $add$i$i318;$thmm$164$i$i315 = $add6$i$i320;
        } else {
         $b$1$lcssa$i$i324 = $cond$i$i311;$enn$1$lcssa$i$i326 = $add$i$i318;$thmm$1$lcssa$i$i325 = $add6$i$i320;
         break;
        }
       }
      } else {
       $b$1$lcssa$i$i324 = $b$069$i$i308;$enn$1$lcssa$i$i326 = $enn$072$i$i305;$thmm$1$lcssa$i$i325 = $thmm$071$i$i306;
      }
      $cmp7$i$i327 = ($b$1$lcssa$i$i324|0)<($$pre$i$i303|0);
      if (!($cmp7$i$i327)) {
       $chn$1663 = $chn$1661;$enn$1$sink$i$i346 = $enn$1$lcssa$i$i326;$sb$0$sink60$i$i345 = $sb$070$i$i307;$thmm$1$sink$i$i347 = $thmm$1$lcssa$i$i325;
       label = 163;
       break L240;
      }
      $arrayidx11$i$i329 = (((($210)) + 5432|0) + ($sb$070$i$i307<<2)|0);
      $215 = +HEAPF32[$arrayidx11$i$i329>>2];
      $sub$i$i330 = 1.0 - $215;
      $arrayidx12$i$i331 = ((($eb) + ($chn$1661<<8)|0) + ($b$1$lcssa$i$i324<<2)|0);
      $216 = +HEAPF32[$arrayidx12$i$i331>>2];
      $mul$i$i332 = $216 * $215;
      $add13$i$i333 = $mul$i$i332 + $enn$1$lcssa$i$i326;
      $arrayidx14$i$i334 = ((($thr) + ($chn$1661<<8)|0) + ($b$1$lcssa$i$i324<<2)|0);
      $217 = +HEAPF32[$arrayidx14$i$i334>>2];
      $mul15$i$i335 = $217 * $215;
      $add16$i$i336 = $mul15$i$i335 + $thmm$1$lcssa$i$i325;
      $arrayidx17$i$i337 = (($mask_idx_s$i) + ($sb$070$i$i307<<2)|0);
      HEAPF32[$arrayidx17$i$i337>>2] = $add13$i$i333;
      $arrayidx18$i$i338 = (($thm$i298) + ($sb$070$i$i307<<2)|0);
      HEAPF32[$arrayidx18$i$i338>>2] = $add16$i$i336;
      $mul20$i$i339 = $216 * $sub$i$i330;
      $mul22$i$i340 = $217 * $sub$i$i330;
      $inc25$i$i341 = (($b$1$lcssa$i$i324) + 1)|0;
      $inc26$i$i342 = (($sb$070$i$i307) + 1)|0;
      $cmp$i$i343 = ($inc26$i$i342|0)<($211|0);
      if ($cmp$i$i343) {
       $b$069$i$i308 = $inc25$i$i341;$enn$072$i$i305 = $mul20$i$i339;$sb$070$i$i307 = $inc26$i$i342;$thmm$071$i$i306 = $mul22$i$i340;
      } else {
       $chn$1662 = $chn$1661;$sb$2$i$i352 = $inc26$i$i342;
       label = 164;
       break;
      }
     }
    } else {
     $chn$1662 = $chn$1661;$sb$2$i$i352 = 0;
     label = 164;
    }
   } while(0);
   while(1) {
    if ((label|0) == 163) {
     label = 0;
     $arrayidx8$i$i348 = (($mask_idx_s$i) + ($sb$0$sink60$i$i345<<2)|0);
     HEAPF32[$arrayidx8$i$i348>>2] = $enn$1$sink$i$i346;
     $arrayidx9$i$i349 = (($thm$i298) + ($sb$0$sink60$i$i345<<2)|0);
     HEAPF32[$arrayidx9$i$i349>>2] = $thmm$1$sink$i$i347;
     $inc10$i$i350 = (($sb$0$sink60$i$i345) + 1)|0;
     $chn$1662 = $chn$1663;$sb$2$i$i352 = $inc10$i$i350;
     label = 164;
     continue;
    }
    else if ((label|0) == 164) {
     label = 0;
     $cmp28$i$i353 = ($sb$2$i$i352|0)<($211|0);
     if ($cmp28$i$i353) {
      $chn$1663 = $chn$1662;$enn$1$sink$i$i346 = 0.0;$sb$0$sink60$i$i345 = $sb$2$i$i352;$thmm$1$sink$i$i347 = 0.0;
      label = 163;
      continue;
     } else {
      $sb$023$i = 0;
      break;
     }
    }
   }
   while(1) {
    $arrayidx$i355 = (($mask_idx_s$i) + ($sb$023$i<<2)|0);
    $218 = HEAP32[$arrayidx$i355>>2]|0;
    $arrayidx2$i356 = (($thm$i298) + ($sb$023$i<<2)|0);
    $219 = +HEAPF32[$arrayidx2$i356>>2];
    $mul$i357 = $219 * 0.015625;
    $arrayidx8$i358 = ((((((($gfc)) + 26636|0) + (($chn$1662*244)|0)|0)) + 88|0) + (($sb$023$i*12)|0)|0);
    HEAP32[$arrayidx8$i358>>2] = $218;
    $arrayidx13$i359 = ((((((($gfc)) + 25660|0) + (($chn$1662*244)|0)|0)) + 88|0) + (($sb$023$i*12)|0)|0);
    HEAPF32[$arrayidx13$i359>>2] = $mul$i357;
    $arrayidx8$1$i = ((((((((($gfc)) + 26636|0) + (($chn$1662*244)|0)|0)) + 88|0) + (($sb$023$i*12)|0)|0)) + 4|0);
    HEAP32[$arrayidx8$1$i>>2] = $218;
    $arrayidx13$1$i = ((((((((($gfc)) + 25660|0) + (($chn$1662*244)|0)|0)) + 88|0) + (($sb$023$i*12)|0)|0)) + 4|0);
    HEAPF32[$arrayidx13$1$i>>2] = $mul$i357;
    $arrayidx8$2$i = ((((((((($gfc)) + 26636|0) + (($chn$1662*244)|0)|0)) + 88|0) + (($sb$023$i*12)|0)|0)) + 8|0);
    HEAP32[$arrayidx8$2$i>>2] = $218;
    $arrayidx13$2$i = ((((((((($gfc)) + 25660|0) + (($chn$1662*244)|0)|0)) + 88|0) + (($sb$023$i*12)|0)|0)) + 8|0);
    HEAPF32[$arrayidx13$2$i>>2] = $mul$i357;
    $inc15$i = (($sb$023$i) + 1)|0;
    $exitcond$i360 = ($inc15$i|0)==(13);
    if ($exitcond$i360) {
     break;
    } else {
     $sb$023$i = $inc15$i;
    }
   }
   $inc51 = (($chn$1662) + 1)|0;
   $cmp40 = ($inc51|0)<($cond12|0);
   $220 = HEAP32[$cd_psy>>2]|0;
   if ($cmp40) {
    $202 = $220;$chn$1659 = $inc51;
   } else {
    $$lcssa = $220;
    break;
   }
  }
 } else {
  $$lcssa = $201;
 }
 $force_short_block_calc54 = ((($$lcssa)) + 6500|0);
 $221 = HEAP32[$force_short_block_calc54>>2]|0;
 $222 = HEAP32[$uselongblock>>2]|0;
 $arrayidx82 = ((($uselongblock)) + 4|0);
 $223 = HEAP32[$arrayidx82>>2]|0;
 $add83 = (0 - ($223))|0;
 $arraydecay88 = ((($0)) + 2928|0);
 $ATH89 = ((($gfc)) + 85796|0);
 $npart92 = ((($0)) + 4308|0);
 $tobool102 = ($221|0)!=(0);
 $arrayidx$1$i = ((($mask_idx_s$i)) + 4|0);
 $arrayidx6$1$i = ((($thm$i298)) + 4|0);
 $arrayidx$2$i = ((($mask_idx_s$i)) + 8|0);
 $arrayidx6$2$i = ((($thm$i298)) + 8|0);
 $arrayidx$3$i = ((($mask_idx_s$i)) + 12|0);
 $arrayidx6$3$i = ((($thm$i298)) + 12|0);
 $arrayidx$4$i = ((($mask_idx_s$i)) + 16|0);
 $arrayidx6$4$i = ((($thm$i298)) + 16|0);
 $arrayidx$5$i = ((($mask_idx_s$i)) + 20|0);
 $arrayidx6$5$i = ((($thm$i298)) + 20|0);
 $arrayidx$6$i = ((($mask_idx_s$i)) + 24|0);
 $arrayidx6$6$i = ((($thm$i298)) + 24|0);
 $arrayidx$7$i = ((($mask_idx_s$i)) + 28|0);
 $arrayidx6$7$i = ((($thm$i298)) + 28|0);
 $arrayidx$8$i = ((($mask_idx_s$i)) + 32|0);
 $arrayidx6$8$i = ((($thm$i298)) + 32|0);
 $arrayidx$9$i = ((($mask_idx_s$i)) + 36|0);
 $arrayidx6$9$i = ((($thm$i298)) + 36|0);
 $arrayidx$10$i = ((($mask_idx_s$i)) + 40|0);
 $arrayidx6$10$i = ((($thm$i298)) + 40|0);
 $arrayidx$11$i = ((($mask_idx_s$i)) + 44|0);
 $arrayidx6$11$i = ((($thm$i298)) + 44|0);
 $arrayidx$12$i = ((($mask_idx_s$i)) + 48|0);
 $arrayidx6$12$i = ((($thm$i298)) + 48|0);
 $arrayidx5$i$i497 = ((($thm$i298)) + 4|0);
 $masking_lower31$i = ((($gfc)) + 84908|0);
 $$pre153$i = ((($avg$i)) + 4|0);
 $cmp84$not = ($222|0)!=($add83|0);
 $sblock$0655 = 0;
 while(1) {
  if ($cmp18664) {
   $cmp$i456 = ($sblock$0655|0)==(0);
   $arrayidx21$i470 = (($fftenergy_s) + (($sblock$0655*516)|0)|0);
   $chn$2645 = 0;
   while(1) {
    $and62 = $chn$2645 & 1;
    $arrayidx63 = (($uselongblock) + ($and62<<2)|0);
    $224 = HEAP32[$arrayidx63>>2]|0;
    $tobool64 = ($224|0)==(0);
    $or$cond = $tobool102 | $tobool64;
    if ($or$cond) {
     $add$ptr68 = (($wsamp_S) + (($and62*3072)|0)|0);
     $cmp1$i = ($chn$2645|0)<(2);
     $or$cond$i457 = $cmp$i456 & $cmp1$i;
     if ($or$cond$i457) {
      _fft_short($gfc,$add$ptr68,$chn$2645,$buffer);
     } else {
      $cmp2$i459 = ($chn$2645|0)==(2);
      if ($cmp2$i459) {
       $j$046$i = 255;
       while(1) {
        $arrayidx6$i460 = (((($wsamp_S) + (($and62*3072)|0)|0) + ($sblock$0655<<10)|0) + ($j$046$i<<2)|0);
        $228 = +HEAPF32[$arrayidx6$i460>>2];
        $arrayidx9$i461 = ((((($add$ptr68)) + 3072|0) + ($sblock$0655<<10)|0) + ($j$046$i<<2)|0);
        $229 = +HEAPF32[$arrayidx9$i461>>2];
        $add$i462 = $229 + $228;
        $mul$i463 = $add$i462 * 0.70710676908493042;
        HEAPF32[$arrayidx6$i460>>2] = $mul$i463;
        $sub$i464 = $228 - $229;
        $mul13$i465 = $sub$i464 * 0.70710676908493042;
        HEAPF32[$arrayidx9$i461>>2] = $mul13$i465;
        $dec$i466 = (($j$046$i) + -1)|0;
        $cmp4$i467 = ($j$046$i|0)>(0);
        if ($cmp4$i467) {
         $j$046$i = $dec$i466;
        } else {
         break;
        }
       }
      }
     }
     $arrayidx19$i469 = ((($wsamp_S) + (($and62*3072)|0)|0) + ($sblock$0655<<10)|0);
     $230 = +HEAPF32[$arrayidx19$i469>>2];
     $mul26$i = $230 * $230;
     HEAPF32[$arrayidx21$i470>>2] = $mul26$i;
     $j$145$i = 127;
     while(1) {
      $sub31$i471 = (128 - ($j$145$i))|0;
      $arrayidx32$i472 = (((($wsamp_S) + (($and62*3072)|0)|0) + ($sblock$0655<<10)|0) + ($sub31$i471<<2)|0);
      $231 = +HEAPF32[$arrayidx32$i472>>2];
      $add34$i = (($j$145$i) + 128)|0;
      $arrayidx35$i = (((($wsamp_S) + (($and62*3072)|0)|0) + ($sblock$0655<<10)|0) + ($add34$i<<2)|0);
      $232 = +HEAPF32[$arrayidx35$i>>2];
      $mul36$i = $231 * $231;
      $mul37$i = $232 * $232;
      $add38$i = $mul37$i + $mul36$i;
      $mul39$i473 = $add38$i * 0.5;
      $arrayidx42$i474 = ((($fftenergy_s) + (($sblock$0655*516)|0)|0) + ($sub31$i471<<2)|0);
      HEAPF32[$arrayidx42$i474>>2] = $mul39$i473;
      $dec44$i = (($j$145$i) + -1)|0;
      $cmp28$i = ($j$145$i|0)>(0);
      if ($cmp28$i) {
       $j$145$i = $dec44$i;
      } else {
       break;
      }
     }
     $233 = HEAP32[$cd_psy>>2]|0;
     _memset(($thm$i298|0),0,256)|0;
     _memset(($avg$i|0),0,256)|0;
     $npart$i480 = ((($233)) + 4308|0);
     $234 = HEAP32[$npart$i480>>2]|0;
     $cmp142$i = ($234|0)>(0);
     if ($cmp142$i) {
      $b$0143$i = 0;$j$0144$i = 0;
      while(1) {
       $arrayidx$i481 = (((($233)) + 3876|0) + ($b$0143$i<<2)|0);
       $235 = HEAP32[$arrayidx$i481>>2]|0;
       $cmp3134$i = ($235|0)>(0);
       if ($cmp3134$i) {
        $ebb$0136$i = 0.0;$i$0138$i = 0;$j$1137$i = $j$0144$i;$m$0135$i = 0.0;
        while(1) {
         $arrayidx6$i483 = ((($fftenergy_s) + (($sblock$0655*516)|0)|0) + ($j$1137$i<<2)|0);
         $236 = +HEAPF32[$arrayidx6$i483>>2];
         $add$i484 = $236 + $ebb$0136$i;
         $cmp7$i = $m$0135$i < $236;
         $m$1$i = $cmp7$i ? $236 : $m$0135$i;
         $inc$i485 = (($i$0138$i) + 1)|0;
         $inc8$i = (($j$1137$i) + 1)|0;
         $exitcond150$i = ($inc$i485|0)==($235|0);
         if ($exitcond150$i) {
          break;
         } else {
          $ebb$0136$i = $add$i484;$i$0138$i = $inc$i485;$j$1137$i = $inc8$i;$m$0135$i = $m$1$i;
         }
        }
        $237 = (($235) + ($j$0144$i))|0;
        $ebb$0$lcssa$i = $add$i484;$j$1$lcssa$i = $237;$m$0$lcssa$i = $m$1$i;
       } else {
        $ebb$0$lcssa$i = 0.0;$j$1$lcssa$i = $j$0144$i;$m$0$lcssa$i = 0.0;
       }
       $arrayidx9$i486 = ((($eb) + ($chn$2645<<8)|0) + ($b$0143$i<<2)|0);
       HEAPF32[$arrayidx9$i486>>2] = $ebb$0$lcssa$i;
       $arrayidx10$i487 = (($thm$i298) + ($b$0143$i<<2)|0);
       HEAPF32[$arrayidx10$i487>>2] = $m$0$lcssa$i;
       $arrayidx11$i488 = (((($233)) + 2672|0) + ($b$0143$i<<2)|0);
       $238 = +HEAPF32[$arrayidx11$i488>>2];
       $mul$i489 = $238 * $ebb$0$lcssa$i;
       $arrayidx12$i490 = (($avg$i) + ($b$0143$i<<2)|0);
       HEAPF32[$arrayidx12$i490>>2] = $mul$i489;
       $inc14$i = (($b$0143$i) + 1)|0;
       $exitcond691 = ($inc14$i|0)==($234|0);
       if ($exitcond691) {
        break;
       } else {
        $b$0143$i = $inc14$i;$j$0144$i = $j$1$lcssa$i;
       }
      }
      $$pre$i492 = +HEAPF32[$avg$i>>2];
      $$pre151$i = +HEAPF32[$$pre153$i>>2];
      $239 = $$pre$i492;$240 = $$pre151$i;
     } else {
      $239 = 0.0;$240 = 0.0;
     }
     $add2$i$i495 = $239 + $240;
     $cmp$i$i496 = $add2$i$i495 > 0.0;
     if ($cmp$i$i496) {
      $241 = +HEAPF32[$thm$i298>>2];
      $242 = +HEAPF32[$arrayidx5$i$i497>>2];
      $cmp6$i$i498 = $241 < $242;
      $m$0$i$i499 = $cmp6$i$i498 ? $242 : $241;
      $mul$i$i500 = $m$0$i$i499 * 2.0;
      $sub$i$i501 = $mul$i$i500 - $add2$i$i495;
      $mul10$i$i502 = $sub$i$i501 * 20.0;
      $arrayidx11$i$i503 = ((($233)) + 3876|0);
      $243 = HEAP32[$arrayidx11$i$i503>>2]|0;
      $arrayidx14$i$i504 = ((($233)) + 3880|0);
      $244 = HEAP32[$arrayidx14$i$i504>>2]|0;
      $add15$i$i505 = (($243) + -1)|0;
      $sub16$i$i506 = (($add15$i$i505) + ($244))|0;
      $conv$i$i507 = (+($sub16$i$i506|0));
      $mul17$i$i508 = $conv$i$i507 * $add2$i$i495;
      $div$i$i509 = $mul10$i$i502 / $mul17$i$i508;
      $conv18$i$i510 = (~~(($div$i$i509)));
      $245 = ($conv18$i$i510|0)<(8);
      $$conv18$i$i511 = $245 ? $conv18$i$i510 : 8;
      $conv23$i$i512 = $$conv18$i$i511&255;
      $$sink$i$i514 = $conv23$i$i512;
     } else {
      $$sink$i$i514 = 0;
     }
     HEAP8[$mask_idx_s$i>>0] = $$sink$i$i514;
     $sub271$i$i515 = (($234) + -1)|0;
     $cmp282$i$i516 = ($sub271$i$i515|0)>(1);
     if ($cmp282$i$i516) {
      $254 = $240;$add337$i$i519 = $add2$i$i495;$b$05$i$i521 = 1;$sub306$i$i520 = 0;
      while(1) {
       $add34$i$i522 = (($b$05$i$i521) + 1)|0;
       $arrayidx35$i$i523 = (($avg$i) + ($add34$i$i522<<2)|0);
       $246 = +HEAPF32[$arrayidx35$i$i523>>2];
       $add36$i$i524 = $246 + $add337$i$i519;
       $cmp38$i$i = $add36$i$i524 > 0.0;
       if ($cmp38$i$i) {
        $arrayidx42$i$i526 = (($thm$i298) + ($sub306$i$i520<<2)|0);
        $247 = +HEAPF32[$arrayidx42$i$i526>>2];
        $arrayidx43$i$i = (($thm$i298) + ($b$05$i$i521<<2)|0);
        $248 = +HEAPF32[$arrayidx43$i$i>>2];
        $cmp44$i$i = $247 < $248;
        $m$1$i$i527 = $cmp44$i$i ? $248 : $247;
        $arrayidx50$i$i = (($thm$i298) + ($add34$i$i522<<2)|0);
        $249 = +HEAPF32[$arrayidx50$i$i>>2];
        $cmp51$i$i = $m$1$i$i527 < $249;
        $m$2$i$i528 = $cmp51$i$i ? $249 : $m$1$i$i527;
        $mul57$i$i = $m$2$i$i528 * 3.0;
        $sub58$i$i = $mul57$i$i - $add36$i$i524;
        $mul59$i$i = $sub58$i$i * 20.0;
        $arrayidx62$i$i = (((($233)) + 3876|0) + ($sub306$i$i520<<2)|0);
        $250 = HEAP32[$arrayidx62$i$i>>2]|0;
        $arrayidx64$i$i = (((($233)) + 3876|0) + ($b$05$i$i521<<2)|0);
        $251 = HEAP32[$arrayidx64$i$i>>2]|0;
        $arrayidx68$i$i = (((($233)) + 3876|0) + ($add34$i$i522<<2)|0);
        $252 = HEAP32[$arrayidx68$i$i>>2]|0;
        $add65$i$i = (($250) + -1)|0;
        $add69$i$i = (($add65$i$i) + ($251))|0;
        $sub70$i$i = (($add69$i$i) + ($252))|0;
        $conv71$i$i = (+($sub70$i$i|0));
        $mul72$i$i = $conv71$i$i * $add36$i$i524;
        $div73$i$i = $mul59$i$i / $mul72$i$i;
        $conv74$i$i = (~~(($div73$i$i)));
        $253 = ($conv74$i$i|0)<(8);
        $$conv74$i$i = $253 ? $conv74$i$i : 8;
        $conv79$i$i = $$conv74$i$i&255;
        $$sink1$i$i529 = $conv79$i$i;
       } else {
        $$sink1$i$i529 = 0;
       }
       $arrayidx82$sink$i$i = (($mask_idx_s$i) + ($b$05$i$i521)|0);
       HEAP8[$arrayidx82$sink$i$i>>0] = $$sink1$i$i529;
       $add33$i$i531 = $246 + $254;
       $exitcond692 = ($add34$i$i522|0)==($sub271$i$i515|0);
       if ($exitcond692) {
        break;
       } else {
        $sub306$i$i520$phi = $b$05$i$i521;$254 = $246;$add337$i$i519 = $add33$i$i531;$b$05$i$i521 = $add34$i$i522;$sub306$i$i520 = $sub306$i$i520$phi;
       }
      }
      $255 = (($234) + -2)|0;
      $add33$lcssa$i$i534 = $add33$i$i531;$b$0$lcssa$i$i532 = $sub271$i$i515;$sub30$lcssa$i$i533 = $255;
     } else {
      $add33$lcssa$i$i534 = $add2$i$i495;$b$0$lcssa$i$i532 = 1;$sub30$lcssa$i$i533 = 0;
     }
     $cmp88$i$i = $add33$lcssa$i$i534 > 0.0;
     if ($cmp88$i$i) {
      $arrayidx92$i$i536 = (($thm$i298) + ($sub30$lcssa$i$i533<<2)|0);
      $256 = +HEAPF32[$arrayidx92$i$i536>>2];
      $arrayidx93$i$i = (($thm$i298) + ($b$0$lcssa$i$i532<<2)|0);
      $257 = +HEAPF32[$arrayidx93$i$i>>2];
      $cmp94$i$i = $256 < $257;
      $m$3$i$i537 = $cmp94$i$i ? $257 : $256;
      $mul99$i$i = $m$3$i$i537 * 2.0;
      $sub100$i$i = $mul99$i$i - $add33$lcssa$i$i534;
      $mul101$i$i = $sub100$i$i * 20.0;
      $arrayidx104$i$i = (((($233)) + 3876|0) + ($sub30$lcssa$i$i533<<2)|0);
      $258 = HEAP32[$arrayidx104$i$i>>2]|0;
      $arrayidx106$i$i = (((($233)) + 3876|0) + ($b$0$lcssa$i$i532<<2)|0);
      $259 = HEAP32[$arrayidx106$i$i>>2]|0;
      $add107$i$i = (($258) + -1)|0;
      $sub108$i$i = (($add107$i$i) + ($259))|0;
      $conv109$i$i = (+($sub108$i$i|0));
      $mul110$i$i = $conv109$i$i * $add33$lcssa$i$i534;
      $div111$i$i = $mul101$i$i / $mul110$i$i;
      $conv112$i$i = (~~(($div111$i$i)));
      $260 = ($conv112$i$i|0)<(8);
      $$conv112$i$i = $260 ? $conv112$i$i : 8;
      $conv117$i$i = $$conv112$i$i&255;
      $$sink2$i$i538 = $conv117$i$i;
     } else {
      $$sink2$i$i538 = 0;
     }
     $arrayidx120$sink$i$i = (($mask_idx_s$i) + ($b$0$lcssa$i$i532)|0);
     HEAP8[$arrayidx120$sink$i$i>>0] = $$sink2$i$i538;
     if ($cmp142$i) {
      $s3$i539 = ((($233)) + 4316|0);
      $b$1131$i = 0;$j$2132$i = 0;
      while(1) {
       $arrayidx24$i540 = (((($233)) + 3364|0) + ($b$1131$i<<3)|0);
       $263 = HEAP32[$arrayidx24$i540>>2]|0;
       $arrayidx27$i = (((((($233)) + 3364|0) + ($b$1131$i<<3)|0)) + 4|0);
       $264 = HEAP32[$arrayidx27$i>>2]|0;
       $arrayidx28$i541 = (($mask_idx_s$i) + ($b$1131$i)|0);
       $265 = HEAP8[$arrayidx28$i541>>0]|0;
       $conv$i542 = $265&255;
       $arrayidx$i116$i = (5812 + ($conv$i542<<2)|0);
       $266 = HEAP32[$arrayidx$i116$i>>2]|0;
       $arrayidx30$i543 = (((($233)) + 2160|0) + ($b$1131$i<<2)|0);
       $267 = +HEAPF32[$arrayidx30$i543>>2];
       $268 = +HEAPF32[$masking_lower31$i>>2];
       $mul32$i = $268 * $267;
       $arrayidx33$i = (($mask_idx_s$i) + ($263)|0);
       $269 = HEAP8[$arrayidx33$i>>0]|0;
       $conv34$i = $269&255;
       $270 = HEAP32[$s3$i539>>2]|0;
       $arrayidx35$i544 = (($270) + ($j$2132$i<<2)|0);
       $271 = +HEAPF32[$arrayidx35$i544>>2];
       $arrayidx36$i = ((($eb) + ($chn$2645<<8)|0) + ($263<<2)|0);
       $272 = +HEAPF32[$arrayidx36$i>>2];
       $mul37$i545 = $272 * $271;
       $arrayidx39$i546 = (5848 + ($conv34$i<<2)|0);
       $273 = +HEAPF32[$arrayidx39$i546>>2];
       $mul40$i = $mul37$i545 * $273;
       $j$3119$i = (($j$2132$i) + 1)|0;
       $cmp43121$i = ($263|0)<($264|0);
       if ($cmp43121$i) {
        $275 = $270;$dd$0122$i = $conv34$i;$ecb$0124$i = $mul40$i;$j$3125$i = $j$3119$i;$kk$0126$in$i = $263;
        while(1) {
         $kk$0126$i = (($kk$0126$in$i) + 1)|0;
         $arrayidx45$i549 = (($mask_idx_s$i) + ($kk$0126$i)|0);
         $274 = HEAP8[$arrayidx45$i549>>0]|0;
         $conv46$i = $274&255;
         $add47$i = (($conv46$i) + ($dd$0122$i))|0;
         $arrayidx50$i550 = (($275) + ($j$3125$i<<2)|0);
         $276 = +HEAPF32[$arrayidx50$i550>>2];
         $arrayidx51$i = ((($eb) + ($chn$2645<<8)|0) + ($kk$0126$i<<2)|0);
         $277 = +HEAPF32[$arrayidx51$i>>2];
         $mul52$i = $277 * $276;
         $arrayidx55$i = (5848 + ($conv46$i<<2)|0);
         $278 = +HEAPF32[$arrayidx55$i>>2];
         $mul56$i = $mul52$i * $278;
         $sub$i551 = (($kk$0126$i) - ($b$1131$i))|0;
         $cmp$i112$i = $ecb$0124$i < 0.0;
         $m1$addr$0$i$i552 = $cmp$i112$i ? 0.0 : $ecb$0124$i;
         $cmp1$i$i553 = $mul56$i < 0.0;
         $m2$addr$0$i$i554 = $cmp1$i$i553 ? 0.0 : $mul56$i;
         $cmp4$i$i555 = !($m1$addr$0$i$i552 <= 0.0);
         do {
          if ($cmp4$i$i555) {
           $cmp7$i$i560 = !($m2$addr$0$i$i554 <= 0.0);
           if (!($cmp7$i$i560)) {
            $ecb$0$be$i557 = $m1$addr$0$i$i552;
            break;
           }
           $cmp10$i$i562 = $m2$addr$0$i$i554 > $m1$addr$0$i$i552;
           if ($cmp10$i$i562) {
            $div$i113$i = $m2$addr$0$i$i554 / $m1$addr$0$i$i552;
            $ratio$0$i$i567 = $div$i113$i;
           } else {
            $div12$i$i565 = $m1$addr$0$i$i552 / $m2$addr$0$i$i554;
            $ratio$0$i$i567 = $div12$i$i565;
           }
           $ispos$i$i568 = ($sub$i551|0)>(-1);
           $neg$i$i569 = (0 - ($sub$i551))|0;
           $279 = $ispos$i$i568 ? $sub$i551 : $neg$i$i569;
           $cmp14$i$i570 = ($279|0)>($266|0);
           if ($cmp14$i$i570) {
            $282 = +HEAPF32[6080];
            $cmp24$i$i582 = $ratio$0$i$i567 < $282;
            if ($cmp24$i$i582) {
             $add27$i$i584 = $m2$addr$0$i$i554 + $m1$addr$0$i$i552;
             $ecb$0$be$i557 = $add27$i$i584;
             break;
            } else {
             $m1$addr$1$i$i586 = $cmp10$i$i562 ? $m2$addr$0$i$i554 : $m1$addr$0$i$i552;
             $ecb$0$be$i557 = $m1$addr$1$i$i586;
             break;
            }
           } else {
            $280 = +HEAPF32[6079];
            $cmp16$i$i572 = !($ratio$0$i$i567 >= $280);
            if ($cmp16$i$i572) {
             $call19$i$i576 = (+_fast_log2($ratio$0$i$i567));
             $conv$i114$i = $call19$i$i576;
             $mul$i115$i = $conv$i114$i * 4.8164799306236983;
             $conv20$i$i577 = (~~(($mul$i115$i)));
             $add21$i$i578 = $m2$addr$0$i$i554 + $m1$addr$0$i$i552;
             $arrayidx$i$i579 = (5884 + ($conv20$i$i577<<2)|0);
             $281 = +HEAPF32[$arrayidx$i$i579>>2];
             $mul22$i$i580 = $281 * $add21$i$i578;
             $ecb$0$be$i557 = $mul22$i$i580;
             break;
            } else {
             $add$i$i574 = $m2$addr$0$i$i554 + $m1$addr$0$i$i552;
             $ecb$0$be$i557 = $add$i$i574;
             break;
            }
           }
          } else {
           $ecb$0$be$i557 = $m2$addr$0$i$i554;
          }
         } while(0);
         $exitcond149$i = ($kk$0126$i|0)==($264|0);
         if ($exitcond149$i) {
          break;
         }
         $j$3$i = (($j$3125$i) + 1)|0;
         $$pre152$i = HEAP32[$s3$i539>>2]|0;
         $275 = $$pre152$i;$dd$0122$i = $add47$i;$ecb$0124$i = $ecb$0$be$i557;$j$3125$i = $j$3$i;$kk$0126$in$i = $kk$0126$i;
        }
        $283 = (1 - ($263))|0;
        $284 = (($283) + ($264))|0;
        $285 = (($j$3119$i) - ($263))|0;
        $286 = (($285) + ($264))|0;
        $dd$0$lcssa$i589 = $add47$i;$dd_n$0$lcssa$i590 = $284;$ecb$0$lcssa$i591 = $ecb$0$be$i557;$j$3$lcssa$i = $286;
       } else {
        $dd$0$lcssa$i589 = $conv34$i;$dd_n$0$lcssa$i590 = 1;$ecb$0$lcssa$i591 = $mul40$i;$j$3$lcssa$i = $j$3119$i;
       }
       $mul60$i592 = $dd$0$lcssa$i589 << 1;
       $add61$i = $mul60$i592 | 1;
       $mul62$i = $dd_n$0$lcssa$i590 << 1;
       $div$i593 = (($add61$i|0) / ($mul62$i|0))&-1;
       $arrayidx63$i = (5848 + ($div$i593<<2)|0);
       $287 = +HEAPF32[$arrayidx63$i>>2];
       $mul64$i = $287 * 0.5;
       $mul65$i = $mul64$i * $ecb$0$lcssa$i591;
       $arrayidx66$i = ((($thr) + ($chn$2645<<8)|0) + ($b$1131$i<<2)|0);
       HEAPF32[$arrayidx66$i>>2] = $mul65$i;
       $arrayidx68$i = ((((($gfc)) + 23612|0) + ($chn$2645<<8)|0) + ($b$1131$i<<2)|0);
       $288 = HEAP32[$arrayidx68$i>>2]|0;
       $arrayidx70$i = ((((($gfc)) + 24636|0) + ($chn$2645<<8)|0) + ($b$1131$i<<2)|0);
       HEAP32[$arrayidx70$i>>2] = $288;
       HEAPF32[$arrayidx68$i>>2] = $mul65$i;
       $arrayidx74$i = (($thm$i298) + ($b$1131$i<<2)|0);
       $289 = +HEAPF32[$arrayidx74$i>>2];
       $arrayidx75$i594 = (((($233)) + 2416|0) + ($b$1131$i<<2)|0);
       $290 = +HEAPF32[$arrayidx75$i594>>2];
       $mul76$i595 = $289 * $mul64$i;
       $mul77$i = $mul76$i595 * $290;
       $cmp79$i = $mul65$i > $mul77$i;
       if ($cmp79$i) {
        HEAPF32[$arrayidx66$i>>2] = $mul77$i;
        $291 = $mul77$i;
       } else {
        $291 = $mul65$i;
       }
       $cmp84$i = $mul32$i > 1.0;
       $mul88$i = $291 * $mul32$i;
       if ($cmp84$i) {
        HEAPF32[$arrayidx66$i>>2] = $mul88$i;
        $293 = $mul88$i;
       } else {
        $293 = $291;
       }
       $arrayidx91$i = ((($eb) + ($chn$2645<<8)|0) + ($b$1131$i<<2)|0);
       $292 = +HEAPF32[$arrayidx91$i>>2];
       $cmp92$i = $293 > $292;
       if ($cmp92$i) {
        HEAPF32[$arrayidx66$i>>2] = $292;
        $294 = $292;
       } else {
        $294 = $293;
       }
       $cmp98$i = $mul32$i < 1.0;
       if ($cmp98$i) {
        $mul102$i = $294 * $mul32$i;
        HEAPF32[$arrayidx66$i>>2] = $mul102$i;
       }
       $inc105$i = (($b$1131$i) + 1)|0;
       $295 = HEAP32[$npart$i480>>2]|0;
       $cmp21$i597 = ($inc105$i|0)<($295|0);
       if ($cmp21$i597) {
        $b$1131$i = $inc105$i;$j$2132$i = $j$3$lcssa$i;
       } else {
        break;
       }
      }
      $cmp108117$i = ($inc105$i|0)<(64);
      if ($cmp108117$i) {
       $b$2118$i$ph = $inc105$i;
       label = 200;
      }
     } else {
      $b$2118$i$ph = 0;
      label = 200;
     }
     if ((label|0) == 200) {
      label = 0;
      $scevgep694 = ((($eb) + ($chn$2645<<8)|0) + ($b$2118$i$ph<<2)|0);
      $261 = $b$2118$i$ph << 2;
      $262 = (256 - ($261))|0;
      _memset(($scevgep694|0),0,($262|0))|0;
      $scevgep697 = ((($thr) + ($chn$2645<<8)|0) + ($b$2118$i$ph<<2)|0);
      _memset(($scevgep697|0),0,($262|0))|0;
     }
    } else {
     if ($cmp$i456) {
      $225 = HEAP32[$cd_psy>>2]|0;
      $npart$i = ((($225)) + 4308|0);
      $226 = HEAP32[$npart$i>>2]|0;
      $cmp511$i = ($226|0)>(0);
      if ($cmp511$i) {
       $b$012$i = 0;
       while(1) {
        $arrayidx6$i = ((((($gfc)) + 23612|0) + ($chn$2645<<8)|0) + ($b$012$i<<2)|0);
        $227 = HEAP32[$arrayidx6$i>>2]|0;
        $arrayidx7$i365 = ((((($gfc)) + 24636|0) + ($chn$2645<<8)|0) + ($b$012$i<<2)|0);
        HEAP32[$arrayidx7$i365>>2] = $227;
        $inc$i366 = (($b$012$i) + 1)|0;
        $exitcond$i367 = ($inc$i366|0)==($226|0);
        if ($exitcond$i367) {
         break;
        } else {
         $b$012$i = $inc$i366;
        }
       }
      }
     }
    }
    $inc76 = (($chn$2645) + 1)|0;
    $exitcond699 = ($inc76|0)==($cond12|0);
    if ($exitcond699) {
     break;
    } else {
     $chn$2645 = $inc76;
    }
   }
  }
  $296 = HEAP32[$mode>>2]|0;
  $cmp79$not = ($296|0)!=(1);
  $brmerge = $cmp79$not | $cmp84$not;
  if (!($brmerge)) {
   $297 = HEAP32[$ATH89>>2]|0;
   $arraydecay90 = ((($297)) + 468|0);
   $298 = +HEAPF32[$msfix>>2];
   $299 = HEAP32[$npart92>>2]|0;
   _vbrpsy_compute_MS_thresholds($eb,$thr,$arraydecay88,$arraydecay90,$cond6,$298,$299);
  }
  if ($cmp18664) {
   $chn$3651 = 0;
   while(1) {
    $and99 = $chn$3651 & 1;
    $arrayidx100 = (($uselongblock) + ($and99<<2)|0);
    $300 = HEAP32[$arrayidx100>>2]|0;
    $tobool101 = ($300|0)==(0);
    $or$cond1 = $tobool102 | $tobool101;
    if ($or$cond1) {
     $301 = HEAP32[$cd_psy>>2]|0;
     $n_sb$i$i397 = ((($301)) + 4312|0);
     $302 = HEAP32[$n_sb$i$i397>>2]|0;
     $cmp68$i$i398 = ($302|0)>(0);
     L355: do {
      if ($cmp68$i$i398) {
       $npart1$i$i399 = ((($301)) + 4308|0);
       $$pre$i$i400 = HEAP32[$npart1$i$i399>>2]|0;
       $b$069$i$i405 = 0;$enn$072$i$i402 = 0.0;$sb$070$i$i404 = 0;$thmm$071$i$i403 = 0.0;
       while(1) {
        $arrayidx$i$i406 = (((($301)) + 4220|0) + ($sb$070$i$i404<<2)|0);
        $303 = HEAP32[$arrayidx$i$i406>>2]|0;
        $cmp2$i$i407 = ($303|0)<($$pre$i$i400|0);
        $cond$i$i408 = $cmp2$i$i407 ? $303 : $$pre$i$i400;
        $cmp362$i$i409 = ($b$069$i$i405|0)<($cond$i$i408|0);
        if ($cmp362$i$i409) {
         $b$163$i$i413 = $b$069$i$i405;$enn$165$i$i411 = $enn$072$i$i402;$thmm$164$i$i412 = $thmm$071$i$i403;
         while(1) {
          $arrayidx4$i$i414 = ((($eb) + ($chn$3651<<8)|0) + ($b$163$i$i413<<2)|0);
          $304 = +HEAPF32[$arrayidx4$i$i414>>2];
          $add$i$i415 = $304 + $enn$165$i$i411;
          $arrayidx5$i$i416 = ((($thr) + ($chn$3651<<8)|0) + ($b$163$i$i413<<2)|0);
          $305 = +HEAPF32[$arrayidx5$i$i416>>2];
          $add6$i$i417 = $305 + $thmm$164$i$i412;
          $inc$i$i418 = (($b$163$i$i413) + 1)|0;
          $cmp3$i$i419 = ($inc$i$i418|0)<($cond$i$i408|0);
          if ($cmp3$i$i419) {
           $b$163$i$i413 = $inc$i$i418;$enn$165$i$i411 = $add$i$i415;$thmm$164$i$i412 = $add6$i$i417;
          } else {
           $b$1$lcssa$i$i421 = $cond$i$i408;$enn$1$lcssa$i$i423 = $add$i$i415;$thmm$1$lcssa$i$i422 = $add6$i$i417;
           break;
          }
         }
        } else {
         $b$1$lcssa$i$i421 = $b$069$i$i405;$enn$1$lcssa$i$i423 = $enn$072$i$i402;$thmm$1$lcssa$i$i422 = $thmm$071$i$i403;
        }
        $cmp7$i$i424 = ($b$1$lcssa$i$i421|0)<($$pre$i$i400|0);
        if (!($cmp7$i$i424)) {
         $chn$3653 = $chn$3651;$enn$1$sink$i$i443 = $enn$1$lcssa$i$i423;$sb$0$sink60$i$i442 = $sb$070$i$i404;$thmm$1$sink$i$i444 = $thmm$1$lcssa$i$i422;
         label = 238;
         break L355;
        }
        $arrayidx11$i$i426 = (((($301)) + 3272|0) + ($sb$070$i$i404<<2)|0);
        $306 = +HEAPF32[$arrayidx11$i$i426>>2];
        $sub$i$i427 = 1.0 - $306;
        $arrayidx12$i$i428 = ((($eb) + ($chn$3651<<8)|0) + ($b$1$lcssa$i$i421<<2)|0);
        $307 = +HEAPF32[$arrayidx12$i$i428>>2];
        $mul$i$i429 = $307 * $306;
        $add13$i$i430 = $mul$i$i429 + $enn$1$lcssa$i$i423;
        $arrayidx14$i$i431 = ((($thr) + ($chn$3651<<8)|0) + ($b$1$lcssa$i$i421<<2)|0);
        $308 = +HEAPF32[$arrayidx14$i$i431>>2];
        $mul15$i$i432 = $308 * $306;
        $add16$i$i433 = $mul15$i$i432 + $thmm$1$lcssa$i$i422;
        $arrayidx17$i$i434 = (($mask_idx_s$i) + ($sb$070$i$i404<<2)|0);
        HEAPF32[$arrayidx17$i$i434>>2] = $add13$i$i430;
        $arrayidx18$i$i435 = (($thm$i298) + ($sb$070$i$i404<<2)|0);
        HEAPF32[$arrayidx18$i$i435>>2] = $add16$i$i433;
        $mul20$i$i436 = $307 * $sub$i$i427;
        $mul22$i$i437 = $308 * $sub$i$i427;
        $inc25$i$i438 = (($b$1$lcssa$i$i421) + 1)|0;
        $inc26$i$i439 = (($sb$070$i$i404) + 1)|0;
        $cmp$i$i440 = ($inc26$i$i439|0)<($302|0);
        if ($cmp$i$i440) {
         $b$069$i$i405 = $inc25$i$i438;$enn$072$i$i402 = $mul20$i$i436;$sb$070$i$i404 = $inc26$i$i439;$thmm$071$i$i403 = $mul22$i$i437;
        } else {
         $chn$3652 = $chn$3651;$sb$2$i$i449 = $inc26$i$i439;
         label = 239;
         break;
        }
       }
      } else {
       $chn$3652 = $chn$3651;$sb$2$i$i449 = 0;
       label = 239;
      }
     } while(0);
     while(1) {
      if ((label|0) == 238) {
       label = 0;
       $arrayidx8$i$i445 = (($mask_idx_s$i) + ($sb$0$sink60$i$i442<<2)|0);
       HEAPF32[$arrayidx8$i$i445>>2] = $enn$1$sink$i$i443;
       $arrayidx9$i$i446 = (($thm$i298) + ($sb$0$sink60$i$i442<<2)|0);
       HEAPF32[$arrayidx9$i$i446>>2] = $thmm$1$sink$i$i444;
       $inc10$i$i447 = (($sb$0$sink60$i$i442) + 1)|0;
       $chn$3652 = $chn$3653;$sb$2$i$i449 = $inc10$i$i447;
       label = 239;
       continue;
      }
      else if ((label|0) == 239) {
       label = 0;
       $cmp28$i$i450 = ($sb$2$i$i449|0)<($302|0);
       if ($cmp28$i$i450) {
        $chn$3653 = $chn$3652;$enn$1$sink$i$i443 = 0.0;$sb$0$sink60$i$i442 = $sb$2$i$i449;$thmm$1$sink$i$i444 = 0.0;
        label = 238;
        continue;
       } else {
        break;
       }
      }
     }
     $309 = HEAP32[$mask_idx_s$i>>2]|0;
     $arrayidx5$i452 = ((((((($gfc)) + 26636|0) + (($chn$3652*244)|0)|0)) + 88|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx5$i452>>2] = $309;
     $310 = HEAP32[$thm$i298>>2]|0;
     $arrayidx11$i453 = ((((((($gfc)) + 25660|0) + (($chn$3652*244)|0)|0)) + 88|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx11$i453>>2] = $310;
     $311 = HEAP32[$arrayidx$1$i>>2]|0;
     $arrayidx5$1$i454 = ((((((($gfc)) + 26636|0) + (($chn$3652*244)|0)|0)) + 100|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx5$1$i454>>2] = $311;
     $312 = HEAP32[$arrayidx6$1$i>>2]|0;
     $arrayidx11$1$i = ((((((($gfc)) + 25660|0) + (($chn$3652*244)|0)|0)) + 100|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx11$1$i>>2] = $312;
     $313 = HEAP32[$arrayidx$2$i>>2]|0;
     $arrayidx5$2$i455 = ((((((($gfc)) + 26636|0) + (($chn$3652*244)|0)|0)) + 112|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx5$2$i455>>2] = $313;
     $314 = HEAP32[$arrayidx6$2$i>>2]|0;
     $arrayidx11$2$i = ((((((($gfc)) + 25660|0) + (($chn$3652*244)|0)|0)) + 112|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx11$2$i>>2] = $314;
     $315 = HEAP32[$arrayidx$3$i>>2]|0;
     $arrayidx5$3$i = ((((((($gfc)) + 26636|0) + (($chn$3652*244)|0)|0)) + 124|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx5$3$i>>2] = $315;
     $316 = HEAP32[$arrayidx6$3$i>>2]|0;
     $arrayidx11$3$i = ((((((($gfc)) + 25660|0) + (($chn$3652*244)|0)|0)) + 124|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx11$3$i>>2] = $316;
     $317 = HEAP32[$arrayidx$4$i>>2]|0;
     $arrayidx5$4$i = ((((((($gfc)) + 26636|0) + (($chn$3652*244)|0)|0)) + 136|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx5$4$i>>2] = $317;
     $318 = HEAP32[$arrayidx6$4$i>>2]|0;
     $arrayidx11$4$i = ((((((($gfc)) + 25660|0) + (($chn$3652*244)|0)|0)) + 136|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx11$4$i>>2] = $318;
     $319 = HEAP32[$arrayidx$5$i>>2]|0;
     $arrayidx5$5$i = ((((((($gfc)) + 26636|0) + (($chn$3652*244)|0)|0)) + 148|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx5$5$i>>2] = $319;
     $320 = HEAP32[$arrayidx6$5$i>>2]|0;
     $arrayidx11$5$i = ((((((($gfc)) + 25660|0) + (($chn$3652*244)|0)|0)) + 148|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx11$5$i>>2] = $320;
     $321 = HEAP32[$arrayidx$6$i>>2]|0;
     $arrayidx5$6$i = ((((((($gfc)) + 26636|0) + (($chn$3652*244)|0)|0)) + 160|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx5$6$i>>2] = $321;
     $322 = HEAP32[$arrayidx6$6$i>>2]|0;
     $arrayidx11$6$i = ((((((($gfc)) + 25660|0) + (($chn$3652*244)|0)|0)) + 160|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx11$6$i>>2] = $322;
     $323 = HEAP32[$arrayidx$7$i>>2]|0;
     $arrayidx5$7$i = ((((((($gfc)) + 26636|0) + (($chn$3652*244)|0)|0)) + 172|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx5$7$i>>2] = $323;
     $324 = HEAP32[$arrayidx6$7$i>>2]|0;
     $arrayidx11$7$i = ((((((($gfc)) + 25660|0) + (($chn$3652*244)|0)|0)) + 172|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx11$7$i>>2] = $324;
     $325 = HEAP32[$arrayidx$8$i>>2]|0;
     $arrayidx5$8$i = ((((((($gfc)) + 26636|0) + (($chn$3652*244)|0)|0)) + 184|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx5$8$i>>2] = $325;
     $326 = HEAP32[$arrayidx6$8$i>>2]|0;
     $arrayidx11$8$i = ((((((($gfc)) + 25660|0) + (($chn$3652*244)|0)|0)) + 184|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx11$8$i>>2] = $326;
     $327 = HEAP32[$arrayidx$9$i>>2]|0;
     $arrayidx5$9$i = ((((((($gfc)) + 26636|0) + (($chn$3652*244)|0)|0)) + 196|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx5$9$i>>2] = $327;
     $328 = HEAP32[$arrayidx6$9$i>>2]|0;
     $arrayidx11$9$i = ((((((($gfc)) + 25660|0) + (($chn$3652*244)|0)|0)) + 196|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx11$9$i>>2] = $328;
     $329 = HEAP32[$arrayidx$10$i>>2]|0;
     $arrayidx5$10$i = ((((((($gfc)) + 26636|0) + (($chn$3652*244)|0)|0)) + 208|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx5$10$i>>2] = $329;
     $330 = HEAP32[$arrayidx6$10$i>>2]|0;
     $arrayidx11$10$i = ((((((($gfc)) + 25660|0) + (($chn$3652*244)|0)|0)) + 208|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx11$10$i>>2] = $330;
     $331 = HEAP32[$arrayidx$11$i>>2]|0;
     $arrayidx5$11$i = ((((((($gfc)) + 26636|0) + (($chn$3652*244)|0)|0)) + 220|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx5$11$i>>2] = $331;
     $332 = HEAP32[$arrayidx6$11$i>>2]|0;
     $arrayidx11$11$i = ((((((($gfc)) + 25660|0) + (($chn$3652*244)|0)|0)) + 220|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx11$11$i>>2] = $332;
     $333 = HEAP32[$arrayidx$12$i>>2]|0;
     $arrayidx5$12$i = ((((((($gfc)) + 26636|0) + (($chn$3652*244)|0)|0)) + 232|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx5$12$i>>2] = $333;
     $334 = HEAP32[$arrayidx6$12$i>>2]|0;
     $arrayidx11$12$i = ((((((($gfc)) + 25660|0) + (($chn$3652*244)|0)|0)) + 232|0) + ($sblock$0655<<2)|0);
     HEAP32[$arrayidx11$12$i>>2] = $334;
     $chn$3654 = $chn$3652;
    } else {
     $chn$3654 = $chn$3651;
    }
    $inc110 = (($chn$3654) + 1)|0;
    $cmp96 = ($inc110|0)<($cond12|0);
    if ($cmp96) {
     $chn$3651 = $inc110;
    } else {
     break;
    }
   }
  }
  $inc113 = (($sblock$0655) + 1)|0;
  $exitcond700 = ($inc113|0)==(3);
  if ($exitcond700) {
   break;
  } else {
   $sblock$0655 = $inc113;
  }
 }
 if ($cmp18664) {
  $chn$4643 = 0;
  while(1) {
   $arrayidx169 = (((($gfc)) + 27780|0) + ($chn$4643<<2)|0);
   $sb$0641 = 0;
   while(1) {
    $scevgep = ((((((($gfc)) + 25660|0) + (($chn$4643*244)|0)|0)) + 88|0) + (($sb$0641*12)|0)|0);
    $arrayidx139 = ((((((($last_thm) + (($chn$4643*244)|0)|0)) + 88|0) + (($sb$0641*12)|0)|0)) + 8|0);
    $arrayidx185 = ((((((($last_thm) + (($chn$4643*244)|0)|0)) + 88|0) + (($sb$0641*12)|0)|0)) + 4|0);
    $sblock$1639 = 0;
    while(1) {
     $arrayidx128 = (((((((($gfc)) + 25660|0) + (($chn$4643*244)|0)|0)) + 88|0) + (($sb$0641*12)|0)|0) + ($sblock$1639<<2)|0);
     $335 = +HEAPF32[$arrayidx128>>2];
     $conv = $335;
     $mul129 = $conv * 0.80000000000000004;
     $conv130 = $mul129;
     $cmp131 = ($sblock$1639|0)>(0);
     $sub = (($sblock$1639) + -1)|0;
     $arrayidx134 = (($mask_idx_s$i) + ($sub<<2)|0);
     $prev_thm$0$in = $cmp131 ? $arrayidx134 : $arrayidx139;
     $prev_thm$0 = +HEAPF32[$prev_thm$0$in>>2];
     $arrayidx142 = ((($ns_attacks) + ($chn$4643<<4)|0) + ($sblock$1639<<2)|0);
     $336 = HEAP32[$arrayidx142>>2]|0;
     $cmp143 = ($336|0)>(1);
     if ($cmp143) {
      label = 248;
     } else {
      $add147 = (($sblock$1639) + 1)|0;
      $arrayidx148 = ((($ns_attacks) + ($chn$4643<<4)|0) + ($add147<<2)|0);
      $337 = HEAP32[$arrayidx148>>2]|0;
      $cmp149 = ($337|0)==(1);
      if ($cmp149) {
       label = 248;
      } else {
       $t1$0 = $conv130;
      }
     }
     if ((label|0) == 248) {
      label = 0;
      $cmp4$i388 = $conv130 > 0.0;
      if ($cmp4$i388) {
       $div$i389 = $prev_thm$0 / $conv130;
       $338 = (+Math_pow((+$div$i389),0.36000001430511475));
       $mul$i390 = $338 * $conv130;
       $t1$0 = $mul$i390;
      } else {
       $t1$0 = 0.0;
      }
     }
     $cmp153 = $t1$0 < $conv130;
     $cond158 = $cmp153 ? $t1$0 : $conv130;
     $cmp161 = ($336|0)==(1);
     L386: do {
      if ($cmp161) {
       $cmp4$i382 = $cond158 > 0.0;
       if ($cmp4$i382) {
        $div$i383 = $prev_thm$0 / $cond158;
        $339 = (+Math_pow((+$div$i383),0.18000000715255737));
        $mul$i384 = $339 * $cond158;
        $t2$0 = $mul$i384;
       } else {
        $t2$0 = 0.0;
       }
      } else {
       $cmp166 = ($sblock$1639|0)==(0);
       do {
        if ($cmp166) {
         $340 = HEAP32[$arrayidx169>>2]|0;
         $cmp170 = ($340|0)==(3);
         if (!($cmp170)) {
          label = 255;
          break;
         }
         $342 = +HEAPF32[$arrayidx185>>2];
         $prev_thm$1 = $342;
        } else {
         label = 255;
        }
       } while(0);
       L393: do {
        if ((label|0) == 255) {
         label = 0;
         if (!($cmp131)) {
          $t2$0 = $conv130;
          break L386;
         }
         $arrayidx178 = ((($ns_attacks) + ($chn$4643<<4)|0) + ($sub<<2)|0);
         $341 = HEAP32[$arrayidx178>>2]|0;
         $cmp179 = ($341|0)==(3);
         if (!($cmp179)) {
          $t2$0 = $conv130;
          break L386;
         }
         switch ($sblock$1639|0) {
         case 2:  {
          $344 = +HEAPF32[$mask_idx_s$i>>2];
          $prev_thm$1 = $344;
          break L393;
          break;
         }
         case 1:  {
          $343 = +HEAPF32[$arrayidx139>>2];
          $prev_thm$1 = $343;
          break L393;
          break;
         }
         default: {
          $prev_thm$1 = $prev_thm$0;
          break L393;
         }
         }
        }
       } while(0);
       $cmp4$i379 = $cond158 > 0.0;
       if (!($cmp4$i379)) {
        $t2$0 = 0.0;
        break;
       }
       $div$i380 = $prev_thm$1 / $cond158;
       $345 = (+Math_pow((+$div$i380),0.18000000715255737));
       $mul$i381 = $345 * $cond158;
       $t2$0 = $mul$i381;
      }
     } while(0);
     $cmp202 = $t2$0 < $cond158;
     $cond207 = $cmp202 ? $t2$0 : $cond158;
     $arrayidx209 = ((($sub_short_factor) + (($chn$4643*12)|0)|0) + ($sblock$1639<<2)|0);
     $346 = +HEAPF32[$arrayidx209>>2];
     $mul210 = $cond207 * $346;
     $arrayidx211 = (($mask_idx_s$i) + ($sblock$1639<<2)|0);
     HEAPF32[$arrayidx211>>2] = $mul210;
     $inc213 = (($sblock$1639) + 1)|0;
     $exitcond684 = ($inc213|0)==(3);
     if ($exitcond684) {
      break;
     } else {
      $sblock$1639 = $inc213;
     }
    }
    ;HEAP32[$scevgep>>2]=HEAP32[$mask_idx_s$i>>2]|0;HEAP32[$scevgep+4>>2]=HEAP32[$mask_idx_s$i+4>>2]|0;HEAP32[$scevgep+8>>2]=HEAP32[$mask_idx_s$i+8>>2]|0;
    $inc229 = (($sb$0641) + 1)|0;
    $exitcond687 = ($inc229|0)==(13);
    if ($exitcond687) {
     break;
    } else {
     $sb$0641 = $inc229;
    }
   }
   $inc232 = (($chn$4643) + 1)|0;
   $exitcond688 = ($inc232|0)==($cond12|0);
   if ($exitcond688) {
    break;
   } else {
    $chn$4643 = $inc232;
   }
  }
  if ($cmp18664) {
   $chn$5638 = 0;
   while(1) {
    $arrayidx239 = (((($ns_attacks) + ($chn$5638<<4)|0)) + 8|0);
    $347 = HEAP32[$arrayidx239>>2]|0;
    $arrayidx241 = (((($gfc)) + 27780|0) + ($chn$5638<<2)|0);
    HEAP32[$arrayidx241>>2] = $347;
    $inc243 = (($chn$5638) + 1)|0;
    $exitcond683 = ($inc243|0)==($cond12|0);
    if ($exitcond683) {
     break;
    } else {
     $chn$5638 = $inc243;
    }
   }
  }
 }
 $348 = HEAP32[$channels_out$i>>2]|0;
 $cmp20$i = ($348|0)>(0);
 if ($cmp20$i) {
  $chn$021$i = 0;
  while(1) {
   $arrayidx$i369 = (($uselongblock) + ($chn$021$i<<2)|0);
   $349 = HEAP32[$arrayidx$i369>>2]|0;
   $tobool$i370 = ($349|0)==(0);
   $arrayidx5$i371 = (((($gfc)) + 27796|0) + ($chn$021$i<<2)|0);
   $350 = HEAP32[$arrayidx5$i371>>2]|0;
   L412: do {
    if ($tobool$i370) {
     switch ($350|0) {
     case 0:  {
      HEAP32[$arrayidx5$i371>>2] = 1;
      $351 = 1;$blocktype$0$i = 2;
      break L412;
      break;
     }
     case 3:  {
      HEAP32[$arrayidx5$i371>>2] = 2;
      $351 = 2;$blocktype$0$i = 2;
      break L412;
      break;
     }
     default: {
      $351 = $350;$blocktype$0$i = 2;
      break L412;
     }
     }
    } else {
     $cmp2$i373 = ($350|0)==(2);
     $$$i = $cmp2$i373 ? 3 : 0;
     $351 = $350;$blocktype$0$i = $$$i;
    }
   } while(0);
   $arrayidx21$i376 = (($blocktype_d) + ($chn$021$i<<2)|0);
   HEAP32[$arrayidx21$i376>>2] = $351;
   HEAP32[$arrayidx5$i371>>2] = $blocktype$0$i;
   $inc$i377 = (($chn$021$i) + 1)|0;
   $exitcond$i378 = ($inc$i377|0)==($348|0);
   if ($exitcond$i378) {
    break;
   } else {
    $chn$021$i = $inc$i377;
   }
  }
 }
 if (!($cmp18664)) {
  STACKTOP = sp;return 0;
 }
 $add$ptr254 = ((($percep_MS_entropy)) + -8|0);
 $arrayidx259 = ((($blocktype_d)) + 4|0);
 $tobool283 = ($cond|0)==(0|0);
 $chn$6635 = 0;
 while(1) {
  $cmp251 = ($chn$6635|0)>(1);
  if ($cmp251) {
   $352 = HEAP32[$blocktype_d>>2]|0;
   $cmp256 = ($352|0)==(2);
   if ($cmp256) {
    label = 279;
   } else {
    $353 = HEAP32[$arrayidx259>>2]|0;
    $cmp260 = ($353|0)==(2);
    if ($cmp260) {
     label = 279;
    } else {
     $type$0 = 0;
    }
   }
   if ((label|0) == 279) {
    label = 0;
    $type$0 = 2;
   }
   $sub265 = (($chn$6635) + -2)|0;
   $arrayidx266 = ((($masking_MS_ratio) + (($gr_out*976)|0)|0) + (($sub265*488)|0)|0);
   $mr$0 = $arrayidx266;$ppe$0 = $add$ptr254;$type$1 = $type$0;
  } else {
   $arrayidx268 = (($blocktype_d) + ($chn$6635<<2)|0);
   $354 = HEAP32[$arrayidx268>>2]|0;
   $arrayidx270 = ((($masking_ratio) + (($gr_out*976)|0)|0) + (($chn$6635*488)|0)|0);
   $mr$0 = $arrayidx270;$ppe$0 = $percep_entropy;$type$1 = $354;
  }
  $cmp272 = ($type$1|0)==(2);
  $355 = +HEAPF32[$masking_lower31$i>>2];
  if ($cmp272) {
   $pe_s$025$i = 309.07000732421875;$sb$024$i = 0;
   while(1) {
    $arrayidx16$i = (5924 + ($sb$024$i<<2)|0);
    $arrayidx5$i232 = (((($mr$0)) + 88|0) + (($sb$024$i*12)|0)|0);
    $356 = +HEAPF32[$arrayidx5$i232>>2];
    $cmp6$i233 = $356 > 0.0;
    do {
     if ($cmp6$i233) {
      $mul$i234 = $356 * $355;
      $arrayidx10$i = (((($mr$0)) + 332|0) + (($sb$024$i*12)|0)|0);
      $357 = +HEAPF32[$arrayidx10$i>>2];
      $cmp11$i = $357 > $mul$i234;
      if (!($cmp11$i)) {
       $pe_s$3$i = $pe_s$025$i;
       break;
      }
      $mul13$i = $mul$i234 * 1.0E+10;
      $cmp14$i = $357 > $mul13$i;
      $358 = +HEAPF32[$arrayidx16$i>>2];
      $conv$i236 = $358;
      if ($cmp14$i) {
       $mul17$i = $conv$i236 * 23.025850929940461;
       $conv18$i = $pe_s$025$i;
       $add$i237 = $mul17$i + $conv18$i;
       $conv19$i = $add$i237;
       $pe_s$3$i = $conv19$i;
       break;
      } else {
       $div$i238 = $357 / $mul$i234;
       $call$i239 = (+_fast_log2($div$i238));
       $conv22$i240 = $call$i239;
       $mul23$i = $conv$i236 * 0.30102999566398114;
       $mul24$i = $mul23$i * $conv22$i240;
       $conv25$i = $pe_s$025$i;
       $add26$i = $mul24$i + $conv25$i;
       $conv27$i = $add26$i;
       $pe_s$3$i = $conv27$i;
       break;
      }
     } else {
      $pe_s$3$i = $pe_s$025$i;
     }
    } while(0);
    $arrayidx5$1$i = (((((($mr$0)) + 88|0) + (($sb$024$i*12)|0)|0)) + 4|0);
    $359 = +HEAPF32[$arrayidx5$1$i>>2];
    $cmp6$1$i = $359 > 0.0;
    do {
     if ($cmp6$1$i) {
      $mul$1$i242 = $359 * $355;
      $arrayidx10$1$i = (((((($mr$0)) + 332|0) + (($sb$024$i*12)|0)|0)) + 4|0);
      $360 = +HEAPF32[$arrayidx10$1$i>>2];
      $cmp11$1$i = $360 > $mul$1$i242;
      if (!($cmp11$1$i)) {
       $pe_s$3$1$i = $pe_s$3$i;
       break;
      }
      $mul13$1$i = $mul$1$i242 * 1.0E+10;
      $cmp14$1$i = $360 > $mul13$1$i;
      $361 = +HEAPF32[$arrayidx16$i>>2];
      $conv$1$i = $361;
      if ($cmp14$1$i) {
       $mul17$1$i = $conv$1$i * 23.025850929940461;
       $conv18$1$i = $pe_s$3$i;
       $add$1$i = $mul17$1$i + $conv18$1$i;
       $conv19$1$i = $add$1$i;
       $pe_s$3$1$i = $conv19$1$i;
       break;
      } else {
       $div$1$i243 = $360 / $mul$1$i242;
       $call$1$i = (+_fast_log2($div$1$i243));
       $conv22$1$i = $call$1$i;
       $mul23$1$i = $conv$1$i * 0.30102999566398114;
       $mul24$1$i = $mul23$1$i * $conv22$1$i;
       $conv25$1$i = $pe_s$3$i;
       $add26$1$i = $mul24$1$i + $conv25$1$i;
       $conv27$1$i = $add26$1$i;
       $pe_s$3$1$i = $conv27$1$i;
       break;
      }
     } else {
      $pe_s$3$1$i = $pe_s$3$i;
     }
    } while(0);
    $arrayidx5$2$i = (((((($mr$0)) + 88|0) + (($sb$024$i*12)|0)|0)) + 8|0);
    $362 = +HEAPF32[$arrayidx5$2$i>>2];
    $cmp6$2$i = $362 > 0.0;
    do {
     if ($cmp6$2$i) {
      $mul$2$i244 = $362 * $355;
      $arrayidx10$2$i = (((((($mr$0)) + 332|0) + (($sb$024$i*12)|0)|0)) + 8|0);
      $363 = +HEAPF32[$arrayidx10$2$i>>2];
      $cmp11$2$i = $363 > $mul$2$i244;
      if (!($cmp11$2$i)) {
       $pe_s$3$2$i = $pe_s$3$1$i;
       break;
      }
      $mul13$2$i = $mul$2$i244 * 1.0E+10;
      $cmp14$2$i = $363 > $mul13$2$i;
      $364 = +HEAPF32[$arrayidx16$i>>2];
      $conv$2$i = $364;
      if ($cmp14$2$i) {
       $mul17$2$i = $conv$2$i * 23.025850929940461;
       $conv18$2$i = $pe_s$3$1$i;
       $add$2$i = $mul17$2$i + $conv18$2$i;
       $conv19$2$i = $add$2$i;
       $pe_s$3$2$i = $conv19$2$i;
       break;
      } else {
       $div$2$i245 = $363 / $mul$2$i244;
       $call$2$i = (+_fast_log2($div$2$i245));
       $conv22$2$i = $call$2$i;
       $mul23$2$i = $conv$2$i * 0.30102999566398114;
       $mul24$2$i = $mul23$2$i * $conv22$2$i;
       $conv25$2$i = $pe_s$3$1$i;
       $add26$2$i = $mul24$2$i + $conv25$2$i;
       $conv27$2$i = $add26$2$i;
       $pe_s$3$2$i = $conv27$2$i;
       break;
      }
     } else {
      $pe_s$3$2$i = $pe_s$3$1$i;
     }
    } while(0);
    $inc31$i = (($sb$024$i) + 1)|0;
    $exitcond$i246 = ($inc31$i|0)==(12);
    if ($exitcond$i246) {
     $call280$sink = $pe_s$3$2$i;
     break;
    } else {
     $pe_s$025$i = $pe_s$3$2$i;$sb$024$i = $inc31$i;
    }
   }
  } else {
   $pe_l$019$i = 281.0574951171875;$sb$018$i = 0;
   while(1) {
    $arrayidx$i = (($mr$0) + ($sb$018$i<<2)|0);
    $365 = +HEAPF32[$arrayidx$i>>2];
    $cmp2$i = $365 > 0.0;
    do {
     if ($cmp2$i) {
      $mul$i200 = $365 * $355;
      $arrayidx5$i = (((($mr$0)) + 244|0) + ($sb$018$i<<2)|0);
      $366 = +HEAPF32[$arrayidx5$i>>2];
      $cmp6$i201 = $366 > $mul$i200;
      if (!($cmp6$i201)) {
       $pe_l$2$i = $pe_l$019$i;
       break;
      }
      $mul8$i = $mul$i200 * 1.0E+10;
      $cmp9$i = $366 > $mul8$i;
      $arrayidx11$i = (5972 + ($sb$018$i<<2)|0);
      $367 = +HEAPF32[$arrayidx11$i>>2];
      $conv$i = $367;
      if ($cmp9$i) {
       $mul12$i = $conv$i * 23.025850929940461;
       $conv13$i = $pe_l$019$i;
       $add$i203 = $mul12$i + $conv13$i;
       $conv14$i = $add$i203;
       $pe_l$2$i = $conv14$i;
       break;
      } else {
       $div$i204 = $366 / $mul$i200;
       $call$i = (+_fast_log2($div$i204));
       $conv17$i = $call$i;
       $mul18$i = $conv$i * 0.30102999566398114;
       $mul19$i = $mul18$i * $conv17$i;
       $conv20$i = $pe_l$019$i;
       $add21$i = $mul19$i + $conv20$i;
       $conv22$i = $add21$i;
       $pe_l$2$i = $conv22$i;
       break;
      }
     } else {
      $pe_l$2$i = $pe_l$019$i;
     }
    } while(0);
    $inc$i206 = (($sb$018$i) + 1)|0;
    $exitcond$i207 = ($inc$i206|0)==(21);
    if ($exitcond$i207) {
     $call280$sink = $pe_l$2$i;
     break;
    } else {
     $pe_l$019$i = $pe_l$2$i;$sb$018$i = $inc$i206;
    }
   }
  }
  $arrayidx281$sink = (($ppe$0) + ($chn$6635<<2)|0);
  HEAPF32[$arrayidx281$sink>>2] = $call280$sink;
  if (!($tobool283)) {
   $arrayidx288 = ((((($cond)) + 189240|0) + ($gr_out<<5)|0) + ($chn$6635<<3)|0);
   $conv286 = $call280$sink;
   HEAPF64[$arrayidx288>>3] = $conv286;
  }
  $inc291 = (($chn$6635) + 1)|0;
  $exitcond = ($inc291|0)==($cond12|0);
  if ($exitcond) {
   break;
  } else {
   $chn$6635 = $inc291;
  }
 }
 STACKTOP = sp;return 0;
}
function _vbrpsy_compute_MS_thresholds($eb,$thr,$cb_mld,$ath_cb,$athlower,$msfix,$n) {
 $eb = $eb|0;
 $thr = $thr|0;
 $cb_mld = $cb_mld|0;
 $ath_cb = $ath_cb|0;
 $athlower = +$athlower;
 $msfix = +$msfix;
 $n = $n|0;
 var $0 = 0.0, $1 = 0.0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $2 = 0.0, $3 = 0.0, $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, $add$us = 0.0, $arrayidx1 = 0, $arrayidx1$us = 0, $arrayidx11 = 0, $arrayidx11$us = 0;
 var $arrayidx16 = 0, $arrayidx16$us = 0, $arrayidx3 = 0, $arrayidx3$us = 0, $arrayidx38$us = 0, $arrayidx5 = 0, $arrayidx5$us = 0, $arrayidx7 = 0, $arrayidx7$us = 0, $arrayidx9 = 0, $arrayidx9$us = 0, $b$096 = 0, $b$096$us = 0, $cmp13 = 0, $cmp13$us = 0, $cmp15 = 0, $cmp15$us = 0, $cmp20 = 0, $cmp20$us = 0, $cmp21 = 0;
 var $cmp21$us = 0, $cmp26 = 0, $cmp26$us = 0, $cmp31 = 0, $cmp31$us = 0, $cmp36 = 0, $cmp40$us = 0, $cmp45$us = 0, $cmp50$us = 0, $cmp55$us = 0, $cmp60$us = 0, $cmp65$us = 0, $cmp68$us = 0, $cmp74$us = 0, $cmp79$us = 0, $cmp85 = 0, $cmp85$us = 0, $cmp88 = 0, $cmp88$us = 0, $cmp95 = 0;
 var $cond = 0.0, $cond$us = 0.0, $cond25 = 0.0, $cond25$us = 0.0, $cond30 = 0.0, $cond30$us = 0.0, $cond35 = 0.0, $cond35$us = 0.0, $cond44$us = 0.0, $cond49$us = 0.0, $cond54$us = 0.0, $cond59$us = 0.0, $cond64$us = 0.0, $cond78$us = 0.0, $cond83$us = 0.0, $div$us = 0.0, $exitcond = 0, $exitcond98 = 0, $inc = 0, $inc$us = 0;
 var $mul = 0.0, $mul12 = 0.0, $mul12$us = 0.0, $mul14 = 0.0, $mul14$us = 0.0, $mul17 = 0.0, $mul17$us = 0.0, $mul19 = 0.0, $mul19$us = 0.0, $mul39$us = 0.0, $mul67$us = 0.0, $mul71$us = 0.0, $mul72$us = 0.0, $or$cond = 0, $or$cond$us = 0, $rmid$0 = 0.0, $rmid$0$us = 0.0, $rmid$2 = 0.0, $rmid$2$us = 0.0, $rside$0 = 0.0;
 var $rside$0$us = 0.0, $rside$2 = 0.0, $rside$2$us = 0.0, $thmM$0$us = 0.0, $thmS$0$us = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $mul = $msfix * 2.0;
 $cmp95 = ($n|0)>(0);
 if (!($cmp95)) {
  return;
 }
 $cmp36 = $msfix > 0.0;
 if ($cmp36) {
  $b$096$us = 0;
 } else {
  $b$096 = 0;
  while(1) {
   $arrayidx1 = (((($eb)) + 512|0) + ($b$096<<2)|0);
   $8 = +HEAPF32[$arrayidx1>>2];
   $arrayidx3 = (((($eb)) + 768|0) + ($b$096<<2)|0);
   $9 = +HEAPF32[$arrayidx3>>2];
   $arrayidx5 = (($thr) + ($b$096<<2)|0);
   $10 = +HEAPF32[$arrayidx5>>2];
   $arrayidx7 = (((($thr)) + 256|0) + ($b$096<<2)|0);
   $11 = +HEAPF32[$arrayidx7>>2];
   $arrayidx9 = (((($thr)) + 512|0) + ($b$096<<2)|0);
   $12 = +HEAPF32[$arrayidx9>>2];
   $arrayidx11 = (((($thr)) + 768|0) + ($b$096<<2)|0);
   $13 = +HEAPF32[$arrayidx11>>2];
   $mul12 = $11 * 1.5800000429153442;
   $cmp13 = !($10 <= $mul12);
   $mul14 = $10 * 1.5800000429153442;
   $cmp15 = !($11 <= $mul14);
   $or$cond = $cmp15 | $cmp13;
   if ($or$cond) {
    $rmid$0 = $12;$rside$0 = $13;
   } else {
    $arrayidx16 = (($cb_mld) + ($b$096<<2)|0);
    $14 = +HEAPF32[$arrayidx16>>2];
    $mul17 = $14 * $9;
    $mul19 = $14 * $8;
    $cmp20 = $13 < $mul17;
    $cond = $cmp20 ? $13 : $mul17;
    $cmp21 = $12 < $mul19;
    $cond25 = $cmp21 ? $12 : $mul19;
    $cmp26 = $12 > $cond;
    $cond30 = $cmp26 ? $12 : $cond;
    $cmp31 = $13 > $cond25;
    $cond35 = $cmp31 ? $13 : $cond25;
    $rmid$0 = $cond30;$rside$0 = $cond35;
   }
   $cmp85 = $rmid$0 > $8;
   $rmid$2 = $cmp85 ? $8 : $rmid$0;
   $cmp88 = $rside$0 > $9;
   $rside$2 = $cmp88 ? $9 : $rside$0;
   HEAPF32[$arrayidx9>>2] = $rmid$2;
   HEAPF32[$arrayidx11>>2] = $rside$2;
   $inc = (($b$096) + 1)|0;
   $exitcond98 = ($inc|0)==($n|0);
   if ($exitcond98) {
    break;
   } else {
    $b$096 = $inc;
   }
  }
  return;
 }
 while(1) {
  $arrayidx1$us = (((($eb)) + 512|0) + ($b$096$us<<2)|0);
  $0 = +HEAPF32[$arrayidx1$us>>2];
  $arrayidx3$us = (((($eb)) + 768|0) + ($b$096$us<<2)|0);
  $1 = +HEAPF32[$arrayidx3$us>>2];
  $arrayidx5$us = (($thr) + ($b$096$us<<2)|0);
  $2 = +HEAPF32[$arrayidx5$us>>2];
  $arrayidx7$us = (((($thr)) + 256|0) + ($b$096$us<<2)|0);
  $3 = +HEAPF32[$arrayidx7$us>>2];
  $arrayidx9$us = (((($thr)) + 512|0) + ($b$096$us<<2)|0);
  $4 = +HEAPF32[$arrayidx9$us>>2];
  $arrayidx11$us = (((($thr)) + 768|0) + ($b$096$us<<2)|0);
  $5 = +HEAPF32[$arrayidx11$us>>2];
  $mul12$us = $3 * 1.5800000429153442;
  $cmp13$us = !($2 <= $mul12$us);
  $mul14$us = $2 * 1.5800000429153442;
  $cmp15$us = !($3 <= $mul14$us);
  $or$cond$us = $cmp15$us | $cmp13$us;
  if ($or$cond$us) {
   $rmid$0$us = $4;$rside$0$us = $5;
  } else {
   $arrayidx16$us = (($cb_mld) + ($b$096$us<<2)|0);
   $6 = +HEAPF32[$arrayidx16$us>>2];
   $mul17$us = $6 * $1;
   $mul19$us = $6 * $0;
   $cmp20$us = $5 < $mul17$us;
   $cond$us = $cmp20$us ? $5 : $mul17$us;
   $cmp21$us = $4 < $mul19$us;
   $cond25$us = $cmp21$us ? $4 : $mul19$us;
   $cmp26$us = $4 > $cond$us;
   $cond30$us = $cmp26$us ? $4 : $cond$us;
   $cmp31$us = $5 > $cond25$us;
   $cond35$us = $cmp31$us ? $5 : $cond25$us;
   $rmid$0$us = $cond30$us;$rside$0$us = $cond35$us;
  }
  $arrayidx38$us = (($ath_cb) + ($b$096$us<<2)|0);
  $7 = +HEAPF32[$arrayidx38$us>>2];
  $mul39$us = $7 * $athlower;
  $cmp40$us = $2 > $mul39$us;
  $cond44$us = $cmp40$us ? $2 : $mul39$us;
  $cmp45$us = $3 > $mul39$us;
  $cond49$us = $cmp45$us ? $3 : $mul39$us;
  $cmp55$us = $rmid$0$us > $mul39$us;
  $cond59$us = $cmp55$us ? $rmid$0$us : $mul39$us;
  $cmp60$us = $rside$0$us > $mul39$us;
  $cond64$us = $cmp60$us ? $rside$0$us : $mul39$us;
  $add$us = $cond59$us + $cond64$us;
  $cmp65$us = $add$us > 0.0;
  if ($cmp65$us) {
   $cmp50$us = $cond44$us < $cond49$us;
   $cond54$us = $cmp50$us ? $cond44$us : $cond49$us;
   $mul67$us = $mul * $cond54$us;
   $cmp68$us = $mul67$us < $add$us;
   $div$us = $mul67$us / $add$us;
   if ($cmp68$us) {
    $mul72$us = $div$us * $cond64$us;
    $mul71$us = $div$us * $cond59$us;
    $thmM$0$us = $mul71$us;$thmS$0$us = $mul72$us;
   } else {
    $thmM$0$us = $cond59$us;$thmS$0$us = $cond64$us;
   }
  } else {
   $thmM$0$us = $cond59$us;$thmS$0$us = $cond64$us;
  }
  $cmp74$us = $thmM$0$us < $rmid$0$us;
  $cond78$us = $cmp74$us ? $thmM$0$us : $rmid$0$us;
  $cmp79$us = $thmS$0$us < $rside$0$us;
  $cond83$us = $cmp79$us ? $thmS$0$us : $rside$0$us;
  $cmp85$us = $cond78$us > $0;
  $rmid$2$us = $cmp85$us ? $0 : $cond78$us;
  $cmp88$us = $cond83$us > $1;
  $rside$2$us = $cmp88$us ? $1 : $cond83$us;
  HEAPF32[$arrayidx9$us>>2] = $rmid$2$us;
  HEAPF32[$arrayidx11$us>>2] = $rside$2$us;
  $inc$us = (($b$096$us) + 1)|0;
  $exitcond = ($inc$us|0)==($n|0);
  if ($exitcond) {
   break;
  } else {
   $b$096$us = $inc$us;
  }
 }
 return;
}
function _psymodel_init($gfp) {
 $gfp = $gfp|0;
 var $$ = 0.0, $$lcssa = 0, $$pre = 0, $$pre400 = 0, $0 = 0, $1 = 0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0.0, $14 = 0, $15 = 0.0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0;
 var $23 = 0.0, $24 = 0, $25 = 0, $26 = 0, $27 = 0.0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0.0, $4 = 0, $40 = 0.0;
 var $41 = 0, $42 = 0, $43 = 0.0, $44 = 0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0.0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ATH = 0, $ATH260 = 0, $ATH381 = 0, $ATHtype = 0;
 var $VBR_q = 0, $VBR_q_frac = 0, $add$i = 0, $add$i302 = 0, $add218326 = 0.0, $add271 = 0.0, $add274 = 0.0, $add284 = 0.0, $add396 = 0.0, $add407 = 0.0, $add488 = 0, $add492 = 0.0, $add6$i = 0.0, $add6$i307 = 0.0, $adjust_factor = 0, $adjust_limit = 0, $arraydecay191 = 0, $arraydecay73 = 0, $arrayidx = 0, $arrayidx$i = 0;
 var $arrayidx$i298 = 0, $arrayidx10$i = 0, $arrayidx10$i309 = 0, $arrayidx122 = 0, $arrayidx13 = 0, $arrayidx15 = 0, $arrayidx153 = 0, $arrayidx154 = 0, $arrayidx17 = 0, $arrayidx184 = 0, $arrayidx19 = 0, $arrayidx204 = 0, $arrayidx223 = 0, $arrayidx227 = 0, $arrayidx25 = 0, $arrayidx25$1 = 0, $arrayidx25$10 = 0, $arrayidx25$11 = 0, $arrayidx25$12 = 0, $arrayidx25$13 = 0;
 var $arrayidx25$14 = 0, $arrayidx25$15 = 0, $arrayidx25$16 = 0, $arrayidx25$17 = 0, $arrayidx25$18 = 0, $arrayidx25$19 = 0, $arrayidx25$2 = 0, $arrayidx25$20 = 0, $arrayidx25$21 = 0, $arrayidx25$3 = 0, $arrayidx25$4 = 0, $arrayidx25$5 = 0, $arrayidx25$6 = 0, $arrayidx25$7 = 0, $arrayidx25$8 = 0, $arrayidx25$9 = 0, $arrayidx25$i = 0, $arrayidx25$i321 = 0, $arrayidx261 = 0, $arrayidx28 = 0;
 var $arrayidx28$1 = 0, $arrayidx28$10 = 0, $arrayidx28$11 = 0, $arrayidx28$12 = 0, $arrayidx28$13 = 0, $arrayidx28$14 = 0, $arrayidx28$15 = 0, $arrayidx28$16 = 0, $arrayidx28$17 = 0, $arrayidx28$18 = 0, $arrayidx28$19 = 0, $arrayidx28$2 = 0, $arrayidx28$20 = 0, $arrayidx28$21 = 0, $arrayidx28$3 = 0, $arrayidx28$4 = 0, $arrayidx28$5 = 0, $arrayidx28$6 = 0, $arrayidx28$7 = 0, $arrayidx28$8 = 0;
 var $arrayidx28$9 = 0, $arrayidx312 = 0, $arrayidx357 = 0, $arrayidx403 = 0, $arrayidx420 = 0, $arrayidx43 = 0, $arrayidx43$1 = 0, $arrayidx43$10 = 0, $arrayidx43$11 = 0, $arrayidx43$12 = 0, $arrayidx43$2 = 0, $arrayidx43$3 = 0, $arrayidx43$4 = 0, $arrayidx43$5 = 0, $arrayidx43$6 = 0, $arrayidx43$7 = 0, $arrayidx43$8 = 0, $arrayidx43$9 = 0, $arrayidx473 = 0, $arrayidx475 = 0;
 var $arrayidx479 = 0, $arrayidx48 = 0, $arrayidx48$1 = 0, $arrayidx48$10 = 0, $arrayidx48$11 = 0, $arrayidx48$12 = 0, $arrayidx48$2 = 0, $arrayidx48$3 = 0, $arrayidx48$4 = 0, $arrayidx48$5 = 0, $arrayidx48$6 = 0, $arrayidx48$7 = 0, $arrayidx48$8 = 0, $arrayidx48$9 = 0, $arrayidx484 = 0, $arrayidx489 = 0, $arrayidx5 = 0, $arrayidx511 = 0, $arrayidx52 = 0, $arrayidx521 = 0;
 var $arrayidx544 = 0, $arrayidx554 = 0, $arrayidx61 = 0, $arrayidx61$1 = 0, $arrayidx61$2 = 0, $arrayidx61$3 = 0, $arrayidx61$4 = 0, $arrayidx61$5 = 0, $arrayidx61$6 = 0, $arrayidx61$7 = 0, $arrayidx61$8 = 0, $arrayidx68 = 0, $arrayidx70 = 0, $arrayidx99 = 0, $attack_threshold = 0, $attackthre = 0, $attackthre_s = 0, $b$0358 = 0, $b$3$lcssa404 = 0, $b$3337 = 0;
 var $b$4335 = 0, $b$5$lcssa406 = 0, $b$5333 = 0, $b$6331 = 0, $bval = 0, $bval_width = 0, $call = 0, $call$i = 0.0, $call$i301 = 0.0, $call111 = 0, $call132 = 0.0, $call16$i = 0.0, $call16$i314 = 0.0, $call23$i = 0.0, $call23$i319 = 0.0, $call239 = 0.0, $call272 = 0.0, $call282 = 0.0, $call326 = 0, $call334 = 0.0;
 var $call397 = 0.0, $call5$i = 0.0, $call5$i306 = 0.0, $cd_psy = 0, $cfg1 = 0, $cmp = 0, $cmp117 = 0, $cmp117378 = 0, $cmp123 = 0, $cmp123371 = 0, $cmp143 = 0, $cmp159 = 0, $cmp164 = 0, $cmp170 = 0, $cmp198 = 0, $cmp198366 = 0, $cmp205 = 0, $cmp228 = 0, $cmp228359 = 0, $cmp24$i = 0;
 var $cmp24$i293 = 0, $cmp250 = 0, $cmp268 = 0, $cmp278 = 0, $cmp287 = 0, $cmp292 = 0, $cmp298 = 0, $cmp342 = 0, $cmp351 = 0, $cmp351357 = 0, $cmp361 = 0, $cmp385 = 0, $cmp415 = 0, $cmp427350 = 0, $cmp465 = 0, $cmp469 = 0, $cmp480 = 0, $cmp497 = 0, $cmp516334 = 0, $cmp528 = 0;
 var $cmp528332 = 0, $cmp549330 = 0, $cmp79 = 0, $cmp79381 = 0, $conv = 0.0, $conv11$i = 0.0, $conv11$i294 = 0.0, $conv12$i = 0.0, $conv12$i310 = 0.0, $conv126 = 0.0, $conv128 = 0.0, $conv130 = 0.0, $conv134 = 0.0, $conv136 = 0.0, $conv140 = 0.0, $conv142 = 0.0, $conv15$i = 0.0, $conv15$i313 = 0.0, $conv152 = 0.0, $conv156 = 0.0;
 var $conv163 = 0.0, $conv179 = 0.0, $conv181 = 0.0, $conv19$i = 0.0, $conv19$i315 = 0.0, $conv2$i = 0.0, $conv2$i299 = 0.0, $conv219 = 0.0, $conv219$op = 0.0, $conv22$i = 0.0, $conv22$i318 = 0.0, $conv222 = 0.0, $conv232 = 0.0, $conv234 = 0.0, $conv236 = 0.0, $conv241 = 0.0, $conv243 = 0.0, $conv247 = 0.0, $conv249 = 0.0, $conv259 = 0.0;
 var $conv264 = 0.0, $conv291 = 0.0, $conv3$i = 0.0, $conv3$i304 = 0.0, $conv307 = 0.0, $conv309 = 0.0, $conv330 = 0.0, $conv335 = 0.0, $conv375 = 0.0, $conv380 = 0.0, $conv390 = 0.0, $conv399 = 0.0, $conv401 = 0.0, $conv413 = 0.0, $conv503 = 0.0, $conv506 = 0.0, $conv535 = 0.0, $conv538 = 0.0, $conv9$i = 0.0, $conv9$i308 = 0.0;
 var $dec = 0, $dec353 = 0, $decay = 0, $decay382 = 0, $div$i = 0.0, $div$i292 = 0.0, $div129 = 0.0, $div155 = 0.0, $div175 = 0.0, $div212 = 0.0, $div217 = 0.0, $div221 = 0.0, $div235 = 0.0, $div263 = 0.0, $div303 = 0.0, $div333 = 0.0, $div378 = 0.0, $div391 = 0.0, $div398 = 0.0, $div400 = 0.0;
 var $div507 = 0.0, $div539 = 0.0, $eql_balance$0355 = 0.0, $exitcond = 0, $exitcond$i = 0, $exitcond$i323 = 0, $exitcond392 = 0, $exitcond393 = 0, $exitcond394 = 0, $exitcond397 = 0, $exitcond399 = 0, $experimentalZ = 0, $force_short_block_calc = 0, $freq388$0354 = 0.0, $i$0390 = 0, $i$1382 = 0, $i$2380 = 0, $i$3368 = 0, $i$4356 = 0, $inc = 0;
 var $inc$i = 0, $inc$i322 = 0, $inc101 = 0, $inc149 = 0, $inc150 = 0, $inc186 = 0, $inc256 = 0, $inc257 = 0, $inc314 = 0, $inc373 = 0, $inc409 = 0, $inc513 = 0, $inc523 = 0, $inc54 = 0, $inc546 = 0, $inc556 = 0, $inc66 = 0, $internal_flags = 0, $j$025$i = 0, $j$025$i297 = 0;
 var $j$0385 = 0, $j$1388 = 0, $j$3379 = 0, $j$4$lcssa = 0, $j$4374 = 0, $j$5367 = 0, $j$6$lcssa = 0, $j$6362 = 0, $k$026$i = 0, $k$026$i296 = 0, $k$0372 = 0, $k$1360 = 0, $l_to_s = 0, $minval = 0, $minval183 = 0, $minval311 = 0, $mode_gr = 0, $msfix$0 = 0.0, $msfix339 = 0, $mul$i = 0.0;
 var $mul$i300 = 0.0, $mul127 = 0.0, $mul131 = 0.0, $mul135 = 0.0, $mul14$i = 0.0, $mul14$i312 = 0.0, $mul141 = 0.0, $mul158 = 0.0, $mul180 = 0.0, $mul21$i = 0.0, $mul21$i317 = 0.0, $mul233 = 0.0, $mul238 = 0.0, $mul242 = 0.0, $mul248 = 0.0, $mul266 = 0.0, $mul273 = 0.0, $mul275 = 0.0, $mul283 = 0.0, $mul285 = 0.0;
 var $mul308 = 0.0, $mul376 = 0.0, $mul379 = 0.0, $mul4$i = 0.0, $mul4$i305 = 0.0, $mul421 = 0.0, $mul491 = 0.0, $mul509 = 0.0, $mul541 = 0.0, $norm = 0, $npart$i = 0, $npart$i291 = 0, $numlines = 0, $numlines226 = 0, $phitmp = 0.0, $retval$0 = 0, $s188 = 0, $s3 = 0, $s3317 = 0, $s3ind = 0;
 var $s3ind319 = 0, $samplerate_out = 0, $sk_s$0 = 0.0, $sub = 0.0, $sub$i = 0, $sub$i303 = 0, $sub13$i = 0.0, $sub13$i311 = 0.0, $sub133 = 0.0, $sub157 = 0.0, $sub20$i = 0.0, $sub20$i316 = 0.0, $sub209 = 0.0, $sub214 = 0.0, $sub24$i = 0.0, $sub24$i320 = 0.0, $sub240 = 0.0, $sub265 = 0.0, $sub281 = 0.0, $sub360 = 0;
 var $sub490 = 0.0, $sub502 = 0, $sub534 = 0, $tobool = 0, $tobool327 = 0, $tobool336 = 0, $use_safe_joint_stereo = 0, $x$0$lcssa = 0.0, $x$0373 = 0.0, $x$1 = 0.0, $x$2 = 0.0, $x$3 = 0.0, $x$3$op = 0.0, $x$3$op$op = 0.0, $x201$0$lcssa = 0.0, $x201$0361 = 0.0, $x201$1 = 0.0, $x201$2 = 0.0, $x201$3 = 0.0, $x201$4 = 0.0;
 var $x201$5 = 0.0, $x201$5$op = 0.0, $x201$5$op$op = 0.0, $x464$0 = 0.0, $y$0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 768|0;
 $bval = sp + 512|0;
 $bval_width = sp + 256|0;
 $norm = sp;
 $internal_flags = ((($gfp)) + 288|0);
 $0 = HEAP32[$internal_flags>>2]|0;
 $cfg1 = ((($0)) + 16|0);
 $samplerate_out = ((($0)) + 64|0);
 $1 = HEAP32[$samplerate_out>>2]|0;
 $conv = (+($1|0));
 $minval = ((($0)) + 280|0);
 $2 = +HEAPF32[$minval>>2];
 $sub = -$2;
 $cd_psy = ((($0)) + 85800|0);
 $3 = HEAP32[$cd_psy>>2]|0;
 $cmp = ($3|0)==(0|0);
 if (!($cmp)) {
  $retval$0 = 0;
  STACKTOP = sp;return ($retval$0|0);
 }
 _memset(($norm|0),0,256)|0;
 $call = (_calloc(1,6504)|0);
 HEAP32[$cd_psy>>2] = $call;
 $experimentalZ = ((($gfp)) + 144|0);
 $4 = HEAP32[$experimentalZ>>2]|0;
 $force_short_block_calc = ((($call)) + 6500|0);
 HEAP32[$force_short_block_calc>>2] = $4;
 $arrayidx = ((($0)) + 27800|0);
 HEAP32[$arrayidx>>2] = 0;
 $arrayidx5 = ((($0)) + 27796|0);
 HEAP32[$arrayidx5>>2] = 0;
 $i$0390 = 0;
 while(1) {
  $j$0385 = 0;
  while(1) {
   $arrayidx13 = ((((($0)) + 21564|0) + ($i$0390<<8)|0) + ($j$0385<<2)|0);
   HEAPF32[$arrayidx13>>2] = 1.0000000200408773E+20;
   $arrayidx15 = ((((($0)) + 22588|0) + ($i$0390<<8)|0) + ($j$0385<<2)|0);
   HEAPF32[$arrayidx15>>2] = 1.0000000200408773E+20;
   $arrayidx17 = ((((($0)) + 24636|0) + ($i$0390<<8)|0) + ($j$0385<<2)|0);
   HEAPF32[$arrayidx17>>2] = 1.0;
   $arrayidx19 = ((((($0)) + 23612|0) + ($i$0390<<8)|0) + ($j$0385<<2)|0);
   HEAPF32[$arrayidx19>>2] = 1.0;
   $inc = (($j$0385) + 1)|0;
   $exitcond394 = ($inc|0)==(64);
   if ($exitcond394) {
    break;
   } else {
    $j$0385 = $inc;
   }
  }
  $arrayidx25 = (((($0)) + 26636|0) + (($i$0390*244)|0)|0);
  HEAPF32[$arrayidx25>>2] = 1.0000000200408773E+20;
  $arrayidx28 = (((($0)) + 25660|0) + (($i$0390*244)|0)|0);
  HEAPF32[$arrayidx28>>2] = 1.0000000200408773E+20;
  $arrayidx25$1 = (((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 4|0);
  HEAPF32[$arrayidx25$1>>2] = 1.0000000200408773E+20;
  $arrayidx28$1 = (((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 4|0);
  HEAPF32[$arrayidx28$1>>2] = 1.0000000200408773E+20;
  $arrayidx25$2 = (((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 8|0);
  HEAPF32[$arrayidx25$2>>2] = 1.0000000200408773E+20;
  $arrayidx28$2 = (((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 8|0);
  HEAPF32[$arrayidx28$2>>2] = 1.0000000200408773E+20;
  $arrayidx25$3 = (((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 12|0);
  HEAPF32[$arrayidx25$3>>2] = 1.0000000200408773E+20;
  $arrayidx28$3 = (((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 12|0);
  HEAPF32[$arrayidx28$3>>2] = 1.0000000200408773E+20;
  $arrayidx25$4 = (((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 16|0);
  HEAPF32[$arrayidx25$4>>2] = 1.0000000200408773E+20;
  $arrayidx28$4 = (((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 16|0);
  HEAPF32[$arrayidx28$4>>2] = 1.0000000200408773E+20;
  $arrayidx25$5 = (((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 20|0);
  HEAPF32[$arrayidx25$5>>2] = 1.0000000200408773E+20;
  $arrayidx28$5 = (((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 20|0);
  HEAPF32[$arrayidx28$5>>2] = 1.0000000200408773E+20;
  $arrayidx25$6 = (((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 24|0);
  HEAPF32[$arrayidx25$6>>2] = 1.0000000200408773E+20;
  $arrayidx28$6 = (((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 24|0);
  HEAPF32[$arrayidx28$6>>2] = 1.0000000200408773E+20;
  $arrayidx25$7 = (((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 28|0);
  HEAPF32[$arrayidx25$7>>2] = 1.0000000200408773E+20;
  $arrayidx28$7 = (((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 28|0);
  HEAPF32[$arrayidx28$7>>2] = 1.0000000200408773E+20;
  $arrayidx25$8 = (((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 32|0);
  HEAPF32[$arrayidx25$8>>2] = 1.0000000200408773E+20;
  $arrayidx28$8 = (((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 32|0);
  HEAPF32[$arrayidx28$8>>2] = 1.0000000200408773E+20;
  $arrayidx25$9 = (((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 36|0);
  HEAPF32[$arrayidx25$9>>2] = 1.0000000200408773E+20;
  $arrayidx28$9 = (((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 36|0);
  HEAPF32[$arrayidx28$9>>2] = 1.0000000200408773E+20;
  $arrayidx25$10 = (((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 40|0);
  HEAPF32[$arrayidx25$10>>2] = 1.0000000200408773E+20;
  $arrayidx28$10 = (((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 40|0);
  HEAPF32[$arrayidx28$10>>2] = 1.0000000200408773E+20;
  $arrayidx25$11 = (((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 44|0);
  HEAPF32[$arrayidx25$11>>2] = 1.0000000200408773E+20;
  $arrayidx28$11 = (((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 44|0);
  HEAPF32[$arrayidx28$11>>2] = 1.0000000200408773E+20;
  $arrayidx25$12 = (((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 48|0);
  HEAPF32[$arrayidx25$12>>2] = 1.0000000200408773E+20;
  $arrayidx28$12 = (((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 48|0);
  HEAPF32[$arrayidx28$12>>2] = 1.0000000200408773E+20;
  $arrayidx25$13 = (((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 52|0);
  HEAPF32[$arrayidx25$13>>2] = 1.0000000200408773E+20;
  $arrayidx28$13 = (((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 52|0);
  HEAPF32[$arrayidx28$13>>2] = 1.0000000200408773E+20;
  $arrayidx25$14 = (((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 56|0);
  HEAPF32[$arrayidx25$14>>2] = 1.0000000200408773E+20;
  $arrayidx28$14 = (((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 56|0);
  HEAPF32[$arrayidx28$14>>2] = 1.0000000200408773E+20;
  $arrayidx25$15 = (((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 60|0);
  HEAPF32[$arrayidx25$15>>2] = 1.0000000200408773E+20;
  $arrayidx28$15 = (((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 60|0);
  HEAPF32[$arrayidx28$15>>2] = 1.0000000200408773E+20;
  $arrayidx25$16 = (((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 64|0);
  HEAPF32[$arrayidx25$16>>2] = 1.0000000200408773E+20;
  $arrayidx28$16 = (((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 64|0);
  HEAPF32[$arrayidx28$16>>2] = 1.0000000200408773E+20;
  $arrayidx25$17 = (((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 68|0);
  HEAPF32[$arrayidx25$17>>2] = 1.0000000200408773E+20;
  $arrayidx28$17 = (((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 68|0);
  HEAPF32[$arrayidx28$17>>2] = 1.0000000200408773E+20;
  $arrayidx25$18 = (((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 72|0);
  HEAPF32[$arrayidx25$18>>2] = 1.0000000200408773E+20;
  $arrayidx28$18 = (((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 72|0);
  HEAPF32[$arrayidx28$18>>2] = 1.0000000200408773E+20;
  $arrayidx25$19 = (((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 76|0);
  HEAPF32[$arrayidx25$19>>2] = 1.0000000200408773E+20;
  $arrayidx28$19 = (((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 76|0);
  HEAPF32[$arrayidx28$19>>2] = 1.0000000200408773E+20;
  $arrayidx25$20 = (((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 80|0);
  HEAPF32[$arrayidx25$20>>2] = 1.0000000200408773E+20;
  $arrayidx28$20 = (((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 80|0);
  HEAPF32[$arrayidx28$20>>2] = 1.0000000200408773E+20;
  $arrayidx25$21 = (((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 84|0);
  HEAPF32[$arrayidx25$21>>2] = 1.0000000200408773E+20;
  $arrayidx28$21 = (((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 84|0);
  HEAPF32[$arrayidx28$21>>2] = 1.0000000200408773E+20;
  $arrayidx52 = (((($0)) + 27780|0) + ($i$0390<<2)|0);
  $j$1388 = 0;
  while(1) {
   $arrayidx43 = ((((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 88|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx43>>2] = 1.0000000200408773E+20;
   $arrayidx48 = ((((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 88|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx48>>2] = 1.0000000200408773E+20;
   $arrayidx43$1 = ((((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 100|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx43$1>>2] = 1.0000000200408773E+20;
   $arrayidx48$1 = ((((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 100|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx48$1>>2] = 1.0000000200408773E+20;
   $arrayidx43$2 = ((((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 112|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx43$2>>2] = 1.0000000200408773E+20;
   $arrayidx48$2 = ((((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 112|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx48$2>>2] = 1.0000000200408773E+20;
   $arrayidx43$3 = ((((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 124|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx43$3>>2] = 1.0000000200408773E+20;
   $arrayidx48$3 = ((((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 124|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx48$3>>2] = 1.0000000200408773E+20;
   $arrayidx43$4 = ((((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 136|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx43$4>>2] = 1.0000000200408773E+20;
   $arrayidx48$4 = ((((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 136|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx48$4>>2] = 1.0000000200408773E+20;
   $arrayidx43$5 = ((((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 148|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx43$5>>2] = 1.0000000200408773E+20;
   $arrayidx48$5 = ((((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 148|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx48$5>>2] = 1.0000000200408773E+20;
   $arrayidx43$6 = ((((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 160|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx43$6>>2] = 1.0000000200408773E+20;
   $arrayidx48$6 = ((((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 160|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx48$6>>2] = 1.0000000200408773E+20;
   $arrayidx43$7 = ((((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 172|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx43$7>>2] = 1.0000000200408773E+20;
   $arrayidx48$7 = ((((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 172|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx48$7>>2] = 1.0000000200408773E+20;
   $arrayidx43$8 = ((((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 184|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx43$8>>2] = 1.0000000200408773E+20;
   $arrayidx48$8 = ((((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 184|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx48$8>>2] = 1.0000000200408773E+20;
   $arrayidx43$9 = ((((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 196|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx43$9>>2] = 1.0000000200408773E+20;
   $arrayidx48$9 = ((((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 196|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx48$9>>2] = 1.0000000200408773E+20;
   $arrayidx43$10 = ((((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 208|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx43$10>>2] = 1.0000000200408773E+20;
   $arrayidx48$10 = ((((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 208|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx48$10>>2] = 1.0000000200408773E+20;
   $arrayidx43$11 = ((((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 220|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx43$11>>2] = 1.0000000200408773E+20;
   $arrayidx48$11 = ((((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 220|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx48$11>>2] = 1.0000000200408773E+20;
   $arrayidx43$12 = ((((((($0)) + 26636|0) + (($i$0390*244)|0)|0)) + 232|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx43$12>>2] = 1.0000000200408773E+20;
   $arrayidx48$12 = ((((((($0)) + 25660|0) + (($i$0390*244)|0)|0)) + 232|0) + ($j$1388<<2)|0);
   HEAPF32[$arrayidx48$12>>2] = 1.0000000200408773E+20;
   HEAP32[$arrayidx52>>2] = 0;
   $inc54 = (($j$1388) + 1)|0;
   $exitcond397 = ($inc54|0)==(3);
   if ($exitcond397) {
    break;
   } else {
    $j$1388 = $inc54;
   }
  }
  $arrayidx61 = (((($0)) + 27636|0) + (($i$0390*36)|0)|0);
  HEAPF32[$arrayidx61>>2] = 10.0;
  $arrayidx61$1 = (((((($0)) + 27636|0) + (($i$0390*36)|0)|0)) + 4|0);
  HEAPF32[$arrayidx61$1>>2] = 10.0;
  $arrayidx61$2 = (((((($0)) + 27636|0) + (($i$0390*36)|0)|0)) + 8|0);
  HEAPF32[$arrayidx61$2>>2] = 10.0;
  $arrayidx61$3 = (((((($0)) + 27636|0) + (($i$0390*36)|0)|0)) + 12|0);
  HEAPF32[$arrayidx61$3>>2] = 10.0;
  $arrayidx61$4 = (((((($0)) + 27636|0) + (($i$0390*36)|0)|0)) + 16|0);
  HEAPF32[$arrayidx61$4>>2] = 10.0;
  $arrayidx61$5 = (((((($0)) + 27636|0) + (($i$0390*36)|0)|0)) + 20|0);
  HEAPF32[$arrayidx61$5>>2] = 10.0;
  $arrayidx61$6 = (((((($0)) + 27636|0) + (($i$0390*36)|0)|0)) + 24|0);
  HEAPF32[$arrayidx61$6>>2] = 10.0;
  $arrayidx61$7 = (((((($0)) + 27636|0) + (($i$0390*36)|0)|0)) + 28|0);
  HEAPF32[$arrayidx61$7>>2] = 10.0;
  $arrayidx61$8 = (((((($0)) + 27636|0) + (($i$0390*36)|0)|0)) + 32|0);
  HEAPF32[$arrayidx61$8>>2] = 10.0;
  $inc66 = (($i$0390) + 1)|0;
  $exitcond399 = ($inc66|0)==(4);
  if ($exitcond399) {
   break;
  } else {
   $i$0390 = $inc66;
  }
 }
 $arrayidx68 = ((($0)) + 27616|0);
 HEAPF32[$arrayidx68>>2] = 0.0;
 $arrayidx70 = ((($0)) + 27612|0);
 HEAPF32[$arrayidx70>>2] = 0.0;
 $arraydecay73 = ((($0)) + 21360|0);
 _init_numline($call,$conv,1024,576,22,$arraydecay73);
 $npart$i = ((($call)) + 2148|0);
 $5 = HEAP32[$npart$i>>2]|0;
 $div$i = $conv * 9.765625E-4;
 $cmp24$i = ($5|0)>(0);
 if ($cmp24$i) {
  $conv11$i = $div$i;
  $j$025$i = 0;$k$026$i = 0;
  while(1) {
   $arrayidx$i = (((($call)) + 1716|0) + ($k$026$i<<2)|0);
   $6 = HEAP32[$arrayidx$i>>2]|0;
   $conv2$i = (+($j$025$i|0));
   $mul$i = $conv2$i * $div$i;
   $call$i = (+_freq2bark($mul$i));
   $add$i = (($6) + ($j$025$i))|0;
   $sub$i = (($add$i) + -1)|0;
   $conv3$i = (+($sub$i|0));
   $mul4$i = $conv3$i * $div$i;
   $call5$i = (+_freq2bark($mul4$i));
   $add6$i = $call5$i + $call$i;
   $conv9$i = $add6$i * 0.5;
   $arrayidx10$i = (($bval) + ($k$026$i<<2)|0);
   HEAPF32[$arrayidx10$i>>2] = $conv9$i;
   $conv12$i = (+($j$025$i|0));
   $sub13$i = $conv12$i + -0.5;
   $mul14$i = $sub13$i * $conv11$i;
   $conv15$i = $mul14$i;
   $call16$i = (+_freq2bark($conv15$i));
   $conv19$i = (+($add$i|0));
   $sub20$i = $conv19$i + -0.5;
   $mul21$i = $sub20$i * $conv11$i;
   $conv22$i = $mul21$i;
   $call23$i = (+_freq2bark($conv22$i));
   $sub24$i = $call23$i - $call16$i;
   $arrayidx25$i = (($bval_width) + ($k$026$i<<2)|0);
   HEAPF32[$arrayidx25$i>>2] = $sub24$i;
   $inc$i = (($k$026$i) + 1)|0;
   $exitcond$i = ($inc$i|0)==($5|0);
   if ($exitcond$i) {
    break;
   } else {
    $j$025$i = $add$i;$k$026$i = $inc$i;
   }
  }
  $$pre = HEAP32[$npart$i>>2]|0;
  $cmp79381 = ($$pre|0)>(0);
  if ($cmp79381) {
   $i$1382 = 0;
   while(1) {
    $arrayidx99 = (($norm) + ($i$1382<<2)|0);
    HEAPF32[$arrayidx99>>2] = 1.0;
    $inc101 = (($i$1382) + 1)|0;
    $cmp79 = ($inc101|0)<($$pre|0);
    if ($cmp79) {
     $i$1382 = $inc101;
    } else {
     $7 = $$pre;
     break;
    }
   }
  } else {
   $7 = $$pre;
  }
 } else {
  $7 = $5;
 }
 $s3 = ((($call)) + 2156|0);
 $s3ind = ((($call)) + 1204|0);
 $call111 = (_init_s3_values($s3,$s3ind,$7,$bval,$bval_width,$norm)|0);
 $tobool = ($call111|0)==(0);
 if (!($tobool)) {
  $retval$0 = $call111;
  STACKTOP = sp;return ($retval$0|0);
 }
 $8 = HEAP32[$npart$i>>2]|0;
 $cmp117378 = ($8|0)>(0);
 if ($cmp117378) {
  $numlines = ((($call)) + 1716|0);
  $ATH = ((($0)) + 85796|0);
  $conv163 = $sub;
  $minval183 = ((($call)) + 256|0);
  $i$2380 = 0;$j$3379 = 0;
  while(1) {
   $arrayidx122 = (($numlines) + ($i$2380<<2)|0);
   $9 = HEAP32[$arrayidx122>>2]|0;
   $cmp123371 = ($9|0)>(0);
   if ($cmp123371) {
    $j$4374 = $j$3379;$k$0372 = 0;$x$0373 = 9.9999999999999995E+36;
    while(1) {
     $conv126 = (+($j$4374|0));
     $mul127 = $conv126 * $conv;
     $conv128 = $mul127;
     $div129 = $conv128 * 9.7656250000000002E-7;
     $conv130 = $div129;
     $mul131 = $conv130 * 1000.0;
     $call132 = (+_ATHformula($cfg1,$mul131));
     $sub133 = $call132 + -20.0;
     $conv134 = $sub133;
     $mul135 = $conv134 * 0.10000000000000001;
     $10 = (+Math_pow(10.0,(+$mul135)));
     $conv136 = $10;
     $11 = HEAP32[$arrayidx122>>2]|0;
     $conv140 = (+($11|0));
     $mul141 = $conv140 * $conv136;
     $conv142 = $mul141;
     $cmp143 = $x$0373 > $conv142;
     $x$1 = $cmp143 ? $conv142 : $x$0373;
     $inc149 = (($k$0372) + 1)|0;
     $inc150 = (($j$4374) + 1)|0;
     $cmp123 = ($inc149|0)<($11|0);
     if ($cmp123) {
      $j$4374 = $inc150;$k$0372 = $inc149;$x$0373 = $x$1;
     } else {
      $16 = $11;$j$4$lcssa = $inc150;$x$0$lcssa = $x$1;
      break;
     }
    }
   } else {
    $16 = $9;$j$4$lcssa = $j$3379;$x$0$lcssa = 9.9999999999999995E+36;
   }
   $conv152 = $x$0$lcssa;
   $12 = HEAP32[$ATH>>2]|0;
   $arrayidx153 = (((($12)) + 212|0) + ($i$2380<<2)|0);
   HEAPF32[$arrayidx153>>2] = $conv152;
   $arrayidx154 = (($bval) + ($i$2380<<2)|0);
   $13 = +HEAPF32[$arrayidx154>>2];
   $div155 = $13 * 0.10000000149011612;
   $conv156 = $div155;
   $sub157 = $conv156 + -1.0;
   $mul158 = $sub157 * 20.0;
   $cmp159 = $mul158 > 6.0;
   $x$2 = $cmp159 ? 30.0 : $mul158;
   $cmp164 = $x$2 < $conv163;
   $x$3 = $cmp164 ? $conv163 : $x$2;
   $14 = HEAP32[$samplerate_out>>2]|0;
   $cmp170 = ($14|0)<(44000);
   $x$3$op = $x$3 + -8.0;
   $x$3$op$op = $x$3$op * 0.10000000000000001;
   $div175 = $cmp170 ? 2.2000000000000002 : $x$3$op$op;
   $15 = (+Math_pow(10.0,(+$div175)));
   $conv179 = (+($16|0));
   $mul180 = $conv179 * $15;
   $conv181 = $mul180;
   $arrayidx184 = (($minval183) + ($i$2380<<2)|0);
   HEAPF32[$arrayidx184>>2] = $conv181;
   $inc186 = (($i$2380) + 1)|0;
   $17 = HEAP32[$npart$i>>2]|0;
   $cmp117 = ($inc186|0)<($17|0);
   if ($cmp117) {
    $i$2380 = $inc186;$j$3379 = $j$4$lcssa;
   } else {
    break;
   }
  }
 }
 $s188 = ((($call)) + 2160|0);
 $arraydecay191 = ((($0)) + 21452|0);
 _init_numline($s188,$conv,256,192,13,$arraydecay191);
 $npart$i291 = ((($call)) + 4308|0);
 $18 = HEAP32[$npart$i291>>2]|0;
 $div$i292 = $conv * 0.00390625;
 $cmp24$i293 = ($18|0)>(0);
 if ($cmp24$i293) {
  $conv11$i294 = $div$i292;
  $j$025$i297 = 0;$k$026$i296 = 0;
  while(1) {
   $arrayidx$i298 = (((($s188)) + 1716|0) + ($k$026$i296<<2)|0);
   $19 = HEAP32[$arrayidx$i298>>2]|0;
   $conv2$i299 = (+($j$025$i297|0));
   $mul$i300 = $conv2$i299 * $div$i292;
   $call$i301 = (+_freq2bark($mul$i300));
   $add$i302 = (($19) + ($j$025$i297))|0;
   $sub$i303 = (($add$i302) + -1)|0;
   $conv3$i304 = (+($sub$i303|0));
   $mul4$i305 = $conv3$i304 * $div$i292;
   $call5$i306 = (+_freq2bark($mul4$i305));
   $add6$i307 = $call5$i306 + $call$i301;
   $conv9$i308 = $add6$i307 * 0.5;
   $arrayidx10$i309 = (($bval) + ($k$026$i296<<2)|0);
   HEAPF32[$arrayidx10$i309>>2] = $conv9$i308;
   $conv12$i310 = (+($j$025$i297|0));
   $sub13$i311 = $conv12$i310 + -0.5;
   $mul14$i312 = $sub13$i311 * $conv11$i294;
   $conv15$i313 = $mul14$i312;
   $call16$i314 = (+_freq2bark($conv15$i313));
   $conv19$i315 = (+($add$i302|0));
   $sub20$i316 = $conv19$i315 + -0.5;
   $mul21$i317 = $sub20$i316 * $conv11$i294;
   $conv22$i318 = $mul21$i317;
   $call23$i319 = (+_freq2bark($conv22$i318));
   $sub24$i320 = $call23$i319 - $call16$i314;
   $arrayidx25$i321 = (($bval_width) + ($k$026$i296<<2)|0);
   HEAPF32[$arrayidx25$i321>>2] = $sub24$i320;
   $inc$i322 = (($k$026$i296) + 1)|0;
   $exitcond$i323 = ($inc$i322|0)==($18|0);
   if ($exitcond$i323) {
    break;
   } else {
    $j$025$i297 = $add$i302;$k$026$i296 = $inc$i322;
   }
  }
  $$pre400 = HEAP32[$npart$i291>>2]|0;
  $cmp198366 = ($$pre400|0)>(0);
  if ($cmp198366) {
   $numlines226 = ((($call)) + 3876|0);
   $ATH260 = ((($0)) + 85796|0);
   $conv291 = $sub;
   $minval311 = ((($call)) + 2416|0);
   $i$3368 = 0;$j$5367 = 0;
   while(1) {
    $arrayidx204 = (($bval) + ($i$3368<<2)|0);
    $20 = +HEAPF32[$arrayidx204>>2];
    $cmp205 = !($20 >= 13.0);
    $sub209 = $20 + -13.0;
    $div212 = $sub209 * 0.40909090638160706;
    $sub214 = 24.0 - $20;
    $div217 = $sub214 * -0.75;
    $add218326 = $div217 - $div212;
    $conv219 = $add218326;
    $conv219$op = $conv219 * 0.10000000000000001;
    $div221 = $cmp205 ? -0.82500000000000007 : $conv219$op;
    $21 = (+Math_pow(10.0,(+$div221)));
    $conv222 = $21;
    $arrayidx223 = (($norm) + ($i$3368<<2)|0);
    HEAPF32[$arrayidx223>>2] = $conv222;
    $arrayidx227 = (($numlines226) + ($i$3368<<2)|0);
    $22 = HEAP32[$arrayidx227>>2]|0;
    $cmp228359 = ($22|0)>(0);
    if ($cmp228359) {
     $j$6362 = $j$5367;$k$1360 = 0;$x201$0361 = 9.9999999999999995E+36;
     while(1) {
      $conv232 = (+($j$6362|0));
      $mul233 = $conv232 * $conv;
      $conv234 = $mul233;
      $div235 = $conv234 * 3.9062500000000001E-6;
      $conv236 = $div235;
      $mul238 = $conv236 * 1000.0;
      $call239 = (+_ATHformula($cfg1,$mul238));
      $sub240 = $call239 + -20.0;
      $conv241 = $sub240;
      $mul242 = $conv241 * 0.10000000000000001;
      $23 = (+Math_pow(10.0,(+$mul242)));
      $conv243 = $23;
      $24 = HEAP32[$arrayidx227>>2]|0;
      $conv247 = (+($24|0));
      $mul248 = $conv247 * $conv243;
      $conv249 = $mul248;
      $cmp250 = $x201$0361 > $conv249;
      $x201$1 = $cmp250 ? $conv249 : $x201$0361;
      $inc256 = (($k$1360) + 1)|0;
      $inc257 = (($j$6362) + 1)|0;
      $cmp228 = ($inc256|0)<($24|0);
      if ($cmp228) {
       $j$6362 = $inc257;$k$1360 = $inc256;$x201$0361 = $x201$1;
      } else {
       $28 = $24;$j$6$lcssa = $inc257;$x201$0$lcssa = $x201$1;
       break;
      }
     }
    } else {
     $28 = $22;$j$6$lcssa = $j$5367;$x201$0$lcssa = 9.9999999999999995E+36;
    }
    $conv259 = $x201$0$lcssa;
    $25 = HEAP32[$ATH260>>2]|0;
    $arrayidx261 = (((($25)) + 468|0) + ($i$3368<<2)|0);
    HEAPF32[$arrayidx261>>2] = $conv259;
    $div263 = $20 * 0.083333335816860198;
    $conv264 = $div263;
    $sub265 = $conv264 + -1.0;
    $mul266 = $sub265 * 7.0;
    $cmp268 = $20 > 12.0;
    if ($cmp268) {
     $add271 = $mul266 + 1.0;
     $call272 = (+Math_log((+$add271)));
     $mul273 = $call272 * 3.1000000000000001;
     $add274 = $mul273 + 1.0;
     $mul275 = $add274 * $mul266;
     $x201$2 = $mul275;
    } else {
     $x201$2 = $mul266;
    }
    $cmp278 = $20 < 12.0;
    if ($cmp278) {
     $sub281 = 1.0 - $x201$2;
     $call282 = (+Math_log((+$sub281)));
     $mul283 = $call282 * 2.2999999999999998;
     $add284 = $mul283 + 1.0;
     $mul285 = $add284 * $x201$2;
     $x201$3 = $mul285;
    } else {
     $x201$3 = $x201$2;
    }
    $cmp287 = $x201$3 > 6.0;
    $x201$4 = $cmp287 ? 30.0 : $x201$3;
    $cmp292 = $x201$4 < $conv291;
    $x201$5 = $cmp292 ? $conv291 : $x201$4;
    $26 = HEAP32[$samplerate_out>>2]|0;
    $cmp298 = ($26|0)<(44000);
    $x201$5$op = $x201$5 + -8.0;
    $x201$5$op$op = $x201$5$op * 0.10000000000000001;
    $div303 = $cmp298 ? 2.2000000000000002 : $x201$5$op$op;
    $27 = (+Math_pow(10.0,(+$div303)));
    $conv307 = (+($28|0));
    $mul308 = $conv307 * $27;
    $conv309 = $mul308;
    $arrayidx312 = (($minval311) + ($i$3368<<2)|0);
    HEAPF32[$arrayidx312>>2] = $conv309;
    $inc314 = (($i$3368) + 1)|0;
    $29 = HEAP32[$npart$i291>>2]|0;
    $cmp198 = ($inc314|0)<($29|0);
    if ($cmp198) {
     $i$3368 = $inc314;$j$5367 = $j$6$lcssa;
    } else {
     $$lcssa = $29;
     break;
    }
   }
  } else {
   $$lcssa = $$pre400;
  }
 } else {
  $$lcssa = $18;
 }
 $s3317 = ((($call)) + 4316|0);
 $s3ind319 = ((($call)) + 3364|0);
 $call326 = (_init_s3_values($s3317,$s3ind319,$$lcssa,$bval,$bval_width,$norm)|0);
 $tobool327 = ($call326|0)==(0);
 if (!($tobool327)) {
  $retval$0 = $call326;
  STACKTOP = sp;return ($retval$0|0);
 }
 HEAPF32[6079] = 3.6517412662506104;
 HEAPF32[6080] = 31.622776031494141;
 _init_fft($0);
 $conv330 = $conv;
 $div333 = -44209.633785485676 / $conv330;
 $call334 = (+Math_exp((+$div333)));
 $conv335 = $call334;
 $decay = ((($call)) + 6496|0);
 HEAPF32[$decay>>2] = $conv335;
 $use_safe_joint_stereo = ((($0)) + 96|0);
 $30 = HEAP32[$use_safe_joint_stereo>>2]|0;
 $tobool336 = ($30|0)!=(0);
 $$ = $tobool336 ? 1.0 : 3.5;
 $msfix339 = ((($0)) + 192|0);
 $31 = +HEAPF32[$msfix339>>2];
 $cmp342 = ($31 != $31) | (0.0 != 0.0) |($31 == 0.0);
 $msfix$0 = $cmp342 ? $$ : $31;
 HEAPF32[$msfix339>>2] = $msfix$0;
 $32 = HEAP32[$npart$i>>2]|0;
 $cmp351357 = ($32|0)>(0);
 if ($cmp351357) {
  $sub360 = (($32) + -1)|0;
  $b$0358 = 0;
  while(1) {
   $arrayidx357 = (((($s3ind) + ($b$0358<<3)|0)) + 4|0);
   $33 = HEAP32[$arrayidx357>>2]|0;
   $cmp361 = ($33|0)<($32|0);
   if (!($cmp361)) {
    HEAP32[$arrayidx357>>2] = $sub360;
   }
   $inc373 = (($b$0358) + 1)|0;
   $cmp351 = ($inc373|0)<($32|0);
   if ($cmp351) {
    $b$0358 = $inc373;
   } else {
    break;
   }
  }
 }
 $mode_gr = ((($0)) + 76|0);
 $34 = HEAP32[$mode_gr>>2]|0;
 $conv375 = (+($34|0));
 $mul376 = $conv375 * 576.0;
 $div378 = $mul376 / $conv330;
 $mul379 = $div378 * -1.2;
 $35 = (+Math_pow(10.0,(+$mul379)));
 $conv380 = $35;
 $ATH381 = ((($0)) + 85796|0);
 $36 = HEAP32[$ATH381>>2]|0;
 $decay382 = ((($36)) + 16|0);
 HEAPF32[$decay382>>2] = $conv380;
 $adjust_factor = ((($36)) + 8|0);
 HEAPF32[$adjust_factor>>2] = 0.0099999997764825821;
 $adjust_limit = ((($36)) + 12|0);
 HEAPF32[$adjust_limit>>2] = 1.0;
 $ATHtype = ((($0)) + 208|0);
 $37 = HEAP32[$ATHtype>>2]|0;
 $cmp385 = ($37|0)==(-1);
 if (!($cmp385)) {
  $42 = HEAP32[$samplerate_out>>2]|0;
  $conv390 = (+($42|0));
  $div391 = $conv390 * 9.765625E-4;
  $eql_balance$0355 = 0.0;$freq388$0354 = 0.0;$i$4356 = 0;
  while(1) {
   $add396 = $freq388$0354 + $div391;
   $call397 = (+_ATHformula($cfg1,$add396));
   $div398 = $call397 * 0.10000000149011612;
   $conv399 = $div398;
   $43 = (+Math_pow(10.0,(+$conv399)));
   $div400 = 1.0 / $43;
   $conv401 = $div400;
   $44 = HEAP32[$ATH381>>2]|0;
   $arrayidx403 = (((($44)) + 724|0) + ($i$4356<<2)|0);
   HEAPF32[$arrayidx403>>2] = $conv401;
   $add407 = $conv401 + $eql_balance$0355;
   $inc409 = (($i$4356) + 1)|0;
   $exitcond393 = ($inc409|0)==(512);
   if ($exitcond393) {
    break;
   } else {
    $eql_balance$0355 = $add407;$freq388$0354 = $add396;$i$4356 = $inc409;
   }
  }
  $conv413 = 1.0 / $add407;
  $dec353 = 511;
  while(1) {
   $arrayidx420 = (((($44)) + 724|0) + ($dec353<<2)|0);
   $45 = +HEAPF32[$arrayidx420>>2];
   $mul421 = $45 * $conv413;
   HEAPF32[$arrayidx420>>2] = $mul421;
   $dec = (($dec353) + -1)|0;
   $cmp415 = ($dec353|0)>(0);
   if ($cmp415) {
    $dec353 = $dec;
   } else {
    break;
   }
  }
 }
 $38 = HEAP32[$npart$i291>>2]|0;
 $cmp427350 = ($38|0)>(0);
 $attackthre = ((($gfp)) + 264|0);
 $39 = +HEAPF32[$attackthre>>2];
 $attackthre_s = ((($gfp)) + 268|0);
 $40 = +HEAPF32[$attackthre_s>>2];
 $cmp465 = $39 < 0.0;
 $x464$0 = $cmp465 ? 4.4000000953674316 : $39;
 $cmp469 = $40 < 0.0;
 $y$0 = $cmp469 ? 25.0 : $40;
 $attack_threshold = ((($call)) + 6480|0);
 $arrayidx473 = ((($call)) + 6488|0);
 HEAPF32[$arrayidx473>>2] = $x464$0;
 $arrayidx475 = ((($call)) + 6484|0);
 HEAPF32[$arrayidx475>>2] = $x464$0;
 HEAPF32[$attack_threshold>>2] = $x464$0;
 $arrayidx479 = ((($call)) + 6492|0);
 HEAPF32[$arrayidx479>>2] = $y$0;
 $VBR_q = ((($gfp)) + 164|0);
 $41 = HEAP32[$VBR_q>>2]|0;
 $cmp480 = ($41|0)<(4);
 if ($cmp480) {
  $sk_s$0 = -0.74000000953674316;
 } else {
  $arrayidx484 = (6056 + ($41<<2)|0);
  $46 = +HEAPF32[$arrayidx484>>2];
  $VBR_q_frac = ((($gfp)) + 160|0);
  $47 = +HEAPF32[$VBR_q_frac>>2];
  $add488 = (($41) + 1)|0;
  $arrayidx489 = (6056 + ($add488<<2)|0);
  $48 = +HEAPF32[$arrayidx489>>2];
  $sub490 = $46 - $48;
  $mul491 = $sub490 * $47;
  $add492 = $mul491 + $46;
  $phitmp = $add492 * 0.10000000149011612;
  $sk_s$0 = $phitmp;
 }
 if ($cmp427350) {
  $conv506 = (+($38|0));
  $b$3337 = 0;
  while(1) {
   $sub502 = (($38) - ($b$3337))|0;
   $conv503 = (+($sub502|0));
   $div507 = $conv503 / $conv506;
   $mul509 = $sk_s$0 * $div507;
   $49 = (+Math_pow(10.0,(+$mul509)));
   $arrayidx511 = (($s188) + ($b$3337<<2)|0);
   HEAPF32[$arrayidx511>>2] = $49;
   $inc513 = (($b$3337) + 1)|0;
   $cmp497 = ($38|0)>($inc513|0);
   if ($cmp497) {
    $b$3337 = $inc513;
   } else {
    break;
   }
  }
  $cmp516334 = ($inc513|0)<(64);
  if ($cmp516334) {
   $b$3$lcssa404 = $inc513;
   label = 47;
  }
 } else {
  $b$3$lcssa404 = 0;
  label = 47;
 }
 if ((label|0) == 47) {
  $b$4335 = $b$3$lcssa404;
  while(1) {
   $arrayidx521 = (($s188) + ($b$4335<<2)|0);
   HEAPF32[$arrayidx521>>2] = 1.0;
   $inc523 = (($b$4335) + 1)|0;
   $exitcond392 = ($inc523|0)==(64);
   if ($exitcond392) {
    break;
   } else {
    $b$4335 = $inc523;
   }
  }
 }
 $50 = HEAP32[$npart$i>>2]|0;
 $cmp528332 = ($50|0)>(0);
 if ($cmp528332) {
  $conv538 = (+($50|0));
  $b$5333 = 0;
  while(1) {
   $sub534 = (($50) - ($b$5333))|0;
   $conv535 = (+($sub534|0));
   $div539 = $conv535 / $conv538;
   $mul541 = $sk_s$0 * $div539;
   $51 = (+Math_pow(10.0,(+$mul541)));
   $arrayidx544 = (($call) + ($b$5333<<2)|0);
   HEAPF32[$arrayidx544>>2] = $51;
   $inc546 = (($b$5333) + 1)|0;
   $cmp528 = ($50|0)>($inc546|0);
   if ($cmp528) {
    $b$5333 = $inc546;
   } else {
    break;
   }
  }
  $cmp549330 = ($inc546|0)<(64);
  if ($cmp549330) {
   $b$5$lcssa406 = $inc546;
   label = 53;
  }
 } else {
  $b$5$lcssa406 = 0;
  label = 53;
 }
 if ((label|0) == 53) {
  $b$6331 = $b$5$lcssa406;
  while(1) {
   $arrayidx554 = (($call) + ($b$6331<<2)|0);
   HEAPF32[$arrayidx554>>2] = 1.0;
   $inc556 = (($b$6331) + 1)|0;
   $exitcond = ($inc556|0)==(64);
   if ($exitcond) {
    break;
   } else {
    $b$6331 = $inc556;
   }
  }
 }
 $l_to_s = ((($call)) + 4320|0);
 _memcpy(($l_to_s|0),($call|0),2160)|0;
 _init_numline($l_to_s,$conv,1024,192,13,$arraydecay191);
 $retval$0 = 0;
 STACKTOP = sp;return ($retval$0|0);
}
function _init_numline($gd,$sfreq,$fft_size,$mdct_size,$sbmax,$scalepos) {
 $gd = $gd|0;
 $sfreq = +$sfreq;
 $fft_size = $fft_size|0;
 $mdct_size = $mdct_size|0;
 $sbmax = $sbmax|0;
 $scalepos = $scalepos|0;
 var $$conv88 = 0, $0 = 0, $1 = 0.0, $10 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0.0, $add = 0, $add109 = 0, $add118 = 0, $add56 = 0, $add62 = 0, $add80 = 0, $add86 = 0.0, $add97 = 0.0;
 var $arrayidx = 0, $arrayidx106 = 0, $arrayidx107 = 0, $arrayidx111 = 0, $arrayidx113 = 0, $arrayidx116 = 0, $arrayidx119 = 0, $arrayidx131 = 0, $arrayidx136 = 0, $arrayidx24 = 0, $arrayidx29 = 0, $arrayidx33 = 0, $arrayidx46 = 0, $arrayidx54 = 0, $arrayidx61 = 0, $arrayidx71 = 0, $arrayidx79 = 0, $arrayidx81 = 0, $b_frq = 0, $bo_w$0 = 0.0;
 var $call = 0.0, $call$i = 0.0, $call$i95 = 0.0, $call15 = 0.0, $call3$i = 0.0, $call3$i100 = 0.0, $call87 = 0.0, $call98 = 0.0, $cmp = 0, $cmp$i = 0, $cmp$i97 = 0, $cmp101 = 0, $cmp123 = 0, $cmp126 = 0, $cmp17 = 0, $cmp20 = 0, $cmp25 = 0, $cmp30112 = 0, $cmp35 = 0, $cmp49 = 0;
 var $cmp49109 = 0, $cmp67107 = 0, $cmp76105 = 0, $cond$i = 0.0, $cond$i98 = 0.0, $conv = 0.0, $conv1 = 0.0, $conv1$i = 0.0, $conv1$i96 = 0.0, $conv114 = 0.0, $conv13 = 0.0, $conv132 = 0.0, $conv16 = 0.0, $conv27 = 0.0, $conv44 = 0.0, $conv57 = 0.0, $conv6$i = 0.0, $conv6$i104 = 0.0, $conv8 = 0.0, $conv82 = 0.0;
 var $conv83 = 0.0, $conv88 = 0, $conv94 = 0.0, $conv99 = 0, $div = 0.0, $div100$conv99 = 0, $div110 = 0, $div122 = 0.0, $div19 = 0, $div28 = 0.0, $div28$ = 0.0, $div34$j$1$le = 0, $div4 = 0.0, $div55 = 0, $div6 = 0.0, $exitcond = 0, $exitcond117 = 0, $exitcond118 = 0, $i$0116 = 0, $i$2 = 0;
 var $i$3111 = 0, $i$4108 = 0, $inc = 0, $inc32 = 0, $inc42 = 0, $inc64 = 0, $inc73 = 0, $j$0115 = 0, $j$1$lcssa = 0, $j$1113 = 0, $j$4110 = 0, $j2$0 = 0, $mul = 0.0, $mul$i = 0.0, $mul$i99 = 0.0, $mul115 = 0.0, $mul133 = 0.0, $mul14 = 0.0, $mul4$i = 0.0, $mul4$i102 = 0.0;
 var $mul45 = 0.0, $mul58 = 0.0, $mul85 = 0.0, $mul9 = 0.0, $mul96 = 0.0, $n_sb = 0, $npart = 0, $or$cond = 0, $partition = 0, $sfb$0106 = 0, $sub = 0.0, $sub$i = 0.0, $sub$i101 = 0.0, $sub117 = 0.0, $sub121 = 0.0, $sub23 = 0, $sub5$i = 0.0, $sub5$i103 = 0.0, $sub84 = 0.0, $sub95 = 0.0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2320|0;
 $b_frq = sp + 2052|0;
 $partition = sp;
 $conv = (+($mdct_size|0));
 $mul = $conv * 2.0;
 $div = $sfreq / $mul;
 $conv1 = (+($fft_size|0));
 $div4 = $conv1 / $mul;
 _memset(($partition|0),0,2052)|0;
 $div6 = $sfreq / $conv1;
 $div19 = (($fft_size|0) / 2)&-1;
 $i$0116 = 0;$j$0115 = 0;
 while(1) {
  $conv8 = (+($j$0115|0));
  $mul9 = $conv8 * $div6;
  $call = (+_freq2bark($mul9));
  $arrayidx = (($b_frq) + ($i$0116<<2)|0);
  HEAPF32[$arrayidx>>2] = $mul9;
  $j2$0 = $j$0115;
  while(1) {
   $conv13 = (+($j2$0|0));
   $mul14 = $conv13 * $div6;
   $call15 = (+_freq2bark($mul14));
   $sub = $call15 - $call;
   $conv16 = $sub;
   $cmp17 = !($conv16 < 0.34000000000000002);
   $cmp20 = ($j2$0|0)>($div19|0);
   $or$cond = $cmp20 | $cmp17;
   $inc = (($j2$0) + 1)|0;
   if ($or$cond) {
    break;
   } else {
    $j2$0 = $inc;
   }
  }
  $sub23 = (($j2$0) - ($j$0115))|0;
  $arrayidx24 = (((($gd)) + 1716|0) + ($i$0116<<2)|0);
  HEAP32[$arrayidx24>>2] = $sub23;
  $cmp25 = ($sub23|0)>(0);
  $conv27 = (+($sub23|0));
  $div28 = 1.0 / $conv27;
  $div28$ = $cmp25 ? $div28 : 0.0;
  $arrayidx29 = (((($gd)) + 512|0) + ($i$0116<<2)|0);
  HEAPF32[$arrayidx29>>2] = $div28$;
  $add = (($i$0116) + 1)|0;
  $cmp30112 = ($j2$0|0)>($j$0115|0);
  if ($cmp30112) {
   $j$1113 = $j$0115;
   while(1) {
    $inc32 = (($j$1113) + 1)|0;
    $arrayidx33 = (($partition) + ($j$1113<<2)|0);
    HEAP32[$arrayidx33>>2] = $i$0116;
    $exitcond118 = ($inc32|0)==($j2$0|0);
    if ($exitcond118) {
     $j$1$lcssa = $j2$0;
     break;
    } else {
     $j$1113 = $inc32;
    }
   }
  } else {
   $j$1$lcssa = $j$0115;
  }
  $cmp35 = ($j$1$lcssa|0)>($div19|0);
  if ($cmp35) {
   $i$2 = $add;
   break;
  }
  $inc42 = (($i$0116) + 1)|0;
  $cmp = ($inc42|0)<(64);
  if ($cmp) {
   $i$0116 = $inc42;$j$0115 = $j$1$lcssa;
  } else {
   $i$2 = $inc42;
   break;
  }
 }
 $div34$j$1$le = $cmp35 ? $div19 : $j$1$lcssa;
 $conv44 = (+($div34$j$1$le|0));
 $mul45 = $conv44 * $div6;
 $arrayidx46 = (($b_frq) + ($i$2<<2)|0);
 HEAPF32[$arrayidx46>>2] = $mul45;
 $n_sb = ((($gd)) + 2152|0);
 HEAP32[$n_sb>>2] = $sbmax;
 $npart = ((($gd)) + 2148|0);
 HEAP32[$npart>>2] = $add;
 $cmp49109 = ($i$0116|0)>(-1);
 if ($cmp49109) {
  $i$3111 = 0;$j$4110 = 0;
  while(1) {
   $arrayidx54 = (((($gd)) + 1716|0) + ($i$3111<<2)|0);
   $0 = HEAP32[$arrayidx54>>2]|0;
   $div55 = (($0|0) / 2)&-1;
   $add56 = (($div55) + ($j$4110))|0;
   $conv57 = (+($add56|0));
   $mul58 = $conv57 * $div6;
   $call$i = (+_freq2bark($mul58));
   $conv1$i = $call$i;
   $cmp$i = $conv1$i < 15.5;
   $cond$i = $cmp$i ? $conv1$i : 15.5;
   $mul$i = $cond$i * 0.2026833970057931;
   $call3$i = (+Math_cos((+$mul$i)));
   $sub$i = 1.0 - $call3$i;
   $mul4$i = $sub$i * 1.25;
   $sub5$i = $mul4$i + -2.5;
   $1 = (+Math_pow(10.0,(+$sub5$i)));
   $conv6$i = $1;
   $arrayidx61 = (((($gd)) + 768|0) + ($i$3111<<2)|0);
   HEAPF32[$arrayidx61>>2] = $conv6$i;
   $add62 = (($0) + ($j$4110))|0;
   $inc64 = (($i$3111) + 1)|0;
   $2 = HEAP32[$npart>>2]|0;
   $cmp49 = ($inc64|0)<($2|0);
   if ($cmp49) {
    $i$3111 = $inc64;$j$4110 = $add62;
   } else {
    break;
   }
  }
  $cmp67107 = ($inc64|0)<(64);
  if ($cmp67107) {
   $i$4108 = $inc64;
   label = 13;
  }
 } else {
  $i$4108 = 0;
  label = 13;
 }
 if ((label|0) == 13) {
  while(1) {
   label = 0;
   $arrayidx71 = (((($gd)) + 768|0) + ($i$4108<<2)|0);
   HEAPF32[$arrayidx71>>2] = 1.0;
   $inc73 = (($i$4108) + 1)|0;
   $exitcond117 = ($inc73|0)==(64);
   if ($exitcond117) {
    break;
   } else {
    $i$4108 = $inc73;
    label = 13;
   }
  }
 }
 $cmp76105 = ($sbmax|0)>(0);
 if (!($cmp76105)) {
  STACKTOP = sp;return;
 }
 $conv82 = $div4;
 $sfb$0106 = 0;
 while(1) {
  $arrayidx79 = (($scalepos) + ($sfb$0106<<2)|0);
  $3 = HEAP32[$arrayidx79>>2]|0;
  $add80 = (($sfb$0106) + 1)|0;
  $arrayidx81 = (($scalepos) + ($add80<<2)|0);
  $4 = HEAP32[$arrayidx81>>2]|0;
  $conv83 = (+($3|0));
  $sub84 = $conv83 + -0.5;
  $mul85 = $sub84 * $conv82;
  $add86 = $mul85 + 0.5;
  $call87 = (+Math_floor((+$add86)));
  $conv88 = (~~(($call87)));
  $5 = ($conv88|0)>(0);
  $$conv88 = $5 ? $conv88 : 0;
  $conv94 = (+($4|0));
  $sub95 = $conv94 + -0.5;
  $mul96 = $sub95 * $conv82;
  $add97 = $mul96 + 0.5;
  $call98 = (+Math_floor((+$add97)));
  $conv99 = (~~(($call98)));
  $cmp101 = ($conv99|0)>($div19|0);
  $div100$conv99 = $cmp101 ? $div19 : $conv99;
  $arrayidx106 = (($partition) + ($div100$conv99<<2)|0);
  $6 = HEAP32[$arrayidx106>>2]|0;
  $arrayidx107 = (($partition) + ($$conv88<<2)|0);
  $7 = HEAP32[$arrayidx107>>2]|0;
  $add109 = (($7) + ($6))|0;
  $div110 = (($add109|0) / 2)&-1;
  $arrayidx111 = (((($gd)) + 1972|0) + ($sfb$0106<<2)|0);
  HEAP32[$arrayidx111>>2] = $div110;
  $arrayidx113 = (((($gd)) + 2060|0) + ($sfb$0106<<2)|0);
  HEAP32[$arrayidx113>>2] = $6;
  $conv114 = (+($4|0));
  $mul115 = $conv114 * $div;
  $arrayidx116 = (($b_frq) + ($6<<2)|0);
  $8 = +HEAPF32[$arrayidx116>>2];
  $sub117 = $mul115 - $8;
  $add118 = (($6) + 1)|0;
  $arrayidx119 = (($b_frq) + ($add118<<2)|0);
  $9 = +HEAPF32[$arrayidx119>>2];
  $sub121 = $9 - $8;
  $div122 = $sub117 / $sub121;
  $cmp123 = $div122 < 0.0;
  if ($cmp123) {
   $bo_w$0 = 0.0;
  } else {
   $cmp126 = $div122 > 1.0;
   if ($cmp126) {
    $bo_w$0 = 1.0;
   } else {
    $bo_w$0 = $div122;
   }
  }
  $arrayidx131 = (((($gd)) + 1112|0) + ($sfb$0106<<2)|0);
  HEAPF32[$arrayidx131>>2] = $bo_w$0;
  $conv132 = (+($3|0));
  $mul133 = $conv132 * $div;
  $call$i95 = (+_freq2bark($mul133));
  $conv1$i96 = $call$i95;
  $cmp$i97 = $conv1$i96 < 15.5;
  $cond$i98 = $cmp$i97 ? $conv1$i96 : 15.5;
  $mul$i99 = $cond$i98 * 0.2026833970057931;
  $call3$i100 = (+Math_cos((+$mul$i99)));
  $sub$i101 = 1.0 - $call3$i100;
  $mul4$i102 = $sub$i101 * 1.25;
  $sub5$i103 = $mul4$i102 + -2.5;
  $10 = (+Math_pow(10.0,(+$sub5$i103)));
  $conv6$i104 = $10;
  $arrayidx136 = (((($gd)) + 1024|0) + ($sfb$0106<<2)|0);
  HEAPF32[$arrayidx136>>2] = $conv6$i104;
  $exitcond = ($add80|0)==($sbmax|0);
  if ($exitcond) {
   break;
  } else {
   $sfb$0106 = $add80;
  }
 }
 STACKTOP = sp;return;
}
function _init_s3_values($p,$s3ind,$npart,$bval,$bval_width,$norm) {
 $p = $p|0;
 $s3ind = $s3ind|0;
 $npart = $npart|0;
 $bval = $bval|0;
 $bval_width = $bval_width|0;
 $norm = $norm|0;
 var $$mux = 0, $$sink$i$us = 0.0, $0 = 0.0, $1 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0.0, $3 = 0.0, $4 = 0.0, $5 = 0.0, $6 = 0, $7 = 0.0, $8 = 0, $9 = 0, $add$i$us = 0.0, $add$us = 0, $add25$i$us = 0.0, $add28$i$us = 0.0;
 var $add37$i$us = 0.0, $add47$us = 0, $arrayidx11$us = 0, $arrayidx22$us = 0, $arrayidx28$us = 0, $arrayidx34$us = 0, $arrayidx41$us = 0, $arrayidx5$us = 0, $arrayidx59 = 0, $arrayidx6$us = 0, $arrayidx62 = 0, $arrayidx7$us = 0, $arrayidx8$us = 0, $brmerge = 0, $call$i$us = 0.0, $call52 = 0, $cmp$i$us = 0, $cmp19$us = 0, $cmp23$us = 0, $cmp31$us = 0;
 var $cmp33$i$us = 0, $cmp35$us = 0, $cmp4$i$us = 0, $cmp63 = 0, $cmp6352 = 0, $cmp69 = 0, $cmp69$not = 0, $cmp7$i$us = 0, $conv11$i$us = 0.0, $conv13$i$us = 0.0, $conv14$i$us = 0.0, $conv18$i$us = 0.0, $conv2$i$us = 0.0, $conv22$i$us = 0.0, $conv23$i$us = 0.0, $conv27$i$us = 0.0, $conv3$i$us = 0.0, $conv31$i$us = 0.0, $conv38$i$us = 0.0, $conv40$i$us = 0.0;
 var $conv41$i$us = 0.0, $conv42$i$us = 0.0, $div$i$us = 0.0, $exitcond = 0, $exitcond76 = 0, $exitcond77 = 0, $exitcond78 = 0, $i$070$us = 0, $i$164$us = 0, $i$256 = 0, $inc$us = 0, $inc13$us = 0, $inc25$us = 0, $inc49$us = 0, $inc67 = 0, $inc70 = 0, $inc73 = 0, $j$068$us = 0, $j$160$us = 0, $j$2$in$us = 0;
 var $j$2$us = 0, $j$353 = 0, $k$058 = 0, $k$1$lcssa = 0, $k$154 = 0, $mul$us = 0.0, $mul12$i$us = 0.0, $mul15$i$us = 0.0, $mul17$i$us = 0.0, $mul24$i$us = 0.0, $mul26$i$us = 0.0, $mul29$neg$i$us = 0.0, $mul39$i$us = 0.0, $mul9$us = 0.0, $numberOfNoneZero$0$lcssa = 0, $numberOfNoneZero$065$us = 0, $or$cond$i$us = 0, $phitmp = 0, $retval$0 = 0, $retval$0$i$us = 0.0;
 var $s3 = 0, $scevgep = 0, $scevgep74 = 0, $sub$us = 0.0, $sub16$i$us = 0.0, $sub30$i51$us = 0.0, $tobool = 0, $x$0$i$us = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16384|0;
 $s3 = sp;
 _memset(($s3|0),0,16384)|0;
 $cmp69 = ($npart|0)>(0);
 if ($cmp69) {
  $i$070$us = 0;
  while(1) {
   $arrayidx5$us = (($bval) + ($i$070$us<<2)|0);
   $0 = +HEAPF32[$arrayidx5$us>>2];
   $arrayidx8$us = (($norm) + ($i$070$us<<2)|0);
   $1 = +HEAPF32[$arrayidx8$us>>2];
   $j$068$us = 0;
   while(1) {
    $arrayidx6$us = (($bval) + ($j$068$us<<2)|0);
    $2 = +HEAPF32[$arrayidx6$us>>2];
    $sub$us = $0 - $2;
    $cmp$i$us = !($sub$us >= 0.0);
    $$sink$i$us = $cmp$i$us ? 1.5 : 3.0;
    $conv2$i$us = $$sink$i$us * $sub$us;
    $conv3$i$us = $conv2$i$us;
    $cmp4$i$us = !($conv2$i$us >= 0.5);
    $cmp7$i$us = !($conv2$i$us <= 2.5);
    $or$cond$i$us = $cmp4$i$us | $cmp7$i$us;
    if ($or$cond$i$us) {
     $x$0$i$us = 0.0;
    } else {
     $conv11$i$us = $conv2$i$us + -0.5;
     $mul12$i$us = $conv11$i$us * $conv11$i$us;
     $conv13$i$us = $mul12$i$us;
     $conv14$i$us = $conv11$i$us;
     $mul15$i$us = $conv14$i$us * 2.0;
     $sub16$i$us = $conv13$i$us - $mul15$i$us;
     $mul17$i$us = $sub16$i$us * 8.0;
     $conv18$i$us = $mul17$i$us;
     $x$0$i$us = $conv18$i$us;
    }
    $add$i$us = $conv3$i$us + 0.47399999999999998;
    $conv22$i$us = $add$i$us;
    $conv23$i$us = $conv22$i$us;
    $mul24$i$us = $conv23$i$us * 7.5;
    $add25$i$us = $mul24$i$us + 15.811389;
    $mul26$i$us = $conv22$i$us * $conv22$i$us;
    $conv27$i$us = $mul26$i$us;
    $add28$i$us = $conv27$i$us + 1.0;
    $3 = (+Math_sqrt((+$add28$i$us)));
    $mul29$neg$i$us = $3 * 17.5;
    $sub30$i51$us = $add25$i$us - $mul29$neg$i$us;
    $conv31$i$us = $sub30$i51$us;
    $cmp33$i$us = !($conv31$i$us <= -60.0);
    if ($cmp33$i$us) {
     $add37$i$us = $x$0$i$us + $conv31$i$us;
     $conv38$i$us = $add37$i$us;
     $mul39$i$us = $conv38$i$us * 0.23025850929940458;
     $call$i$us = (+Math_exp((+$mul39$i$us)));
     $conv40$i$us = $call$i$us;
     $conv41$i$us = $conv40$i$us;
     $div$i$us = $conv41$i$us * 1.5130440282194817;
     $conv42$i$us = $div$i$us;
     $retval$0$i$us = $conv42$i$us;
    } else {
     $retval$0$i$us = 0.0;
    }
    $arrayidx7$us = (($bval_width) + ($j$068$us<<2)|0);
    $4 = +HEAPF32[$arrayidx7$us>>2];
    $mul$us = $4 * $retval$0$i$us;
    $mul9$us = $mul$us * $1;
    $arrayidx11$us = ((($s3) + ($i$070$us<<8)|0) + ($j$068$us<<2)|0);
    HEAPF32[$arrayidx11$us>>2] = $mul9$us;
    $inc$us = (($j$068$us) + 1)|0;
    $exitcond77 = ($inc$us|0)==($npart|0);
    if ($exitcond77) {
     break;
    } else {
     $j$068$us = $inc$us;
    }
   }
   $inc13$us = (($i$070$us) + 1)|0;
   $exitcond78 = ($inc13$us|0)==($npart|0);
   if ($exitcond78) {
    break;
   } else {
    $i$070$us = $inc13$us;
   }
  }
  if ($cmp69) {
   $i$164$us = 0;$numberOfNoneZero$065$us = 0;
   while(1) {
    $j$160$us = 0;
    while(1) {
     $arrayidx22$us = ((($s3) + ($i$164$us<<8)|0) + ($j$160$us<<2)|0);
     $5 = +HEAPF32[$arrayidx22$us>>2];
     $cmp23$us = $5 > 0.0;
     if ($cmp23$us) {
      $6 = $j$160$us;
      break;
     }
     $inc25$us = (($j$160$us) + 1)|0;
     $cmp19$us = ($inc25$us|0)<($npart|0);
     if ($cmp19$us) {
      $j$160$us = $inc25$us;
     } else {
      $6 = $inc25$us;
      break;
     }
    }
    $arrayidx28$us = (($s3ind) + ($i$164$us<<3)|0);
    HEAP32[$arrayidx28$us>>2] = $6;
    $j$2$in$us = $npart;
    while(1) {
     $j$2$us = (($j$2$in$us) + -1)|0;
     $cmp31$us = ($j$2$in$us|0)>(1);
     if (!($cmp31$us)) {
      break;
     }
     $arrayidx34$us = ((($s3) + ($i$164$us<<8)|0) + ($j$2$us<<2)|0);
     $7 = +HEAPF32[$arrayidx34$us>>2];
     $cmp35$us = $7 > 0.0;
     if ($cmp35$us) {
      break;
     } else {
      $j$2$in$us = $j$2$us;
     }
    }
    $arrayidx41$us = (((($s3ind) + ($i$164$us<<3)|0)) + 4|0);
    HEAP32[$arrayidx41$us>>2] = $j$2$us;
    $add$us = (($numberOfNoneZero$065$us) + ($j$2$in$us))|0;
    $add47$us = (($add$us) - ($6))|0;
    $inc49$us = (($i$164$us) + 1)|0;
    $exitcond76 = ($inc49$us|0)==($npart|0);
    if ($exitcond76) {
     break;
    } else {
     $i$164$us = $inc49$us;$numberOfNoneZero$065$us = $add47$us;
    }
   }
   $phitmp = $add47$us << 2;
   $numberOfNoneZero$0$lcssa = $phitmp;
  } else {
   $numberOfNoneZero$0$lcssa = 0;
  }
 } else {
  $numberOfNoneZero$0$lcssa = 0;
 }
 $call52 = (_malloc($numberOfNoneZero$0$lcssa)|0);
 HEAP32[$p>>2] = $call52;
 $tobool = ($call52|0)==(0|0);
 $cmp69$not = $cmp69 ^ 1;
 $brmerge = $tobool | $cmp69$not;
 $$mux = $tobool << 31 >> 31;
 if ($brmerge) {
  $retval$0 = $$mux;
  STACKTOP = sp;return ($retval$0|0);
 } else {
  $i$256 = 0;$k$058 = 0;
 }
 while(1) {
  $arrayidx59 = (($s3ind) + ($i$256<<3)|0);
  $8 = HEAP32[$arrayidx59>>2]|0;
  $arrayidx62 = (((($s3ind) + ($i$256<<3)|0)) + 4|0);
  $9 = HEAP32[$arrayidx62>>2]|0;
  $cmp6352 = ($8|0)>($9|0);
  if ($cmp6352) {
   $k$1$lcssa = $k$058;
  } else {
   $10 = HEAP32[$p>>2]|0;
   $scevgep = (($10) + ($k$058<<2)|0);
   $scevgep74 = ((($s3) + ($i$256<<8)|0) + ($8<<2)|0);
   $11 = (($9) + 1)|0;
   $12 = (($11) - ($8))|0;
   $13 = $12 << 2;
   _memcpy(($scevgep|0),($scevgep74|0),($13|0))|0;
   $j$353 = $8;$k$154 = $k$058;
   while(1) {
    $inc67 = (($k$154) + 1)|0;
    $inc70 = (($j$353) + 1)|0;
    $cmp63 = ($j$353|0)<($9|0);
    if ($cmp63) {
     $j$353 = $inc70;$k$154 = $inc67;
    } else {
     $k$1$lcssa = $inc67;
     break;
    }
   }
  }
  $inc73 = (($i$256) + 1)|0;
  $exitcond = ($inc73|0)==($npart|0);
  if ($exitcond) {
   $retval$0 = 0;
   break;
  } else {
   $i$256 = $inc73;$k$058 = $k$1$lcssa;
  }
 }
 STACKTOP = sp;return ($retval$0|0);
}
function _init_xrpow_core_init($gfc) {
 $gfc = $gfc|0;
 var $0 = 0, $bf$clear = 0, $bf$load = 0, $init_xrpow_core = 0, $init_xrpow_core_c$init_xrpow_core_sse = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $init_xrpow_core = ((($gfc)) + 85824|0);
 $0 = ((($gfc)) + 85756|0);
 $bf$load = HEAP32[$0>>2]|0;
 $bf$clear = $bf$load & 4;
 $tobool = ($bf$clear|0)==(0);
 $init_xrpow_core_c$init_xrpow_core_sse = $tobool ? 5 : 6;
 HEAP32[$init_xrpow_core>>2] = $init_xrpow_core_c$init_xrpow_core_sse;
 return;
}
function _init_xrpow_core_c($cod_info,$xrpow,$upper,$sum) {
 $cod_info = $cod_info|0;
 $xrpow = $xrpow|0;
 $upper = $upper|0;
 $sum = $sum|0;
 var $$pre = 0.0, $0 = 0.0, $1 = 0.0, $2 = 0.0, $3 = 0.0, $4 = 0.0, $add = 0.0, $arrayidx = 0, $arrayidx5 = 0, $cmp15 = 0, $cmp7 = 0, $conv2 = 0.0, $conv4 = 0.0, $exitcond = 0, $fabsf = 0.0, $i$016 = 0, $inc = 0, $mul = 0.0, $xrpow_max = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 HEAPF32[$sum>>2] = 0.0;
 $cmp15 = ($upper|0)<(0);
 if ($cmp15) {
  return;
 }
 $xrpow_max = ((($cod_info)) + 4764|0);
 $1 = 0.0;$i$016 = 0;
 while(1) {
  $arrayidx = (($cod_info) + ($i$016<<2)|0);
  $0 = +HEAPF32[$arrayidx>>2];
  $fabsf = (+Math_abs((+$0)));
  $add = $1 + $fabsf;
  HEAPF32[$sum>>2] = $add;
  $conv2 = $fabsf;
  $2 = (+Math_sqrt((+$conv2)));
  $mul = $2 * $conv2;
  $3 = (+Math_sqrt((+$mul)));
  $conv4 = $3;
  $arrayidx5 = (($xrpow) + ($i$016<<2)|0);
  HEAPF32[$arrayidx5>>2] = $conv4;
  $4 = +HEAPF32[$xrpow_max>>2];
  $cmp7 = $conv4 > $4;
  if ($cmp7) {
   HEAPF32[$xrpow_max>>2] = $conv4;
  }
  $exitcond = ($i$016|0)==($upper|0);
  if ($exitcond) {
   break;
  }
  $inc = (($i$016) + 1)|0;
  $$pre = +HEAPF32[$sum>>2];
  $1 = $$pre;$i$016 = $inc;
 }
 return;
}
function _VBR_old_iteration_loop($gfc,$pe,$ms_ener_ratio,$ratio) {
 $gfc = $gfc|0;
 $pe = $pe|0;
 $ms_ener_ratio = $ms_ener_ratio|0;
 $ratio = $ratio|0;
 var $$pre = 0, $$pre$i = 0, $$pre123 = 0, $$pre124 = 0, $$pre125 = 0, $$pre126 = 0, $$pre127$i = 0, $$sink$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0.0;
 var $56 = 0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $8 = 0, $9 = 0, $add = 0, $add$i = 0.0, $add$i$i = 0.0, $add$i78 = 0.0, $add1$i = 0, $add12$i = 0, $add15$i = 0, $add17$i = 0, $add29$i = 0.0, $add35 = 0, $add57$i = 0, $analog_silence$0$lcssa131$i = 0, $analog_silence$0121$i = 0, $analog_silence$1$$i = 0, $analog_silence$1$lcssa$i = 0, $analog_silence$1114$i = 0;
 var $and = 0, $and$i = 0, $and$lobit$i = 0, $arraydecay$i = 0, $arraydecay$i75 = 0, $arraydecay20 = 0, $arraydecay29$i = 0, $arraydecay45$i = 0, $arrayidx$i = 0, $arrayidx$i$i = 0, $arrayidx11 = 0, $arrayidx14$i = 0, $arrayidx16 = 0, $arrayidx18$i = 0, $arrayidx2$i$i = 0, $arrayidx23 = 0, $arrayidx3$i = 0, $arrayidx4$i = 0, $arrayidx42$i = 0, $arrayidx50 = 0;
 var $arrayidx54$i = 0, $arrayidx56$i = 0, $arrayidx6$i = 0, $arrayidx60$i = 0, $arrayidx63$i = 0, $arrayidx7$i$i = 0, $arrayidx72$us$us$i = 0, $arrayidx8$i = 0, $arrayidx81$us$us$i = 0, $arrayidx81$us$us$i$us = 0, $arrayidx88$i = 0, $arrayidx88$us$us$i = 0, $arrayidx88$us$us$i$us = 0, $arrayidx90$i = 0, $bitrate_index$i = 0, $bits$0122$i = 0, $bits$1$lcssa$i = 0, $bits$1115$i = 0, $block_type$i = 0, $block_type$i80 = 0;
 var $bst_cod_info$2304$$sroa_idx$i = 0, $bst_cod_info$i = 0, $bst_xrpow$i = 0, $call$i = 0, $call$i71 = 0, $call20$i = 0.0, $call3$i = 0, $call3$i$i = 0, $call46$i = 0, $call5$i$i = 0, $call58 = 0, $ch$0100 = 0, $ch$0113$i = 0, $ch$051$i = 0, $ch$190$i = 0, $ch$190$us$us$i = 0, $ch$190$us$us$i$us = 0, $ch$195 = 0, $channels_out$i = 0, $channels_out$i74$pre$phiZZ2D = 0;
 var $cmp = 0, $cmp$i = 0, $cmp$i$i = 0, $cmp$i65 = 0, $cmp$i70 = 0, $cmp$i83 = 0, $cmp$i84 = 0, $cmp10$i = 0, $cmp10112$i = 0, $cmp103 = 0, $cmp117$i = 0, $cmp14$i$i = 0, $cmp15$i = 0, $cmp17 = 0, $cmp17$i = 0, $cmp2$i = 0, $cmp2047$i = 0, $cmp215$i = 0, $cmp23$i = 0, $cmp26$i = 0;
 var $cmp3$i = 0, $cmp350$i = 0, $cmp47 = 0, $cmp47108 = 0, $cmp5$i = 0, $cmp51 = 0, $cmp52$i = 0, $cmp59 = 0, $cmp63$i = 0, $cmp63$us$i = 0, $cmp6391$i = 0, $cmp66$i = 0, $cmp68 = 0, $cmp68$i = 0, $cmp68$us$us$i = 0, $cmp68$us$us$i$us = 0, $cmp6889$i = 0, $cmp6889$us$i = 0, $cmp7$i = 0, $cmp72 = 0;
 var $cmp7294 = 0, $cmp73$us$us$i = 0, $cmp75$i = 0, $cmp9 = 0, $cmp91$i = 0, $cmp91$us$us$i = 0, $cmp91$us$us$i$us = 0, $cmp944$i = 0, $cmp999 = 0, $conv$i = 0.0, $conv$i76 = 0.0, $conv14$i = 0.0, $conv16$i = 0.0, $conv23$i = 0.0, $conv23$i82 = 0.0, $conv31$i = 0.0, $conv33$i = 0.0, $conv34$i = 0.0, $conv38$i = 0.0, $conv39$i = 0.0;
 var $conv42$i = 0.0, $conv44$i = 0.0, $conv53$i = 0.0, $conv55$i = 0.0, $conv61$i = 0.0, $conv61$mul65$i = 0.0, $conv64$i = 0.0, $conv75$i = 0, $dbits$0$i = 0, $div$i = 0, $div$i68 = 0, $div13$i = 0, $div13$i77 = 0.0, $div18$i = 0, $div19$i = 0.0, $div21$i = 0.0, $div28$i = 0.0, $div32$i = 0.0, $div85$us$us$i$us = 0, $enforce_min_bitrate = 0;
 var $exitcond = 0, $exitcond$i = 0, $exitcond$i$i = 0, $found$0$i = 0, $found$1$i = 0, $frameBits = 0, $gr$0104 = 0, $gr$0118$i = 0, $gr$053$i = 0, $gr$192$i = 0, $gr$192$us$i = 0, $gr$197 = 0, $i$015$i$i = 0, $i$016$i = 0, $i$017$i$i = 0, $inc = 0, $inc$i = 0, $inc$i$i = 0, $inc$i66 = 0, $inc$i79 = 0;
 var $inc$i87$i = 0, $inc100$i = 0, $inc100$us$us$i = 0, $inc100$us$us$i$us = 0, $inc103$i = 0, $inc103$us$i = 0, $inc38 = 0, $inc56 = 0, $inc57$i = 0, $inc59$i = 0, $inc75 = 0, $inc78 = 0, $inc79$i = 0, $inc82$i = 0, $incdec$ptr$i = 0, $incdec$ptr30$i = 0, $incdec$ptr41$i = 0, $incdec$ptr52$i = 0, $indvars$iv = 0, $indvars$iv115 = 0;
 var $init_xrpow_core$i = 0, $l3_side2$i = 0, $l3_xmin = 0, $mask_adjust$i = 0, $mask_adjust_short$i = 0, $masking_lower$i = 0, $masking_lower_db$0$i = 0.0, $max_bits = 0, $max_bits$addr$0$i = 0, $max_bits$addr$1$i = 0, $max_nonzero_coeff$i = 0, $mean_bits = 0, $min_bits = 0, $min_bits$addr$0$i = 0, $min_bits$addr$1$i = 0, $mode_ext$i = 0, $mode_gr$i = 0, $mul$i = 0.0, $mul$i$i = 0.0, $mul$i64 = 0;
 var $mul13$i$i = 0.0, $mul15$i = 0.0, $mul32$i = 0.0, $mul43$i = 0.0, $mul54$i = 0.0, $mul65$i = 0.0, $mul82$us$us$i$us = 0, $part2_3_length$i = 0, $part2_length = 0, $psy_lmax$i = 0, $psymax$i = 0, $pxmin$0$lcssa$i = 0, $pxmin$046$i = 0, $pxmin$149$i = 0, $scevgep = 0, $scevgep116 = 0, $scevgep117 = 0, $sfb$045$i = 0, $sfb$148$i = 0, $sfb21_extra2$i = 0;
 var $sfb_smin$i = 0, $storemerge$ph = 0, $storemerge109 = 0, $sub$i = 0.0, $sub$i$i = 0.0, $sub$i63 = 0, $sub$i69 = 0, $sub10$i = 0, $sub11$i = 0, $sub16$i = 0, $sub22$i = 0.0, $sub24$i = 0.0, $sub33$i = 0.0, $sub36$i = 0.0, $substep_shaping$i = 0, $this_bits$0$i = 0, $this_bits$1$i = 0, $tobool = 0, $tobool$i = 0, $tobool$i72 = 0;
 var $tobool40 = 0, $tobool41 = 0, $use_best_huffman$i = 0, $used_bits$0$lcssa = 0, $used_bits$0106 = 0, $used_bits$1$lcssa = 0, $used_bits$1102 = 0, $used_bits$2 = 0, $vbr_max_bitrate_index$i = 0, $vbr_min_bitrate_index$i$i = 0, $xrpow = 0, $xrpow_max$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 10592|0;
 $bst_cod_info$i = sp + 5336|0;
 $bst_xrpow$i = sp + 3032|0;
 $l3_xmin = sp + 2408|0;
 $xrpow = sp + 104|0;
 $frameBits = sp + 40|0;
 $min_bits = sp + 24|0;
 $max_bits = sp + 8|0;
 $mean_bits = sp;
 $vbr_max_bitrate_index$i = ((($gfc)) + 116|0);
 $0 = HEAP32[$vbr_max_bitrate_index$i>>2]|0;
 $bitrate_index$i = ((($gfc)) + 84744|0);
 HEAP32[$bitrate_index$i>>2] = $0;
 $call$i = (_ResvFrameBegin($gfc,$bst_xrpow$i)|0);
 $mode_gr$i = ((($gfc)) + 76|0);
 $1 = HEAP32[$mode_gr$i>>2]|0;
 $div$i = (($call$i|0) / ($1|0))&-1;
 HEAP32[$bst_xrpow$i>>2] = $div$i;
 $vbr_min_bitrate_index$i$i = ((($gfc)) + 112|0);
 $2 = HEAP32[$vbr_min_bitrate_index$i$i>>2]|0;
 HEAP32[$bitrate_index$i>>2] = $2;
 HEAP32[$bitrate_index$i>>2] = 1;
 $call3$i$i = (_getframebits($gfc)|0);
 HEAP32[$bst_cod_info$i>>2] = $call3$i$i;
 $3 = HEAP32[$vbr_max_bitrate_index$i>>2]|0;
 $cmp14$i$i = ($3|0)<(1);
 if (!($cmp14$i$i)) {
  $i$015$i$i = 1;
  while(1) {
   HEAP32[$bitrate_index$i>>2] = $i$015$i$i;
   $call5$i$i = (_ResvFrameBegin($gfc,$bst_cod_info$i)|0);
   $arrayidx$i$i = (($frameBits) + ($i$015$i$i<<2)|0);
   HEAP32[$arrayidx$i$i>>2] = $call5$i$i;
   $inc$i$i = (($i$015$i$i) + 1)|0;
   $4 = HEAP32[$vbr_max_bitrate_index$i>>2]|0;
   $cmp$i$i = ($i$015$i$i|0)<($4|0);
   if ($cmp$i$i) {
    $i$015$i$i = $inc$i$i;
   } else {
    break;
   }
  }
 }
 $5 = HEAP32[$mode_gr$i>>2]|0;
 $cmp117$i = ($5|0)>(0);
 L5: do {
  if ($cmp117$i) {
   $mode_ext$i = ((($gfc)) + 84756|0);
   $channels_out$i = ((($gfc)) + 72|0);
   $mask_adjust_short$i = ((($gfc)) + 84916|0);
   $masking_lower$i = ((($gfc)) + 84908|0);
   $mask_adjust$i = ((($gfc)) + 84912|0);
   $analog_silence$0121$i = 1;$bits$0122$i = 0;$gr$0118$i = 0;
   while(1) {
    $arraydecay$i = (($max_bits) + ($gr$0118$i<<3)|0);
    $13 = HEAP32[$bst_xrpow$i>>2]|0;
    $call3$i = (_on_pe($gfc,$pe,$arraydecay$i,$13,$gr$0118$i,0)|0);
    $14 = HEAP32[$mode_ext$i>>2]|0;
    $cmp5$i = ($14|0)==(2);
    if ($cmp5$i) {
     $i$017$i$i = 0;
     while(1) {
      $arrayidx2$i$i = ((((($gfc)) + 304|0) + (($gr$0118$i*10504)|0)|0) + ($i$017$i$i<<2)|0);
      $15 = +HEAPF32[$arrayidx2$i$i>>2];
      $arrayidx7$i$i = ((((((($gfc)) + 304|0) + (($gr$0118$i*10504)|0)|0)) + 5252|0) + ($i$017$i$i<<2)|0);
      $16 = +HEAPF32[$arrayidx7$i$i>>2];
      $add$i$i = $16 + $15;
      $mul$i$i = $add$i$i * 0.70710676908493042;
      HEAPF32[$arrayidx2$i$i>>2] = $mul$i$i;
      $sub$i$i = $15 - $16;
      $mul13$i$i = $sub$i$i * 0.70710676908493042;
      HEAPF32[$arrayidx7$i$i>>2] = $mul13$i$i;
      $inc$i87$i = (($i$017$i$i) + 1)|0;
      $exitcond$i$i = ($inc$i87$i|0)==(576);
      if ($exitcond$i$i) {
       break;
      } else {
       $i$017$i$i = $inc$i87$i;
      }
     }
     $arrayidx8$i = (($ms_ener_ratio) + ($gr$0118$i<<2)|0);
     $17 = +HEAPF32[$arrayidx8$i>>2];
     $18 = HEAP32[$bst_xrpow$i>>2]|0;
     _reduce_side($arraydecay$i,$17,$18,$call3$i);
    }
    $19 = HEAP32[$channels_out$i>>2]|0;
    $cmp10112$i = ($19|0)>(0);
    if ($cmp10112$i) {
     $analog_silence$1114$i = $analog_silence$0121$i;$bits$1115$i = $bits$0122$i;$ch$0113$i = 0;
     while(1) {
      $arrayidx14$i = ((((($gfc)) + 304|0) + (($gr$0118$i*10504)|0)|0) + (($ch$0113$i*5252)|0)|0);
      $block_type$i = ((((((($gfc)) + 304|0) + (($gr$0118$i*10504)|0)|0) + (($ch$0113$i*5252)|0)|0)) + 4788|0);
      $20 = HEAP32[$block_type$i>>2]|0;
      $cmp15$i = ($20|0)==(2);
      $arrayidx18$i = ((($pe) + ($gr$0118$i<<3)|0) + ($ch$0113$i<<2)|0);
      $21 = +HEAPF32[$arrayidx18$i>>2];
      $conv$i = $21;
      $div19$i = $conv$i * 0.0033333333333333335;
      $sub$i = 3.5 - $div19$i;
      $call20$i = (+Math_exp((+$sub$i)));
      $add$i = $call20$i + 1.0;
      if ($cmp15$i) {
       $div32$i = 2.5600000000000001 / $add$i;
       $sub33$i = $div32$i + -0.14000000000000001;
       $conv34$i = $sub33$i;
       $23 = +HEAPF32[$mask_adjust_short$i>>2];
       $sub36$i = $23 - $conv34$i;
       $masking_lower_db$0$i = $sub36$i;
      } else {
       $div21$i = 1.28 / $add$i;
       $sub22$i = $div21$i + -0.050000000000000003;
       $conv23$i = $sub22$i;
       $22 = +HEAPF32[$mask_adjust$i>>2];
       $sub24$i = $22 - $conv23$i;
       $masking_lower_db$0$i = $sub24$i;
      }
      $conv38$i = $masking_lower_db$0$i;
      $mul$i = $conv38$i * 0.10000000000000001;
      $24 = (+Math_pow(10.0,(+$mul$i)));
      $conv39$i = $24;
      HEAPF32[$masking_lower$i>>2] = $conv39$i;
      _init_outer_loop($gfc,$arrayidx14$i);
      $arrayidx42$i = ((($ratio) + (($gr$0118$i*976)|0)|0) + (($ch$0113$i*488)|0)|0);
      $arraydecay45$i = ((($l3_xmin) + (($gr$0118$i*312)|0)|0) + (($ch$0113$i*156)|0)|0);
      $call46$i = (_calc_xmin($gfc,$arrayidx42$i,$arrayidx14$i,$arraydecay45$i)|0);
      $tobool$i = ($call46$i|0)==(0);
      $analog_silence$1$$i = $tobool$i ? $analog_silence$1114$i : 0;
      $arrayidx54$i = ((($min_bits) + ($gr$0118$i<<3)|0) + ($ch$0113$i<<2)|0);
      HEAP32[$arrayidx54$i>>2] = 126;
      $arrayidx56$i = ((($max_bits) + ($gr$0118$i<<3)|0) + ($ch$0113$i<<2)|0);
      $25 = HEAP32[$arrayidx56$i>>2]|0;
      $add57$i = (($25) + ($bits$1115$i))|0;
      $inc$i = (($ch$0113$i) + 1)|0;
      $26 = HEAP32[$channels_out$i>>2]|0;
      $cmp10$i = ($inc$i|0)<($26|0);
      if ($cmp10$i) {
       $analog_silence$1114$i = $analog_silence$1$$i;$bits$1115$i = $add57$i;$ch$0113$i = $inc$i;
      } else {
       $$pre127$i = $26;$analog_silence$1$lcssa$i = $analog_silence$1$$i;$bits$1$lcssa$i = $add57$i;
       break;
      }
     }
    } else {
     $$pre127$i = $19;$analog_silence$1$lcssa$i = $analog_silence$0121$i;$bits$1$lcssa$i = $bits$0122$i;
    }
    $inc59$i = (($gr$0118$i) + 1)|0;
    $6 = HEAP32[$mode_gr$i>>2]|0;
    $cmp$i = ($inc59$i|0)<($6|0);
    if ($cmp$i) {
     $analog_silence$0121$i = $analog_silence$1$lcssa$i;$bits$0122$i = $bits$1$lcssa$i;$gr$0118$i = $inc59$i;
    } else {
     break;
    }
   }
   $cmp6391$i = ($6|0)>(0);
   if ($cmp6391$i) {
    $cmp75$i = ($bits$1$lcssa$i|0)>(0);
    if (!($cmp75$i)) {
     $27 = $$pre127$i;$gr$192$i = 0;
     while(1) {
      $cmp6889$i = ($27|0)>(0);
      if ($cmp6889$i) {
       $70 = $27;$ch$190$i = 0;
       while(1) {
        $arrayidx88$i = ((($min_bits) + ($gr$192$i<<3)|0) + ($ch$190$i<<2)|0);
        $28 = HEAP32[$arrayidx88$i>>2]|0;
        $arrayidx90$i = ((($max_bits) + ($gr$192$i<<3)|0) + ($ch$190$i<<2)|0);
        $29 = HEAP32[$arrayidx90$i>>2]|0;
        $cmp91$i = ($28|0)>($29|0);
        if ($cmp91$i) {
         HEAP32[$arrayidx88$i>>2] = $29;
         $30 = $$pre127$i;
        } else {
         $30 = $70;
        }
        $inc100$i = (($ch$190$i) + 1)|0;
        $cmp68$i = ($inc100$i|0)<($30|0);
        if ($cmp68$i) {
         $70 = $30;$ch$190$i = $inc100$i;
        } else {
         $71 = $30;
         break;
        }
       }
      } else {
       $71 = $27;
      }
      $inc103$i = (($gr$192$i) + 1)|0;
      $cmp63$i = ($inc103$i|0)<($6|0);
      if ($cmp63$i) {
       $27 = $71;$gr$192$i = $inc103$i;
      } else {
       $69 = $6;$analog_silence$0$lcssa131$i = $analog_silence$1$lcssa$i;$channels_out$i74$pre$phiZZ2D = $channels_out$i;
       break L5;
      }
     }
    }
    $cmp6889$us$i = ($$pre127$i|0)>(0);
    $gr$192$us$i = 0;
    while(1) {
     if ($cmp6889$us$i) {
      $7 = HEAP32[$vbr_max_bitrate_index$i>>2]|0;
      $arrayidx72$us$us$i = (($frameBits) + ($7<<2)|0);
      $8 = HEAP32[$arrayidx72$us$us$i>>2]|0;
      $cmp73$us$us$i = ($bits$1$lcssa$i|0)>($8|0);
      if ($cmp73$us$us$i) {
       $ch$190$us$us$i$us = 0;
       while(1) {
        $arrayidx81$us$us$i$us = ((($max_bits) + ($gr$192$us$i<<3)|0) + ($ch$190$us$us$i$us<<2)|0);
        $9 = HEAP32[$arrayidx81$us$us$i$us>>2]|0;
        $mul82$us$us$i$us = Math_imul($9, $8)|0;
        $div85$us$us$i$us = (($mul82$us$us$i$us|0) / ($bits$1$lcssa$i|0))&-1;
        HEAP32[$arrayidx81$us$us$i$us>>2] = $div85$us$us$i$us;
        $arrayidx88$us$us$i$us = ((($min_bits) + ($gr$192$us$i<<3)|0) + ($ch$190$us$us$i$us<<2)|0);
        $10 = HEAP32[$arrayidx88$us$us$i$us>>2]|0;
        $cmp91$us$us$i$us = ($10|0)>($div85$us$us$i$us|0);
        if ($cmp91$us$us$i$us) {
         HEAP32[$arrayidx88$us$us$i$us>>2] = $div85$us$us$i$us;
        }
        $inc100$us$us$i$us = (($ch$190$us$us$i$us) + 1)|0;
        $cmp68$us$us$i$us = ($inc100$us$us$i$us|0)<($$pre127$i|0);
        if ($cmp68$us$us$i$us) {
         $ch$190$us$us$i$us = $inc100$us$us$i$us;
        } else {
         break;
        }
       }
      } else {
       $ch$190$us$us$i = 0;
       while(1) {
        $arrayidx81$us$us$i = ((($max_bits) + ($gr$192$us$i<<3)|0) + ($ch$190$us$us$i<<2)|0);
        $11 = HEAP32[$arrayidx81$us$us$i>>2]|0;
        $arrayidx88$us$us$i = ((($min_bits) + ($gr$192$us$i<<3)|0) + ($ch$190$us$us$i<<2)|0);
        $12 = HEAP32[$arrayidx88$us$us$i>>2]|0;
        $cmp91$us$us$i = ($12|0)>($11|0);
        if ($cmp91$us$us$i) {
         HEAP32[$arrayidx88$us$us$i>>2] = $11;
        }
        $inc100$us$us$i = (($ch$190$us$us$i) + 1)|0;
        $cmp68$us$us$i = ($inc100$us$us$i|0)<($$pre127$i|0);
        if ($cmp68$us$us$i) {
         $ch$190$us$us$i = $inc100$us$us$i;
        } else {
         break;
        }
       }
      }
     }
     $inc103$us$i = (($gr$192$us$i) + 1)|0;
     $cmp63$us$i = ($inc103$us$i|0)<($6|0);
     if ($cmp63$us$i) {
      $gr$192$us$i = $inc103$us$i;
     } else {
      $69 = $6;$analog_silence$0$lcssa131$i = $analog_silence$1$lcssa$i;$channels_out$i74$pre$phiZZ2D = $channels_out$i;
      break;
     }
    }
   } else {
    $69 = $6;$analog_silence$0$lcssa131$i = $analog_silence$1$lcssa$i;$channels_out$i74$pre$phiZZ2D = $channels_out$i;
   }
  } else {
   $$pre126 = ((($gfc)) + 72|0);
   $69 = $5;$analog_silence$0$lcssa131$i = 1;$channels_out$i74$pre$phiZZ2D = $$pre126;
  }
 } while(0);
 $tobool40 = ($analog_silence$0$lcssa131$i|0)==(0);
 $enforce_min_bitrate = ((($gfc)) + 124|0);
 $init_xrpow_core$i = ((($gfc)) + 85824|0);
 $substep_shaping$i = ((($gfc)) + 85096|0);
 $sfb21_extra2$i = ((($gfc)) + 85092|0);
 $bst_cod_info$2304$$sroa_idx$i = ((($bst_cod_info$i)) + 2304|0);
 $31 = $69;
 L53: while(1) {
  $cmp103 = ($31|0)>(0);
  if ($cmp103) {
   $$pre = HEAP32[$channels_out$i74$pre$phiZZ2D>>2]|0;
   $32 = $$pre;$72 = $31;$gr$0104 = 0;$used_bits$0106 = 0;
   while(1) {
    $cmp999 = ($32|0)>(0);
    if ($cmp999) {
     $ch$0100 = 0;$used_bits$1102 = $used_bits$0106;
     while(1) {
      $arrayidx11 = ((((($gfc)) + 304|0) + (($gr$0104*10504)|0)|0) + (($ch$0100*5252)|0)|0);
      HEAPF32[$bst_cod_info$i>>2] = 0.0;
      $max_nonzero_coeff$i = ((((((($gfc)) + 304|0) + (($gr$0104*10504)|0)|0) + (($ch$0100*5252)|0)|0)) + 5208|0);
      $33 = HEAP32[$max_nonzero_coeff$i>>2]|0;
      $xrpow_max$i = ((((((($gfc)) + 304|0) + (($gr$0104*10504)|0)|0) + (($ch$0100*5252)|0)|0)) + 4764|0);
      HEAPF32[$xrpow_max$i>>2] = 0.0;
      $arrayidx$i = (($xrpow) + ($33<<2)|0);
      $sub$i63 = (576 - ($33))|0;
      $mul$i64 = $sub$i63 << 2;
      _memset(($arrayidx$i|0),0,($mul$i64|0))|0;
      $34 = HEAP32[$init_xrpow_core$i>>2]|0;
      FUNCTION_TABLE_viiii[$34 & 7]($arrayidx11,$xrpow,$33,$bst_cod_info$i);
      $35 = +HEAPF32[$bst_cod_info$i>>2];
      $cmp$i65 = $35 > 9.9999996826552254E-21;
      if ($cmp$i65) {
       $36 = HEAP32[$substep_shaping$i>>2]|0;
       $and$i = $36 >>> 1;
       $and$lobit$i = $and$i & 1;
       $psymax$i = ((((((($gfc)) + 304|0) + (($gr$0104*10504)|0)|0) + (($ch$0100*5252)|0)|0)) + 4864|0);
       $37 = HEAP32[$psymax$i>>2]|0;
       $cmp215$i = ($37|0)>(0);
       if ($cmp215$i) {
        $i$016$i = 0;
        while(1) {
         $arrayidx4$i = (((($gfc)) + 84936|0) + ($i$016$i<<2)|0);
         HEAP32[$arrayidx4$i>>2] = $and$lobit$i;
         $inc$i66 = (($i$016$i) + 1)|0;
         $38 = HEAP32[$psymax$i>>2]|0;
         $cmp2$i = ($inc$i66|0)<($38|0);
         if ($cmp2$i) {
          $i$016$i = $inc$i66;
         } else {
          break;
         }
        }
       }
       $arrayidx16 = ((($max_bits) + ($gr$0104<<3)|0) + ($ch$0100<<2)|0);
       $39 = HEAP32[$arrayidx16>>2]|0;
       $cmp17 = ($39|0)==(0);
       if ($cmp17) {
        $used_bits$2 = $used_bits$1102;
       } else {
        $arraydecay20 = ((($l3_xmin) + (($gr$0104*312)|0)|0) + (($ch$0100*156)|0)|0);
        $arrayidx23 = ((($min_bits) + ($gr$0104<<3)|0) + ($ch$0100<<2)|0);
        $40 = HEAP32[$arrayidx23>>2]|0;
        $add1$i = (($40) + ($39))|0;
        $div$i68 = (($add1$i|0) / 2)&-1;
        $41 = HEAP32[$sfb21_extra2$i>>2]|0;
        _memset(($bst_cod_info$2304$$sroa_idx$i|0),0,2304)|0;
        $sub$i69 = (($39) + -42)|0;
        $part2_3_length$i = ((((((($gfc)) + 304|0) + (($gr$0104*10504)|0)|0) + (($ch$0100*5252)|0)|0)) + 4768|0);
        $found$0$i = 0;$max_bits$addr$0$i = $39;$min_bits$addr$0$i = $40;$this_bits$0$i = $div$i68;
        while(1) {
         $cmp$i70 = ($this_bits$0$i|0)>($sub$i69|0);
         $$sink$i = $cmp$i70 ? 0 : $41;
         HEAP32[$sfb21_extra2$i>>2] = $$sink$i;
         $call$i71 = (_outer_loop($gfc,$arrayidx11,$arraydecay20,$xrpow,$ch$0100,$this_bits$0$i)|0);
         $cmp7$i = ($call$i71|0)<(1);
         if ($cmp7$i) {
          $42 = HEAP32[$part2_3_length$i>>2]|0;
          _memcpy(($bst_cod_info$i|0),($arrayidx11|0),5252)|0;
          _memcpy(($bst_xrpow$i|0),($xrpow|0),2304)|0;
          $sub10$i = (($42) + -32)|0;
          $sub11$i = (($sub10$i) - ($min_bits$addr$0$i))|0;
          $add12$i = (($sub10$i) + ($min_bits$addr$0$i))|0;
          $div13$i = (($add12$i|0) / 2)&-1;
          $dbits$0$i = $sub11$i;$found$1$i = 1;$max_bits$addr$1$i = $sub10$i;$min_bits$addr$1$i = $min_bits$addr$0$i;$this_bits$1$i = $div13$i;
         } else {
          $add15$i = (($this_bits$0$i) + 32)|0;
          $sub16$i = (($max_bits$addr$0$i) - ($add15$i))|0;
          $add17$i = (($max_bits$addr$0$i) + ($add15$i))|0;
          $div18$i = (($add17$i|0) / 2)&-1;
          $tobool$i72 = ($found$0$i|0)==(0);
          if ($tobool$i72) {
           $dbits$0$i = $sub16$i;$found$1$i = 0;$max_bits$addr$1$i = $max_bits$addr$0$i;$min_bits$addr$1$i = $add15$i;$this_bits$1$i = $div18$i;
          } else {
           _memcpy(($arrayidx11|0),($bst_cod_info$i|0),5252)|0;
           _memcpy(($xrpow|0),($bst_xrpow$i|0),2304)|0;
           $dbits$0$i = $sub16$i;$found$1$i = 2;$max_bits$addr$1$i = $max_bits$addr$0$i;$min_bits$addr$1$i = $add15$i;$this_bits$1$i = $div18$i;
          }
         }
         $cmp23$i = ($dbits$0$i|0)>(12);
         if ($cmp23$i) {
          $found$0$i = $found$1$i;$max_bits$addr$0$i = $max_bits$addr$1$i;$min_bits$addr$0$i = $min_bits$addr$1$i;$this_bits$0$i = $this_bits$1$i;
         } else {
          break;
         }
        }
        HEAP32[$sfb21_extra2$i>>2] = $41;
        $cmp26$i = ($found$1$i|0)==(2);
        if ($cmp26$i) {
         $arraydecay29$i = ((((((($gfc)) + 304|0) + (($gr$0104*10504)|0)|0) + (($ch$0100*5252)|0)|0)) + 2304|0);
         _memcpy(($arraydecay29$i|0),($bst_cod_info$2304$$sroa_idx$i|0),2304)|0;
        }
        $43 = HEAP32[$substep_shaping$i>>2]|0;
        $and = $43 & 1;
        $tobool = ($and|0)==(0);
        if (!($tobool)) {
         _trancate_smallspectrums($gfc,$arrayidx11,$arraydecay20,$xrpow);
        }
        $44 = HEAP32[$part2_3_length$i>>2]|0;
        $part2_length = ((((((($gfc)) + 304|0) + (($gr$0104*10504)|0)|0) + (($ch$0100*5252)|0)|0)) + 4844|0);
        $45 = HEAP32[$part2_length>>2]|0;
        $add = (($44) + ($used_bits$1102))|0;
        $add35 = (($add) + ($45))|0;
        $used_bits$2 = $add35;
       }
      } else {
       $arrayidx6$i = ((((((($gfc)) + 304|0) + (($gr$0104*10504)|0)|0) + (($ch$0100*5252)|0)|0)) + 2304|0);
       _memset(($arrayidx6$i|0),0,2304)|0;
       $used_bits$2 = $used_bits$1102;
      }
      $inc = (($ch$0100) + 1)|0;
      $46 = HEAP32[$channels_out$i74$pre$phiZZ2D>>2]|0;
      $cmp9 = ($inc|0)<($46|0);
      if ($cmp9) {
       $ch$0100 = $inc;$used_bits$1102 = $used_bits$2;
      } else {
       break;
      }
     }
     $$pre123 = HEAP32[$mode_gr$i>>2]|0;
     $47 = $$pre123;$73 = $46;$used_bits$1$lcssa = $used_bits$2;
    } else {
     $47 = $72;$73 = $32;$used_bits$1$lcssa = $used_bits$0106;
    }
    $inc38 = (($gr$0104) + 1)|0;
    $cmp = ($inc38|0)<($47|0);
    if ($cmp) {
     $32 = $73;$72 = $47;$gr$0104 = $inc38;$used_bits$0106 = $used_bits$1$lcssa;
    } else {
     $used_bits$0$lcssa = $used_bits$1$lcssa;
     break;
    }
   }
  } else {
   $used_bits$0$lcssa = 0;
  }
  if ($tobool40) {
   label = 57;
  } else {
   $48 = HEAP32[$enforce_min_bitrate>>2]|0;
   $tobool41 = ($48|0)==(0);
   if ($tobool41) {
    $storemerge$ph = 1;
   } else {
    label = 57;
   }
  }
  if ((label|0) == 57) {
   label = 0;
   $49 = HEAP32[$vbr_min_bitrate_index$i$i>>2]|0;
   $storemerge$ph = $49;
  }
  HEAP32[$bitrate_index$i>>2] = $storemerge$ph;
  $50 = HEAP32[$vbr_max_bitrate_index$i>>2]|0;
  $cmp47108 = ($storemerge$ph|0)<($50|0);
  L93: do {
   if ($cmp47108) {
    $storemerge109 = $storemerge$ph;
    while(1) {
     $arrayidx50 = (($frameBits) + ($storemerge109<<2)|0);
     $51 = HEAP32[$arrayidx50>>2]|0;
     $cmp51 = ($used_bits$0$lcssa|0)>($51|0);
     $inc56 = (($storemerge109) + 1)|0;
     if (!($cmp51)) {
      break L93;
     }
     HEAP32[$bitrate_index$i>>2] = $inc56;
     $cmp47 = ($inc56|0)<($50|0);
     if ($cmp47) {
      $storemerge109 = $inc56;
     } else {
      break;
     }
    }
   }
  } while(0);
  $call58 = (_ResvFrameBegin($gfc,$mean_bits)|0);
  $cmp59 = ($used_bits$0$lcssa|0)>($call58|0);
  $52 = HEAP32[$mode_gr$i>>2]|0;
  $cmp52$i = ($52|0)>(0);
  if (!($cmp59)) {
   break;
  }
  if (!($cmp52$i)) {
   $31 = $52;
   continue;
  }
  $$pre$i = HEAP32[$channels_out$i74$pre$phiZZ2D>>2]|0;
  $cmp350$i = ($$pre$i|0)>(0);
  $gr$053$i = 0;$indvars$iv = $l3_xmin;
  while(1) {
   if ($cmp350$i) {
    $ch$051$i = 0;$indvars$iv115 = $indvars$iv;
    while(1) {
     $arraydecay$i75 = ((($l3_xmin) + (($gr$053$i*312)|0)|0) + (($ch$051$i*156)|0)|0);
     $psy_lmax$i = ((((((($gfc)) + 304|0) + (($gr$053$i*10504)|0)|0) + (($ch$051$i*5252)|0)|0)) + 4856|0);
     $53 = HEAP32[$psy_lmax$i>>2]|0;
     $cmp944$i = ($53|0)>(0);
     if ($cmp944$i) {
      $pxmin$046$i = $arraydecay$i75;$sfb$045$i = 0;
      while(1) {
       $conv$i76 = (+($sfb$045$i|0));
       $54 = $conv$i76 * $conv$i76;
       $div13$i77 = $54 * 5.9917355371900827E-5;
       $add$i78 = $div13$i77 + 1.0;
       $incdec$ptr$i = ((($pxmin$046$i)) + 4|0);
       $55 = +HEAPF32[$pxmin$046$i>>2];
       $conv14$i = $55;
       $mul15$i = $add$i78 * $conv14$i;
       $conv16$i = $mul15$i;
       HEAPF32[$pxmin$046$i>>2] = $conv16$i;
       $inc$i79 = (($sfb$045$i) + 1)|0;
       $exitcond = ($inc$i79|0)==($53|0);
       if ($exitcond) {
        break;
       } else {
        $pxmin$046$i = $incdec$ptr$i;$sfb$045$i = $inc$i79;
       }
      }
      $scevgep117 = (($indvars$iv115) + ($53<<2)|0);
      $pxmin$0$lcssa$i = $scevgep117;
     } else {
      $pxmin$0$lcssa$i = $arraydecay$i75;
     }
     $block_type$i80 = ((((((($gfc)) + 304|0) + (($gr$053$i*10504)|0)|0) + (($ch$051$i*5252)|0)|0)) + 4788|0);
     $56 = HEAP32[$block_type$i80>>2]|0;
     $cmp17$i = ($56|0)==(2);
     if ($cmp17$i) {
      $sfb_smin$i = ((((((($gfc)) + 304|0) + (($gr$053$i*10504)|0)|0) + (($ch$051$i*5252)|0)|0)) + 4852|0);
      $57 = HEAP32[$sfb_smin$i>>2]|0;
      $cmp2047$i = ($57|0)<(13);
      if ($cmp2047$i) {
       $pxmin$149$i = $pxmin$0$lcssa$i;$sfb$148$i = $57;
       while(1) {
        $conv23$i82 = (+($sfb$148$i|0));
        $58 = $conv23$i82 * $conv23$i82;
        $div28$i = $58 * 1.7159763313609469E-4;
        $add29$i = $div28$i + 1.0;
        $incdec$ptr30$i = ((($pxmin$149$i)) + 4|0);
        $59 = +HEAPF32[$pxmin$149$i>>2];
        $conv31$i = $59;
        $mul32$i = $add29$i * $conv31$i;
        $conv33$i = $mul32$i;
        HEAPF32[$pxmin$149$i>>2] = $conv33$i;
        $incdec$ptr41$i = ((($pxmin$149$i)) + 8|0);
        $60 = +HEAPF32[$incdec$ptr30$i>>2];
        $conv42$i = $60;
        $mul43$i = $conv42$i * $add29$i;
        $conv44$i = $mul43$i;
        HEAPF32[$incdec$ptr30$i>>2] = $conv44$i;
        $incdec$ptr52$i = ((($pxmin$149$i)) + 12|0);
        $61 = +HEAPF32[$incdec$ptr41$i>>2];
        $conv53$i = $61;
        $mul54$i = $conv53$i * $add29$i;
        $conv55$i = $mul54$i;
        HEAPF32[$incdec$ptr41$i>>2] = $conv55$i;
        $inc57$i = (($sfb$148$i) + 1)|0;
        $exitcond$i = ($inc57$i|0)==(13);
        if ($exitcond$i) {
         break;
        } else {
         $pxmin$149$i = $incdec$ptr52$i;$sfb$148$i = $inc57$i;
        }
       }
      }
     }
     $arrayidx60$i = ((($min_bits) + ($gr$053$i<<3)|0) + ($ch$051$i<<2)|0);
     $62 = HEAP32[$arrayidx60$i>>2]|0;
     $conv61$i = (+($62|0));
     $arrayidx63$i = ((($max_bits) + ($gr$053$i<<3)|0) + ($ch$051$i<<2)|0);
     $63 = HEAP32[$arrayidx63$i>>2]|0;
     $conv64$i = (+($63|0));
     $mul65$i = $conv64$i * 0.90000000000000002;
     $cmp66$i = $conv61$i > $mul65$i;
     $conv61$mul65$i = $cmp66$i ? $conv61$i : $mul65$i;
     $conv75$i = (~~(($conv61$mul65$i)));
     HEAP32[$arrayidx63$i>>2] = $conv75$i;
     $inc79$i = (($ch$051$i) + 1)|0;
     $cmp3$i = ($inc79$i|0)<($$pre$i|0);
     $scevgep116 = ((($indvars$iv115)) + 156|0);
     if ($cmp3$i) {
      $ch$051$i = $inc79$i;$indvars$iv115 = $scevgep116;
     } else {
      break;
     }
    }
   }
   $inc82$i = (($gr$053$i) + 1)|0;
   $cmp$i83 = ($inc82$i|0)<($52|0);
   $scevgep = ((($indvars$iv)) + 312|0);
   if ($cmp$i83) {
    $gr$053$i = $inc82$i;$indvars$iv = $scevgep;
   } else {
    $31 = $52;
    continue L53;
   }
  }
 }
 if (!($cmp52$i)) {
  $68 = HEAP32[$mean_bits>>2]|0;
  _ResvFrameEnd($gfc,$68);
  STACKTOP = sp;return;
 }
 $l3_side2$i = ((($gfc)) + 304|0);
 $use_best_huffman$i = ((($gfc)) + 36|0);
 $$pre124 = HEAP32[$channels_out$i74$pre$phiZZ2D>>2]|0;
 $64 = $$pre124;$74 = $52;$gr$197 = 0;
 while(1) {
  $cmp7294 = ($64|0)>(0);
  if ($cmp7294) {
   $ch$195 = 0;
   while(1) {
    $arrayidx3$i = ((((($gfc)) + 304|0) + (($gr$197*10504)|0)|0) + (($ch$195*5252)|0)|0);
    _best_scalefac_store($gfc,$gr$197,$ch$195,$l3_side2$i);
    $65 = HEAP32[$use_best_huffman$i>>2]|0;
    $cmp$i84 = ($65|0)==(1);
    if ($cmp$i84) {
     _best_huffman_divide($gfc,$arrayidx3$i);
    }
    _ResvAdjust($gfc,$arrayidx3$i);
    $inc75 = (($ch$195) + 1)|0;
    $66 = HEAP32[$channels_out$i74$pre$phiZZ2D>>2]|0;
    $cmp72 = ($inc75|0)<($66|0);
    if ($cmp72) {
     $ch$195 = $inc75;
    } else {
     break;
    }
   }
   $$pre125 = HEAP32[$mode_gr$i>>2]|0;
   $67 = $$pre125;$75 = $66;
  } else {
   $67 = $74;$75 = $64;
  }
  $inc78 = (($gr$197) + 1)|0;
  $cmp68 = ($inc78|0)<($67|0);
  if ($cmp68) {
   $64 = $75;$74 = $67;$gr$197 = $inc78;
  } else {
   break;
  }
 }
 $68 = HEAP32[$mean_bits>>2]|0;
 _ResvFrameEnd($gfc,$68);
 STACKTOP = sp;return;
}
function _init_outer_loop($gfc,$cod_info) {
 $gfc = $gfc|0;
 $cod_info = $cod_info|0;
 var $$pre = 0, $$sink = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0.0;
 var $61 = 0, $62 = 0, $7 = 0, $8 = 0, $9 = 0, $ATH1$i = 0, $add = 0, $add$i = 0, $add117 = 0, $add124 = 0, $add127 = 0, $add139 = 0, $add32 = 0, $add42 = 0, $add56$1$i = 0, $add56$2$i = 0, $add59 = 0, $add63$1$i = 0, $add63$2$i = 0, $add63$i = 0;
 var $add65 = 0, $add65$sink = 0, $add67$1$i = 0, $add67$2$i = 0, $add67$i = 0, $add73$1$i = 0, $add73$2$i = 0, $add73$i = 0, $add88 = 0, $add99$us$1 = 0, $add99$us$2 = 0, $adjust_factor$i = 0, $adjust_factor75$i = 0, $arraydecay151 = 0, $arrayidx = 0, $arrayidx$i = 0, $arrayidx100$us = 0, $arrayidx100$us$1 = 0, $arrayidx100$us$2 = 0, $arrayidx118 = 0;
 var $arrayidx121 = 0, $arrayidx125 = 0, $arrayidx128 = 0, $arrayidx130 = 0, $arrayidx132 = 0, $arrayidx135 = 0, $arrayidx138 = 0, $arrayidx144 = 0, $arrayidx18$i = 0, $arrayidx19 = 0, $arrayidx22 = 0, $arrayidx23 = 0, $arrayidx24 = 0, $arrayidx46$i = 0, $arrayidx50$i = 0, $arrayidx58$1$i = 0, $arrayidx58$2$i = 0, $arrayidx58$i = 0, $arrayidx6$i = 0, $arrayidx61$i = 0;
 var $arrayidx68$1$i = 0, $arrayidx68$2$i = 0, $arrayidx68$i = 0, $arrayidx76 = 0, $arrayidx77 = 0, $arrayidx77$1$i = 0, $arrayidx77$2$i = 0, $arrayidx77$i = 0, $arrayidx8$i = 0, $arrayidx81$i = 0, $arrayidx85$phi$trans$insert = 0, $arrayidx89 = 0, $arrayidx9$i = 0, $arrayidx95$1$i = 0, $arrayidx95$2$i = 0, $arrayidx95$i = 0, $ath12$0$1$i = 0.0, $ath12$0$2$i = 0.0, $ath12$0$i = 0.0, $ath21$0$i = 0.0;
 var $big_values = 0, $block_type = 0, $call$i = 0.0, $call79$1$i = 0.0, $call79$2$i = 0.0, $call79$i = 0.0, $cmp = 0, $cmp$i = 0, $cmp10$i = 0, $cmp16$i = 0, $cmp1669$i = 0, $cmp21$i = 0, $cmp25 = 0, $cmp3$i = 0, $cmp36 = 0, $cmp37$1$i = 0, $cmp37$2$i = 0, $cmp37$i = 0, $cmp82$1$i = 0, $cmp82$2$i = 0;
 var $cmp82$i = 0, $cmp92$1$i = 0, $cmp92$2$i = 0, $cmp92$i = 0, $cmp9262$1$i = 0, $cmp9262$2$i = 0, $cmp9262$i = 0, $cmp96128 = 0, $cmp99$1$i = 0, $cmp99$2$i = 0, $cmp99$i = 0, $cond = 0, $cond$sink = 0, $cond55 = 0, $count1 = 0, $count1bits = 0, $dec109$1$i = 0, $dec109$2$i = 0, $dec109$i = 0, $dec27$i = 0;
 var $exitcond = 0, $exitcond145 = 0, $exitcond145$1 = 0, $exitcond145$2 = 0, $exitcond148 = 0, $exitcond149 = 0, $fabsf$1$i = 0.0, $fabsf$2$i = 0.0, $fabsf$i = 0.0, $fabsf58$i = 0.0, $floor$i = 0, $floor78$i = 0, $global_gain = 0, $gsfb$073$i = 0, $gsfb34$065$1$i = 0, $gsfb34$065$2$i = 0, $gsfb34$065$i = 0, $inc102$us = 0, $inc102$us$1 = 0, $inc102$us$2 = 0;
 var $incdec$ptr$us = 0, $incdec$ptr$us$1 = 0, $incdec$ptr$us$2 = 0, $ix$0135 = 0, $ix$1$lcssa = 0, $ix$2129$us = 0, $ix$2129$us$1 = 0, $ix$2129$us$2 = 0, $ixwork = 0, $j$0126 = 0, $j$070$i = 0, $j$070$in$i = 0, $j74$063$1$i = 0, $j74$063$2$i = 0, $j74$063$i = 0, $j74$063$in$1$i = 0, $j74$063$in$2$i = 0, $j74$063$in$i = 0, $l91$0130$us = 0, $l91$0130$us$1 = 0;
 var $l91$0130$us$2 = 0, $max_nonzero_coeff = 0, $mixed_block_flag = 0, $mode_gr = 0, $mul = 0, $mul$i = 0.0, $mul41 = 0, $mul47$1$i = 0, $mul47$2$i = 0, $mul47$i = 0, $mul55$2$i = 0, $mul58 = 0, $mul64 = 0, $mul88$1$i = 0.0, $mul88$2$i = 0.0, $mul88$i = 0.0, $mul98$us = 0, $mul98$us$1 = 0, $mul98$us$2 = 0, $part2_3_length = 0;
 var $psy_lmax15 = 0, $psymax = 0, $samplerate_out = 0, $scalefac_compress = 0, $scevgep = 0, $scevgep$1 = 0, $scevgep146 = 0, $sfb$0137 = 0, $sfb$1136 = 0, $sfb$2127 = 0, $sfb21_extra = 0, $sfb21_extra53 = 0, $sfb_lmax = 0, $sfb_partition_table = 0, $sfbdivide = 0, $sfbmax = 0, $sub = 0, $sub122 = 0, $sub40 = 0, $sub54$1$i = 0;
 var $sub54$2$i = 0, $sub57 = 0, $sub62$1$i = 0, $sub62$2$i = 0, $sub62$i = 0, $sub63 = 0, $sub69 = 0, $sub72$1$i = 0, $sub72$2$i = 0, $sub72$i = 0, $tobool = 0, $tobool29 = 0, $tobool54 = 0, $vbr = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2304|0;
 $ixwork = sp;
 $part2_3_length = ((($cod_info)) + 4768|0);
 HEAP32[$part2_3_length>>2] = 0;
 $big_values = ((($cod_info)) + 4772|0);
 HEAP32[$big_values>>2] = 0;
 $count1 = ((($cod_info)) + 4776|0);
 HEAP32[$count1>>2] = 0;
 $global_gain = ((($cod_info)) + 4780|0);
 HEAP32[$global_gain>>2] = 210;
 $scalefac_compress = ((($cod_info)) + 4784|0);
 HEAP32[$scalefac_compress>>2] = 0;
 $arrayidx = ((($cod_info)) + 4796|0);
 $samplerate_out = ((($gfc)) + 64|0);
 dest=$arrayidx; stop=dest+52|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = HEAP32[$samplerate_out>>2]|0;
 $cmp = ($0|0)<(8001);
 $sfb_lmax = ((($cod_info)) + 4848|0);
 if ($cmp) {
  HEAP32[$sfb_lmax>>2] = 17;
  $$sink = 9;$3 = 17;$cond$sink = 17;
 } else {
  HEAP32[$sfb_lmax>>2] = 21;
  $sfb21_extra = ((($gfc)) + 85092|0);
  $1 = HEAP32[$sfb21_extra>>2]|0;
  $tobool = ($1|0)!=(0);
  $cond = $tobool ? 22 : 21;
  $$sink = 12;$3 = 21;$cond$sink = $cond;
 }
 $2 = ((($cod_info)) + 4852|0);
 HEAP32[$2>>2] = $$sink;
 $psy_lmax15 = ((($cod_info)) + 4856|0);
 HEAP32[$psy_lmax15>>2] = $cond$sink;
 $psymax = ((($cod_info)) + 4864|0);
 HEAP32[$psymax>>2] = $cond$sink;
 $sfbmax = ((($cod_info)) + 4860|0);
 HEAP32[$sfbmax>>2] = $3;
 $sfbdivide = ((($cod_info)) + 4868|0);
 HEAP32[$sfbdivide>>2] = 11;
 $sfb$0137 = 0;
 while(1) {
  $add = (($sfb$0137) + 1)|0;
  $arrayidx19 = (((($gfc)) + 21360|0) + ($add<<2)|0);
  $4 = HEAP32[$arrayidx19>>2]|0;
  $arrayidx22 = (((($gfc)) + 21360|0) + ($sfb$0137<<2)|0);
  $5 = HEAP32[$arrayidx22>>2]|0;
  $sub = (($4) - ($5))|0;
  $arrayidx23 = (((($cod_info)) + 4872|0) + ($sfb$0137<<2)|0);
  HEAP32[$arrayidx23>>2] = $sub;
  $arrayidx24 = (((($cod_info)) + 5028|0) + ($sfb$0137<<2)|0);
  HEAP32[$arrayidx24>>2] = 3;
  $exitcond149 = ($add|0)==(22);
  if ($exitcond149) {
   break;
  } else {
   $sfb$0137 = $add;
  }
 }
 $block_type = ((($cod_info)) + 4788|0);
 $6 = HEAP32[$block_type>>2]|0;
 $cmp25 = ($6|0)==(2);
 if ($cmp25) {
  HEAP32[$2>>2] = 0;
  HEAP32[$sfb_lmax>>2] = 0;
  $mixed_block_flag = ((($cod_info)) + 4792|0);
  $7 = HEAP32[$mixed_block_flag>>2]|0;
  $tobool29 = ($7|0)==(0);
  if ($tobool29) {
   $10 = 0;$11 = 0;
  } else {
   HEAP32[$2>>2] = 3;
   $mode_gr = ((($gfc)) + 76|0);
   $8 = HEAP32[$mode_gr>>2]|0;
   $mul = $8 << 1;
   $add32 = (($mul) + 4)|0;
   HEAP32[$sfb_lmax>>2] = $add32;
   $10 = 3;$11 = $add32;
  }
  $9 = HEAP32[$samplerate_out>>2]|0;
  $cmp36 = ($9|0)<(8001);
  if ($cmp36) {
   $sub40 = (9 - ($10))|0;
   $mul41 = ($sub40*3)|0;
   $add42 = (($mul41) + ($11))|0;
   HEAP32[$psymax>>2] = $add42;
   $add65$sink = $add42;
  } else {
   $sfb21_extra53 = ((($gfc)) + 85092|0);
   $12 = HEAP32[$sfb21_extra53>>2]|0;
   $tobool54 = ($12|0)!=(0);
   $cond55 = $tobool54 ? 13 : 12;
   $sub57 = (($cond55) - ($10))|0;
   $mul58 = ($sub57*3)|0;
   $add59 = (($mul58) + ($11))|0;
   HEAP32[$psymax>>2] = $add59;
   $sub63 = (12 - ($10))|0;
   $mul64 = ($sub63*3)|0;
   $add65 = (($11) + ($mul64))|0;
   $add65$sink = $add65;
  }
  HEAP32[$sfbmax>>2] = $add65$sink;
  $sub69 = (($add65$sink) + -18)|0;
  HEAP32[$sfbdivide>>2] = $sub69;
  HEAP32[$psy_lmax15>>2] = $11;
  $arrayidx76 = (((($gfc)) + 21360|0) + ($11<<2)|0);
  $13 = HEAP32[$arrayidx76>>2]|0;
  _memcpy(($ixwork|0),($cod_info|0),2304)|0;
  $arrayidx77 = (($cod_info) + ($13<<2)|0);
  $arrayidx85$phi$trans$insert = (((($gfc)) + 21452|0) + ($10<<2)|0);
  $$pre = HEAP32[$arrayidx85$phi$trans$insert>>2]|0;
  $15 = $$pre;$ix$0135 = $arrayidx77;$sfb$1136 = $10;
  while(1) {
   $add88 = (($sfb$1136) + 1)|0;
   $arrayidx89 = (((($gfc)) + 21452|0) + ($add88<<2)|0);
   $14 = HEAP32[$arrayidx89>>2]|0;
   $cmp96128 = ($14|0)>($15|0);
   if ($cmp96128) {
    $16 = (($14) - ($15))|0;
    $17 = (($14) - ($15))|0;
    $18 = ($17*3)|0;
    $ix$2129$us = $ix$0135;$l91$0130$us = $15;
    while(1) {
     $mul98$us = ($l91$0130$us*3)|0;
     $arrayidx100$us = (($ixwork) + ($mul98$us<<2)|0);
     $19 = HEAP32[$arrayidx100$us>>2]|0;
     $incdec$ptr$us = ((($ix$2129$us)) + 4|0);
     HEAP32[$ix$2129$us>>2] = $19;
     $inc102$us = (($l91$0130$us) + 1)|0;
     $exitcond145 = ($inc102$us|0)==($14|0);
     if ($exitcond145) {
      break;
     } else {
      $ix$2129$us = $incdec$ptr$us;$l91$0130$us = $inc102$us;
     }
    }
    $scevgep = (($ix$0135) + ($16<<2)|0);
    $ix$2129$us$1 = $scevgep;$l91$0130$us$1 = $15;
    while(1) {
     $mul98$us$1 = ($l91$0130$us$1*3)|0;
     $add99$us$1 = (($mul98$us$1) + 1)|0;
     $arrayidx100$us$1 = (($ixwork) + ($add99$us$1<<2)|0);
     $61 = HEAP32[$arrayidx100$us$1>>2]|0;
     $incdec$ptr$us$1 = ((($ix$2129$us$1)) + 4|0);
     HEAP32[$ix$2129$us$1>>2] = $61;
     $inc102$us$1 = (($l91$0130$us$1) + 1)|0;
     $exitcond145$1 = ($inc102$us$1|0)==($14|0);
     if ($exitcond145$1) {
      break;
     } else {
      $ix$2129$us$1 = $incdec$ptr$us$1;$l91$0130$us$1 = $inc102$us$1;
     }
    }
    $scevgep$1 = (($scevgep) + ($16<<2)|0);
    $ix$2129$us$2 = $scevgep$1;$l91$0130$us$2 = $15;
    while(1) {
     $mul98$us$2 = ($l91$0130$us$2*3)|0;
     $add99$us$2 = (($mul98$us$2) + 2)|0;
     $arrayidx100$us$2 = (($ixwork) + ($add99$us$2<<2)|0);
     $62 = HEAP32[$arrayidx100$us$2>>2]|0;
     $incdec$ptr$us$2 = ((($ix$2129$us$2)) + 4|0);
     HEAP32[$ix$2129$us$2>>2] = $62;
     $inc102$us$2 = (($l91$0130$us$2) + 1)|0;
     $exitcond145$2 = ($inc102$us$2|0)==($14|0);
     if ($exitcond145$2) {
      break;
     } else {
      $ix$2129$us$2 = $incdec$ptr$us$2;$l91$0130$us$2 = $inc102$us$2;
     }
    }
    $scevgep146 = (($ix$0135) + ($18<<2)|0);
    $ix$1$lcssa = $scevgep146;
   } else {
    $ix$1$lcssa = $ix$0135;
   }
   $exitcond148 = ($add88|0)==(13);
   if ($exitcond148) {
    $j$0126 = $11;$sfb$2127 = $10;
    break;
   } else {
    $15 = $14;$ix$0135 = $ix$1$lcssa;$sfb$1136 = $add88;
   }
  }
  while(1) {
   $add117 = (($sfb$2127) + 1)|0;
   $arrayidx118 = (((($gfc)) + 21452|0) + ($add117<<2)|0);
   $20 = HEAP32[$arrayidx118>>2]|0;
   $arrayidx121 = (((($gfc)) + 21452|0) + ($sfb$2127<<2)|0);
   $21 = HEAP32[$arrayidx121>>2]|0;
   $sub122 = (($20) - ($21))|0;
   $add124 = (($j$0126) + 2)|0;
   $arrayidx125 = (((($cod_info)) + 4872|0) + ($add124<<2)|0);
   HEAP32[$arrayidx125>>2] = $sub122;
   $add127 = (($j$0126) + 1)|0;
   $arrayidx128 = (((($cod_info)) + 4872|0) + ($add127<<2)|0);
   HEAP32[$arrayidx128>>2] = $sub122;
   $arrayidx130 = (((($cod_info)) + 4872|0) + ($j$0126<<2)|0);
   HEAP32[$arrayidx130>>2] = $sub122;
   $arrayidx132 = (((($cod_info)) + 5028|0) + ($j$0126<<2)|0);
   HEAP32[$arrayidx132>>2] = 0;
   $arrayidx135 = (((($cod_info)) + 5028|0) + ($add127<<2)|0);
   HEAP32[$arrayidx135>>2] = 1;
   $arrayidx138 = (((($cod_info)) + 5028|0) + ($add124<<2)|0);
   HEAP32[$arrayidx138>>2] = 2;
   $add139 = (($j$0126) + 3)|0;
   $exitcond = ($add117|0)==(13);
   if ($exitcond) {
    break;
   } else {
    $j$0126 = $add139;$sfb$2127 = $add117;
   }
  }
 }
 $count1bits = ((($cod_info)) + 5184|0);
 HEAP32[$count1bits>>2] = 0;
 $sfb_partition_table = ((($cod_info)) + 5188|0);
 HEAP32[$sfb_partition_table>>2] = 6100;
 $arrayidx144 = ((($cod_info)) + 5192|0);
 $max_nonzero_coeff = ((($cod_info)) + 5208|0);
 ;HEAP32[$arrayidx144>>2]=0|0;HEAP32[$arrayidx144+4>>2]=0|0;HEAP32[$arrayidx144+8>>2]=0|0;HEAP32[$arrayidx144+12>>2]=0|0;
 HEAP32[$max_nonzero_coeff>>2] = 575;
 $arraydecay151 = ((($cod_info)) + 4608|0);
 _memset(($arraydecay151|0),0,156)|0;
 $vbr = ((($gfc)) + 104|0);
 $22 = HEAP32[$vbr>>2]|0;
 switch ($22|0) {
 case 0: case 3: case 4: case 1:  {
  STACKTOP = sp;return;
  break;
 }
 default: {
 }
 }
 $ATH1$i = ((($gfc)) + 85796|0);
 $23 = HEAP32[$ATH1$i>>2]|0;
 $24 = HEAP32[$block_type>>2]|0;
 $cmp$i = ($24|0)==(2);
 if (!($cmp$i)) {
  $adjust_factor$i = ((($23)) + 8|0);
  $floor$i = ((($23)) + 20|0);
  $arrayidx9$i = ((($gfc)) + 84852|0);
  $gsfb$073$i = 5;
  L40: while(1) {
   $arrayidx$i = (((($gfc)) + 21508|0) + ($gsfb$073$i<<2)|0);
   $25 = HEAP32[$arrayidx$i>>2]|0;
   $add$i = (($gsfb$073$i) + 1)|0;
   $arrayidx6$i = (((($gfc)) + 21508|0) + ($add$i<<2)|0);
   $26 = HEAP32[$arrayidx6$i>>2]|0;
   $27 = +HEAPF32[$adjust_factor$i>>2];
   $arrayidx8$i = (((($23)) + 164|0) + ($gsfb$073$i<<2)|0);
   $28 = +HEAPF32[$arrayidx8$i>>2];
   $29 = +HEAPF32[$floor$i>>2];
   $call$i = (+_athAdjust($27,$28,$29,0.0));
   $30 = +HEAPF32[$arrayidx9$i>>2];
   $cmp10$i = $30 > 9.999999960041972E-13;
   $mul$i = $30 * $call$i;
   $ath21$0$i = $cmp10$i ? $mul$i : $call$i;
   $cmp1669$i = ($26|0)>($25|0);
   if ($cmp1669$i) {
    $j$070$in$i = $26;
    while(1) {
     $j$070$i = (($j$070$in$i) + -1)|0;
     $arrayidx18$i = (($cod_info) + ($j$070$i<<2)|0);
     $31 = +HEAPF32[$arrayidx18$i>>2];
     $fabsf58$i = (+Math_abs((+$31)));
     $cmp21$i = $fabsf58$i < $ath21$0$i;
     if (!($cmp21$i)) {
      label = 43;
      break L40;
     }
     HEAPF32[$arrayidx18$i>>2] = 0.0;
     $cmp16$i = ($j$070$i|0)>($25|0);
     if ($cmp16$i) {
      $j$070$in$i = $j$070$i;
     } else {
      break;
     }
    }
   }
   $dec27$i = (($gsfb$073$i) + -1)|0;
   $cmp3$i = ($gsfb$073$i|0)>(0);
   if ($cmp3$i) {
    $gsfb$073$i = $dec27$i;
   } else {
    label = 43;
    break;
   }
  }
  if ((label|0) == 43) {
   STACKTOP = sp;return;
  }
 }
 $arrayidx46$i = ((($gfc)) + 21500|0);
 $arrayidx50$i = ((($gfc)) + 21504|0);
 $arrayidx61$i = ((($gfc)) + 21536|0);
 $adjust_factor75$i = ((($23)) + 8|0);
 $floor78$i = ((($23)) + 20|0);
 $arrayidx81$i = ((($gfc)) + 84904|0);
 $gsfb34$065$i = 5;
 L51: while(1) {
  $32 = HEAP32[$arrayidx46$i>>2]|0;
  $mul47$i = ($32*3)|0;
  $arrayidx58$i = (((($gfc)) + 21536|0) + ($gsfb34$065$i<<2)|0);
  $33 = HEAP32[$arrayidx58$i>>2]|0;
  $34 = HEAP32[$arrayidx61$i>>2]|0;
  $sub62$i = (($33) - ($34))|0;
  $add63$i = (($sub62$i) + ($mul47$i))|0;
  $add67$i = (($gsfb34$065$i) + 1)|0;
  $arrayidx68$i = (((($gfc)) + 21536|0) + ($add67$i<<2)|0);
  $35 = HEAP32[$arrayidx68$i>>2]|0;
  $sub72$i = (($35) - ($33))|0;
  $36 = +HEAPF32[$adjust_factor75$i>>2];
  $arrayidx77$i = (((($23)) + 188|0) + ($gsfb34$065$i<<2)|0);
  $37 = +HEAPF32[$arrayidx77$i>>2];
  $38 = +HEAPF32[$floor78$i>>2];
  $call79$i = (+_athAdjust($36,$37,$38,0.0));
  $39 = +HEAPF32[$arrayidx81$i>>2];
  $cmp82$i = $39 > 9.999999960041972E-13;
  $mul88$i = $39 * $call79$i;
  $ath12$0$i = $cmp82$i ? $mul88$i : $call79$i;
  $cmp9262$i = ($sub72$i|0)>(0);
  if ($cmp9262$i) {
   $add73$i = (($sub72$i) + ($add63$i))|0;
   $j74$063$in$i = $add73$i;
   while(1) {
    $j74$063$i = (($j74$063$in$i) + -1)|0;
    $arrayidx95$i = (($cod_info) + ($j74$063$i<<2)|0);
    $40 = +HEAPF32[$arrayidx95$i>>2];
    $fabsf$i = (+Math_abs((+$40)));
    $cmp99$i = $fabsf$i < $ath12$0$i;
    if (!($cmp99$i)) {
     $gsfb34$065$1$i = 5;
     break L51;
    }
    HEAPF32[$arrayidx95$i>>2] = 0.0;
    $cmp92$i = ($j74$063$i|0)>($add63$i|0);
    if ($cmp92$i) {
     $j74$063$in$i = $j74$063$i;
    } else {
     break;
    }
   }
  }
  $dec109$i = (($gsfb34$065$i) + -1)|0;
  $cmp37$i = ($gsfb34$065$i|0)>(0);
  if ($cmp37$i) {
   $gsfb34$065$i = $dec109$i;
  } else {
   $gsfb34$065$1$i = 5;
   break;
  }
 }
 L59: while(1) {
  $41 = HEAP32[$arrayidx46$i>>2]|0;
  $mul47$1$i = ($41*3)|0;
  $42 = HEAP32[$arrayidx50$i>>2]|0;
  $sub54$1$i = (($42) - ($41))|0;
  $add56$1$i = (($sub54$1$i) + ($mul47$1$i))|0;
  $arrayidx58$1$i = (((($gfc)) + 21536|0) + ($gsfb34$065$1$i<<2)|0);
  $43 = HEAP32[$arrayidx58$1$i>>2]|0;
  $44 = HEAP32[$arrayidx61$i>>2]|0;
  $sub62$1$i = (($43) - ($44))|0;
  $add63$1$i = (($add56$1$i) + ($sub62$1$i))|0;
  $add67$1$i = (($gsfb34$065$1$i) + 1)|0;
  $arrayidx68$1$i = (((($gfc)) + 21536|0) + ($add67$1$i<<2)|0);
  $45 = HEAP32[$arrayidx68$1$i>>2]|0;
  $sub72$1$i = (($45) - ($43))|0;
  $46 = +HEAPF32[$adjust_factor75$i>>2];
  $arrayidx77$1$i = (((($23)) + 188|0) + ($gsfb34$065$1$i<<2)|0);
  $47 = +HEAPF32[$arrayidx77$1$i>>2];
  $48 = +HEAPF32[$floor78$i>>2];
  $call79$1$i = (+_athAdjust($46,$47,$48,0.0));
  $49 = +HEAPF32[$arrayidx81$i>>2];
  $cmp82$1$i = $49 > 9.999999960041972E-13;
  $mul88$1$i = $49 * $call79$1$i;
  $ath12$0$1$i = $cmp82$1$i ? $mul88$1$i : $call79$1$i;
  $cmp9262$1$i = ($sub72$1$i|0)>(0);
  if ($cmp9262$1$i) {
   $add73$1$i = (($sub72$1$i) + ($add63$1$i))|0;
   $j74$063$in$1$i = $add73$1$i;
   while(1) {
    $j74$063$1$i = (($j74$063$in$1$i) + -1)|0;
    $arrayidx95$1$i = (($cod_info) + ($j74$063$1$i<<2)|0);
    $50 = +HEAPF32[$arrayidx95$1$i>>2];
    $fabsf$1$i = (+Math_abs((+$50)));
    $cmp99$1$i = $fabsf$1$i < $ath12$0$1$i;
    if (!($cmp99$1$i)) {
     $gsfb34$065$2$i = 5;
     break L59;
    }
    HEAPF32[$arrayidx95$1$i>>2] = 0.0;
    $cmp92$1$i = ($j74$063$1$i|0)>($add63$1$i|0);
    if ($cmp92$1$i) {
     $j74$063$in$1$i = $j74$063$1$i;
    } else {
     break;
    }
   }
  }
  $dec109$1$i = (($gsfb34$065$1$i) + -1)|0;
  $cmp37$1$i = ($gsfb34$065$1$i|0)>(0);
  if ($cmp37$1$i) {
   $gsfb34$065$1$i = $dec109$1$i;
  } else {
   $gsfb34$065$2$i = 5;
   break;
  }
 }
 L67: while(1) {
  $51 = HEAP32[$arrayidx46$i>>2]|0;
  $mul47$2$i = ($51*3)|0;
  $52 = HEAP32[$arrayidx50$i>>2]|0;
  $sub54$2$i = (($52) - ($51))|0;
  $mul55$2$i = $sub54$2$i << 1;
  $add56$2$i = (($mul55$2$i) + ($mul47$2$i))|0;
  $arrayidx58$2$i = (((($gfc)) + 21536|0) + ($gsfb34$065$2$i<<2)|0);
  $53 = HEAP32[$arrayidx58$2$i>>2]|0;
  $54 = HEAP32[$arrayidx61$i>>2]|0;
  $sub62$2$i = (($53) - ($54))|0;
  $add63$2$i = (($add56$2$i) + ($sub62$2$i))|0;
  $add67$2$i = (($gsfb34$065$2$i) + 1)|0;
  $arrayidx68$2$i = (((($gfc)) + 21536|0) + ($add67$2$i<<2)|0);
  $55 = HEAP32[$arrayidx68$2$i>>2]|0;
  $sub72$2$i = (($55) - ($53))|0;
  $56 = +HEAPF32[$adjust_factor75$i>>2];
  $arrayidx77$2$i = (((($23)) + 188|0) + ($gsfb34$065$2$i<<2)|0);
  $57 = +HEAPF32[$arrayidx77$2$i>>2];
  $58 = +HEAPF32[$floor78$i>>2];
  $call79$2$i = (+_athAdjust($56,$57,$58,0.0));
  $59 = +HEAPF32[$arrayidx81$i>>2];
  $cmp82$2$i = $59 > 9.999999960041972E-13;
  $mul88$2$i = $59 * $call79$2$i;
  $ath12$0$2$i = $cmp82$2$i ? $mul88$2$i : $call79$2$i;
  $cmp9262$2$i = ($sub72$2$i|0)>(0);
  if ($cmp9262$2$i) {
   $add73$2$i = (($sub72$2$i) + ($add63$2$i))|0;
   $j74$063$in$2$i = $add73$2$i;
   while(1) {
    $j74$063$2$i = (($j74$063$in$2$i) + -1)|0;
    $arrayidx95$2$i = (($cod_info) + ($j74$063$2$i<<2)|0);
    $60 = +HEAPF32[$arrayidx95$2$i>>2];
    $fabsf$2$i = (+Math_abs((+$60)));
    $cmp99$2$i = $fabsf$2$i < $ath12$0$2$i;
    if (!($cmp99$2$i)) {
     label = 43;
     break L67;
    }
    HEAPF32[$arrayidx95$2$i>>2] = 0.0;
    $cmp92$2$i = ($j74$063$2$i|0)>($add63$2$i|0);
    if ($cmp92$2$i) {
     $j74$063$in$2$i = $j74$063$2$i;
    } else {
     break;
    }
   }
  }
  $dec109$2$i = (($gsfb34$065$2$i) + -1)|0;
  $cmp37$2$i = ($gsfb34$065$2$i|0)>(0);
  if ($cmp37$2$i) {
   $gsfb34$065$2$i = $dec109$2$i;
  } else {
   label = 43;
   break;
  }
 }
 if ((label|0) == 43) {
  STACKTOP = sp;return;
 }
}
function _outer_loop($gfc,$cod_info,$l3_xmin,$xrpow,$ch,$targ_bits) {
 $gfc = $gfc|0;
 $cod_info = $cod_info|0;
 $l3_xmin = $l3_xmin|0;
 $xrpow = $xrpow|0;
 $ch = $ch|0;
 $targ_bits = $targ_bits|0;
 var $$ = 0, $$$i$i = 0.0, $$50$i$i = 0, $$58 = 0, $$add$i = 0, $$flag_GoneOver$0$i = 0, $$flag_GoneOver$02$i = 0, $$lcssa$i = 0, $$lcssa$i$i = 0, $$lcssa102 = 0, $$lcssa104 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i63$i = 0, $$pre$i67 = 0.0, $$pre125$i$i = 0, $$pre160 = 0.0, $$pre161 = 0.0, $$pre162 = 0.0;
 var $$pre163 = 0.0, $$pre63$i$i = 0, $$s1$0$i$i = 0, $$s2$0$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0, $106 = 0, $107 = 0.0, $108 = 0.0, $109 = 0, $11 = 0, $110 = 0.0, $111 = 0.0;
 var $112 = 0.0, $113 = 0.0, $114 = 0.0, $115 = 0.0, $116 = 0.0, $117 = 0.0, $118 = 0, $119 = 0.0, $12 = 0, $120 = 0.0, $121 = 0.0, $122 = 0.0, $123 = 0.0, $124 = 0.0, $125 = 0.0, $126 = 0.0, $127 = 0.0, $128 = 0.0, $129 = 0.0, $13 = 0;
 var $130 = 0.0, $131 = 0.0, $132 = 0.0, $133 = 0.0, $134 = 0.0, $135 = 0, $136 = 0.0, $137 = 0.0, $138 = 0.0, $139 = 0.0, $14 = 0.0, $140 = 0.0, $141 = 0.0, $142 = 0.0, $143 = 0, $144 = 0.0, $145 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0.0;
 var $149 = 0.0, $15 = 0, $150 = 0.0, $151 = 0.0, $152 = 0.0, $153 = 0.0, $154 = 0.0, $155 = 0.0, $156 = 0, $157 = 0, $158 = 0, $159 = 0.0, $16 = 0.0, $160 = 0.0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0.0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0.0, $179 = 0.0, $18 = 0, $180 = 0, $181 = 0.0, $182 = 0.0, $19 = 0.0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0.0, $43 = 0.0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0.0, $64 = 0, $65 = 0.0, $66 = 0.0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0.0;
 var $93 = 0.0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0.0, $99 = 0.0, $CurrentStep$012$i = 0, $CurrentStep$1$i = 0, $CurrentStep$2$i = 0, $CurrentStep$3$i = 0, $Direction$014$i = 0, $Direction$1$i = 0, $add = 0, $add$i = 0, $add$i$i = 0, $add$i$i$i = 0.0, $add$i$i78 = 0.0, $add$i25$i = 0, $add$i38$i = 0;
 var $add$i53$i = 0, $add$i70$i = 0, $add$i72 = 0.0, $add10$i$i = 0, $add104$i$i = 0, $add136 = 0, $add156$i = 0.0, $add16$i$i = 0, $add180$i = 0.0, $add183$i = 0.0, $add20$i = 0.0, $add209$i = 0.0, $add214$i = 0.0, $add22 = 0, $add27$i$i = 0, $add4$i$i = 0, $add44$i$i = 0, $add59$i$i = 0, $add60$i$i = 0, $add62$i$i = 0;
 var $add64$i$i = 0, $add64$sink$i$i = 0, $add69$i$i = 0, $add69$i57$i = 0, $add86$i$i = 0, $add90$i$i = 0, $add97$i$i = 0, $age$1 = 0, $age$2 = 0, $and = 0, $and$i$i = 0, $and$i71$i = 0, $and167 = 0, $arrayidx = 0, $arrayidx$i = 0, $arrayidx$i$i = 0, $arrayidx$i$i76 = 0, $arrayidx$i24$i = 0, $arrayidx$i35$i = 0, $arrayidx$i49$i = 0;
 var $arrayidx$i63 = 0, $arrayidx$i66$i = 0, $arrayidx1$i$i = 0, $arrayidx1$i36$i = 0, $arrayidx10$i$i = 0, $arrayidx105$i$i = 0, $arrayidx11$i$i = 0, $arrayidx17 = 0, $arrayidx2$i$i = 0, $arrayidx2$i37$i = 0, $arrayidx2$i67$i = 0, $arrayidx21$i$i = 0, $arrayidx23 = 0, $arrayidx3$i = 0, $arrayidx3$i$i = 0, $arrayidx33$i$i = 0, $arrayidx40$i$i = 0, $arrayidx41$i$i = 0, $arrayidx42$i$i = 0, $arrayidx48$i$i = 0;
 var $arrayidx51$i$i = 0, $arrayidx61$i$i = 0, $arrayidx63$i$i = 0, $arrayidx70$i$i = 0, $arrayidx70$i58$i = 0, $bRefine$0138 = 0, $best_ggain_pass1$0139 = 0, $best_noise_info = 0, $best_part2_3_length$0137 = 0, $best_part2_3_length$1 = 0, $best_part2_3_length$2 = 0, $best_part2_3_length$394 = 0, $better$0 = 0, $better$0$i = 0, $better$0$in = 0, $better$1$i = 0, $bits = 0, $bits83 = 0, $block_type$i = 0, $block_type84 = 0;
 var $call$i = 0, $call$i$i$i = 0.0, $call$lcssa$i = 0, $call15$i = 0, $call2$i = 0, $call21$i = 0, $call36$i = 0, $call44 = 0, $call44125 = 0, $call61 = 0, $call61131 = 0, $call8$i = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i = 0, $cmp$i$i80 = 0, $cmp$i23$i = 0, $cmp$i32$i = 0, $cmp$i45$i = 0, $cmp$i62 = 0;
 var $cmp$i68 = 0, $cmp$i78$i = 0, $cmp1$i$i = 0, $cmp10$i = 0, $cmp10$i$i = 0, $cmp101 = 0, $cmp102$i$i = 0, $cmp102114$i$i = 0, $cmp104$i = 0, $cmp109 = 0, $cmp109$i = 0, $cmp11$i = 0, $cmp11$i$i = 0, $cmp110$i$i = 0, $cmp114 = 0, $cmp118$i$i = 0, $cmp119$i = 0, $cmp12$i = 0, $cmp126 = 0, $cmp127$i = 0;
 var $cmp132$i = 0, $cmp137 = 0, $cmp14 = 0, $cmp14$i$i = 0, $cmp140 = 0, $cmp142$i = 0, $cmp15$i$i = 0, $cmp157$i = 0, $cmp162$i = 0, $cmp167$i = 0, $cmp175$i = 0, $cmp184$i = 0, $cmp19 = 0, $cmp19$i$i = 0, $cmp19102$i$i = 0, $cmp194$i = 0, $cmp2$i = 0, $cmp2$i50$i = 0, $cmp202$i = 0, $cmp21$i = 0;
 var $cmp215$i = 0, $cmp22$i$i = 0, $cmp224$i = 0, $cmp23$i = 0, $cmp233$i = 0, $cmp245$i = 0, $cmp25 = 0, $cmp257$i = 0, $cmp259$i$i = 0, $cmp26$i$i = 0, $cmp262$i = 0, $cmp27$i = 0, $cmp271$i = 0, $cmp28$i = 0, $cmp280$i = 0, $cmp29$i$i = 0, $cmp292$i = 0, $cmp3$i$i = 0, $cmp3$i26$i = 0, $cmp3$i39$i = 0;
 var $cmp30$i$i = 0, $cmp304$i = 0, $cmp309$i = 0, $cmp31$i = 0, $cmp318$i = 0, $cmp32$i = 0, $cmp324$i = 0, $cmp330$i = 0, $cmp34$i = 0, $cmp34$i$i = 0, $cmp34$i73 = 0, $cmp342$i = 0, $cmp345$i = 0, $cmp347$i = 0, $cmp35$i$i = 0, $cmp36$i$i = 0, $cmp360$i = 0, $cmp365$i = 0, $cmp3655$i$i = 0, $cmp370$i = 0;
 var $cmp376$i = 0, $cmp39 = 0, $cmp39$i = 0, $cmp4$i = 0, $cmp4$i$i = 0, $cmp410$i = 0, $cmp42$i$i = 0, $cmp46 = 0, $cmp46$i = 0, $cmp46126 = 0, $cmp47$i$i = 0, $cmp47109$i$i = 0, $cmp48 = 0, $cmp48$ = 0, $cmp48$128 = 0, $cmp48127 = 0, $cmp5$i = 0, $cmp5$i69 = 0, $cmp52$i$i = 0, $cmp53 = 0;
 var $cmp56$i = 0, $cmp57 = 0, $cmp58$i$i = 0, $cmp63 = 0, $cmp63132 = 0, $cmp66$i$i = 0, $cmp6653$i$i = 0, $cmp67 = 0, $cmp67$ = 0, $cmp67$134 = 0, $cmp67$i = 0, $cmp67$i$i = 0, $cmp67107$i$i = 0, $cmp67133 = 0, $cmp7$i = 0, $cmp7$i$i = 0, $cmp71$i = 0, $cmp74$i$i = 0, $cmp74$i60$i = 0, $cmp75 = 0;
 var $cmp8$i$i = 0, $cmp8$i22$i = 0, $cmp8$i31$i = 0, $cmp8$i54$i = 0, $cmp8$i76$i = 0, $cmp82$i = 0, $cmp833$i$i = 0, $cmp85 = 0, $cmp85$i$i = 0, $cmp87$i = 0, $cmp898$i$i = 0, $cmp9$i = 0, $cmp9$i65 = 0, $cmp9$i70 = 0, $cmp92$i = 0, $cmp97 = 0, $cmp97$i = 0, $cod_info_w = 0, $cond$i = 0, $cond$i$i = 0.0;
 var $conv$i = 0, $conv$i$i = 0.0, $conv$i$i$i = 0.0, $conv$i$i77 = 0.0, $conv10$i = 0, $conv103$i = 0.0, $conv108$i = 0.0, $conv15$i = 0.0, $conv166$i = 0.0, $conv19$i = 0.0, $conv22$i$i = 0.0, $conv25$i$i = 0.0, $conv3$i$i$i = 0.0, $conv32$i$i = 0.0, $conv77$i = 0.0, $conv83$i = 0, $conv88$i = 0, $distort = 0, $div$i = 0, $div17$i = 0;
 var $exitcond$i = 0, $fabsf$i = 0.0, $fabsf105$i = 0.0, $fabsf106$i = 0.0, $fabsf107$i = 0.0, $fabsf108$i = 0.0, $fabsf109$i = 0.0, $fabsf110$i = 0.0, $fabsf111$i = 0.0, $fabsf112$i = 0.0, $fabsf113$i = 0.0, $fabsf114$i = 0.0, $fabsf115$i = 0.0, $factor$i = 0.0, $factor118$i = 0.0, $flag_GoneOver$013$i = 0, $flag_GoneOver$3$i = 0, $flag_GoneOver$5$i = 0, $full_outer_loop = 0, $global_gain$i = 0;
 var $inc = 0, $inc$i = 0, $inc$i$i = 0, $inc$i$i79 = 0, $inc$i27$i = 0, $inc$i40$i = 0, $inc$i51$i = 0, $inc$i72$i = 0, $inc100 = 0, $inc117$i$i = 0, $inc126$pre$phi$i$iZ2D = 0, $inc20$i$i = 0, $inc25$i$i = 0, $inc39$i$i = 0, $inc64$i$i = 0, $inc72 = 0, $inc81$i$i = 0, $inc82$i$i = 0, $inc91$i$i = 0, $j$0$lcssa$i$i = 0;
 var $j$0110$i$i = 0, $j$037$i$i = 0, $j$058$i$i = 0, $klemm_noise$0$lcssa$i$i = 0.0, $klemm_noise$09$i$i = 0.0, $l$0108$i$i = 0, $l$034$i$i = 0, $l$054$i$i = 0, $l$1115$i$i = 0, $land$ext$i = 0, $land$ext100$i = 0, $land$ext379$i = 0, $lnot$ext$i$i = 0, $lnot$i = 0, $lnot$i$i = 0, $lor$ext$i = 0, $lor$ext220$i = 0, $lor$ext267$i = 0, $lor$ext356$i = 0, $lor$ext368$i = 0;
 var $max_noise$i = 0, $max_noise16$i = 0, $mul$i = 0.0, $mul$i$i = 0.0, $mul$i74$i = 0.0, $mul1$i$i$i = 0.0, $mul106$i$i = 0.0, $mul17$i = 0.0, $mul2$i$i$i = 0.0, $mul244$i = 0.0, $mul256$i = 0.0, $mul291$i = 0.0, $mul303$i = 0.0, $mul31$i$i = 0.0, $mul329$i = 0.0, $mul341$i = 0.0, $mul4$i$i$i = 0.0, $mul55$i = 0.0, $mul63$i$i = 0, $mul66$i = 0.0;
 var $mul71$i$i = 0.0, $mul71$i59$i = 0.0, $mul85$i$i = 0, $mul96$i$i = 0, $nBits$0$lcssa$i = 0, $noise_info = 0, $noise_shaping = 0, $noise_shaping_amp$0$i$i = 0, $noise_shaping_amp7$i$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i$i = 0, $or$cond$i82 = 0, $or$cond1 = 0, $or$cond11$i = 0, $or$cond116$i = 0, $or$cond117$i = 0, $or$cond3$i = 0, $or$cond36$i = 0, $or$cond59 = 0;
 var $or$cond60 = 0, $or$cond95 = 0, $over_SSD$i = 0, $over_SSD1$i = 0, $over_count = 0, $over_count358$i = 0, $part2_3_length$i = 0, $part2_3_length45 = 0, $part2_length = 0, $part2_length$i = 0, $preflag$i$i = 0, $prev_noise = 0, $psymax$i$i = 0, $quant_comp = 0, $quant_comp_short = 0, $retval$0 = 0, $s$0$i$i = 0, $s$1$i$i = 0, $s1$0$lcssa$i$i = 0, $s1$099$i$i = 0;
 var $s2$0$lcssa$i$i = 0, $s2$0103$i$i = 0, $save_xrpow = 0, $scalefac_scale$i$i = 0, $sfb$0119$i$i = 0, $sfb$036$i$i = 0, $sfb$060$i$i = 0, $sfb$08$i$i = 0, $sfb$09$i$i = 0, $sfb$09$i34$i = 0, $sfb$1$lcssa$i$i = 0, $sfb$1100$i$i = 0, $sfb$156$i$i = 0, $sfb$2104$i$i = 0, $sfb$3111$i$i = 0, $sfb21_extra = 0, $sfb_lmax$i$i = 0, $sfbdivide$i$i = 0, $sfbmax$i$i = 0, $shl$i$i = 0;
 var $shr$i$i = 0, $shr$i77$i = 0, $sqrtf$i$i = 0.0, $step$0$i = 0, $storemerge1$i = 0, $sub = 0, $sub$i = 0, $sub$i$i = 0, $sub$i55$i = 0, $sub$i73$i = 0, $sub$i75 = 0.0, $sub100$i$i = 0, $sub125 = 0, $sub126$i = 0.0, $sub174$i = 0.0, $sub19$i = 0, $sub201$i = 0.0, $sub238$i = 0.0, $sub285$i = 0.0, $sub323$i = 0.0;
 var $sub38$i = 0, $sub65$i$i = 0, $sub84$i$i = 0, $sub84$sink$i$i = 0, $subblock_gain$i = 0, $substep_shaping = 0, $tobool = 0, $tobool$i = 0, $tobool$i$i = 0, $tobool$i68$i = 0, $tobool$i83 = 0, $tobool112 = 0, $tobool143 = 0, $tobool15$i = 0, $tobool168 = 0, $tobool3$i = 0, $tobool36 = 0, $tobool5 = 0, $tobool5$i$i = 0, $tobool7$i = 0;
 var $tobool9 = 0, $tobool92 = 0, $tot_noise$i = 0, $tot_noise70$i = 0, $trigger$0$lcssa$i$i = 0.0, $trigger$061$i$i = 0.0, $trigger$1$i$i = 0.0, $trigger$2$i$i = 0.0, $vbr = 0, $window$0116$i$i = 0, $xrpow_max$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8256|0;
 $cod_info_w = sp + 2992|0;
 $save_xrpow = sp + 688|0;
 $distort = sp + 528|0;
 $best_noise_info = sp + 504|0;
 $prev_noise = sp + 24|0;
 $noise_info = sp;
 $arrayidx$i = (((($gfc)) + 84928|0) + ($ch<<2)|0);
 $0 = HEAP32[$arrayidx$i>>2]|0;
 $arrayidx3$i = (((($gfc)) + 84920|0) + ($ch<<2)|0);
 $1 = HEAP32[$arrayidx3$i>>2]|0;
 $global_gain$i = ((($cod_info)) + 4780|0);
 HEAP32[$global_gain$i>>2] = $1;
 $part2_length$i = ((($cod_info)) + 4844|0);
 $2 = HEAP32[$part2_length$i>>2]|0;
 $sub$i = (($targ_bits) - ($2))|0;
 $call8$i = (_count_bits($gfc,$xrpow,$cod_info,0)|0);
 $cmp9$i = ($0|0)==(1);
 $cmp410$i = ($call8$i|0)==($sub$i|0);
 $or$cond11$i = $cmp9$i | $cmp410$i;
 if ($or$cond11$i) {
  $call$lcssa$i = $call8$i;
 } else {
  $CurrentStep$012$i = $0;$Direction$014$i = 0;$call15$i = $call8$i;$flag_GoneOver$013$i = 0;
  while(1) {
   $cmp5$i = ($call15$i|0)>($sub$i|0);
   if ($cmp5$i) {
    $cmp7$i = ($Direction$014$i|0)==(2);
    $$flag_GoneOver$0$i = $cmp7$i ? 1 : $flag_GoneOver$013$i;
    $tobool$i = ($$flag_GoneOver$0$i|0)==(0);
    $div$i = (($CurrentStep$012$i|0) / 2)&-1;
    $CurrentStep$1$i = $tobool$i ? $CurrentStep$012$i : $div$i;
    $CurrentStep$3$i = $CurrentStep$1$i;$Direction$1$i = 1;$flag_GoneOver$3$i = $$flag_GoneOver$0$i;$step$0$i = $CurrentStep$1$i;
   } else {
    $cmp12$i = ($Direction$014$i|0)==(1);
    $$flag_GoneOver$02$i = $cmp12$i ? 1 : $flag_GoneOver$013$i;
    $tobool15$i = ($$flag_GoneOver$02$i|0)==(0);
    $div17$i = (($CurrentStep$012$i|0) / 2)&-1;
    $CurrentStep$2$i = $tobool15$i ? $CurrentStep$012$i : $div17$i;
    $sub19$i = (0 - ($CurrentStep$2$i))|0;
    $CurrentStep$3$i = $CurrentStep$2$i;$Direction$1$i = 2;$flag_GoneOver$3$i = $$flag_GoneOver$02$i;$step$0$i = $sub19$i;
   }
   $4 = HEAP32[$global_gain$i>>2]|0;
   $add$i = (($4) + ($step$0$i))|0;
   $cmp23$i = ($add$i|0)<(0);
   $$add$i = $cmp23$i ? 0 : $add$i;
   $cmp28$i = ($$add$i|0)>(255);
   $storemerge1$i = $cmp28$i ? 255 : $$add$i;
   $5 = $cmp23$i | $cmp28$i;
   $flag_GoneOver$5$i = $5 ? 1 : $flag_GoneOver$3$i;
   HEAP32[$global_gain$i>>2] = $storemerge1$i;
   $call$i = (_count_bits($gfc,$xrpow,$cod_info,0)|0);
   $cmp$i = ($CurrentStep$3$i|0)==(1);
   $cmp4$i = ($call$i|0)==($sub$i|0);
   $or$cond$i = $cmp$i | $cmp4$i;
   if ($or$cond$i) {
    $call$lcssa$i = $call$i;
    break;
   } else {
    $CurrentStep$012$i = $CurrentStep$3$i;$Direction$014$i = $Direction$1$i;$call15$i = $call$i;$flag_GoneOver$013$i = $flag_GoneOver$5$i;
   }
  }
 }
 $cmp324$i = ($call$lcssa$i|0)>($sub$i|0);
 $3 = HEAP32[$global_gain$i>>2]|0;
 $cmp345$i = ($3|0)<(255);
 $or$cond36$i = $cmp324$i & $cmp345$i;
 if ($or$cond36$i) {
  $6 = $3;
  while(1) {
   $inc$i = (($6) + 1)|0;
   HEAP32[$global_gain$i>>2] = $inc$i;
   $call36$i = (_count_bits($gfc,$xrpow,$cod_info,0)|0);
   $cmp32$i = ($call36$i|0)>($sub$i|0);
   $7 = HEAP32[$global_gain$i>>2]|0;
   $cmp34$i = ($7|0)<(255);
   $or$cond3$i = $cmp32$i & $cmp34$i;
   if ($or$cond3$i) {
    $6 = $7;
   } else {
    $$lcssa$i = $7;$nBits$0$lcssa$i = $call36$i;
    break;
   }
  }
 } else {
  $$lcssa$i = $3;$nBits$0$lcssa$i = $call$lcssa$i;
 }
 $sub38$i = (($1) - ($$lcssa$i))|0;
 $cmp39$i = ($sub38$i|0)>(3);
 $cond$i = $cmp39$i ? 4 : 2;
 HEAP32[$arrayidx$i>>2] = $cond$i;
 $8 = HEAP32[$global_gain$i>>2]|0;
 HEAP32[$arrayidx3$i>>2] = $8;
 $part2_3_length$i = ((($cod_info)) + 4768|0);
 HEAP32[$part2_3_length$i>>2] = $nBits$0$lcssa$i;
 $noise_shaping = ((($gfc)) + 28|0);
 $9 = HEAP32[$noise_shaping>>2]|0;
 $tobool = ($9|0)==(0);
 if ($tobool) {
  $retval$0 = 100;
  STACKTOP = sp;return ($retval$0|0);
 }
 _memset(($prev_noise|0),0,476)|0;
 (_calc_noise($cod_info,$l3_xmin,$distort,$best_noise_info,$prev_noise)|0);
 $10 = HEAP32[$part2_3_length$i>>2]|0;
 $bits = ((($best_noise_info)) + 20|0);
 HEAP32[$bits>>2] = $10;
 _memcpy(($cod_info_w|0),($cod_info|0),5252)|0;
 _memcpy(($save_xrpow|0),($xrpow|0),2304)|0;
 $substep_shaping = ((($gfc)) + 85096|0);
 $sfb21_extra = ((($gfc)) + 85092|0);
 $scalefac_scale$i$i = ((($cod_info_w)) + 4836|0);
 $sfbmax$i$i = ((($cod_info_w)) + 4860|0);
 $noise_shaping_amp7$i$i = ((($gfc)) + 40|0);
 $xrpow_max$i$i = ((($cod_info_w)) + 4764|0);
 $part2_length = ((($cod_info_w)) + 4844|0);
 $part2_3_length45 = ((($cod_info_w)) + 4768|0);
 $11 = ((($cod_info_w)) + 4780|0);
 $over_count = ((($best_noise_info)) + 12|0);
 $bits83 = ((($noise_info)) + 20|0);
 $block_type84 = ((($cod_info)) + 4788|0);
 $quant_comp = ((($gfc)) + 84|0);
 $quant_comp_short = ((($gfc)) + 88|0);
 $over_SSD$i = ((($noise_info)) + 16|0);
 $over_SSD1$i = ((($best_noise_info)) + 16|0);
 $max_noise$i = ((($noise_info)) + 8|0);
 $max_noise16$i = ((($best_noise_info)) + 8|0);
 $full_outer_loop = ((($gfc)) + 48|0);
 $over_count358$i = ((($noise_info)) + 12|0);
 $tot_noise$i = ((($noise_info)) + 4|0);
 $tot_noise70$i = ((($best_noise_info)) + 4|0);
 $psymax$i$i = ((($cod_info_w)) + 4864|0);
 $arrayidx$i63 = ((($gfc)) + 84936|0);
 $preflag$i$i = ((($cod_info_w)) + 4832|0);
 $block_type$i = ((($cod_info_w)) + 4788|0);
 $subblock_gain$i = ((($gfc)) + 32|0);
 $sfb_lmax$i$i = ((($cod_info_w)) + 4848|0);
 $sfbdivide$i$i = ((($cod_info_w)) + 4868|0);
 $bRefine$0138 = 0;$best_ggain_pass1$0139 = 0;$best_part2_3_length$0137 = 9999999;
 while(1) {
  $cmp10$i$i = ($bRefine$0138|0)==(1);
  $$50$i$i = $cmp10$i$i ? 2 : 1;
  $tobool112 = ($bRefine$0138|0)!=(0);
  $age$1 = 0;$best_part2_3_length$1 = $best_part2_3_length$0137;
  L18: while(1) {
   $12 = HEAP32[$substep_shaping>>2]|0;
   $and = $12 & 2;
   $tobool5 = ($and|0)==(0);
   $$ = $tobool5 ? 3 : 20;
   $13 = HEAP32[$sfb21_extra>>2]|0;
   $tobool9 = ($13|0)==(0);
   $$pre = HEAP32[$sfbmax$i$i>>2]|0;
   if (!($tobool9)) {
    $arrayidx = (($distort) + ($$pre<<2)|0);
    $14 = +HEAPF32[$arrayidx>>2];
    $cmp = $14 > 1.0;
    if ($cmp) {
     label = 161;
     break;
    }
    $15 = HEAP32[$block_type$i>>2]|0;
    $cmp14 = ($15|0)==(2);
    if ($cmp14) {
     $add = (($$pre) + 1)|0;
     $arrayidx17 = (($distort) + ($add<<2)|0);
     $16 = +HEAPF32[$arrayidx17>>2];
     $cmp19 = $16 > 1.0;
     if ($cmp19) {
      label = 161;
      break;
     }
     $add22 = (($$pre) + 2)|0;
     $arrayidx23 = (($distort) + ($add22<<2)|0);
     $17 = +HEAPF32[$arrayidx23>>2];
     $cmp25 = $17 > 1.0;
     if ($cmp25) {
      label = 161;
      break;
     }
    }
   }
   $18 = HEAP32[$scalefac_scale$i$i>>2]|0;
   $cmp$i$i = ($18|0)==(0);
   $$$i$i = $cmp$i$i ? 1.2968395948410034 : 1.6817928552627563;
   $cmp259$i$i = ($$pre|0)>(0);
   if ($cmp259$i$i) {
    $sfb$060$i$i = 0;$trigger$061$i$i = 0.0;
    while(1) {
     $arrayidx$i$i = (($distort) + ($sfb$060$i$i<<2)|0);
     $19 = +HEAPF32[$arrayidx$i$i>>2];
     $cmp3$i$i = $trigger$061$i$i < $19;
     $trigger$1$i$i = $cmp3$i$i ? $19 : $trigger$061$i$i;
     $inc$i$i = (($sfb$060$i$i) + 1)|0;
     $exitcond$i = ($inc$i$i|0)==($$pre|0);
     if ($exitcond$i) {
      $trigger$0$lcssa$i$i = $trigger$1$i$i;
      break;
     } else {
      $sfb$060$i$i = $inc$i$i;$trigger$061$i$i = $trigger$1$i$i;
     }
    }
   } else {
    $trigger$0$lcssa$i$i = 0.0;
   }
   $20 = HEAP32[$noise_shaping_amp7$i$i>>2]|0;
   $cmp8$i$i = ($20|0)==(3);
   $noise_shaping_amp$0$i$i = $cmp8$i$i ? $$50$i$i : $20;
   L30: do {
    switch ($noise_shaping_amp$0$i$i|0) {
    case 2:  {
     $21 = $$pre;$trigger$2$i$i = $trigger$0$lcssa$i$i;
     break;
    }
    case 1:  {
     $cmp15$i$i = $trigger$0$lcssa$i$i > 1.0;
     if ($cmp15$i$i) {
      $sqrtf$i$i = (+Math_sqrt((+$trigger$0$lcssa$i$i)));
      $$pre$i$i = HEAP32[$sfbmax$i$i>>2]|0;
      $21 = $$pre$i$i;$trigger$2$i$i = $sqrtf$i$i;
      break L30;
     } else {
      $conv$i$i = $trigger$0$lcssa$i$i;
      $mul$i$i = $conv$i$i * 0.94999999999999996;
      $conv22$i$i = $mul$i$i;
      $21 = $$pre;$trigger$2$i$i = $conv22$i$i;
      break L30;
     }
     break;
    }
    default: {
     $cmp26$i$i = $trigger$0$lcssa$i$i > 1.0;
     if ($cmp26$i$i) {
      $21 = $$pre;$trigger$2$i$i = 1.0;
     } else {
      $conv25$i$i = $trigger$0$lcssa$i$i;
      $mul31$i$i = $conv25$i$i * 0.94999999999999996;
      $conv32$i$i = $mul31$i$i;
      $21 = $$pre;$trigger$2$i$i = $conv32$i$i;
     }
    }
    }
   } while(0);
   $cmp3655$i$i = ($21|0)>(0);
   if ($cmp3655$i$i) {
    $177 = $21;$j$058$i$i = 0;$sfb$156$i$i = 0;
   } else {
    label = 161;
    break;
   }
   while(1) {
    $arrayidx40$i$i = (((($cod_info_w)) + 4872|0) + ($sfb$156$i$i<<2)|0);
    $22 = HEAP32[$arrayidx40$i$i>>2]|0;
    $add$i$i = (($22) + ($j$058$i$i))|0;
    $arrayidx41$i$i = (($distort) + ($sfb$156$i$i<<2)|0);
    $23 = +HEAPF32[$arrayidx41$i$i>>2];
    $cmp42$i$i = $23 < $trigger$2$i$i;
    if ($cmp42$i$i) {
     $31 = $177;
    } else {
     $24 = HEAP32[$substep_shaping>>2]|0;
     $and$i$i = $24 & 2;
     $tobool$i$i = ($and$i$i|0)==(0);
     if (!($tobool$i$i)) {
      $arrayidx48$i$i = (((($gfc)) + 84936|0) + ($sfb$156$i$i<<2)|0);
      $25 = HEAP32[$arrayidx48$i$i>>2]|0;
      $lnot$i$i = ($25|0)==(0);
      $lnot$ext$i$i = $lnot$i$i&1;
      HEAP32[$arrayidx48$i$i>>2] = $lnot$ext$i$i;
      if (!($lnot$i$i)) {
       $26 = HEAP32[$noise_shaping_amp7$i$i>>2]|0;
       $cmp58$i$i = ($26|0)==(2);
       if ($cmp58$i$i) {
        break;
       }
      }
     }
     $arrayidx63$i$i = (((($cod_info_w)) + 4608|0) + ($sfb$156$i$i<<2)|0);
     $27 = HEAP32[$arrayidx63$i$i>>2]|0;
     $inc64$i$i = (($27) + 1)|0;
     HEAP32[$arrayidx63$i$i>>2] = $inc64$i$i;
     $cmp6653$i$i = ($22|0)>(0);
     if ($cmp6653$i$i) {
      $sub$i$i = (0 - ($22))|0;
      $$pre160 = +HEAPF32[$xrpow_max$i$i>>2];
      $29 = $$pre160;$l$054$i$i = $sub$i$i;
      while(1) {
       $add69$i$i = (($l$054$i$i) + ($add$i$i))|0;
       $arrayidx70$i$i = (($xrpow) + ($add69$i$i<<2)|0);
       $28 = +HEAPF32[$arrayidx70$i$i>>2];
       $mul71$i$i = $28 * $$$i$i;
       HEAPF32[$arrayidx70$i$i>>2] = $mul71$i$i;
       $cmp74$i$i = $mul71$i$i > $29;
       if ($cmp74$i$i) {
        HEAPF32[$xrpow_max$i$i>>2] = $mul71$i$i;
        $178 = $mul71$i$i;
       } else {
        $178 = $29;
       }
       $inc82$i$i = (($l$054$i$i) + 1)|0;
       $cmp66$i$i = ($l$054$i$i|0)<(-1);
       if ($cmp66$i$i) {
        $29 = $178;$l$054$i$i = $inc82$i$i;
       } else {
        break;
       }
      }
     }
     $30 = HEAP32[$noise_shaping_amp7$i$i>>2]|0;
     $cmp85$i$i = ($30|0)==(2);
     if ($cmp85$i$i) {
      break;
     }
     $$pre63$i$i = HEAP32[$sfbmax$i$i>>2]|0;
     $31 = $$pre63$i$i;
    }
    $inc91$i$i = (($sfb$156$i$i) + 1)|0;
    $cmp36$i$i = ($inc91$i$i|0)<($31|0);
    if ($cmp36$i$i) {
     $177 = $31;$j$058$i$i = $add$i$i;$sfb$156$i$i = $inc91$i$i;
    } else {
     break;
    }
   }
   $$pre$i = HEAP32[$sfbmax$i$i>>2]|0;
   $cmp8$i22$i = ($$pre$i|0)>(0);
   if ($cmp8$i22$i) {
    $sfb$09$i$i = 0;
   } else {
    label = 161;
    break;
   }
   while(1) {
    $arrayidx$i24$i = (((($cod_info_w)) + 4608|0) + ($sfb$09$i$i<<2)|0);
    $32 = HEAP32[$arrayidx$i24$i>>2]|0;
    $arrayidx1$i$i = (((($cod_info_w)) + 5028|0) + ($sfb$09$i$i<<2)|0);
    $33 = HEAP32[$arrayidx1$i$i>>2]|0;
    $arrayidx2$i$i = (((($cod_info_w)) + 4808|0) + ($33<<2)|0);
    $34 = HEAP32[$arrayidx2$i$i>>2]|0;
    $add$i25$i = (0 - ($34))|0;
    $cmp3$i26$i = ($32|0)==($add$i25$i|0);
    $inc$i27$i = (($sfb$09$i$i) + 1)|0;
    if ($cmp3$i26$i) {
     break;
    }
    $cmp$i23$i = ($inc$i27$i|0)<($$pre$i|0);
    if ($cmp$i23$i) {
     $sfb$09$i$i = $inc$i27$i;
    } else {
     label = 161;
     break L18;
    }
   }
   $call2$i = (_scale_bitcount($gfc,$cod_info_w)|0);
   $tobool3$i = ($call2$i|0)==(0);
   if (!($tobool3$i)) {
    $35 = HEAP32[$noise_shaping>>2]|0;
    $cmp$i62 = ($35|0)>(1);
    if (!($cmp$i62)) {
     label = 161;
     break;
    }
    _memset(($arrayidx$i63|0),0,156)|0;
    $36 = HEAP32[$scalefac_scale$i$i>>2]|0;
    $tobool7$i = ($36|0)==(0);
    L64: do {
     if ($tobool7$i) {
      $37 = HEAP32[$sfbmax$i$i>>2]|0;
      $cmp35$i$i = ($37|0)>(0);
      if ($cmp35$i$i) {
       $j$037$i$i = 0;$sfb$036$i$i = 0;
       while(1) {
        $arrayidx$i66$i = (((($cod_info_w)) + 4872|0) + ($sfb$036$i$i<<2)|0);
        $38 = HEAP32[$arrayidx$i66$i>>2]|0;
        $arrayidx2$i67$i = (((($cod_info_w)) + 4608|0) + ($sfb$036$i$i<<2)|0);
        $39 = HEAP32[$arrayidx2$i67$i>>2]|0;
        $40 = HEAP32[$preflag$i$i>>2]|0;
        $tobool$i68$i = ($40|0)==(0);
        if ($tobool$i68$i) {
         $s$0$i$i = $39;
        } else {
         $arrayidx3$i$i = (6388 + ($sfb$036$i$i<<2)|0);
         $41 = HEAP32[$arrayidx3$i$i>>2]|0;
         $add$i70$i = (($41) + ($39))|0;
         $s$0$i$i = $add$i70$i;
        }
        $add4$i$i = (($38) + ($j$037$i$i))|0;
        $and$i71$i = $s$0$i$i & 1;
        $tobool5$i$i = ($and$i71$i|0)==(0);
        do {
         if ($tobool5$i$i) {
          $s$1$i$i = $s$0$i$i;
         } else {
          $inc$i72$i = (($s$0$i$i) + 1)|0;
          $cmp833$i$i = ($38|0)>(0);
          if (!($cmp833$i$i)) {
           $s$1$i$i = $inc$i72$i;
           break;
          }
          $sub$i73$i = (0 - ($38))|0;
          $$pre163 = +HEAPF32[$xrpow_max$i$i>>2];
          $43 = $$pre163;$l$034$i$i = $sub$i73$i;
          while(1) {
           $add10$i$i = (($l$034$i$i) + ($add4$i$i))|0;
           $arrayidx11$i$i = (($xrpow) + ($add10$i$i<<2)|0);
           $42 = +HEAPF32[$arrayidx11$i$i>>2];
           $mul$i74$i = $42 * 1.2968395948410034;
           HEAPF32[$arrayidx11$i$i>>2] = $mul$i74$i;
           $cmp14$i$i = $mul$i74$i > $43;
           if ($cmp14$i$i) {
            HEAPF32[$xrpow_max$i$i>>2] = $mul$i74$i;
            $179 = $mul$i74$i;
           } else {
            $179 = $43;
           }
           $inc20$i$i = (($l$034$i$i) + 1)|0;
           $cmp8$i76$i = ($l$034$i$i|0)<(-1);
           if ($cmp8$i76$i) {
            $43 = $179;$l$034$i$i = $inc20$i$i;
           } else {
            $s$1$i$i = $inc$i72$i;
            break;
           }
          }
         }
        } while(0);
        $shr$i77$i = $s$1$i$i >> 1;
        HEAP32[$arrayidx2$i67$i>>2] = $shr$i77$i;
        $inc25$i$i = (($sfb$036$i$i) + 1)|0;
        $44 = HEAP32[$sfbmax$i$i>>2]|0;
        $cmp$i78$i = ($inc25$i$i|0)<($44|0);
        if ($cmp$i78$i) {
         $j$037$i$i = $add4$i$i;$sfb$036$i$i = $inc25$i$i;
        } else {
         break;
        }
       }
      }
      HEAP32[$preflag$i$i>>2] = 0;
      HEAP32[$scalefac_scale$i$i>>2] = 1;
     } else {
      $45 = HEAP32[$block_type$i>>2]|0;
      $cmp9$i65 = ($45|0)==(2);
      if (!($cmp9$i65)) {
       label = 161;
       break L18;
      }
      $46 = HEAP32[$subblock_gain$i>>2]|0;
      $cmp10$i = ($46|0)>(0);
      if (!($cmp10$i)) {
       label = 161;
       break L18;
      }
      $47 = HEAP32[$sfb_lmax$i$i>>2]|0;
      $cmp118$i$i = ($47|0)>(0);
      if ($cmp118$i$i) {
       $sfb$0119$i$i = 0;
       while(1) {
        $arrayidx$i49$i = (((($cod_info_w)) + 4608|0) + ($sfb$0119$i$i<<2)|0);
        $48 = HEAP32[$arrayidx$i49$i>>2]|0;
        $cmp2$i50$i = ($48|0)>(15);
        $inc$i51$i = (($sfb$0119$i$i) + 1)|0;
        if ($cmp2$i50$i) {
         label = 161;
         break L18;
        }
        $cmp$i45$i = ($inc$i51$i|0)<($47|0);
        if ($cmp$i45$i) {
         $sfb$0119$i$i = $inc$i51$i;
        } else {
         $49 = $47;$window$0116$i$i = 0;
         break;
        }
       }
      } else {
       $49 = $47;$window$0116$i$i = 0;
      }
      while(1) {
       $add$i53$i = (($window$0116$i$i) + ($49))|0;
       $50 = HEAP32[$sfbdivide$i$i>>2]|0;
       $cmp898$i$i = ($add$i53$i|0)<($50|0);
       if ($cmp898$i$i) {
        $s1$099$i$i = 0;$sfb$1100$i$i = $add$i53$i;
        while(1) {
         $arrayidx10$i$i = (((($cod_info_w)) + 4608|0) + ($sfb$1100$i$i<<2)|0);
         $52 = HEAP32[$arrayidx10$i$i>>2]|0;
         $cmp11$i$i = ($s1$099$i$i|0)<($52|0);
         $$s1$0$i$i = $cmp11$i$i ? $52 : $s1$099$i$i;
         $add16$i$i = (($sfb$1100$i$i) + 3)|0;
         $cmp8$i54$i = ($add16$i$i|0)<($50|0);
         if ($cmp8$i54$i) {
          $s1$099$i$i = $$s1$0$i$i;$sfb$1100$i$i = $add16$i$i;
         } else {
          $s1$0$lcssa$i$i = $$s1$0$i$i;$sfb$1$lcssa$i$i = $add16$i$i;
          break;
         }
        }
       } else {
        $s1$0$lcssa$i$i = 0;$sfb$1$lcssa$i$i = $add$i53$i;
       }
       $51 = HEAP32[$sfbmax$i$i>>2]|0;
       $cmp19102$i$i = ($sfb$1$lcssa$i$i|0)<($51|0);
       if ($cmp19102$i$i) {
        $s2$0103$i$i = 0;$sfb$2104$i$i = $sfb$1$lcssa$i$i;
        while(1) {
         $arrayidx21$i$i = (((($cod_info_w)) + 4608|0) + ($sfb$2104$i$i<<2)|0);
         $53 = HEAP32[$arrayidx21$i$i>>2]|0;
         $cmp22$i$i = ($s2$0103$i$i|0)<($53|0);
         $$s2$0$i$i = $cmp22$i$i ? $53 : $s2$0103$i$i;
         $add27$i$i = (($sfb$2104$i$i) + 3)|0;
         $cmp19$i$i = ($add27$i$i|0)<($51|0);
         if ($cmp19$i$i) {
          $s2$0103$i$i = $$s2$0$i$i;$sfb$2104$i$i = $add27$i$i;
         } else {
          $s2$0$lcssa$i$i = $$s2$0$i$i;
          break;
         }
        }
       } else {
        $s2$0$lcssa$i$i = 0;
       }
       $cmp29$i$i = ($s1$0$lcssa$i$i|0)<(16);
       $cmp30$i$i = ($s2$0$lcssa$i$i|0)<(8);
       $or$cond$i$i = $cmp29$i$i & $cmp30$i$i;
       do {
        if ($or$cond$i$i) {
         $$pre125$i$i = (($window$0116$i$i) + 1)|0;
         $73 = $51;$inc126$pre$phi$i$iZ2D = $$pre125$i$i;
        } else {
         $arrayidx33$i$i = (((($cod_info_w)) + 4808|0) + ($window$0116$i$i<<2)|0);
         $54 = HEAP32[$arrayidx33$i$i>>2]|0;
         $cmp34$i$i = ($54|0)>(6);
         if ($cmp34$i$i) {
          label = 161;
          break L18;
         }
         $inc39$i$i = (($54) + 1)|0;
         HEAP32[$arrayidx33$i$i>>2] = $inc39$i$i;
         $55 = HEAP32[$sfb_lmax$i$i>>2]|0;
         $arrayidx42$i$i = (((($gfc)) + 21360|0) + ($55<<2)|0);
         $56 = HEAP32[$arrayidx42$i$i>>2]|0;
         $add44$i$i = (($55) + ($window$0116$i$i))|0;
         $57 = HEAP32[$sfbmax$i$i>>2]|0;
         $cmp47109$i$i = ($add44$i$i|0)<($57|0);
         $58 = (((($cod_info_w)) + 4872|0) + ($add44$i$i<<2)|0);
         $59 = HEAP32[$58>>2]|0;
         $add62$i$i = (($window$0116$i$i) + 1)|0;
         if ($cmp47109$i$i) {
          $sub84$i$i = (2 - ($window$0116$i$i))|0;
          $64 = $59;$j$0110$i$i = $56;$sfb$3111$i$i = $add44$i$i;
          while(1) {
           $arrayidx51$i$i = (((($cod_info_w)) + 4608|0) + ($sfb$3111$i$i<<2)|0);
           $60 = HEAP32[$arrayidx51$i$i>>2]|0;
           $61 = HEAP32[$scalefac_scale$i$i>>2]|0;
           $shr$i$i = 4 >>> $61;
           $sub$i55$i = (($60) - ($shr$i$i))|0;
           $cmp52$i$i = ($sub$i55$i|0)>(-1);
           do {
            if ($cmp52$i$i) {
             HEAP32[$arrayidx51$i$i>>2] = $sub$i55$i;
             $add64$sink$i$i = $j$0110$i$i;$sub84$sink$i$i = 3;
            } else {
             HEAP32[$arrayidx51$i$i>>2] = 0;
             $62 = HEAP32[$scalefac_scale$i$i>>2]|0;
             $add59$i$i = (($62) + 1)|0;
             $shl$i$i = $sub$i55$i << $add59$i$i;
             $add60$i$i = (($shl$i$i) + 210)|0;
             $arrayidx61$i$i = (89988 + ($add60$i$i<<2)|0);
             $63 = +HEAPF32[$arrayidx61$i$i>>2];
             $mul63$i$i = Math_imul($64, $add62$i$i)|0;
             $add64$i$i = (($j$0110$i$i) + ($mul63$i$i))|0;
             $cmp67107$i$i = ($64|0)>(0);
             if (!($cmp67107$i$i)) {
              $add64$sink$i$i = $add64$i$i;$sub84$sink$i$i = $sub84$i$i;
              break;
             }
             $sub65$i$i = (0 - ($64))|0;
             $$pre161 = +HEAPF32[$xrpow_max$i$i>>2];
             $66 = $$pre161;$l$0108$i$i = $sub65$i$i;
             while(1) {
              $add69$i57$i = (($l$0108$i$i) + ($add64$i$i))|0;
              $arrayidx70$i58$i = (($xrpow) + ($add69$i57$i<<2)|0);
              $65 = +HEAPF32[$arrayidx70$i58$i>>2];
              $mul71$i59$i = $65 * $63;
              HEAPF32[$arrayidx70$i58$i>>2] = $mul71$i59$i;
              $cmp74$i60$i = $mul71$i59$i > $66;
              if ($cmp74$i60$i) {
               HEAPF32[$xrpow_max$i$i>>2] = $mul71$i59$i;
               $181 = $mul71$i59$i;
              } else {
               $181 = $66;
              }
              $inc81$i$i = (($l$0108$i$i) + 1)|0;
              $cmp67$i$i = ($l$0108$i$i|0)<(-1);
              if ($cmp67$i$i) {
               $66 = $181;$l$0108$i$i = $inc81$i$i;
              } else {
               $add64$sink$i$i = $add64$i$i;$sub84$sink$i$i = $sub84$i$i;
               break;
              }
             }
            }
           } while(0);
           $mul85$i$i = Math_imul($sub84$sink$i$i, $64)|0;
           $add86$i$i = (($add64$sink$i$i) + ($mul85$i$i))|0;
           $add90$i$i = (($sfb$3111$i$i) + 3)|0;
           $67 = HEAP32[$sfbmax$i$i>>2]|0;
           $cmp47$i$i = ($add90$i$i|0)<($67|0);
           $68 = (((($cod_info_w)) + 4872|0) + ($add90$i$i<<2)|0);
           $69 = HEAP32[$68>>2]|0;
           if ($cmp47$i$i) {
            $64 = $69;$j$0110$i$i = $add86$i$i;$sfb$3111$i$i = $add90$i$i;
           } else {
            $$lcssa$i$i = $69;$180 = $67;$j$0$lcssa$i$i = $add86$i$i;
            break;
           }
          }
         } else {
          $$lcssa$i$i = $59;$180 = $57;$j$0$lcssa$i$i = $56;
         }
         $70 = +HEAPF32[(90796)>>2];
         $mul96$i$i = Math_imul($$lcssa$i$i, $add62$i$i)|0;
         $add97$i$i = (($mul96$i$i) + ($j$0$lcssa$i$i))|0;
         $cmp102114$i$i = ($$lcssa$i$i|0)>(0);
         if (!($cmp102114$i$i)) {
          $73 = $180;$inc126$pre$phi$i$iZ2D = $add62$i$i;
          break;
         }
         $sub100$i$i = (0 - ($$lcssa$i$i))|0;
         $$pre162 = +HEAPF32[$xrpow_max$i$i>>2];
         $72 = $$pre162;$l$1115$i$i = $sub100$i$i;
         while(1) {
          $add104$i$i = (($add97$i$i) + ($l$1115$i$i))|0;
          $arrayidx105$i$i = (($xrpow) + ($add104$i$i<<2)|0);
          $71 = +HEAPF32[$arrayidx105$i$i>>2];
          $mul106$i$i = $71 * $70;
          HEAPF32[$arrayidx105$i$i>>2] = $mul106$i$i;
          $cmp110$i$i = $mul106$i$i > $72;
          if ($cmp110$i$i) {
           HEAPF32[$xrpow_max$i$i>>2] = $mul106$i$i;
           $182 = $mul106$i$i;
          } else {
           $182 = $72;
          }
          $inc117$i$i = (($l$1115$i$i) + 1)|0;
          $cmp102$i$i = ($l$1115$i$i|0)<(-1);
          if ($cmp102$i$i) {
           $72 = $182;$l$1115$i$i = $inc117$i$i;
          } else {
           $73 = $180;$inc126$pre$phi$i$iZ2D = $add62$i$i;
           break;
          }
         }
        }
       } while(0);
       $cmp4$i$i = ($inc126$pre$phi$i$iZ2D|0)<(3);
       if (!($cmp4$i$i)) {
        break;
       }
       $$pre$i63$i = HEAP32[$sfb_lmax$i$i>>2]|0;
       $49 = $$pre$i63$i;$window$0116$i$i = $inc126$pre$phi$i$iZ2D;
      }
      $cmp8$i31$i = ($73|0)>(0);
      if ($cmp8$i31$i) {
       $sfb$09$i34$i = 0;
      } else {
       label = 161;
       break L18;
      }
      while(1) {
       $arrayidx$i35$i = (((($cod_info_w)) + 4608|0) + ($sfb$09$i34$i<<2)|0);
       $74 = HEAP32[$arrayidx$i35$i>>2]|0;
       $arrayidx1$i36$i = (((($cod_info_w)) + 5028|0) + ($sfb$09$i34$i<<2)|0);
       $75 = HEAP32[$arrayidx1$i36$i>>2]|0;
       $arrayidx2$i37$i = (((($cod_info_w)) + 4808|0) + ($75<<2)|0);
       $76 = HEAP32[$arrayidx2$i37$i>>2]|0;
       $add$i38$i = (0 - ($76))|0;
       $cmp3$i39$i = ($74|0)==($add$i38$i|0);
       $inc$i40$i = (($sfb$09$i34$i) + 1)|0;
       if ($cmp3$i39$i) {
        break L64;
       }
       $cmp$i32$i = ($inc$i40$i|0)<($73|0);
       if ($cmp$i32$i) {
        $sfb$09$i34$i = $inc$i40$i;
       } else {
        label = 161;
        break L18;
       }
      }
     }
    } while(0);
    $call21$i = (_scale_bitcount($gfc,$cod_info_w)|0);
    $lnot$i = ($call21$i|0)==(0);
    if (!($lnot$i)) {
     label = 161;
     break;
    }
   }
   $77 = HEAP32[$scalefac_scale$i$i>>2]|0;
   $tobool36 = ($77|0)==(0);
   $$58 = $tobool36 ? 255 : 254;
   $78 = HEAP32[$part2_length>>2]|0;
   $sub = (($targ_bits) - ($78))|0;
   $cmp39 = ($sub|0)<(1);
   if ($cmp39) {
    label = 161;
    break;
   }
   $call44125 = (_count_bits($gfc,$xrpow,$cod_info_w,$prev_noise)|0);
   HEAP32[$part2_3_length45>>2] = $call44125;
   $cmp46126 = ($call44125|0)>($sub|0);
   $79 = HEAP32[$11>>2]|0;
   $cmp48127 = ($79|0)<=($$58|0);
   $cmp48$128 = $cmp46126 & $cmp48127;
   if ($cmp48$128) {
    $80 = $79;
    while(1) {
     $inc = (($80) + 1)|0;
     HEAP32[$11>>2] = $inc;
     $call44 = (_count_bits($gfc,$xrpow,$cod_info_w,$prev_noise)|0);
     HEAP32[$part2_3_length45>>2] = $call44;
     $cmp46 = ($call44|0)>($sub|0);
     $81 = HEAP32[$11>>2]|0;
     $cmp48 = ($81|0)<=($$58|0);
     $cmp48$ = $cmp46 & $cmp48;
     if ($cmp48$) {
      $80 = $81;
     } else {
      $$lcssa102 = $81;
      break;
     }
    }
   } else {
    $$lcssa102 = $79;
   }
   $cmp53 = ($$lcssa102|0)>($$58|0);
   if ($cmp53) {
    label = 161;
    break;
   }
   $82 = HEAP32[$over_count>>2]|0;
   $cmp57 = ($82|0)==(0);
   if ($cmp57) {
    $call61131 = (_count_bits($gfc,$xrpow,$cod_info_w,$prev_noise)|0);
    HEAP32[$part2_3_length45>>2] = $call61131;
    $cmp63132 = ($call61131|0)>($best_part2_3_length$1|0);
    $83 = HEAP32[$11>>2]|0;
    $cmp67133 = ($83|0)<=($$58|0);
    $cmp67$134 = $cmp63132 & $cmp67133;
    if ($cmp67$134) {
     $84 = $83;
     while(1) {
      $inc72 = (($84) + 1)|0;
      HEAP32[$11>>2] = $inc72;
      $call61 = (_count_bits($gfc,$xrpow,$cod_info_w,$prev_noise)|0);
      HEAP32[$part2_3_length45>>2] = $call61;
      $cmp63 = ($call61|0)>($best_part2_3_length$1|0);
      $85 = HEAP32[$11>>2]|0;
      $cmp67 = ($85|0)<=($$58|0);
      $cmp67$ = $cmp63 & $cmp67;
      if ($cmp67$) {
       $84 = $85;
      } else {
       $$lcssa104 = $85;
       break;
      }
     }
    } else {
     $$lcssa104 = $83;
    }
    $cmp75 = ($$lcssa104|0)>($$58|0);
    if ($cmp75) {
     label = 161;
     break;
    }
   }
   (_calc_noise($cod_info_w,$l3_xmin,$distort,$noise_info,$prev_noise)|0);
   $86 = HEAP32[$part2_3_length45>>2]|0;
   HEAP32[$bits83>>2] = $86;
   $87 = HEAP32[$block_type84>>2]|0;
   $cmp85 = ($87|0)==(2);
   $better$0$in = $cmp85 ? $quant_comp_short : $quant_comp;
   $better$0 = HEAP32[$better$0$in>>2]|0;
   L145: do {
    switch ($better$0|0) {
    case 7:  {
     $157 = HEAP32[$over_count358$i>>2]|0;
     $158 = HEAP32[$over_count>>2]|0;
     $cmp360$i = ($157|0)<($158|0);
     if ($cmp360$i) {
      $161 = 1;
     } else {
      $159 = +HEAPF32[$noise_info>>2];
      $160 = +HEAPF32[$best_noise_info>>2];
      $cmp365$i = $159 < $160;
      $161 = $cmp365$i;
     }
     $lor$ext368$i = $161&1;
     $better$0$i = $lor$ext368$i;
     break;
    }
    case 0:  {
     $96 = HEAP32[$over_count358$i>>2]|0;
     $97 = HEAP32[$over_count>>2]|0;
     $cmp27$i = ($96|0)<($97|0);
     do {
      if ($cmp27$i) {
       $105 = 1;
      } else {
       $cmp31$i = ($96|0)==($97|0);
       if ($cmp31$i) {
        $98 = +HEAPF32[$noise_info>>2];
        $99 = +HEAPF32[$best_noise_info>>2];
        $cmp34$i73 = $98 < $99;
        if ($cmp34$i73) {
         $105 = 1;
        } else {
         $fabsf113$i = (+Math_abs((+$98)));
         $fabsf114$i = (+Math_abs((+$99)));
         $cmp46$i = $fabsf113$i > $fabsf114$i;
         $sub$i75 = $98 - $99;
         $fabsf115$i = (+Math_abs((+$sub$i75)));
         $100 = $fabsf115$i;
         if ($cmp46$i) {
          $101 = $fabsf113$i;
          $mul55$i = $101 * 9.9999999747524271E-7;
          $cmp56$i = !($100 <= $mul55$i);
          if ($cmp56$i) {
           $105 = 0;
           break;
          }
         } else {
          $102 = $fabsf114$i;
          $mul66$i = $102 * 9.9999999747524271E-7;
          $cmp67$i = !($100 <= $mul66$i);
          if ($cmp67$i) {
           $105 = 0;
           break;
          }
         }
         $103 = +HEAPF32[$tot_noise$i>>2];
         $104 = +HEAPF32[$tot_noise70$i>>2];
         $cmp71$i = $103 < $104;
         $105 = $cmp71$i;
        }
       } else {
        $105 = 0;
       }
      }
     } while(0);
     $lor$ext$i = $105&1;
     $better$0$i = $lor$ext$i;
     break;
    }
    case 8:  {
     $106 = HEAP32[$psymax$i$i>>2]|0;
     $cmp7$i$i = ($106|0)>(0);
     if ($cmp7$i$i) {
      $klemm_noise$09$i$i = 1.0000000000000001E-37;$sfb$08$i$i = 0;
      while(1) {
       $arrayidx$i$i76 = (($distort) + ($sfb$08$i$i<<2)|0);
       $107 = +HEAPF32[$arrayidx$i$i76>>2];
       $conv$i$i77 = $107;
       $108 = $conv$i$i77 * $conv$i$i77;
       $mul1$i$i$i = $108 * 0.63200000000000001;
       $mul2$i$i$i = $mul1$i$i$i * $conv$i$i77;
       $add$i$i$i = $mul2$i$i$i + 0.36799999999999999;
       $conv$i$i$i = $add$i$i$i;
       $call$i$i$i = (+_fast_log2($conv$i$i$i));
       $conv3$i$i$i = $call$i$i$i;
       $mul4$i$i$i = $conv3$i$i$i * 0.30102999566398114;
       $add$i$i78 = $mul4$i$i$i + $klemm_noise$09$i$i;
       $inc$i$i79 = (($sfb$08$i$i) + 1)|0;
       $109 = HEAP32[$psymax$i$i>>2]|0;
       $cmp$i$i80 = ($inc$i$i79|0)<($109|0);
       if ($cmp$i$i80) {
        $klemm_noise$09$i$i = $add$i$i78;$sfb$08$i$i = $inc$i$i79;
       } else {
        $klemm_noise$0$lcssa$i$i = $add$i$i78;
        break;
       }
      }
     } else {
      $klemm_noise$0$lcssa$i$i = 1.0000000000000001E-37;
     }
     $cmp1$i$i = $klemm_noise$0$lcssa$i$i < 9.9999999999999995E-21;
     $cond$i$i = $cmp1$i$i ? 9.9999999999999995E-21 : $klemm_noise$0$lcssa$i$i;
     $conv77$i = $cond$i$i;
     HEAPF32[$max_noise$i>>2] = $conv77$i;
     $111 = $conv77$i;
     label = 114;
     break;
    }
    case 1:  {
     $$pre$i67 = +HEAPF32[$max_noise$i>>2];
     $111 = $$pre$i67;
     label = 114;
     break;
    }
    case 2:  {
     $112 = +HEAPF32[$tot_noise$i>>2];
     $113 = +HEAPF32[$tot_noise70$i>>2];
     $cmp87$i = $112 < $113;
     $conv88$i = $cmp87$i&1;
     $better$0$i = $conv88$i;
     break;
    }
    case 3:  {
     $114 = +HEAPF32[$tot_noise$i>>2];
     $115 = +HEAPF32[$tot_noise70$i>>2];
     $cmp92$i = $114 < $115;
     if ($cmp92$i) {
      $116 = +HEAPF32[$max_noise$i>>2];
      $117 = +HEAPF32[$max_noise16$i>>2];
      $cmp97$i = $116 < $117;
      $118 = $cmp97$i;
     } else {
      $118 = 0;
     }
     $land$ext100$i = $118&1;
     $better$0$i = $land$ext100$i;
     break;
    }
    case 4:  {
     $119 = +HEAPF32[$max_noise$i>>2];
     $conv103$i = $119;
     $cmp104$i = !($119 <= 0.0);
     do {
      if ($cmp104$i) {
       label = 125;
      } else {
       $120 = +HEAPF32[$max_noise16$i>>2];
       $conv108$i = $120;
       $cmp109$i = $conv108$i > 0.20000000000000001;
       if ($cmp109$i) {
        $135 = 1;
       } else {
        $cmp119$i = $120 < 0.0;
        $sub126$i = $conv103$i + -0.20000000000000001;
        $cmp127$i = $conv108$i > $sub126$i;
        $or$cond117$i = $cmp119$i & $cmp127$i;
        if ($or$cond117$i) {
         $121 = +HEAPF32[$tot_noise$i>>2];
         $122 = +HEAPF32[$tot_noise70$i>>2];
         $cmp132$i = $121 < $122;
         if ($cmp132$i) {
          $135 = 1;
          break;
         }
        }
        $cmp142$i = $120 > 0.0;
        $or$cond95 = $cmp142$i & $cmp127$i;
        if ($or$cond95) {
         $123 = +HEAPF32[$tot_noise$i>>2];
         $124 = +HEAPF32[$tot_noise70$i>>2];
         $125 = +HEAPF32[$best_noise_info>>2];
         $add156$i = $125 + $124;
         $cmp157$i = $123 < $add156$i;
         if ($cmp157$i) {
          $135 = 1;
         } else {
          label = 125;
         }
        } else {
         label = 125;
        }
       }
      }
     } while(0);
     do {
      if ((label|0) == 125) {
       label = 0;
       $cmp162$i = $119 > 0.0;
       if ($cmp162$i) {
        $126 = +HEAPF32[$max_noise16$i>>2];
        $conv166$i = $126;
        $cmp167$i = $conv166$i > -0.050000000000000003;
        $sub174$i = $conv103$i + -0.10000000000000001;
        $cmp175$i = $conv166$i > $sub174$i;
        $or$cond$i82 = $cmp167$i & $cmp175$i;
        if ($or$cond$i82) {
         $127 = +HEAPF32[$tot_noise$i>>2];
         $128 = +HEAPF32[$noise_info>>2];
         $add180$i = $128 + $127;
         $129 = +HEAPF32[$tot_noise70$i>>2];
         $130 = +HEAPF32[$best_noise_info>>2];
         $add183$i = $130 + $129;
         $cmp184$i = $add180$i < $add183$i;
         if ($cmp184$i) {
          $135 = 1;
          break;
         }
        }
        $cmp194$i = $conv166$i > -0.10000000000000001;
        $sub201$i = $conv103$i + -0.14999999999999999;
        $cmp202$i = $conv166$i > $sub201$i;
        $or$cond116$i = $cmp194$i & $cmp202$i;
        if ($or$cond116$i) {
         $131 = +HEAPF32[$tot_noise$i>>2];
         $132 = +HEAPF32[$noise_info>>2];
         $factor$i = $132 * 2.0;
         $add209$i = $factor$i + $131;
         $133 = +HEAPF32[$tot_noise70$i>>2];
         $134 = +HEAPF32[$best_noise_info>>2];
         $factor118$i = $134 * 2.0;
         $add214$i = $factor118$i + $133;
         $cmp215$i = $add209$i < $add214$i;
         $135 = $cmp215$i;
        } else {
         $135 = 0;
        }
       } else {
        $135 = 0;
       }
      }
     } while(0);
     $lor$ext220$i = $135&1;
     $better$0$i = $lor$ext220$i;
     break;
    }
    case 5:  {
     $136 = +HEAPF32[$noise_info>>2];
     $137 = +HEAPF32[$best_noise_info>>2];
     $cmp224$i = $136 < $137;
     do {
      if ($cmp224$i) {
       $143 = 1;
      } else {
       $fabsf110$i = (+Math_abs((+$136)));
       $fabsf111$i = (+Math_abs((+$137)));
       $cmp233$i = $fabsf110$i > $fabsf111$i;
       $sub238$i = $136 - $137;
       $fabsf112$i = (+Math_abs((+$sub238$i)));
       $138 = $fabsf112$i;
       if ($cmp233$i) {
        $139 = $fabsf110$i;
        $mul244$i = $139 * 9.9999999747524271E-7;
        $cmp245$i = !($138 <= $mul244$i);
        if ($cmp245$i) {
         $143 = 0;
         break;
        }
       } else {
        $140 = $fabsf111$i;
        $mul256$i = $140 * 9.9999999747524271E-7;
        $cmp257$i = !($138 <= $mul256$i);
        if ($cmp257$i) {
         $143 = 0;
         break;
        }
       }
       $141 = +HEAPF32[$tot_noise$i>>2];
       $142 = +HEAPF32[$tot_noise70$i>>2];
       $cmp262$i = $141 < $142;
       $143 = $cmp262$i;
      }
     } while(0);
     $lor$ext267$i = $143&1;
     $better$0$i = $lor$ext267$i;
     break;
    }
    case 6:  {
     $144 = +HEAPF32[$noise_info>>2];
     $145 = +HEAPF32[$best_noise_info>>2];
     $cmp271$i = $144 < $145;
     do {
      if ($cmp271$i) {
       $156 = 1;
      } else {
       $fabsf$i = (+Math_abs((+$144)));
       $fabsf105$i = (+Math_abs((+$145)));
       $cmp280$i = $fabsf$i > $fabsf105$i;
       $sub285$i = $144 - $145;
       $fabsf106$i = (+Math_abs((+$sub285$i)));
       $146 = $fabsf106$i;
       if ($cmp280$i) {
        $147 = $fabsf$i;
        $mul291$i = $147 * 9.9999999747524271E-7;
        $cmp292$i = !($146 <= $mul291$i);
        if ($cmp292$i) {
         $156 = 0;
         break;
        }
       } else {
        $148 = $fabsf105$i;
        $mul303$i = $148 * 9.9999999747524271E-7;
        $cmp304$i = !($146 <= $mul303$i);
        if ($cmp304$i) {
         $156 = 0;
         break;
        }
       }
       $149 = +HEAPF32[$max_noise$i>>2];
       $150 = +HEAPF32[$max_noise16$i>>2];
       $cmp309$i = $149 < $150;
       if ($cmp309$i) {
        $156 = 1;
       } else {
        $fabsf107$i = (+Math_abs((+$149)));
        $fabsf108$i = (+Math_abs((+$150)));
        $cmp318$i = $fabsf107$i > $fabsf108$i;
        $sub323$i = $149 - $150;
        $fabsf109$i = (+Math_abs((+$sub323$i)));
        $151 = $fabsf109$i;
        if ($cmp318$i) {
         $152 = $fabsf107$i;
         $mul329$i = $152 * 9.9999999747524271E-7;
         $cmp330$i = !($151 <= $mul329$i);
         if ($cmp330$i) {
          $156 = 0;
          break;
         }
        } else {
         $153 = $fabsf108$i;
         $mul341$i = $153 * 9.9999999747524271E-7;
         $cmp342$i = !($151 <= $mul341$i);
         if ($cmp342$i) {
          $156 = 0;
          break;
         }
        }
        $154 = +HEAPF32[$tot_noise$i>>2];
        $155 = +HEAPF32[$tot_noise70$i>>2];
        $cmp347$i = $154 <= $155;
        $156 = $cmp347$i;
       }
      }
     } while(0);
     $lor$ext356$i = $156&1;
     $better$0$i = $lor$ext356$i;
     break;
    }
    default: {
     $88 = HEAP32[$over_count>>2]|0;
     $cmp$i68 = ($88|0)>(0);
     if ($cmp$i68) {
      $89 = HEAP32[$over_SSD$i>>2]|0;
      $90 = HEAP32[$over_SSD1$i>>2]|0;
      $cmp2$i = ($89|0)<=($90|0);
      $conv$i = $cmp2$i&1;
      $cmp5$i69 = ($89|0)==($90|0);
      if (!($cmp5$i69)) {
       $better$0$i = $conv$i;
       break L145;
      }
      $91 = HEAP32[$bits>>2]|0;
      $cmp9$i70 = ($86|0)<($91|0);
      $conv10$i = $cmp9$i70&1;
      $better$0$i = $conv10$i;
      break L145;
     }
     $92 = +HEAPF32[$max_noise$i>>2];
     $cmp11$i = $92 < 0.0;
     if ($cmp11$i) {
      $mul$i = $92 * 10.0;
      $conv15$i = (+($86|0));
      $add$i72 = $mul$i + $conv15$i;
      $93 = +HEAPF32[$max_noise16$i>>2];
      $mul17$i = $93 * 10.0;
      $94 = HEAP32[$bits>>2]|0;
      $conv19$i = (+($94|0));
      $add20$i = $conv19$i + $mul17$i;
      $cmp21$i = $add$i72 <= $add20$i;
      $95 = $cmp21$i;
     } else {
      $95 = 0;
     }
     $land$ext$i = $95&1;
     $better$0$i = $land$ext$i;
    }
    }
   } while(0);
   if ((label|0) == 114) {
    label = 0;
    $110 = +HEAPF32[$max_noise16$i>>2];
    $cmp82$i = $111 < $110;
    $conv83$i = $cmp82$i&1;
    $better$0$i = $conv83$i;
   }
   $162 = HEAP32[$over_count>>2]|0;
   $cmp370$i = ($162|0)==(0);
   if ($cmp370$i) {
    $tobool$i83 = ($better$0$i|0)==(0);
    if ($tobool$i83) {
     $165 = 0;
    } else {
     $163 = HEAP32[$bits83>>2]|0;
     $164 = HEAP32[$bits>>2]|0;
     $cmp376$i = ($163|0)<($164|0);
     $165 = $cmp376$i;
    }
    $land$ext379$i = $165&1;
    $better$1$i = $land$ext379$i;
   } else {
    $better$1$i = $better$0$i;
   }
   $tobool92 = ($better$1$i|0)==(0);
   do {
    if ($tobool92) {
     $167 = HEAP32[$full_outer_loop>>2]|0;
     $cmp97 = ($167|0)==(0);
     if ($cmp97) {
      $inc100 = (($age$1) + 1)|0;
      $cmp101 = ($age$1|0)>=($$|0);
      $or$cond59 = $cmp101 & $cmp370$i;
      if ($or$cond59) {
       label = 161;
       break L18;
      }
      $168 = HEAP32[$noise_shaping_amp7$i$i>>2]|0;
      $cmp109 = ($168|0)==(3);
      $or$cond = $tobool112 & $cmp109;
      $cmp114 = ($age$1|0)>(29);
      $or$cond1 = $cmp114 & $or$cond;
      if ($or$cond1) {
       label = 161;
       break L18;
      }
      if (!($or$cond)) {
       $age$2 = $inc100;$best_part2_3_length$2 = $best_part2_3_length$1;
       break;
      }
      $169 = HEAP32[$11>>2]|0;
      $sub125 = (($169) - ($best_ggain_pass1$0139))|0;
      $cmp126 = ($sub125|0)>(15);
      if ($cmp126) {
       label = 161;
       break L18;
      } else {
       $age$2 = $inc100;$best_part2_3_length$2 = $best_part2_3_length$1;
      }
     } else {
      $age$2 = $age$1;$best_part2_3_length$2 = $best_part2_3_length$1;
     }
    } else {
     $166 = HEAP32[$part2_3_length$i>>2]|0;
     ;HEAP32[$best_noise_info>>2]=HEAP32[$noise_info>>2]|0;HEAP32[$best_noise_info+4>>2]=HEAP32[$noise_info+4>>2]|0;HEAP32[$best_noise_info+8>>2]=HEAP32[$noise_info+8>>2]|0;HEAP32[$best_noise_info+12>>2]=HEAP32[$noise_info+12>>2]|0;HEAP32[$best_noise_info+16>>2]=HEAP32[$noise_info+16>>2]|0;HEAP32[$best_noise_info+20>>2]=HEAP32[$noise_info+20>>2]|0;
     _memcpy(($cod_info|0),($cod_info_w|0),5252)|0;
     _memcpy(($save_xrpow|0),($xrpow|0),2304)|0;
     $age$2 = 0;$best_part2_3_length$2 = $166;
    }
   } while(0);
   $170 = HEAP32[$11>>2]|0;
   $171 = HEAP32[$scalefac_scale$i$i>>2]|0;
   $add136 = (($171) + ($170))|0;
   $cmp137 = ($add136|0)<(255);
   if ($cmp137) {
    $age$1 = $age$2;$best_part2_3_length$1 = $best_part2_3_length$2;
   } else {
    $best_part2_3_length$394 = $best_part2_3_length$2;
    break;
   }
  }
  if ((label|0) == 161) {
   label = 0;
   $best_part2_3_length$394 = $best_part2_3_length$1;
  }
  $172 = HEAP32[$noise_shaping_amp7$i$i>>2]|0;
  $cmp140 = ($172|0)==(3);
  $tobool143 = ($bRefine$0138|0)==(0);
  $or$cond60 = $tobool143 & $cmp140;
  if (!($or$cond60)) {
   break;
  }
  _memcpy(($cod_info_w|0),($cod_info|0),5252)|0;
  _memcpy(($xrpow|0),($save_xrpow|0),2304)|0;
  $173 = HEAP32[$11>>2]|0;
  $bRefine$0138 = 1;$best_ggain_pass1$0139 = $173;$best_part2_3_length$0137 = $best_part2_3_length$394;
 }
 $vbr = ((($gfc)) + 104|0);
 $174 = HEAP32[$vbr>>2]|0;
 switch ($174|0) {
 case 1: case 4: case 2:  {
  _memcpy(($xrpow|0),($save_xrpow|0),2304)|0;
  break;
 }
 default: {
  $175 = HEAP32[$substep_shaping>>2]|0;
  $and167 = $175 & 1;
  $tobool168 = ($and167|0)==(0);
  if (!($tobool168)) {
   _trancate_smallspectrums($gfc,$cod_info,$l3_xmin,$xrpow);
  }
 }
 }
 $176 = HEAP32[$over_count>>2]|0;
 $retval$0 = $176;
 STACKTOP = sp;return ($retval$0|0);
}
function _trancate_smallspectrums($gfc,$gi,$l3_xmin,$work) {
 $gfc = $gfc|0;
 $gi = $gi|0;
 $l3_xmin = $l3_xmin|0;
 $work = $work|0;
 var $$ = 0, $$old = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = 0, $20 = 0.0, $21 = 0, $3 = 0.0, $4 = 0;
 var $5 = 0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, $add = 0, $add66 = 0, $add66$lcssa = 0, $add66118 = 0, $add66121 = 0, $add70 = 0, $add76 = 0, $allowedNoise$0 = 0.0, $and = 0, $and3 = 0, $arrayidx = 0, $arrayidx129 = 0, $arrayidx13 = 0, $arrayidx145 = 0, $arrayidx179 = 0;
 var $arrayidx188 = 0, $arrayidx20 = 0, $arrayidx21 = 0, $arrayidx27 = 0, $arrayidx29 = 0, $arrayidx60 = 0, $arrayidx72 = 0, $arrayidx78 = 0, $arrayidx9 = 0, $block_type = 0, $block_type14 = 0, $call205 = 0, $cmp = 0, $cmp100 = 0, $cmp120 = 0, $cmp136 = 0, $cmp139 = 0, $cmp15 = 0, $cmp150 = 0, $cmp155 = 0;
 var $cmp164 = 0, $cmp172 = 0, $cmp183 = 0, $cmp191 = 0, $cmp202 = 0, $cmp23 = 0, $cmp33 = 0, $cmp44 = 0, $cmp53 = 0, $cmp6 = 0, $cmp67 = 0, $cmp67119 = 0, $cmp81 = 0, $conv134 = 0.0, $conv58 = 0.0, $conv61 = 0.0, $conv63 = 0.0, $dec = 0, $distort = 0, $dummy = 0;
 var $exitcond = 0, $fabsf = 0.0, $fabsf100 = 0.0, $fabsf101 = 0.0, $fabsf102 = 0.0, $fabsf103 = 0.0, $fabsf98 = 0.0, $fabsf99 = 0.0, $inc = 0, $inc125 = 0, $inc201 = 0, $j$0127 = 0, $j$1 = 0, $mul = 0.0, $mul119 = 0.0, $mul135 = 0.0, $mul163 = 0.0, $mul62 = 0.0, $mul99 = 0.0, $nsame$0$lcssa = 0;
 var $nsame$0120 = 0, $or$cond = 0, $part2_3_length = 0, $psymax = 0, $sfb$0 = 0, $start$0 = 0, $sub128$pre$phiZ2D = 0, $sub144 = 0, $sub148 = 0.0, $sub178 = 0, $sub28 = 0, $sub59 = 0.0, $sub71 = 0, $sub77 = 0, $sub91 = 0.0, $substep_shaping = 0, $tobool = 0, $tobool4 = 0, $tobool4$old = 0, $width$0 = 0;
 var $xr$0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0;
 $distort = sp + 24|0;
 $dummy = sp;
 $substep_shaping = ((($gfc)) + 85096|0);
 $0 = HEAP32[$substep_shaping>>2]|0;
 $and = $0 & 4;
 $tobool = ($and|0)==(0);
 if ($tobool) {
  $block_type = ((($gi)) + 4788|0);
  $1 = HEAP32[$block_type>>2]|0;
  $cmp = ($1|0)!=(2);
  $and3 = $0 & 128;
  $tobool4 = ($and3|0)==(0);
  $or$cond = $cmp & $tobool4;
  if (!($or$cond)) {
   STACKTOP = sp;return;
  }
 } else {
  $$old = $0 & 128;
  $tobool4$old = ($$old|0)==(0);
  if (!($tobool4$old)) {
   STACKTOP = sp;return;
  }
 }
 (_calc_noise($gi,$l3_xmin,$distort,$dummy,0)|0);
 $j$0127 = 0;
 while(1) {
  $arrayidx = (((($gi)) + 2304|0) + ($j$0127<<2)|0);
  $2 = HEAP32[$arrayidx>>2]|0;
  $cmp6 = ($2|0)==(0);
  if ($cmp6) {
   $xr$0 = 0.0;
  } else {
   $arrayidx9 = (($gi) + ($j$0127<<2)|0);
   $3 = +HEAPF32[$arrayidx9>>2];
   $fabsf103 = (+Math_abs((+$3)));
   $xr$0 = $fabsf103;
  }
  $arrayidx13 = (($work) + ($j$0127<<2)|0);
  HEAPF32[$arrayidx13>>2] = $xr$0;
  $inc = (($j$0127) + 1)|0;
  $exitcond = ($inc|0)==(576);
  if ($exitcond) {
   break;
  } else {
   $j$0127 = $inc;
  }
 }
 $block_type14 = ((($gi)) + 4788|0);
 $4 = HEAP32[$block_type14>>2]|0;
 $cmp15 = ($4|0)==(2);
 $$ = $cmp15 ? 6 : 8;
 $psymax = ((($gi)) + 4864|0);
 $j$1 = 0;$sfb$0 = $$;
 while(1) {
  $arrayidx20 = (((($gi)) + 4872|0) + ($sfb$0<<2)|0);
  $5 = HEAP32[$arrayidx20>>2]|0;
  $add = (($5) + ($j$1))|0;
  $arrayidx21 = (($distort) + ($sfb$0<<2)|0);
  $6 = +HEAPF32[$arrayidx21>>2];
  $cmp23 = !($6 >= 1.0);
  L15: do {
   if ($cmp23) {
    $arrayidx27 = (($work) + ($j$1<<2)|0);
    _qsort($arrayidx27,$5,4,1);
    $sub28 = (($add) + -1)|0;
    $arrayidx29 = (($work) + ($sub28<<2)|0);
    $7 = +HEAPF32[$arrayidx29>>2];
    $fabsf = (+Math_abs((+$7)));
    $8 = $fabsf;
    $cmp33 = ($7 != $7) | (0.0 != 0.0) |($7 == 0.0);
    if ($cmp33) {
     $cmp53 = $7 == 0.0;
     if ($cmp53) {
      break;
     }
    } else {
     $mul = $8 * 9.9999999747524271E-7;
     $cmp44 = !($8 <= $mul);
     if (!($cmp44)) {
      break;
     }
    }
    $9 = +HEAPF32[$arrayidx21>>2];
    $conv58 = $9;
    $sub59 = 1.0 - $conv58;
    $arrayidx60 = (($l3_xmin) + ($sfb$0<<2)|0);
    $10 = +HEAPF32[$arrayidx60>>2];
    $conv61 = $10;
    $mul62 = $sub59 * $conv61;
    $conv63 = $mul62;
    $allowedNoise$0 = $conv63;$start$0 = 0;
    while(1) {
     $add66118 = (($start$0) + 1)|0;
     $cmp67119 = ($add66118|0)<($5|0);
     L23: do {
      if ($cmp67119) {
       $add70 = (($start$0) + ($add))|0;
       $sub71 = (($add70) - ($5))|0;
       $arrayidx72 = (($work) + ($sub71<<2)|0);
       $11 = +HEAPF32[$arrayidx72>>2];
       $fabsf100 = (+Math_abs((+$11)));
       $add76 = (($start$0) + ($j$1))|0;
       $12 = $fabsf100;
       $mul99 = $12 * 9.9999999747524271E-7;
       $add66121 = $add66118;$nsame$0120 = 1;
       while(1) {
        $sub77 = (($add76) + ($nsame$0120))|0;
        $arrayidx78 = (($work) + ($sub77<<2)|0);
        $13 = +HEAPF32[$arrayidx78>>2];
        $fabsf101 = (+Math_abs((+$13)));
        $cmp81 = $fabsf100 > $fabsf101;
        $sub91 = $11 - $13;
        $fabsf102 = (+Math_abs((+$sub91)));
        $14 = $fabsf102;
        if ($cmp81) {
         $cmp100 = !($14 <= $mul99);
         if ($cmp100) {
          $add66$lcssa = $add66121;$nsame$0$lcssa = $nsame$0120;$sub128$pre$phiZ2D = $add76;
          break L23;
         }
        } else {
         $15 = $fabsf101;
         $mul119 = $15 * 9.9999999747524271E-7;
         $cmp120 = !($14 <= $mul119);
         if ($cmp120) {
          $add66$lcssa = $add66121;$nsame$0$lcssa = $nsame$0120;$sub128$pre$phiZ2D = $add76;
          break L23;
         }
        }
        $inc125 = (($nsame$0120) + 1)|0;
        $add66 = (($inc125) + ($start$0))|0;
        $cmp67 = ($add66|0)<($5|0);
        if ($cmp67) {
         $add66121 = $add66;$nsame$0120 = $inc125;
        } else {
         $add66$lcssa = $add66;$nsame$0$lcssa = $inc125;$sub128$pre$phiZ2D = $add76;
         break;
        }
       }
      } else {
       $$pre = (($j$1) + ($start$0))|0;
       $add66$lcssa = $add66118;$nsame$0$lcssa = 1;$sub128$pre$phiZ2D = $$pre;
      }
     } while(0);
     $arrayidx129 = (($work) + ($sub128$pre$phiZ2D<<2)|0);
     $16 = +HEAPF32[$arrayidx129>>2];
     $conv134 = (+($nsame$0$lcssa|0));
     $17 = $16 * $16;
     $mul135 = $17 * $conv134;
     $cmp136 = $allowedNoise$0 < $mul135;
     if ($cmp136) {
      break;
     }
     $sub148 = $allowedNoise$0 - $mul135;
     $cmp150 = ($add66$lcssa|0)<($5|0);
     if ($cmp150) {
      $allowedNoise$0 = $sub148;$start$0 = $add66$lcssa;
     } else {
      break L15;
     }
    }
    $cmp139 = ($start$0|0)==(0);
    if (!($cmp139)) {
     $sub144 = (($sub128$pre$phiZ2D) + -1)|0;
     $arrayidx145 = (($work) + ($sub144<<2)|0);
     $18 = +HEAPF32[$arrayidx145>>2];
     $fabsf98 = (+Math_abs((+$18)));
     $19 = $fabsf98;
     $cmp155 = ($18 != $18) | (0.0 != 0.0) |($18 == 0.0);
     if ($cmp155) {
      $cmp172 = $18 == 0.0;
      if ($cmp172) {
       break;
      } else {
       $width$0 = $5;
      }
     } else {
      $mul163 = $19 * 9.9999999747524271E-7;
      $cmp164 = !($19 <= $mul163);
      if ($cmp164) {
       $width$0 = $5;
      } else {
       break;
      }
     }
     while(1) {
      $sub178 = (($add) - ($width$0))|0;
      $arrayidx179 = (($gi) + ($sub178<<2)|0);
      $20 = +HEAPF32[$arrayidx179>>2];
      $fabsf99 = (+Math_abs((+$20)));
      $cmp183 = !($fabsf99 <= $18);
      if (!($cmp183)) {
       $arrayidx188 = (((($gi)) + 2304|0) + ($sub178<<2)|0);
       HEAP32[$arrayidx188>>2] = 0;
      }
      $dec = (($width$0) + -1)|0;
      $cmp191 = ($width$0|0)>(1);
      if ($cmp191) {
       $width$0 = $dec;
      } else {
       break;
      }
     }
    }
   }
  } while(0);
  $inc201 = (($sfb$0) + 1)|0;
  $21 = HEAP32[$psymax>>2]|0;
  $cmp202 = ($inc201|0)<($21|0);
  if ($cmp202) {
   $j$1 = $add;$sfb$0 = $inc201;
  } else {
   break;
  }
 }
 $call205 = (_noquant_count_bits($gfc,$gi,0)|0);
 $part2_3_length = ((($gi)) + 4768|0);
 HEAP32[$part2_3_length>>2] = $call205;
 STACKTOP = sp;return;
}
function _floatcompare($v1,$v2) {
 $v1 = $v1|0;
 $v2 = $v2|0;
 var $$ = 0, $0 = 0.0, $1 = 0.0, $cmp = 0, $cmp1 = 0, $retval$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = +HEAPF32[$v1>>2];
 $1 = +HEAPF32[$v2>>2];
 $cmp = $0 > $1;
 $cmp1 = $0 < $1;
 $$ = $cmp1 << 31 >> 31;
 $retval$0 = $cmp ? 1 : $$;
 return ($retval$0|0);
}
function _VBR_new_iteration_loop($gfc,$pe,$ms_ener_ratio,$ratio) {
 $gfc = $gfc|0;
 $pe = $pe|0;
 $ms_ener_ratio = $ms_ener_ratio|0;
 $ratio = $ratio|0;
 var $$i$0 = 0, $$pre = 0, $$pre106 = 0, $$pre107 = 0, $$pre108 = 0, $$pre99$i = 0, $$sink65 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ResvMax$i = 0, $ResvMax7$i = 0, $add$i = 0, $add$i$i = 0.0, $analog_silence$0$lcssa102104$i = 0;
 var $analog_silence$0$lcssa102105$i = 0, $analog_silence$090$i = 0, $analog_silence$1$$i = 0, $analog_silence$1$lcssa$i = 0, $analog_silence$186$i = 0, $and$i = 0, $and$lobit$i = 0, $arraydecay$i = 0, $arraydecay15 = 0, $arraydecay26$i = 0, $arrayidx$i = 0, $arrayidx$i$i = 0, $arrayidx$i66 = 0, $arrayidx12 = 0, $arrayidx19 = 0, $arrayidx19$i = 0, $arrayidx2$i$i = 0, $arrayidx23$i = 0, $arrayidx32 = 0, $arrayidx33$i = 0;
 var $arrayidx4$i = 0, $arrayidx50 = 0, $arrayidx53$us$us$i = 0, $arrayidx6$i = 0, $arrayidx63 = 0, $arrayidx7$i$i = 0, $arrayidx78 = 0, $avg$i = 0, $bitrate_index$i = 0, $bitrate_index3$i = 0, $bitrate_index60 = 0, $bits$091$i = 0, $bits$1$lcssa$i = 0, $bits$187$i = 0, $call23 = 0, $call27$i = 0, $call3$i$i = 0, $call4$i = 0, $call5$i$i = 0, $ch$085$i = 0;
 var $ch$097 = 0, $ch$168$us$us$i = 0, $ch$181 = 0, $channels_out = 0, $channels_out$i = 0, $channels_out72 = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i = 0, $cmp$i68 = 0, $cmp10 = 0, $cmp1096 = 0, $cmp11$i = 0, $cmp14$i$i = 0, $cmp15$i = 0, $cmp1584$i = 0, $cmp2$i = 0, $cmp215$i = 0, $cmp28$i = 0, $cmp30 = 0;
 var $cmp3088 = 0, $cmp33 = 0, $cmp39$us$i = 0, $cmp3969$i = 0, $cmp40 = 0, $cmp44 = 0, $cmp44$us$us$i = 0, $cmp4467$us$i = 0, $cmp47$i = 0, $cmp48 = 0, $cmp4885 = 0, $cmp49$i = 0, $cmp51 = 0, $cmp64 = 0, $cmp69 = 0, $cmp6982 = 0, $cmp73 = 0, $cmp7380 = 0, $cmp89$i = 0, $cmp98 = 0;
 var $conv$i = 0.0, $conv20$i = 0.0, $dec = 0, $div$us$us$i = 0, $enforce_min_bitrate = 0, $exitcond$i$i = 0, $frameBits = 0, $free_format$i = 0, $gr$092$i = 0, $gr$099 = 0, $gr$170$us$i = 0, $gr$183 = 0, $i$0$lcssa = 0, $i$0$ph = 0, $i$015$i$i = 0, $i$016$i = 0, $i$017$i$i = 0, $i$089 = 0, $inc = 0, $inc$i = 0;
 var $inc$i$i = 0, $inc$i65$i = 0, $inc$i70 = 0, $inc21 = 0, $inc35$i = 0, $inc37 = 0, $inc59$us$us$i = 0, $inc62$us$i = 0, $inc80 = 0, $inc83 = 0, $init_xrpow_core$i = 0, $j$086 = 0, $l3_xmin = 0, $mask_adjust$i = 0, $masking_lower$i = 0, $max_bits = 0, $max_nonzero_coeff$i = 0, $maximum_framebits$0$i = 0, $mode_ext$i = 0, $mode_gr$i = 0;
 var $mul$i = 0.0, $mul$i$i = 0.0, $mul$i67 = 0, $mul13$i$i = 0.0, $mul54$us$us$i = 0, $or$cond$i = 0, $pad$0 = 0, $pad$1 = 0, $psymax$i = 0, $sub = 0, $sub$i = 0, $sub$i$i = 0.0, $substep_shaping$i = 0, $sum$i = 0, $tobool = 0, $tobool$i = 0, $tobool25 = 0, $tobool26 = 0, $tobool64$i = 0, $vararg_buffer = 0;
 var $vbr_max_bitrate_index = 0, $vbr_max_bitrate_index$i = 0, $vbr_min_bitrate_index = 0, $vbr_min_bitrate_index$i$i = 0, $xrpow = 0, $xrpow_max$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 9936|0;
 $vararg_buffer = sp;
 $sum$i = sp + 9932|0;
 $avg$i = sp + 9928|0;
 $l3_xmin = sp + 9304|0;
 $xrpow = sp + 88|0;
 $frameBits = sp + 24|0;
 $max_bits = sp + 8|0;
 _memset(($xrpow|0),0,9216)|0;
 $free_format$i = ((($gfc)) + 152|0);
 $0 = HEAP32[$free_format$i>>2]|0;
 $tobool$i = ($0|0)==(0);
 if ($tobool$i) {
  $vbr_max_bitrate_index$i = ((($gfc)) + 116|0);
  $1 = HEAP32[$vbr_max_bitrate_index$i>>2]|0;
  $bitrate_index$i = ((($gfc)) + 84744|0);
  HEAP32[$bitrate_index$i>>2] = $1;
  (_ResvFrameBegin($gfc,$avg$i)|0);
  $ResvMax$i = ((($gfc)) + 52144|0);
  $2 = HEAP32[$ResvMax$i>>2]|0;
  $vbr_min_bitrate_index$i$i = ((($gfc)) + 112|0);
  $3 = HEAP32[$vbr_min_bitrate_index$i$i>>2]|0;
  HEAP32[$bitrate_index$i>>2] = $3;
  HEAP32[$bitrate_index$i>>2] = 1;
  $call3$i$i = (_getframebits($gfc)|0);
  HEAP32[$sum$i>>2] = $call3$i$i;
  $4 = HEAP32[$vbr_max_bitrate_index$i>>2]|0;
  $cmp14$i$i = ($4|0)<(1);
  if ($cmp14$i$i) {
   $6 = $4;
  } else {
   $i$015$i$i = 1;
   while(1) {
    HEAP32[$bitrate_index$i>>2] = $i$015$i$i;
    $call5$i$i = (_ResvFrameBegin($gfc,$sum$i)|0);
    $arrayidx$i$i = (($frameBits) + ($i$015$i$i<<2)|0);
    HEAP32[$arrayidx$i$i>>2] = $call5$i$i;
    $inc$i$i = (($i$015$i$i) + 1)|0;
    $5 = HEAP32[$vbr_max_bitrate_index$i>>2]|0;
    $cmp$i$i = ($i$015$i$i|0)<($5|0);
    if ($cmp$i$i) {
     $i$015$i$i = $inc$i$i;
    } else {
     $6 = $5;
     break;
    }
   }
  }
  $arrayidx$i = (($frameBits) + ($6<<2)|0);
  $7 = HEAP32[$arrayidx$i>>2]|0;
  $maximum_framebits$0$i = $7;$pad$0 = $2;
 } else {
  $bitrate_index3$i = ((($gfc)) + 84744|0);
  HEAP32[$bitrate_index3$i>>2] = 0;
  $call4$i = (_ResvFrameBegin($gfc,$avg$i)|0);
  HEAP32[$frameBits>>2] = $call4$i;
  $ResvMax7$i = ((($gfc)) + 52144|0);
  $8 = HEAP32[$ResvMax7$i>>2]|0;
  $maximum_framebits$0$i = $call4$i;$pad$0 = $8;
 }
 $mode_gr$i = ((($gfc)) + 76|0);
 $9 = HEAP32[$mode_gr$i>>2]|0;
 $cmp89$i = ($9|0)>(0);
 if ($cmp89$i) {
  $mode_ext$i = ((($gfc)) + 84756|0);
  $channels_out$i = ((($gfc)) + 72|0);
  $mask_adjust$i = ((($gfc)) + 84912|0);
  $masking_lower$i = ((($gfc)) + 84908|0);
  $analog_silence$090$i = 1;$bits$091$i = 0;$gr$092$i = 0;
  while(1) {
   $arraydecay$i = (($max_bits) + ($gr$092$i<<3)|0);
   $12 = HEAP32[$avg$i>>2]|0;
   (_on_pe($gfc,$pe,$arraydecay$i,$12,$gr$092$i,0)|0);
   $13 = HEAP32[$mode_ext$i>>2]|0;
   $cmp11$i = ($13|0)==(2);
   if ($cmp11$i) {
    $i$017$i$i = 0;
    while(1) {
     $arrayidx2$i$i = ((((($gfc)) + 304|0) + (($gr$092$i*10504)|0)|0) + ($i$017$i$i<<2)|0);
     $14 = +HEAPF32[$arrayidx2$i$i>>2];
     $arrayidx7$i$i = ((((((($gfc)) + 304|0) + (($gr$092$i*10504)|0)|0)) + 5252|0) + ($i$017$i$i<<2)|0);
     $15 = +HEAPF32[$arrayidx7$i$i>>2];
     $add$i$i = $15 + $14;
     $mul$i$i = $add$i$i * 0.70710676908493042;
     HEAPF32[$arrayidx2$i$i>>2] = $mul$i$i;
     $sub$i$i = $14 - $15;
     $mul13$i$i = $sub$i$i * 0.70710676908493042;
     HEAPF32[$arrayidx7$i$i>>2] = $mul13$i$i;
     $inc$i65$i = (($i$017$i$i) + 1)|0;
     $exitcond$i$i = ($inc$i65$i|0)==(576);
     if ($exitcond$i$i) {
      break;
     } else {
      $i$017$i$i = $inc$i65$i;
     }
    }
   }
   $16 = HEAP32[$channels_out$i>>2]|0;
   $cmp1584$i = ($16|0)>(0);
   if ($cmp1584$i) {
    $analog_silence$186$i = $analog_silence$090$i;$bits$187$i = $bits$091$i;$ch$085$i = 0;
    while(1) {
     $arrayidx19$i = ((((($gfc)) + 304|0) + (($gr$092$i*10504)|0)|0) + (($ch$085$i*5252)|0)|0);
     $17 = +HEAPF32[$mask_adjust$i>>2];
     $conv$i = $17;
     $mul$i = $conv$i * 0.10000000000000001;
     $18 = (+Math_pow(10.0,(+$mul$i)));
     $conv20$i = $18;
     HEAPF32[$masking_lower$i>>2] = $conv20$i;
     _init_outer_loop($gfc,$arrayidx19$i);
     $arrayidx23$i = ((($ratio) + (($gr$092$i*976)|0)|0) + (($ch$085$i*488)|0)|0);
     $arraydecay26$i = ((($l3_xmin) + (($gr$092$i*312)|0)|0) + (($ch$085$i*156)|0)|0);
     $call27$i = (_calc_xmin($gfc,$arrayidx23$i,$arrayidx19$i,$arraydecay26$i)|0);
     $cmp28$i = ($call27$i|0)==(0);
     $analog_silence$1$$i = $cmp28$i ? $analog_silence$186$i : 0;
     $arrayidx33$i = ((($max_bits) + ($gr$092$i<<3)|0) + ($ch$085$i<<2)|0);
     $19 = HEAP32[$arrayidx33$i>>2]|0;
     $add$i = (($19) + ($bits$187$i))|0;
     $inc$i = (($ch$085$i) + 1)|0;
     $20 = HEAP32[$channels_out$i>>2]|0;
     $cmp15$i = ($inc$i|0)<($20|0);
     if ($cmp15$i) {
      $analog_silence$186$i = $analog_silence$1$$i;$bits$187$i = $add$i;$ch$085$i = $inc$i;
     } else {
      $$pre99$i = $20;$analog_silence$1$lcssa$i = $analog_silence$1$$i;$bits$1$lcssa$i = $add$i;
      break;
     }
    }
   } else {
    $$pre99$i = $16;$analog_silence$1$lcssa$i = $analog_silence$090$i;$bits$1$lcssa$i = $bits$091$i;
   }
   $inc35$i = (($gr$092$i) + 1)|0;
   $10 = HEAP32[$mode_gr$i>>2]|0;
   $cmp$i = ($inc35$i|0)<($10|0);
   if ($cmp$i) {
    $analog_silence$090$i = $analog_silence$1$lcssa$i;$bits$091$i = $bits$1$lcssa$i;$gr$092$i = $inc35$i;
   } else {
    break;
   }
  }
  $cmp3969$i = ($10|0)>(0);
  if ($cmp3969$i) {
   $cmp47$i = ($bits$1$lcssa$i|0)>($maximum_framebits$0$i|0);
   $cmp49$i = ($bits$1$lcssa$i|0)>(0);
   $or$cond$i = $cmp47$i & $cmp49$i;
   if ($or$cond$i) {
    $cmp4467$us$i = ($$pre99$i|0)>(0);
    $gr$170$us$i = 0;
    while(1) {
     if ($cmp4467$us$i) {
      $ch$168$us$us$i = 0;
      while(1) {
       $arrayidx53$us$us$i = ((($max_bits) + ($gr$170$us$i<<3)|0) + ($ch$168$us$us$i<<2)|0);
       $11 = HEAP32[$arrayidx53$us$us$i>>2]|0;
       $mul54$us$us$i = Math_imul($11, $maximum_framebits$0$i)|0;
       $div$us$us$i = (($mul54$us$us$i|0) / ($bits$1$lcssa$i|0))&-1;
       HEAP32[$arrayidx53$us$us$i>>2] = $div$us$us$i;
       $inc59$us$us$i = (($ch$168$us$us$i) + 1)|0;
       $cmp44$us$us$i = ($inc59$us$us$i|0)<($$pre99$i|0);
       if ($cmp44$us$us$i) {
        $ch$168$us$us$i = $inc59$us$us$i;
       } else {
        break;
       }
      }
     }
     $inc62$us$i = (($gr$170$us$i) + 1)|0;
     $cmp39$us$i = ($inc62$us$i|0)<($10|0);
     if ($cmp39$us$i) {
      $gr$170$us$i = $inc62$us$i;
     } else {
      break;
     }
    }
   }
  }
  $tobool64$i = ($analog_silence$1$lcssa$i|0)==(0);
  if ($tobool64$i) {
   $21 = $10;$analog_silence$0$lcssa102105$i = 0;$pad$1 = $pad$0;
  } else {
   $43 = $10;$analog_silence$0$lcssa102104$i = $analog_silence$1$lcssa$i;
   label = 20;
  }
 } else {
  $43 = $9;$analog_silence$0$lcssa102104$i = 1;
  label = 20;
 }
 if ((label|0) == 20) {
  $21 = $43;$analog_silence$0$lcssa102105$i = $analog_silence$0$lcssa102104$i;$pad$1 = 0;
 }
 $cmp98 = ($21|0)>(0);
 if ($cmp98) {
  $channels_out = ((($gfc)) + 72|0);
  $init_xrpow_core$i = ((($gfc)) + 85824|0);
  $substep_shaping$i = ((($gfc)) + 85096|0);
  $$pre = HEAP32[$channels_out>>2]|0;
  $22 = $$pre;$44 = $21;$gr$099 = 0;
  while(1) {
   $cmp1096 = ($22|0)>(0);
   if ($cmp1096) {
    $ch$097 = 0;
    while(1) {
     $arrayidx12 = ((((($gfc)) + 304|0) + (($gr$099*10504)|0)|0) + (($ch$097*5252)|0)|0);
     $arraydecay15 = ((($xrpow) + (($gr$099*4608)|0)|0) + (($ch$097*2304)|0)|0);
     HEAPF32[$sum$i>>2] = 0.0;
     $max_nonzero_coeff$i = ((((((($gfc)) + 304|0) + (($gr$099*10504)|0)|0) + (($ch$097*5252)|0)|0)) + 5208|0);
     $23 = HEAP32[$max_nonzero_coeff$i>>2]|0;
     $xrpow_max$i = ((((((($gfc)) + 304|0) + (($gr$099*10504)|0)|0) + (($ch$097*5252)|0)|0)) + 4764|0);
     HEAPF32[$xrpow_max$i>>2] = 0.0;
     $arrayidx$i66 = (((($xrpow) + (($gr$099*4608)|0)|0) + (($ch$097*2304)|0)|0) + ($23<<2)|0);
     $sub$i = (576 - ($23))|0;
     $mul$i67 = $sub$i << 2;
     _memset(($arrayidx$i66|0),0,($mul$i67|0))|0;
     $24 = HEAP32[$init_xrpow_core$i>>2]|0;
     FUNCTION_TABLE_viiii[$24 & 7]($arrayidx12,$arraydecay15,$23,$sum$i);
     $25 = +HEAPF32[$sum$i>>2];
     $cmp$i68 = $25 > 9.9999996826552254E-21;
     if ($cmp$i68) {
      $26 = HEAP32[$substep_shaping$i>>2]|0;
      $and$i = $26 >>> 1;
      $and$lobit$i = $and$i & 1;
      $psymax$i = ((((((($gfc)) + 304|0) + (($gr$099*10504)|0)|0) + (($ch$097*5252)|0)|0)) + 4864|0);
      $27 = HEAP32[$psymax$i>>2]|0;
      $cmp215$i = ($27|0)>(0);
      if ($cmp215$i) {
       $i$016$i = 0;
       while(1) {
        $arrayidx4$i = (((($gfc)) + 84936|0) + ($i$016$i<<2)|0);
        HEAP32[$arrayidx4$i>>2] = $and$lobit$i;
        $inc$i70 = (($i$016$i) + 1)|0;
        $28 = HEAP32[$psymax$i>>2]|0;
        $cmp2$i = ($inc$i70|0)<($28|0);
        if ($cmp2$i) {
         $i$016$i = $inc$i70;
        } else {
         break;
        }
       }
      }
     } else {
      $arrayidx6$i = ((((((($gfc)) + 304|0) + (($gr$099*10504)|0)|0) + (($ch$097*5252)|0)|0)) + 2304|0);
      _memset(($arrayidx6$i|0),0,2304)|0;
      $arrayidx19 = ((($max_bits) + ($gr$099<<3)|0) + ($ch$097<<2)|0);
      HEAP32[$arrayidx19>>2] = 0;
     }
     $inc = (($ch$097) + 1)|0;
     $29 = HEAP32[$channels_out>>2]|0;
     $cmp10 = ($inc|0)<($29|0);
     if ($cmp10) {
      $ch$097 = $inc;
     } else {
      break;
     }
    }
    $$pre106 = HEAP32[$mode_gr$i>>2]|0;
    $30 = $$pre106;$45 = $29;
   } else {
    $30 = $44;$45 = $22;
   }
   $inc21 = (($gr$099) + 1)|0;
   $cmp = ($inc21|0)<($30|0);
   if ($cmp) {
    $22 = $45;$44 = $30;$gr$099 = $inc21;
   } else {
    break;
   }
  }
 }
 $call23 = (_VBR_encode_frame(($gfc|0),($xrpow|0),($l3_xmin|0),($max_bits|0))|0);
 $31 = HEAP32[$free_format$i>>2]|0;
 $tobool = ($31|0)==(0);
 L53: do {
  if ($tobool) {
   $tobool25 = ($analog_silence$0$lcssa102105$i|0)==(0);
   if ($tobool25) {
    label = 35;
   } else {
    $enforce_min_bitrate = ((($gfc)) + 124|0);
    $32 = HEAP32[$enforce_min_bitrate>>2]|0;
    $tobool26 = ($32|0)==(0);
    if ($tobool26) {
     $i$0$ph = 1;
    } else {
     label = 35;
    }
   }
   if ((label|0) == 35) {
    $vbr_min_bitrate_index = ((($gfc)) + 112|0);
    $33 = HEAP32[$vbr_min_bitrate_index>>2]|0;
    $i$0$ph = $33;
   }
   $vbr_max_bitrate_index = ((($gfc)) + 116|0);
   $34 = HEAP32[$vbr_max_bitrate_index>>2]|0;
   $cmp3088 = ($i$0$ph|0)<($34|0);
   L60: do {
    if ($cmp3088) {
     $i$089 = $i$0$ph;
     while(1) {
      $arrayidx32 = (($frameBits) + ($i$089<<2)|0);
      $35 = HEAP32[$arrayidx32>>2]|0;
      $cmp33 = ($call23|0)>($35|0);
      if (!($cmp33)) {
       $i$0$lcssa = $i$089;
       break L60;
      }
      $inc37 = (($i$089) + 1)|0;
      $cmp30 = ($inc37|0)<($34|0);
      if ($cmp30) {
       $i$089 = $inc37;
      } else {
       $i$0$lcssa = $inc37;
       break;
      }
     }
    } else {
     $i$0$lcssa = $i$0$ph;
    }
   } while(0);
   $cmp40 = ($i$0$lcssa|0)>($34|0);
   $$i$0 = $cmp40 ? $34 : $i$0$lcssa;
   $cmp44 = ($pad$1|0)>(0);
   if ($cmp44) {
    $cmp4885 = ($34|0)>($i$0$lcssa|0);
    if ($cmp4885) {
     $j$086 = $34;
     while(1) {
      $arrayidx50 = (($frameBits) + ($j$086<<2)|0);
      $36 = HEAP32[$arrayidx50>>2]|0;
      $sub = (($36) - ($call23))|0;
      $cmp51 = ($sub|0)>($pad$1|0);
      if (!($cmp51)) {
       $$sink65 = $j$086;
       break L53;
      }
      $dec = (($j$086) + -1)|0;
      $cmp48 = ($dec|0)>($$i$0|0);
      if ($cmp48) {
       $j$086 = $dec;
      } else {
       $$sink65 = $dec;
       break;
      }
     }
    } else {
     $$sink65 = $34;
    }
   } else {
    $$sink65 = $$i$0;
   }
  } else {
   $$sink65 = 0;
  }
 } while(0);
 $bitrate_index60 = ((($gfc)) + 84744|0);
 HEAP32[$bitrate_index60>>2] = $$sink65;
 $arrayidx63 = (($frameBits) + ($$sink65<<2)|0);
 $37 = HEAP32[$arrayidx63>>2]|0;
 $cmp64 = ($call23|0)>($37|0);
 if ($cmp64) {
  _lame_errorf($gfc,15552,$vararg_buffer);
  _exit(-1);
  // unreachable;
 }
 (_ResvFrameBegin($gfc,$sum$i)|0);
 $38 = HEAP32[$mode_gr$i>>2]|0;
 $cmp6982 = ($38|0)>(0);
 if (!($cmp6982)) {
  $42 = HEAP32[$sum$i>>2]|0;
  _ResvFrameEnd($gfc,$42);
  STACKTOP = sp;return;
 }
 $channels_out72 = ((($gfc)) + 72|0);
 $$pre107 = HEAP32[$channels_out72>>2]|0;
 $39 = $$pre107;$46 = $38;$gr$183 = 0;
 while(1) {
  $cmp7380 = ($39|0)>(0);
  if ($cmp7380) {
   $ch$181 = 0;
   while(1) {
    $arrayidx78 = ((((($gfc)) + 304|0) + (($gr$183*10504)|0)|0) + (($ch$181*5252)|0)|0);
    _ResvAdjust($gfc,$arrayidx78);
    $inc80 = (($ch$181) + 1)|0;
    $40 = HEAP32[$channels_out72>>2]|0;
    $cmp73 = ($inc80|0)<($40|0);
    if ($cmp73) {
     $ch$181 = $inc80;
    } else {
     break;
    }
   }
   $$pre108 = HEAP32[$mode_gr$i>>2]|0;
   $41 = $$pre108;$47 = $40;
  } else {
   $41 = $46;$47 = $39;
  }
  $inc83 = (($gr$183) + 1)|0;
  $cmp69 = ($inc83|0)<($41|0);
  if ($cmp69) {
   $39 = $47;$46 = $41;$gr$183 = $inc83;
  } else {
   break;
  }
 }
 $42 = HEAP32[$sum$i>>2]|0;
 _ResvFrameEnd($gfc,$42);
 STACKTOP = sp;return;
}
function _ABR_iteration_loop($gfc,$pe,$ms_ener_ratio,$ratio) {
 $gfc = $gfc|0;
 $pe = $pe|0;
 $ms_ener_ratio = $ms_ener_ratio|0;
 $ratio = $ratio|0;
 var $$add_bits$0$i = 0, $$pre = 0, $$pre$i = 0, $$pre139$i = 0, $$pre140$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0.0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0.0, $28 = 0.0, $29 = 0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0.0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0.0, $add$i = 0.0, $add$i48 = 0.0, $add100$i = 0, $add159$i = 0, $add88$i = 0, $add_bits$0$i = 0, $add_bits$1$i = 0;
 var $and$i = 0, $and$i56 = 0, $and$lobit$i = 0, $arraydecay$i = 0, $arrayidx$i = 0, $arrayidx110$i = 0, $arrayidx132$i = 0, $arrayidx150$i = 0, $arrayidx182$i = 0, $arrayidx2$i = 0, $arrayidx20 = 0, $arrayidx27 = 0, $arrayidx4$i = 0, $arrayidx45$i = 0, $arrayidx47$i = 0, $arrayidx6$i = 0, $arrayidx7$i = 0, $arrayidx9 = 0, $bitrate_index$i = 0, $block_type = 0;
 var $block_type$i = 0, $call$i = 0, $call22 = 0, $call4$i = 0, $call43 = 0, $ch$0129$i = 0, $ch$077 = 0, $ch$1133$i = 0, $ch$2119$i = 0, $ch$3114$i = 0, $channels_out$i = 0, $cmp = 0, $cmp$i = 0, $cmp$i54 = 0, $cmp$i60 = 0, $cmp10 = 0, $cmp101$i = 0, $cmp106$i = 0, $cmp123$i = 0, $cmp128$i = 0;
 var $cmp128$i84 = 0, $cmp141$i = 0, $cmp141121$i = 0, $cmp146$i = 0, $cmp146118$i = 0, $cmp151$i = 0, $cmp166$i = 0, $cmp168$i = 0, $cmp173$i = 0, $cmp178$i = 0, $cmp178113$i = 0, $cmp2$i = 0, $cmp215$i = 0, $cmp23 = 0, $cmp30$i = 0, $cmp35$i = 0, $cmp35134$i = 0, $cmp39$i = 0, $cmp39128$i = 0, $cmp4 = 0;
 var $cmp40 = 0, $cmp4075 = 0, $cmp44 = 0, $cmp48$i = 0, $cmp64$i = 0, $cmp68$i = 0, $cmp7 = 0, $cmp76$i = 0, $cmp776 = 0, $cmp78 = 0, $cmp92$i = 0, $compression_ratio$i = 0, $conv = 0.0, $conv$i = 0.0, $conv11$i = 0, $conv15 = 0.0, $conv20$i = 0.0, $conv24$i = 0.0, $conv25$i = 0.0, $conv42$i = 0.0;
 var $conv44$i = 0, $conv54$i = 0.0, $conv56$i = 0, $div$i = 0, $div114$i = 0, $div12$i = 0, $div186$i = 0, $div19$i = 0, $div23$i = 0.0, $div55$i = 0.0, $div67$i = 0, $div75$i = 0, $exitcond$i = 0, $gr$0135$i = 0, $gr$079 = 0, $gr$2123$i = 0, $gr$3116$i = 0, $i$016$i = 0, $i$017$i = 0, $inc = 0;
 var $inc$i = 0, $inc$i50 = 0, $inc$i58 = 0, $inc116$i = 0, $inc120$i = 0, $inc136$i = 0, $inc136$i85 = 0, $inc161$i = 0, $inc164$i = 0, $inc188$i = 0, $inc191$i = 0, $inc36 = 0, $inc50 = 0, $init_xrpow_core$i = 0, $l3_side2 = 0, $l3_xmin = 0, $mask_adjust = 0, $mask_adjust_short = 0, $masking_lower = 0, $masking_lower_db$0 = 0.0;
 var $masking_lower_db$0$in = 0, $max_nonzero_coeff$i = 0, $mean_bits = 0, $mode_ext$i = 0, $mode_gr$i = 0, $mul = 0.0, $mul$i = 0.0, $mul$i53 = 0, $mul10$i = 0.0, $mul111$i = 0, $mul13$i = 0.0, $mul134$i = 0, $mul134$i83 = 0, $mul183$i = 0, $mul43$i = 0.0, $mul5$i = 0, $mul7$i = 0, $mul74$i = 0, $mul8$i = 0, $mul9$i = 0;
 var $mul9$i$conv11$i = 0, $or$cond$i = 0, $psymax$i = 0, $res_factor$0$i = 0.0, $res_factor$1$i = 0.0, $samplerate_out$i = 0, $sideinfo_len$i = 0, $sub$i = 0, $sub$i49 = 0.0, $sub$i52 = 0, $sub15$i = 0, $sub21$i = 0.0, $sub53$i = 0.0, $substep_shaping$i = 0, $sum$0130$i = 0, $sum$i = 0, $targ_bits = 0, $tobool$i = 0, $totbits$0122$i = 0, $totbits$1$lcssa$i = 0;
 var $totbits$1120$i = 0, $use_best_huffman$i = 0, $vbr_avg_bitrate_kbps$i = 0, $vbr_max_bitrate_index$i = 0, $vbr_min_bitrate_index = 0, $xrpow = 0, $xrpow_max$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2496|0;
 $sum$i = sp + 2484|0;
 $l3_xmin = sp + 2328|0;
 $xrpow = sp + 24|0;
 $targ_bits = sp + 8|0;
 $mean_bits = sp;
 $l3_side2 = ((($gfc)) + 304|0);
 HEAP32[$mean_bits>>2] = 0;
 $mode_gr$i = ((($gfc)) + 76|0);
 $0 = HEAP32[$mode_gr$i>>2]|0;
 $vbr_max_bitrate_index$i = ((($gfc)) + 116|0);
 $1 = HEAP32[$vbr_max_bitrate_index$i>>2]|0;
 $bitrate_index$i = ((($gfc)) + 84744|0);
 HEAP32[$bitrate_index$i>>2] = $1;
 $call$i = (_ResvFrameBegin($gfc,$sum$i)|0);
 HEAP32[$bitrate_index$i>>2] = 1;
 $call4$i = (_getframebits($gfc)|0);
 $sideinfo_len$i = ((($gfc)) + 24|0);
 $2 = HEAP32[$sideinfo_len$i>>2]|0;
 $mul5$i = $2 << 3;
 $sub$i = (($call4$i) - ($mul5$i))|0;
 $3 = HEAP32[$mode_gr$i>>2]|0;
 $channels_out$i = ((($gfc)) + 72|0);
 $4 = HEAP32[$channels_out$i>>2]|0;
 $mul7$i = Math_imul($4, $3)|0;
 $div$i = (($sub$i|0) / ($mul7$i|0))&-1;
 $vbr_avg_bitrate_kbps$i = ((($gfc)) + 108|0);
 $5 = HEAP32[$vbr_avg_bitrate_kbps$i>>2]|0;
 $mul8$i = ($0*576000)|0;
 $mul9$i = Math_imul($mul8$i, $5)|0;
 $substep_shaping$i = ((($gfc)) + 85096|0);
 $6 = HEAP32[$substep_shaping$i>>2]|0;
 $and$i = $6 & 1;
 $tobool$i = ($and$i|0)==(0);
 $conv$i = (+($mul9$i|0));
 $mul10$i = $conv$i * 1.0900000000000001;
 $conv11$i = (~~(($mul10$i)));
 $mul9$i$conv11$i = $tobool$i ? $mul9$i : $conv11$i;
 $samplerate_out$i = ((($gfc)) + 64|0);
 $7 = HEAP32[$samplerate_out$i>>2]|0;
 $div12$i = (($mul9$i$conv11$i|0) / ($7|0))&-1;
 $sub15$i = (($div12$i) - ($mul5$i))|0;
 $div19$i = (($sub15$i|0) / ($mul7$i|0))&-1;
 HEAP32[$sum$i>>2] = $div19$i;
 $compression_ratio$i = ((($gfc)) + 244|0);
 $8 = +HEAPF32[$compression_ratio$i>>2];
 $conv20$i = $8;
 $sub21$i = 11.0 - $conv20$i;
 $div23$i = $sub21$i * 0.012727272727272728;
 $add$i = $div23$i + 0.93000000000000005;
 $conv24$i = $add$i;
 $conv25$i = $conv24$i;
 $cmp$i = $conv25$i < 0.90000000000000002;
 $res_factor$0$i = $cmp$i ? 0.89999997615814208 : $conv24$i;
 $cmp35134$i = ($3|0)>(0);
 if ($cmp35134$i) {
  $cmp30$i = $res_factor$0$i > 1.0;
  $res_factor$1$i = $cmp30$i ? 1.0 : $res_factor$0$i;
  $conv42$i = (+($div19$i|0));
  $mul43$i = $res_factor$1$i * $conv42$i;
  $conv44$i = (~~(($mul43$i)));
  $div67$i = (($div19$i|0) / 2)&-1;
  $mul74$i = ($div19$i*3)|0;
  $div75$i = (($mul74$i|0) / 2)&-1;
  $cmp39128$i = ($4|0)>(0);
  $gr$0135$i = 0;
  while(1) {
   if ($cmp39128$i) {
    $ch$0129$i = 0;$sum$0130$i = 0;
    while(1) {
     $arrayidx45$i = ((($targ_bits) + ($gr$0135$i<<3)|0) + ($ch$0129$i<<2)|0);
     HEAP32[$arrayidx45$i>>2] = $conv44$i;
     $arrayidx47$i = ((($pe) + ($gr$0135$i<<3)|0) + ($ch$0129$i<<2)|0);
     $9 = +HEAPF32[$arrayidx47$i>>2];
     $cmp48$i = $9 > 700.0;
     if ($cmp48$i) {
      $sub53$i = $9 + -700.0;
      $conv54$i = $sub53$i;
      $div55$i = $conv54$i * 0.7142857142857143;
      $conv56$i = (~~(($div55$i)));
      $block_type$i = ((((((($gfc)) + 304|0) + (($gr$0135$i*10504)|0)|0) + (($ch$0129$i*5252)|0)|0)) + 4788|0);
      $10 = HEAP32[$block_type$i>>2]|0;
      $cmp64$i = ($10|0)==(2);
      $cmp68$i = ($conv56$i|0)<($div67$i|0);
      $11 = $cmp68$i & $cmp64$i;
      $add_bits$0$i = $11 ? $div67$i : $conv56$i;
      $cmp76$i = ($add_bits$0$i|0)>($div75$i|0);
      $12 = ($add_bits$0$i|0)>(0);
      $$add_bits$0$i = $12 ? $add_bits$0$i : 0;
      $add_bits$1$i = $cmp76$i ? $div75$i : $$add_bits$0$i;
      $add88$i = (($add_bits$1$i) + ($conv44$i))|0;
      HEAP32[$arrayidx45$i>>2] = $add88$i;
      $13 = $add88$i;
     } else {
      $13 = $conv44$i;
     }
     $cmp92$i = ($13|0)>(4095);
     if ($cmp92$i) {
      HEAP32[$arrayidx45$i>>2] = 4095;
      $14 = 4095;
     } else {
      $14 = $13;
     }
     $add100$i = (($14) + ($sum$0130$i))|0;
     $inc$i = (($ch$0129$i) + 1)|0;
     $cmp39$i = ($inc$i|0)<($4|0);
     if ($cmp39$i) {
      $ch$0129$i = $inc$i;$sum$0130$i = $add100$i;
     } else {
      break;
     }
    }
    $cmp101$i = ($add100$i|0)>(7680);
    if ($cmp101$i) {
     $ch$1133$i = 0;
     while(1) {
      $arrayidx110$i = ((($targ_bits) + ($gr$0135$i<<3)|0) + ($ch$1133$i<<2)|0);
      $15 = HEAP32[$arrayidx110$i>>2]|0;
      $mul111$i = ($15*7680)|0;
      $div114$i = (($mul111$i|0) / ($add100$i|0))&-1;
      HEAP32[$arrayidx110$i>>2] = $div114$i;
      $inc116$i = (($ch$1133$i) + 1)|0;
      $cmp106$i = ($inc116$i|0)<($4|0);
      if ($cmp106$i) {
       $ch$1133$i = $inc116$i;
      } else {
       break;
      }
     }
    }
   }
   $inc120$i = (($gr$0135$i) + 1)|0;
   $cmp35$i = ($inc120$i|0)<($3|0);
   if ($cmp35$i) {
    $gr$0135$i = $inc120$i;
   } else {
    break;
   }
  }
 }
 $mode_ext$i = ((($gfc)) + 84756|0);
 $16 = HEAP32[$mode_ext$i>>2]|0;
 $cmp123$i = ($16|0)==(2);
 if ($cmp123$i) {
  if ($cmp35134$i) {
   $17 = +HEAPF32[$ms_ener_ratio>>2];
   $mul134$i83 = Math_imul($div19$i, $4)|0;
   _reduce_side($targ_bits,$17,$mul134$i83,7680);
   $18 = HEAP32[$mode_gr$i>>2]|0;
   $cmp128$i84 = ($18|0)>(1);
   if ($cmp128$i84) {
    $inc136$i85 = 1;
    while(1) {
     $$pre$i = HEAP32[$sum$i>>2]|0;
     $$pre139$i = HEAP32[$channels_out$i>>2]|0;
     $arraydecay$i = (($targ_bits) + ($inc136$i85<<3)|0);
     $arrayidx132$i = (($ms_ener_ratio) + ($inc136$i85<<2)|0);
     $20 = +HEAPF32[$arrayidx132$i>>2];
     $mul134$i = Math_imul($$pre$i, $$pre139$i)|0;
     _reduce_side($arraydecay$i,$20,$mul134$i,7680);
     $inc136$i = (($inc136$i85) + 1)|0;
     $21 = HEAP32[$mode_gr$i>>2]|0;
     $cmp128$i = ($inc136$i|0)<($21|0);
     if ($cmp128$i) {
      $inc136$i85 = $inc136$i;
     } else {
      $19 = $21;
      label = 15;
      break;
     }
    }
   } else {
    $19 = $18;
    label = 15;
   }
  } else {
   label = 28;
  }
 } else {
  $19 = $3;
  label = 15;
 }
 if ((label|0) == 15) {
  $cmp141121$i = ($19|0)>(0);
  if ($cmp141121$i) {
   $$pre140$i = HEAP32[$channels_out$i>>2]|0;
   $cmp146118$i = ($$pre140$i|0)>(0);
   $gr$2123$i = 0;$totbits$0122$i = 0;
   while(1) {
    if ($cmp146118$i) {
     $ch$2119$i = 0;$totbits$1120$i = $totbits$0122$i;
     while(1) {
      $arrayidx150$i = ((($targ_bits) + ($gr$2123$i<<3)|0) + ($ch$2119$i<<2)|0);
      $22 = HEAP32[$arrayidx150$i>>2]|0;
      $cmp151$i = ($22|0)>(4095);
      if ($cmp151$i) {
       HEAP32[$arrayidx150$i>>2] = 4095;
       $23 = 4095;
      } else {
       $23 = $22;
      }
      $add159$i = (($23) + ($totbits$1120$i))|0;
      $inc161$i = (($ch$2119$i) + 1)|0;
      $cmp146$i = ($inc161$i|0)<($$pre140$i|0);
      if ($cmp146$i) {
       $ch$2119$i = $inc161$i;$totbits$1120$i = $add159$i;
      } else {
       $totbits$1$lcssa$i = $add159$i;
       break;
      }
     }
    } else {
     $totbits$1$lcssa$i = $totbits$0122$i;
    }
    $inc164$i = (($gr$2123$i) + 1)|0;
    $cmp141$i = ($inc164$i|0)<($19|0);
    if ($cmp141$i) {
     $gr$2123$i = $inc164$i;$totbits$0122$i = $totbits$1$lcssa$i;
    } else {
     break;
    }
   }
   $cmp166$i = ($totbits$1$lcssa$i|0)>($call$i|0);
   $cmp168$i = ($totbits$1$lcssa$i|0)>(0);
   $or$cond$i = $cmp168$i & $cmp166$i;
   if ($or$cond$i) {
    $cmp178113$i = ($$pre140$i|0)>(0);
    $47 = $19;$gr$3116$i = 0;
    while(1) {
     if ($cmp178113$i) {
      $ch$3114$i = 0;
      while(1) {
       $arrayidx182$i = ((($targ_bits) + ($gr$3116$i<<3)|0) + ($ch$3114$i<<2)|0);
       $24 = HEAP32[$arrayidx182$i>>2]|0;
       $mul183$i = Math_imul($24, $call$i)|0;
       $div186$i = (($mul183$i|0) / ($totbits$1$lcssa$i|0))&-1;
       HEAP32[$arrayidx182$i>>2] = $div186$i;
       $inc188$i = (($ch$3114$i) + 1)|0;
       $cmp178$i = ($inc188$i|0)<($$pre140$i|0);
       if ($cmp178$i) {
        $ch$3114$i = $inc188$i;
       } else {
        $25 = $19;
        break;
       }
      }
     } else {
      $25 = $47;
     }
     $inc191$i = (($gr$3116$i) + 1)|0;
     $cmp173$i = ($inc191$i|0)<($25|0);
     if ($cmp173$i) {
      $47 = $25;$gr$3116$i = $inc191$i;
     } else {
      break;
     }
    }
   }
   $cmp78 = ($19|0)>(0);
   if ($cmp78) {
    $mask_adjust = ((($gfc)) + 84912|0);
    $mask_adjust_short = ((($gfc)) + 84916|0);
    $masking_lower = ((($gfc)) + 84908|0);
    $init_xrpow_core$i = ((($gfc)) + 85824|0);
    $use_best_huffman$i = ((($gfc)) + 36|0);
    $gr$079 = 0;
    while(1) {
     $26 = HEAP32[$mode_ext$i>>2]|0;
     $cmp4 = ($26|0)==(2);
     if ($cmp4) {
      $i$017$i = 0;
      while(1) {
       $arrayidx2$i = ((((($gfc)) + 304|0) + (($gr$079*10504)|0)|0) + ($i$017$i<<2)|0);
       $27 = +HEAPF32[$arrayidx2$i>>2];
       $arrayidx7$i = ((((((($gfc)) + 304|0) + (($gr$079*10504)|0)|0)) + 5252|0) + ($i$017$i<<2)|0);
       $28 = +HEAPF32[$arrayidx7$i>>2];
       $add$i48 = $28 + $27;
       $mul$i = $add$i48 * 0.70710676908493042;
       HEAPF32[$arrayidx2$i>>2] = $mul$i;
       $sub$i49 = $27 - $28;
       $mul13$i = $sub$i49 * 0.70710676908493042;
       HEAPF32[$arrayidx7$i>>2] = $mul13$i;
       $inc$i50 = (($i$017$i) + 1)|0;
       $exitcond$i = ($inc$i50|0)==(576);
       if ($exitcond$i) {
        break;
       } else {
        $i$017$i = $inc$i50;
       }
      }
     }
     $29 = HEAP32[$channels_out$i>>2]|0;
     $cmp776 = ($29|0)>(0);
     if ($cmp776) {
      $ch$077 = 0;
      while(1) {
       $arrayidx9 = ((((($gfc)) + 304|0) + (($gr$079*10504)|0)|0) + (($ch$077*5252)|0)|0);
       $block_type = ((((((($gfc)) + 304|0) + (($gr$079*10504)|0)|0) + (($ch$077*5252)|0)|0)) + 4788|0);
       $30 = HEAP32[$block_type>>2]|0;
       $cmp10 = ($30|0)==(2);
       $masking_lower_db$0$in = $cmp10 ? $mask_adjust_short : $mask_adjust;
       $masking_lower_db$0 = +HEAPF32[$masking_lower_db$0$in>>2];
       $conv = $masking_lower_db$0;
       $mul = $conv * 0.10000000000000001;
       $31 = (+Math_pow(10.0,(+$mul)));
       $conv15 = $31;
       HEAPF32[$masking_lower>>2] = $conv15;
       _init_outer_loop($gfc,$arrayidx9);
       HEAPF32[$sum$i>>2] = 0.0;
       $max_nonzero_coeff$i = ((((((($gfc)) + 304|0) + (($gr$079*10504)|0)|0) + (($ch$077*5252)|0)|0)) + 5208|0);
       $32 = HEAP32[$max_nonzero_coeff$i>>2]|0;
       $xrpow_max$i = ((((((($gfc)) + 304|0) + (($gr$079*10504)|0)|0) + (($ch$077*5252)|0)|0)) + 4764|0);
       HEAPF32[$xrpow_max$i>>2] = 0.0;
       $arrayidx$i = (($xrpow) + ($32<<2)|0);
       $sub$i52 = (576 - ($32))|0;
       $mul$i53 = $sub$i52 << 2;
       _memset(($arrayidx$i|0),0,($mul$i53|0))|0;
       $33 = HEAP32[$init_xrpow_core$i>>2]|0;
       FUNCTION_TABLE_viiii[$33 & 7]($arrayidx9,$xrpow,$32,$sum$i);
       $34 = +HEAPF32[$sum$i>>2];
       $cmp$i54 = $34 > 9.9999996826552254E-21;
       if ($cmp$i54) {
        $35 = HEAP32[$substep_shaping$i>>2]|0;
        $and$i56 = $35 >>> 1;
        $and$lobit$i = $and$i56 & 1;
        $psymax$i = ((((((($gfc)) + 304|0) + (($gr$079*10504)|0)|0) + (($ch$077*5252)|0)|0)) + 4864|0);
        $36 = HEAP32[$psymax$i>>2]|0;
        $cmp215$i = ($36|0)>(0);
        if ($cmp215$i) {
         $i$016$i = 0;
         while(1) {
          $arrayidx4$i = (((($gfc)) + 84936|0) + ($i$016$i<<2)|0);
          HEAP32[$arrayidx4$i>>2] = $and$lobit$i;
          $inc$i58 = (($i$016$i) + 1)|0;
          $37 = HEAP32[$psymax$i>>2]|0;
          $cmp2$i = ($inc$i58|0)<($37|0);
          if ($cmp2$i) {
           $i$016$i = $inc$i58;
          } else {
           break;
          }
         }
        }
        $arrayidx20 = ((($ratio) + (($gr$079*976)|0)|0) + (($ch$077*488)|0)|0);
        $call22 = (_calc_xmin($gfc,$arrayidx20,$arrayidx9,$l3_xmin)|0);
        $cmp23 = ($call22|0)==(0);
        $arrayidx27 = ((($targ_bits) + ($gr$079<<3)|0) + ($ch$077<<2)|0);
        if ($cmp23) {
         HEAP32[$arrayidx27>>2] = $div$i;
         $38 = $div$i;
        } else {
         $$pre = HEAP32[$arrayidx27>>2]|0;
         $38 = $$pre;
        }
        (_outer_loop($gfc,$arrayidx9,$l3_xmin,$xrpow,$ch$077,$38)|0);
       } else {
        $arrayidx6$i = ((((((($gfc)) + 304|0) + (($gr$079*10504)|0)|0) + (($ch$077*5252)|0)|0)) + 2304|0);
        _memset(($arrayidx6$i|0),0,2304)|0;
       }
       _best_scalefac_store($gfc,$gr$079,$ch$077,$l3_side2);
       $39 = HEAP32[$use_best_huffman$i>>2]|0;
       $cmp$i60 = ($39|0)==(1);
       if ($cmp$i60) {
        _best_huffman_divide($gfc,$arrayidx9);
       }
       _ResvAdjust($gfc,$arrayidx9);
       $inc = (($ch$077) + 1)|0;
       $40 = HEAP32[$channels_out$i>>2]|0;
       $cmp7 = ($inc|0)<($40|0);
       if ($cmp7) {
        $ch$077 = $inc;
       } else {
        break;
       }
      }
     }
     $inc36 = (($gr$079) + 1)|0;
     $41 = HEAP32[$mode_gr$i>>2]|0;
     $cmp = ($inc36|0)<($41|0);
     if ($cmp) {
      $gr$079 = $inc36;
     } else {
      break;
     }
    }
   }
  } else {
   label = 28;
  }
 }
 if ((label|0) == 28) {
 }
 $vbr_min_bitrate_index = ((($gfc)) + 112|0);
 $42 = HEAP32[$vbr_min_bitrate_index>>2]|0;
 HEAP32[$bitrate_index$i>>2] = $42;
 $43 = HEAP32[$vbr_max_bitrate_index$i>>2]|0;
 $cmp4075 = ($42|0)>($43|0);
 if ($cmp4075) {
  $46 = HEAP32[$mean_bits>>2]|0;
  _ResvFrameEnd($gfc,$46);
  STACKTOP = sp;return;
 }
 while(1) {
  $call43 = (_ResvFrameBegin($gfc,$mean_bits)|0);
  $cmp44 = ($call43|0)>(-1);
  if ($cmp44) {
   label = 49;
   break;
  }
  $44 = HEAP32[$bitrate_index$i>>2]|0;
  $inc50 = (($44) + 1)|0;
  HEAP32[$bitrate_index$i>>2] = $inc50;
  $45 = HEAP32[$vbr_max_bitrate_index$i>>2]|0;
  $cmp40 = ($44|0)<($45|0);
  if (!($cmp40)) {
   label = 49;
   break;
  }
 }
 if ((label|0) == 49) {
  $46 = HEAP32[$mean_bits>>2]|0;
  _ResvFrameEnd($gfc,$46);
  STACKTOP = sp;return;
 }
}
function _CBR_iteration_loop($gfc,$pe,$ms_ener_ratio,$ratio) {
 $gfc = $gfc|0;
 $pe = $pe|0;
 $ms_ener_ratio = $ms_ener_ratio|0;
 $ratio = $ratio|0;
 var $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0.0, $5 = 0.0, $6 = 0.0;
 var $7 = 0, $8 = 0, $9 = 0, $add$i = 0.0, $and$i = 0, $and$lobit$i = 0, $arrayidx = 0, $arrayidx$i = 0, $arrayidx11 = 0, $arrayidx2$i = 0, $arrayidx2348 = 0, $arrayidx2850 = 0, $arrayidx4$i = 0, $arrayidx6$i = 0, $arrayidx7$i = 0, $block_type = 0, $call3 = 0, $ch$055 = 0, $channels_out = 0, $cmp = 0;
 var $cmp$i = 0, $cmp$i43 = 0, $cmp12 = 0, $cmp2$i = 0, $cmp215$i = 0, $cmp4 = 0, $cmp57 = 0, $cmp8 = 0, $cmp854 = 0, $conv = 0.0, $conv17 = 0.0, $exitcond$i = 0, $gr$058 = 0, $i$016$i = 0, $i$017$i = 0, $inc = 0, $inc$i = 0, $inc$i45 = 0, $inc32 = 0, $init_xrpow_core$i = 0;
 var $l3_side2 = 0, $l3_xmin = 0, $mask_adjust = 0, $mask_adjust_short = 0, $masking_lower = 0, $masking_lower_db$0 = 0.0, $masking_lower_db$0$in = 0, $max_nonzero_coeff$i = 0, $mean_bits = 0, $mode_ext = 0, $mode_gr = 0, $mul = 0.0, $mul$i = 0.0, $mul$i42 = 0, $mul13$i = 0.0, $psymax$i = 0, $sub$i = 0.0, $sub$i41 = 0, $substep_shaping$i = 0, $sum$i = 0;
 var $targ_bits = 0, $use_best_huffman$i = 0, $xrpow = 0, $xrpow_max$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2480|0;
 $sum$i = sp + 2476|0;
 $l3_xmin = sp + 2320|0;
 $xrpow = sp + 16|0;
 $targ_bits = sp + 8|0;
 $mean_bits = sp;
 $l3_side2 = ((($gfc)) + 304|0);
 (_ResvFrameBegin($gfc,$mean_bits)|0);
 $mode_gr = ((($gfc)) + 76|0);
 $0 = HEAP32[$mode_gr>>2]|0;
 $cmp57 = ($0|0)>(0);
 $1 = HEAP32[$mean_bits>>2]|0;
 if (!($cmp57)) {
  $$lcssa = $1;
  _ResvFrameEnd($gfc,$$lcssa);
  STACKTOP = sp;return;
 }
 $mode_ext = ((($gfc)) + 84756|0);
 $channels_out = ((($gfc)) + 72|0);
 $mask_adjust = ((($gfc)) + 84912|0);
 $mask_adjust_short = ((($gfc)) + 84916|0);
 $masking_lower = ((($gfc)) + 84908|0);
 $init_xrpow_core$i = ((($gfc)) + 85824|0);
 $substep_shaping$i = ((($gfc)) + 85096|0);
 $use_best_huffman$i = ((($gfc)) + 36|0);
 $2 = $1;$gr$058 = 0;
 while(1) {
  $call3 = (_on_pe($gfc,$pe,$targ_bits,$2,$gr$058,$gr$058)|0);
  $3 = HEAP32[$mode_ext>>2]|0;
  $cmp4 = ($3|0)==(2);
  if ($cmp4) {
   $i$017$i = 0;
   while(1) {
    $arrayidx2$i = ((((($gfc)) + 304|0) + (($gr$058*10504)|0)|0) + ($i$017$i<<2)|0);
    $4 = +HEAPF32[$arrayidx2$i>>2];
    $arrayidx7$i = ((((((($gfc)) + 304|0) + (($gr$058*10504)|0)|0)) + 5252|0) + ($i$017$i<<2)|0);
    $5 = +HEAPF32[$arrayidx7$i>>2];
    $add$i = $5 + $4;
    $mul$i = $add$i * 0.70710676908493042;
    HEAPF32[$arrayidx2$i>>2] = $mul$i;
    $sub$i = $4 - $5;
    $mul13$i = $sub$i * 0.70710676908493042;
    HEAPF32[$arrayidx7$i>>2] = $mul13$i;
    $inc$i = (($i$017$i) + 1)|0;
    $exitcond$i = ($inc$i|0)==(576);
    if ($exitcond$i) {
     break;
    } else {
     $i$017$i = $inc$i;
    }
   }
   $arrayidx = (($ms_ener_ratio) + ($gr$058<<2)|0);
   $6 = +HEAPF32[$arrayidx>>2];
   $7 = HEAP32[$mean_bits>>2]|0;
   _reduce_side($targ_bits,$6,$7,$call3);
  }
  $8 = HEAP32[$channels_out>>2]|0;
  $cmp854 = ($8|0)>(0);
  if ($cmp854) {
   $ch$055 = 0;
   while(1) {
    $arrayidx11 = ((((($gfc)) + 304|0) + (($gr$058*10504)|0)|0) + (($ch$055*5252)|0)|0);
    $block_type = ((((((($gfc)) + 304|0) + (($gr$058*10504)|0)|0) + (($ch$055*5252)|0)|0)) + 4788|0);
    $9 = HEAP32[$block_type>>2]|0;
    $cmp12 = ($9|0)==(2);
    $masking_lower_db$0$in = $cmp12 ? $mask_adjust_short : $mask_adjust;
    $masking_lower_db$0 = +HEAPF32[$masking_lower_db$0$in>>2];
    $conv = $masking_lower_db$0;
    $mul = $conv * 0.10000000000000001;
    $10 = (+Math_pow(10.0,(+$mul)));
    $conv17 = $10;
    HEAPF32[$masking_lower>>2] = $conv17;
    _init_outer_loop($gfc,$arrayidx11);
    HEAPF32[$sum$i>>2] = 0.0;
    $max_nonzero_coeff$i = ((((((($gfc)) + 304|0) + (($gr$058*10504)|0)|0) + (($ch$055*5252)|0)|0)) + 5208|0);
    $11 = HEAP32[$max_nonzero_coeff$i>>2]|0;
    $xrpow_max$i = ((((((($gfc)) + 304|0) + (($gr$058*10504)|0)|0) + (($ch$055*5252)|0)|0)) + 4764|0);
    HEAPF32[$xrpow_max$i>>2] = 0.0;
    $arrayidx$i = (($xrpow) + ($11<<2)|0);
    $sub$i41 = (576 - ($11))|0;
    $mul$i42 = $sub$i41 << 2;
    _memset(($arrayidx$i|0),0,($mul$i42|0))|0;
    $12 = HEAP32[$init_xrpow_core$i>>2]|0;
    FUNCTION_TABLE_viiii[$12 & 7]($arrayidx11,$xrpow,$11,$sum$i);
    $13 = +HEAPF32[$sum$i>>2];
    $cmp$i43 = $13 > 9.9999996826552254E-21;
    if ($cmp$i43) {
     $14 = HEAP32[$substep_shaping$i>>2]|0;
     $and$i = $14 >>> 1;
     $and$lobit$i = $and$i & 1;
     $psymax$i = ((((((($gfc)) + 304|0) + (($gr$058*10504)|0)|0) + (($ch$055*5252)|0)|0)) + 4864|0);
     $15 = HEAP32[$psymax$i>>2]|0;
     $cmp215$i = ($15|0)>(0);
     if ($cmp215$i) {
      $i$016$i = 0;
      while(1) {
       $arrayidx4$i = (((($gfc)) + 84936|0) + ($i$016$i<<2)|0);
       HEAP32[$arrayidx4$i>>2] = $and$lobit$i;
       $inc$i45 = (($i$016$i) + 1)|0;
       $16 = HEAP32[$psymax$i>>2]|0;
       $cmp2$i = ($inc$i45|0)<($16|0);
       if ($cmp2$i) {
        $i$016$i = $inc$i45;
       } else {
        break;
       }
      }
     }
     $arrayidx2348 = ((($ratio) + (($gr$058*976)|0)|0) + (($ch$055*488)|0)|0);
     $arrayidx2850 = (($targ_bits) + ($ch$055<<2)|0);
     (_calc_xmin($gfc,$arrayidx2348,$arrayidx11,$l3_xmin)|0);
     $17 = HEAP32[$arrayidx2850>>2]|0;
     (_outer_loop($gfc,$arrayidx11,$l3_xmin,$xrpow,$ch$055,$17)|0);
    } else {
     $arrayidx6$i = ((((((($gfc)) + 304|0) + (($gr$058*10504)|0)|0) + (($ch$055*5252)|0)|0)) + 2304|0);
     _memset(($arrayidx6$i|0),0,2304)|0;
    }
    _best_scalefac_store($gfc,$gr$058,$ch$055,$l3_side2);
    $18 = HEAP32[$use_best_huffman$i>>2]|0;
    $cmp$i = ($18|0)==(1);
    if ($cmp$i) {
     _best_huffman_divide($gfc,$arrayidx11);
    }
    _ResvAdjust($gfc,$arrayidx11);
    $inc = (($ch$055) + 1)|0;
    $19 = HEAP32[$channels_out>>2]|0;
    $cmp8 = ($inc|0)<($19|0);
    if ($cmp8) {
     $ch$055 = $inc;
    } else {
     break;
    }
   }
  }
  $inc32 = (($gr$058) + 1)|0;
  $20 = HEAP32[$mode_gr>>2]|0;
  $cmp = ($inc32|0)<($20|0);
  $21 = HEAP32[$mean_bits>>2]|0;
  if ($cmp) {
   $2 = $21;$gr$058 = $inc32;
  } else {
   $$lcssa = $21;
   break;
  }
 }
 _ResvFrameEnd($gfc,$$lcssa);
 STACKTOP = sp;return;
}
function _iteration_init($gfc) {
 $gfc = $gfc|0;
 var $$call$i = 0.0, $$call129$i = 0.0, $$call47$i = 0.0, $$call83$i = 0.0, $$pre = 0.0, $$pre$i = 0, $$pre186$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0, $18 = 0, $19 = 0.0, $2 = 0;
 var $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0, $25 = 0, $26 = 0.0, $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0.0, $37 = 0, $38 = 0.0;
 var $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0.0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0;
 var $57 = 0.0, $58 = 0.0, $59 = 0.0, $6 = 0.0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, $ATH$i = 0, $ATH_offset_db$i$i = 0, $ATHfixpoint$i$i = 0, $add = 0.0, $add$i = 0, $add$i$i = 0.0, $add$i137$i = 0.0, $add$i145$i = 0.0, $add$i153$i = 0.0, $add$i161$i = 0.0;
 var $add104 = 0.0, $add118 = 0.0, $add118$i = 0, $add133 = 0.0, $add148 = 0.0, $add36$i = 0, $add49 = 0.0, $add61 = 0.0, $add72$i = 0, $add75 = 0.0, $add89 = 0.0, $adjust_alto_db = 0, $adjust_bass_db = 0, $adjust_sfb21_db = 0, $adjust_treble_db = 0, $arrayidx = 0, $arrayidx$i = 0, $arrayidx111 = 0, $arrayidx111$1 = 0, $arrayidx111$2 = 0;
 var $arrayidx115$i = 0, $arrayidx119$i = 0, $arrayidx12$i = 0, $arrayidx120$i = 0, $arrayidx126 = 0, $arrayidx126$1 = 0, $arrayidx126$2 = 0, $arrayidx126$3 = 0, $arrayidx13$i = 0, $arrayidx14 = 0, $arrayidx141 = 0, $arrayidx141$1 = 0, $arrayidx141$2 = 0, $arrayidx141$3 = 0, $arrayidx141$4 = 0, $arrayidx144$i = 0, $arrayidx147$i = 0, $arrayidx156 = 0, $arrayidx159$1$i = 0, $arrayidx159$10$i = 0;
 var $arrayidx159$11$i = 0, $arrayidx159$12$i = 0, $arrayidx159$13$i = 0, $arrayidx159$14$i = 0, $arrayidx159$15$i = 0, $arrayidx159$16$i = 0, $arrayidx159$17$i = 0, $arrayidx159$18$i = 0, $arrayidx159$19$i = 0, $arrayidx159$2$i = 0, $arrayidx159$20$i = 0, $arrayidx159$21$i = 0, $arrayidx159$3$i = 0, $arrayidx159$4$i = 0, $arrayidx159$5$i = 0, $arrayidx159$6$i = 0, $arrayidx159$7$i = 0, $arrayidx159$8$i = 0, $arrayidx159$9$i = 0, $arrayidx159$i = 0;
 var $arrayidx167$1$i = 0, $arrayidx167$2$i = 0, $arrayidx167$3$i = 0, $arrayidx167$4$i = 0, $arrayidx167$5$i = 0, $arrayidx167$i = 0, $arrayidx175$1$i = 0, $arrayidx175$10$i = 0, $arrayidx175$11$i = 0, $arrayidx175$12$i = 0, $arrayidx175$2$i = 0, $arrayidx175$3$i = 0, $arrayidx175$4$i = 0, $arrayidx175$5$i = 0, $arrayidx175$6$i = 0, $arrayidx175$7$i = 0, $arrayidx175$8$i = 0, $arrayidx175$9$i = 0, $arrayidx175$i = 0, $arrayidx18 = 0;
 var $arrayidx183$1$i = 0, $arrayidx183$2$i = 0, $arrayidx183$3$i = 0, $arrayidx183$4$i = 0, $arrayidx183$5$i = 0, $arrayidx183$i = 0, $arrayidx30 = 0, $arrayidx33$i = 0, $arrayidx37$i = 0, $arrayidx38$i = 0, $arrayidx43 = 0, $arrayidx55 = 0, $arrayidx55$1 = 0, $arrayidx55$2 = 0, $arrayidx55$3 = 0, $arrayidx55$4 = 0, $arrayidx55$5 = 0, $arrayidx55$6 = 0, $arrayidx69 = 0, $arrayidx69$1 = 0;
 var $arrayidx69$2 = 0, $arrayidx69$3 = 0, $arrayidx69$4 = 0, $arrayidx69$5 = 0, $arrayidx69$6 = 0, $arrayidx69$i = 0, $arrayidx69$phi$trans$insert$i = 0, $arrayidx73$i = 0, $arrayidx74$i = 0, $arrayidx83 = 0, $arrayidx83$1 = 0, $arrayidx83$2 = 0, $arrayidx83$3 = 0, $arrayidx83$4 = 0, $arrayidx83$5 = 0, $arrayidx83$6 = 0, $arrayidx97 = 0, $ath$0$i$i = 0.0, $ath$0$i136$i = 0.0, $ath$0$i144$i = 0.0;
 var $ath$0$i152$i = 0.0, $ath$0$i160$i = 0.0, $ath$0$p$i$i = 0.0, $ath$0$p$i134$i = 0.0, $ath$0$p$i142$i = 0.0, $ath$0$p$i150$i = 0.0, $ath$0$p$i158$i = 0.0, $call$i$i = 0.0, $call$i131$i = 0.0, $call$i139$i = 0.0, $call$i147$i = 0.0, $call$i155$i = 0.0, $call189$i = 0.0, $cfg1$i = 0, $cmp = 0, $cmp$i$i = 0, $cmp$i133$i = 0, $cmp$i141$i = 0, $cmp$i149$i = 0, $cmp$i157$i = 0;
 var $cmp122167$i = 0, $cmp131$i = 0, $cmp15176$i = 0, $cmp20$i = 0, $cmp40173$i = 0, $cmp49$i = 0, $cmp76170$i = 0, $cmp85$i = 0, $conv = 0.0, $conv$i = 0.0, $conv103$i = 0.0, $conv11 = 0.0, $conv126$i = 0.0, $conv149$i = 0.0, $conv15 = 0.0, $conv17 = 0.0, $conv18$i = 0.0, $conv188$i = 0.0, $conv191$i = 0.0, $conv27 = 0.0;
 var $conv29 = 0.0, $conv40 = 0.0, $conv42 = 0.0, $conv44$i = 0.0, $conv5 = 0.0, $conv6 = 0.0, $conv80$i = 0.0, $div$i = 0.0, $div128$i = 0.0, $div46$i = 0.0, $div82$i = 0.0, $exitcond$i = 0, $exitcond119 = 0, $exitcond120 = 0, $exitcond121 = 0, $exitcond122 = 0, $exitcond179$i = 0, $exitcond180$i = 0, $exitcond181$i = 0, $exitcond182$i = 0;
 var $exitcond183$i = 0, $exitcond184$i = 0, $exitcond185$i = 0, $exp2 = 0.0, $exp290 = 0.0, $floor$i = 0, $i$0111 = 0, $i$0177$i = 0, $i$1110 = 0, $i$1174$i = 0, $i$2109 = 0, $i$2171$i = 0, $i$3108 = 0, $i$3168$i = 0, $inc = 0, $inc$i = 0, $inc140$i = 0, $inc20 = 0, $inc32 = 0, $inc45 = 0;
 var $inc58$i = 0, $inc94$i = 0, $iteration_init_init = 0, $main_data_begin = 0, $mul = 0.0, $mul$i = 0.0, $mul$i$i = 0.0, $mul$i138$i = 0.0, $mul$i146$i = 0.0, $mul$i154$i = 0.0, $mul$i162$i = 0.0, $mul105 = 0.0, $mul105$i = 0.0, $mul119 = 0.0, $mul134 = 0.0, $mul149 = 0.0, $mul151$i = 0.0, $mul190$i = 0.0, $mul28 = 0.0, $mul41 = 0.0;
 var $mul50 = 0.0, $mul62 = 0.0, $mul76 = 0.0, $mul81$i = 0.0, $mul90 = 0.0, $noATH$i = 0, $samplerate_out$i = 0, $sfb$0178$i = 0, $sfb$1175$i = 0, $sfb$2172$i = 0, $sfb$3169$i = 0, $sub = 0.0, $sub$i = 0, $sub148$i = 0, $sub16 = 0.0, $sub26 = 0, $sub39 = 0, $tobool$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $iteration_init_init = ((($gfc)) + 8|0);
 $0 = HEAP32[$iteration_init_init>>2]|0;
 $cmp = ($0|0)==(0);
 if (!($cmp)) {
  return;
 }
 HEAP32[$iteration_init_init>>2] = 1;
 $main_data_begin = ((($gfc)) + 21312|0);
 HEAP32[$main_data_begin>>2] = 0;
 $cfg1$i = ((($gfc)) + 16|0);
 $ATH$i = ((($gfc)) + 85796|0);
 $1 = HEAP32[$ATH$i>>2]|0;
 $samplerate_out$i = ((($gfc)) + 64|0);
 $2 = HEAP32[$samplerate_out$i>>2]|0;
 $conv$i = (+($2|0));
 $mul$i = $conv$i * 8.6805556202307343E-4;
 $ATHfixpoint$i$i = ((($gfc)) + 224|0);
 $ATH_offset_db$i$i = ((($gfc)) + 196|0);
 $sfb$0178$i = 0;
 while(1) {
  $arrayidx$i = (((($gfc)) + 21360|0) + ($sfb$0178$i<<2)|0);
  $3 = HEAP32[$arrayidx$i>>2]|0;
  $add$i = (($sfb$0178$i) + 1)|0;
  $arrayidx12$i = (((($gfc)) + 21360|0) + ($add$i<<2)|0);
  $4 = HEAP32[$arrayidx12$i>>2]|0;
  $arrayidx13$i = (((($1)) + 24|0) + ($sfb$0178$i<<2)|0);
  HEAPF32[$arrayidx13$i>>2] = 9.9999999338158125E+36;
  $cmp15176$i = ($3|0)<($4|0);
  if ($cmp15176$i) {
   $i$0177$i = $3;
   while(1) {
    $conv18$i = (+($i$0177$i|0));
    $div$i = $conv18$i * $mul$i;
    $call$i$i = (+_ATHformula($cfg1$i,$div$i));
    $5 = +HEAPF32[$ATHfixpoint$i$i>>2];
    $cmp$i$i = $5 > 0.0;
    $6 = -$5;
    $ath$0$p$i$i = $cmp$i$i ? $6 : -100.0;
    $7 = +HEAPF32[$ATH_offset_db$i$i>>2];
    $ath$0$i$i = $7 + $call$i$i;
    $add$i$i = $ath$0$i$i + $ath$0$p$i$i;
    $mul$i$i = $add$i$i * 0.10000000149011612;
    $8 = (+Math_pow(10.0,(+$mul$i$i)));
    $9 = +HEAPF32[$arrayidx13$i>>2];
    $cmp20$i = $9 < $8;
    $$call$i = $cmp20$i ? $9 : $8;
    HEAPF32[$arrayidx13$i>>2] = $$call$i;
    $inc$i = (($i$0177$i) + 1)|0;
    $exitcond184$i = ($inc$i|0)==($4|0);
    if ($exitcond184$i) {
     break;
    } else {
     $i$0177$i = $inc$i;
    }
   }
  }
  $exitcond185$i = ($add$i|0)==(22);
  if ($exitcond185$i) {
   $sfb$1175$i = 0;
   break;
  } else {
   $sfb$0178$i = $add$i;
  }
 }
 while(1) {
  $arrayidx33$i = (((($gfc)) + 21508|0) + ($sfb$1175$i<<2)|0);
  $10 = HEAP32[$arrayidx33$i>>2]|0;
  $add36$i = (($sfb$1175$i) + 1)|0;
  $arrayidx37$i = (((($gfc)) + 21508|0) + ($add36$i<<2)|0);
  $11 = HEAP32[$arrayidx37$i>>2]|0;
  $arrayidx38$i = (((($1)) + 164|0) + ($sfb$1175$i<<2)|0);
  HEAPF32[$arrayidx38$i>>2] = 9.9999999338158125E+36;
  $cmp40173$i = ($10|0)<($11|0);
  if ($cmp40173$i) {
   $i$1174$i = $10;
   while(1) {
    $conv44$i = (+($i$1174$i|0));
    $div46$i = $conv44$i * $mul$i;
    $call$i131$i = (+_ATHformula($cfg1$i,$div46$i));
    $12 = +HEAPF32[$ATHfixpoint$i$i>>2];
    $cmp$i133$i = $12 > 0.0;
    $13 = -$12;
    $ath$0$p$i134$i = $cmp$i133$i ? $13 : -100.0;
    $14 = +HEAPF32[$ATH_offset_db$i$i>>2];
    $ath$0$i136$i = $14 + $call$i131$i;
    $add$i137$i = $ath$0$i136$i + $ath$0$p$i134$i;
    $mul$i138$i = $add$i137$i * 0.10000000149011612;
    $15 = (+Math_pow(10.0,(+$mul$i138$i)));
    $16 = +HEAPF32[$arrayidx38$i>>2];
    $cmp49$i = $16 < $15;
    $$call47$i = $cmp49$i ? $16 : $15;
    HEAPF32[$arrayidx38$i>>2] = $$call47$i;
    $inc58$i = (($i$1174$i) + 1)|0;
    $exitcond182$i = ($inc58$i|0)==($11|0);
    if ($exitcond182$i) {
     break;
    } else {
     $i$1174$i = $inc58$i;
    }
   }
  }
  $exitcond183$i = ($add36$i|0)==(6);
  if ($exitcond183$i) {
   break;
  } else {
   $sfb$1175$i = $add36$i;
  }
 }
 $mul81$i = $conv$i * 0.0026041667442768812;
 $arrayidx69$phi$trans$insert$i = ((($gfc)) + 21452|0);
 $$pre$i = HEAP32[$arrayidx69$phi$trans$insert$i>>2]|0;
 $18 = $$pre$i;$sfb$2172$i = 0;
 while(1) {
  $arrayidx69$i = (((($gfc)) + 21452|0) + ($sfb$2172$i<<2)|0);
  $add72$i = (($sfb$2172$i) + 1)|0;
  $arrayidx73$i = (((($gfc)) + 21452|0) + ($add72$i<<2)|0);
  $17 = HEAP32[$arrayidx73$i>>2]|0;
  $arrayidx74$i = (((($1)) + 112|0) + ($sfb$2172$i<<2)|0);
  HEAPF32[$arrayidx74$i>>2] = 9.9999999338158125E+36;
  $cmp76170$i = ($18|0)<($17|0);
  if ($cmp76170$i) {
   $i$2171$i = $18;
   while(1) {
    $conv80$i = (+($i$2171$i|0));
    $div82$i = $conv80$i * $mul81$i;
    $call$i139$i = (+_ATHformula($cfg1$i,$div82$i));
    $19 = +HEAPF32[$ATHfixpoint$i$i>>2];
    $cmp$i141$i = $19 > 0.0;
    $20 = -$19;
    $ath$0$p$i142$i = $cmp$i141$i ? $20 : -100.0;
    $21 = +HEAPF32[$ATH_offset_db$i$i>>2];
    $ath$0$i144$i = $21 + $call$i139$i;
    $add$i145$i = $ath$0$i144$i + $ath$0$p$i142$i;
    $mul$i146$i = $add$i145$i * 0.10000000149011612;
    $22 = (+Math_pow(10.0,(+$mul$i146$i)));
    $23 = +HEAPF32[$arrayidx74$i>>2];
    $cmp85$i = $23 < $22;
    $$call83$i = $cmp85$i ? $23 : $22;
    HEAPF32[$arrayidx74$i>>2] = $$call83$i;
    $inc94$i = (($i$2171$i) + 1)|0;
    $exitcond180$i = ($inc94$i|0)==($17|0);
    if ($exitcond180$i) {
     break;
    } else {
     $i$2171$i = $inc94$i;
    }
   }
   $$pre186$i = HEAP32[$arrayidx73$i>>2]|0;
   $25 = $$pre186$i;$26 = $$call83$i;
  } else {
   $25 = $17;$26 = 9.9999999338158125E+36;
  }
  $24 = HEAP32[$arrayidx69$i>>2]|0;
  $sub$i = (($25) - ($24))|0;
  $conv103$i = (+($sub$i|0));
  $mul105$i = $conv103$i * $26;
  HEAPF32[$arrayidx74$i>>2] = $mul105$i;
  $exitcond181$i = ($add72$i|0)==(13);
  if ($exitcond181$i) {
   break;
  } else {
   $18 = $25;$sfb$2172$i = $add72$i;
  }
 }
 $arrayidx144$i = ((($gfc)) + 21504|0);
 $arrayidx147$i = ((($gfc)) + 21500|0);
 $sfb$3169$i = 0;
 while(1) {
  $arrayidx115$i = (((($gfc)) + 21536|0) + ($sfb$3169$i<<2)|0);
  $27 = HEAP32[$arrayidx115$i>>2]|0;
  $add118$i = (($sfb$3169$i) + 1)|0;
  $arrayidx119$i = (((($gfc)) + 21536|0) + ($add118$i<<2)|0);
  $28 = HEAP32[$arrayidx119$i>>2]|0;
  $arrayidx120$i = (((($1)) + 188|0) + ($sfb$3169$i<<2)|0);
  HEAPF32[$arrayidx120$i>>2] = 9.9999999338158125E+36;
  $cmp122167$i = ($27|0)<($28|0);
  if ($cmp122167$i) {
   $i$3168$i = $27;
   while(1) {
    $conv126$i = (+($i$3168$i|0));
    $div128$i = $conv126$i * $mul81$i;
    $call$i147$i = (+_ATHformula($cfg1$i,$div128$i));
    $29 = +HEAPF32[$ATHfixpoint$i$i>>2];
    $cmp$i149$i = $29 > 0.0;
    $30 = -$29;
    $ath$0$p$i150$i = $cmp$i149$i ? $30 : -100.0;
    $31 = +HEAPF32[$ATH_offset_db$i$i>>2];
    $ath$0$i152$i = $31 + $call$i147$i;
    $add$i153$i = $ath$0$i152$i + $ath$0$p$i150$i;
    $mul$i154$i = $add$i153$i * 0.10000000149011612;
    $32 = (+Math_pow(10.0,(+$mul$i154$i)));
    $33 = +HEAPF32[$arrayidx120$i>>2];
    $cmp131$i = $33 < $32;
    $$call129$i = $cmp131$i ? $33 : $32;
    HEAPF32[$arrayidx120$i>>2] = $$call129$i;
    $inc140$i = (($i$3168$i) + 1)|0;
    $exitcond$i = ($inc140$i|0)==($28|0);
    if ($exitcond$i) {
     $36 = $$call129$i;
     break;
    } else {
     $i$3168$i = $inc140$i;
    }
   }
  } else {
   $36 = 9.9999999338158125E+36;
  }
  $34 = HEAP32[$arrayidx144$i>>2]|0;
  $35 = HEAP32[$arrayidx147$i>>2]|0;
  $sub148$i = (($34) - ($35))|0;
  $conv149$i = (+($sub148$i|0));
  $mul151$i = $conv149$i * $36;
  HEAPF32[$arrayidx120$i>>2] = $mul151$i;
  $exitcond179$i = ($add118$i|0)==(6);
  if ($exitcond179$i) {
   break;
  } else {
   $sfb$3169$i = $add118$i;
  }
 }
 $noATH$i = ((($gfc)) + 220|0);
 $37 = HEAP32[$noATH$i>>2]|0;
 $tobool$i = ($37|0)==(0);
 if (!($tobool$i)) {
  $arrayidx159$i = ((($1)) + 24|0);
  HEAPF32[$arrayidx159$i>>2] = 9.9999996826552254E-21;
  $arrayidx159$1$i = ((($1)) + 28|0);
  HEAPF32[$arrayidx159$1$i>>2] = 9.9999996826552254E-21;
  $arrayidx159$2$i = ((($1)) + 32|0);
  HEAPF32[$arrayidx159$2$i>>2] = 9.9999996826552254E-21;
  $arrayidx159$3$i = ((($1)) + 36|0);
  HEAPF32[$arrayidx159$3$i>>2] = 9.9999996826552254E-21;
  $arrayidx159$4$i = ((($1)) + 40|0);
  HEAPF32[$arrayidx159$4$i>>2] = 9.9999996826552254E-21;
  $arrayidx159$5$i = ((($1)) + 44|0);
  HEAPF32[$arrayidx159$5$i>>2] = 9.9999996826552254E-21;
  $arrayidx159$6$i = ((($1)) + 48|0);
  HEAPF32[$arrayidx159$6$i>>2] = 9.9999996826552254E-21;
  $arrayidx159$7$i = ((($1)) + 52|0);
  HEAPF32[$arrayidx159$7$i>>2] = 9.9999996826552254E-21;
  $arrayidx159$8$i = ((($1)) + 56|0);
  HEAPF32[$arrayidx159$8$i>>2] = 9.9999996826552254E-21;
  $arrayidx159$9$i = ((($1)) + 60|0);
  HEAPF32[$arrayidx159$9$i>>2] = 9.9999996826552254E-21;
  $arrayidx159$10$i = ((($1)) + 64|0);
  HEAPF32[$arrayidx159$10$i>>2] = 9.9999996826552254E-21;
  $arrayidx159$11$i = ((($1)) + 68|0);
  HEAPF32[$arrayidx159$11$i>>2] = 9.9999996826552254E-21;
  $arrayidx159$12$i = ((($1)) + 72|0);
  HEAPF32[$arrayidx159$12$i>>2] = 9.9999996826552254E-21;
  $arrayidx159$13$i = ((($1)) + 76|0);
  HEAPF32[$arrayidx159$13$i>>2] = 9.9999996826552254E-21;
  $arrayidx159$14$i = ((($1)) + 80|0);
  HEAPF32[$arrayidx159$14$i>>2] = 9.9999996826552254E-21;
  $arrayidx159$15$i = ((($1)) + 84|0);
  HEAPF32[$arrayidx159$15$i>>2] = 9.9999996826552254E-21;
  $arrayidx159$16$i = ((($1)) + 88|0);
  HEAPF32[$arrayidx159$16$i>>2] = 9.9999996826552254E-21;
  $arrayidx159$17$i = ((($1)) + 92|0);
  HEAPF32[$arrayidx159$17$i>>2] = 9.9999996826552254E-21;
  $arrayidx159$18$i = ((($1)) + 96|0);
  HEAPF32[$arrayidx159$18$i>>2] = 9.9999996826552254E-21;
  $arrayidx159$19$i = ((($1)) + 100|0);
  HEAPF32[$arrayidx159$19$i>>2] = 9.9999996826552254E-21;
  $arrayidx159$20$i = ((($1)) + 104|0);
  HEAPF32[$arrayidx159$20$i>>2] = 9.9999996826552254E-21;
  $arrayidx159$21$i = ((($1)) + 108|0);
  HEAPF32[$arrayidx159$21$i>>2] = 9.9999996826552254E-21;
  $arrayidx167$i = ((($1)) + 164|0);
  HEAPF32[$arrayidx167$i>>2] = 9.9999996826552254E-21;
  $arrayidx167$1$i = ((($1)) + 168|0);
  HEAPF32[$arrayidx167$1$i>>2] = 9.9999996826552254E-21;
  $arrayidx167$2$i = ((($1)) + 172|0);
  HEAPF32[$arrayidx167$2$i>>2] = 9.9999996826552254E-21;
  $arrayidx167$3$i = ((($1)) + 176|0);
  HEAPF32[$arrayidx167$3$i>>2] = 9.9999996826552254E-21;
  $arrayidx167$4$i = ((($1)) + 180|0);
  HEAPF32[$arrayidx167$4$i>>2] = 9.9999996826552254E-21;
  $arrayidx167$5$i = ((($1)) + 184|0);
  HEAPF32[$arrayidx167$5$i>>2] = 9.9999996826552254E-21;
  $arrayidx175$i = ((($1)) + 112|0);
  HEAPF32[$arrayidx175$i>>2] = 9.9999996826552254E-21;
  $arrayidx175$1$i = ((($1)) + 116|0);
  HEAPF32[$arrayidx175$1$i>>2] = 9.9999996826552254E-21;
  $arrayidx175$2$i = ((($1)) + 120|0);
  HEAPF32[$arrayidx175$2$i>>2] = 9.9999996826552254E-21;
  $arrayidx175$3$i = ((($1)) + 124|0);
  HEAPF32[$arrayidx175$3$i>>2] = 9.9999996826552254E-21;
  $arrayidx175$4$i = ((($1)) + 128|0);
  HEAPF32[$arrayidx175$4$i>>2] = 9.9999996826552254E-21;
  $arrayidx175$5$i = ((($1)) + 132|0);
  HEAPF32[$arrayidx175$5$i>>2] = 9.9999996826552254E-21;
  $arrayidx175$6$i = ((($1)) + 136|0);
  HEAPF32[$arrayidx175$6$i>>2] = 9.9999996826552254E-21;
  $arrayidx175$7$i = ((($1)) + 140|0);
  HEAPF32[$arrayidx175$7$i>>2] = 9.9999996826552254E-21;
  $arrayidx175$8$i = ((($1)) + 144|0);
  HEAPF32[$arrayidx175$8$i>>2] = 9.9999996826552254E-21;
  $arrayidx175$9$i = ((($1)) + 148|0);
  HEAPF32[$arrayidx175$9$i>>2] = 9.9999996826552254E-21;
  $arrayidx175$10$i = ((($1)) + 152|0);
  HEAPF32[$arrayidx175$10$i>>2] = 9.9999996826552254E-21;
  $arrayidx175$11$i = ((($1)) + 156|0);
  HEAPF32[$arrayidx175$11$i>>2] = 9.9999996826552254E-21;
  $arrayidx175$12$i = ((($1)) + 160|0);
  HEAPF32[$arrayidx175$12$i>>2] = 9.9999996826552254E-21;
  $arrayidx183$i = ((($1)) + 188|0);
  HEAPF32[$arrayidx183$i>>2] = 9.9999996826552254E-21;
  $arrayidx183$1$i = ((($1)) + 192|0);
  HEAPF32[$arrayidx183$1$i>>2] = 9.9999996826552254E-21;
  $arrayidx183$2$i = ((($1)) + 196|0);
  HEAPF32[$arrayidx183$2$i>>2] = 9.9999996826552254E-21;
  $arrayidx183$3$i = ((($1)) + 200|0);
  HEAPF32[$arrayidx183$3$i>>2] = 9.9999996826552254E-21;
  $arrayidx183$4$i = ((($1)) + 204|0);
  HEAPF32[$arrayidx183$4$i>>2] = 9.9999996826552254E-21;
  $arrayidx183$5$i = ((($1)) + 208|0);
  HEAPF32[$arrayidx183$5$i>>2] = 9.9999996826552254E-21;
 }
 $call$i155$i = (+_ATHformula($cfg1$i,-1.0));
 $38 = +HEAPF32[$ATHfixpoint$i$i>>2];
 $cmp$i157$i = $38 > 0.0;
 $39 = -$38;
 $ath$0$p$i158$i = $cmp$i157$i ? $39 : -100.0;
 $40 = +HEAPF32[$ATH_offset_db$i$i>>2];
 $ath$0$i160$i = $40 + $call$i155$i;
 $add$i161$i = $ath$0$i160$i + $ath$0$p$i158$i;
 $mul$i162$i = $add$i161$i * 0.10000000149011612;
 $41 = (+Math_pow(10.0,(+$mul$i162$i)));
 $conv188$i = $41;
 $call189$i = (+_log10($conv188$i));
 $mul190$i = $call189$i * 10.0;
 $conv191$i = $mul190$i;
 $42 = HEAP32[$ATH$i>>2]|0;
 $floor$i = ((($42)) + 20|0);
 HEAPF32[$floor$i>>2] = $conv191$i;
 HEAPF32[6081] = 0.0;
 $i$0111 = 1;
 while(1) {
  $conv = (+($i$0111|0));
  $conv5 = $conv;
  $43 = (+Math_pow((+$conv5),1.3333333333333333));
  $conv6 = $43;
  $arrayidx = (24324 + ($i$0111<<2)|0);
  HEAPF32[$arrayidx>>2] = $conv6;
  $inc = (($i$0111) + 1)|0;
  $exitcond122 = ($inc|0)==(8208);
  if ($exitcond122) {
   break;
  } else {
   $i$0111 = $inc;
  }
 }
 HEAPF32[14289] = 0.0;
 $$pre = +HEAPF32[6081];
 $45 = $$pre;$i$1110 = 1;
 while(1) {
  $conv11 = (+($i$1110|0));
  $sub = $conv11 + -0.5;
  $arrayidx14 = (24324 + ($i$1110<<2)|0);
  $44 = +HEAPF32[$arrayidx14>>2];
  $add = $44 + $45;
  $conv15 = $add;
  $mul = $conv15 * 0.5;
  $46 = (+Math_pow((+$mul),0.75));
  $sub16 = $sub - $46;
  $conv17 = $sub16;
  $arrayidx18 = (57156 + ($i$1110<<2)|0);
  HEAPF32[$arrayidx18>>2] = $conv17;
  $inc20 = (($i$1110) + 1)|0;
  $exitcond121 = ($inc20|0)==(8208);
  if ($exitcond121) {
   $i$2109 = 0;
   break;
  } else {
   $45 = $44;$i$1110 = $inc20;
  }
 }
 while(1) {
  $sub26 = (($i$2109) + -210)|0;
  $conv27 = (+($sub26|0));
  $mul28 = $conv27 * -0.1875;
  $exp290 = (+_llvm_exp2_f64((+$mul28)));
  $conv29 = $exp290;
  $arrayidx30 = (89988 + ($i$2109<<2)|0);
  HEAPF32[$arrayidx30>>2] = $conv29;
  $inc32 = (($i$2109) + 1)|0;
  $exitcond120 = ($inc32|0)==(257);
  if ($exitcond120) {
   $i$3108 = 0;
   break;
  } else {
   $i$2109 = $inc32;
  }
 }
 while(1) {
  $sub39 = (($i$3108) + -326)|0;
  $conv40 = (+($sub39|0));
  $mul41 = $conv40 * 0.25;
  $exp2 = (+_llvm_exp2_f64((+$mul41)));
  $conv42 = $exp2;
  $arrayidx43 = (91016 + ($i$3108<<2)|0);
  HEAPF32[$arrayidx43>>2] = $conv42;
  $inc45 = (($i$3108) + 1)|0;
  $exitcond119 = ($inc45|0)==(374);
  if ($exitcond119) {
   break;
  } else {
   $i$3108 = $inc45;
  }
 }
 _huffman_init($gfc);
 _init_xrpow_core_init($gfc);
 $adjust_bass_db = ((($gfc)) + 232|0);
 $47 = +HEAPF32[$adjust_bass_db>>2];
 $add49 = $47 + -0.5;
 $mul50 = $add49 * 0.10000000149011612;
 $48 = (+Math_pow(10.0,(+$mul50)));
 $arrayidx55 = ((($gfc)) + 84768|0);
 HEAPF32[$arrayidx55>>2] = $48;
 $arrayidx55$1 = ((($gfc)) + 84772|0);
 HEAPF32[$arrayidx55$1>>2] = $48;
 $arrayidx55$2 = ((($gfc)) + 84776|0);
 HEAPF32[$arrayidx55$2>>2] = $48;
 $arrayidx55$3 = ((($gfc)) + 84780|0);
 HEAPF32[$arrayidx55$3>>2] = $48;
 $arrayidx55$4 = ((($gfc)) + 84784|0);
 HEAPF32[$arrayidx55$4>>2] = $48;
 $arrayidx55$5 = ((($gfc)) + 84788|0);
 HEAPF32[$arrayidx55$5>>2] = $48;
 $arrayidx55$6 = ((($gfc)) + 84792|0);
 HEAPF32[$arrayidx55$6>>2] = $48;
 $adjust_alto_db = ((($gfc)) + 228|0);
 $49 = +HEAPF32[$adjust_alto_db>>2];
 $add61 = $49 + -0.25;
 $mul62 = $add61 * 0.10000000149011612;
 $50 = (+Math_pow(10.0,(+$mul62)));
 $arrayidx69 = ((($gfc)) + 84796|0);
 HEAPF32[$arrayidx69>>2] = $50;
 $arrayidx69$1 = ((($gfc)) + 84800|0);
 HEAPF32[$arrayidx69$1>>2] = $50;
 $arrayidx69$2 = ((($gfc)) + 84804|0);
 HEAPF32[$arrayidx69$2>>2] = $50;
 $arrayidx69$3 = ((($gfc)) + 84808|0);
 HEAPF32[$arrayidx69$3>>2] = $50;
 $arrayidx69$4 = ((($gfc)) + 84812|0);
 HEAPF32[$arrayidx69$4>>2] = $50;
 $arrayidx69$5 = ((($gfc)) + 84816|0);
 HEAPF32[$arrayidx69$5>>2] = $50;
 $arrayidx69$6 = ((($gfc)) + 84820|0);
 HEAPF32[$arrayidx69$6>>2] = $50;
 $adjust_treble_db = ((($gfc)) + 236|0);
 $51 = +HEAPF32[$adjust_treble_db>>2];
 $add75 = $51 + -0.02500000037252903;
 $mul76 = $add75 * 0.10000000149011612;
 $52 = (+Math_pow(10.0,(+$mul76)));
 $arrayidx83 = ((($gfc)) + 84824|0);
 HEAPF32[$arrayidx83>>2] = $52;
 $arrayidx83$1 = ((($gfc)) + 84828|0);
 HEAPF32[$arrayidx83$1>>2] = $52;
 $arrayidx83$2 = ((($gfc)) + 84832|0);
 HEAPF32[$arrayidx83$2>>2] = $52;
 $arrayidx83$3 = ((($gfc)) + 84836|0);
 HEAPF32[$arrayidx83$3>>2] = $52;
 $arrayidx83$4 = ((($gfc)) + 84840|0);
 HEAPF32[$arrayidx83$4>>2] = $52;
 $arrayidx83$5 = ((($gfc)) + 84844|0);
 HEAPF32[$arrayidx83$5>>2] = $52;
 $arrayidx83$6 = ((($gfc)) + 84848|0);
 HEAPF32[$arrayidx83$6>>2] = $52;
 $adjust_sfb21_db = ((($gfc)) + 240|0);
 $53 = +HEAPF32[$adjust_sfb21_db>>2];
 $add89 = $53 + 0.5;
 $mul90 = $add89 * 0.10000000149011612;
 $54 = (+Math_pow(10.0,(+$mul90)));
 $arrayidx97 = ((($gfc)) + 84852|0);
 HEAPF32[$arrayidx97>>2] = $54;
 $55 = +HEAPF32[$adjust_bass_db>>2];
 $add104 = $55 + -2.0;
 $mul105 = $add104 * 0.10000000149011612;
 $56 = (+Math_pow(10.0,(+$mul105)));
 $arrayidx111 = ((($gfc)) + 84856|0);
 HEAPF32[$arrayidx111>>2] = $56;
 $arrayidx111$1 = ((($gfc)) + 84860|0);
 HEAPF32[$arrayidx111$1>>2] = $56;
 $arrayidx111$2 = ((($gfc)) + 84864|0);
 HEAPF32[$arrayidx111$2>>2] = $56;
 $57 = +HEAPF32[$adjust_alto_db>>2];
 $add118 = $57 + -1.0;
 $mul119 = $add118 * 0.10000000149011612;
 $58 = (+Math_pow(10.0,(+$mul119)));
 $arrayidx126 = ((($gfc)) + 84868|0);
 HEAPF32[$arrayidx126>>2] = $58;
 $arrayidx126$1 = ((($gfc)) + 84872|0);
 HEAPF32[$arrayidx126$1>>2] = $58;
 $arrayidx126$2 = ((($gfc)) + 84876|0);
 HEAPF32[$arrayidx126$2>>2] = $58;
 $arrayidx126$3 = ((($gfc)) + 84880|0);
 HEAPF32[$arrayidx126$3>>2] = $58;
 $59 = +HEAPF32[$adjust_treble_db>>2];
 $add133 = $59 + -0.05000000074505806;
 $mul134 = $add133 * 0.10000000149011612;
 $60 = (+Math_pow(10.0,(+$mul134)));
 $arrayidx141 = ((($gfc)) + 84884|0);
 HEAPF32[$arrayidx141>>2] = $60;
 $arrayidx141$1 = ((($gfc)) + 84888|0);
 HEAPF32[$arrayidx141$1>>2] = $60;
 $arrayidx141$2 = ((($gfc)) + 84892|0);
 HEAPF32[$arrayidx141$2>>2] = $60;
 $arrayidx141$3 = ((($gfc)) + 84896|0);
 HEAPF32[$arrayidx141$3>>2] = $60;
 $arrayidx141$4 = ((($gfc)) + 84900|0);
 HEAPF32[$arrayidx141$4>>2] = $60;
 $61 = +HEAPF32[$adjust_sfb21_db>>2];
 $add148 = $61 + 0.5;
 $mul149 = $add148 * 0.10000000149011612;
 $62 = (+Math_pow(10.0,(+$mul149)));
 $arrayidx156 = ((($gfc)) + 84904|0);
 HEAPF32[$arrayidx156>>2] = $62;
 return;
}
function _on_pe($gfc,$pe,$targ_bits,$mean_bits,$gr,$cbr) {
 $gfc = $gfc|0;
 $pe = $pe|0;
 $targ_bits = $targ_bits|0;
 $mean_bits = $mean_bits|0;
 $gr = $gr|0;
 $cbr = $cbr|0;
 var $$add = 0, $$div = 0, $$storemerge = 0, $$sub39 = 0, $0 = 0, $1 = 0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $add = 0, $add34 = 0, $add51 = 0, $add77 = 0, $add89 = 0, $add_bits = 0, $arrayidx = 0, $arrayidx101 = 0, $arrayidx15 = 0, $arrayidx62 = 0, $arrayidx75 = 0, $arrayidx76 = 0, $arrayidx88 = 0, $arrayidx9 = 0;
 var $bits$079 = 0, $bits$170 = 0, $brmerge = 0, $ch$080 = 0, $ch$177 = 0, $ch$273 = 0, $ch$371 = 0, $ch$468 = 0, $channels_out = 0, $cmp19 = 0, $cmp2 = 0, $cmp278 = 0, $cmp35 = 0, $cmp52 = 0, $cmp54 = 0, $cmp5976 = 0, $cmp72 = 0, $cmp8569 = 0, $cmp8569$not = 0, $cmp93$not = 0;
 var $cmp98 = 0, $conv = 0.0, $conv10 = 0.0, $conv13 = 0.0, $conv14 = 0, $div = 0, $div104 = 0, $div11 = 0.0, $div18 = 0, $div64 = 0, $exitcond = 0, $exitcond87 = 0, $extra_bits = 0, $inc = 0, $inc108 = 0, $inc67 = 0, $inc81 = 0, $inc91 = 0, $mul = 0.0, $mul102 = 0;
 var $mul17 = 0, $mul63 = 0, $or$cond = 0, $or$cond84 = 0, $storemerge = 0, $storemerge88 = 0, $sub = 0.0, $sub39 = 0, $sub79 = 0, $sub7975 = 0, $tbits = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $extra_bits = sp + 12|0;
 $tbits = sp + 8|0;
 $add_bits = sp;
 HEAP32[$extra_bits>>2] = 0;
 $0 = $add_bits;
 $1 = $0;
 HEAP32[$1>>2] = 0;
 $2 = (($0) + 4)|0;
 $3 = $2;
 HEAP32[$3>>2] = 0;
 _ResvMaxBits($gfc,$mean_bits,$tbits,$extra_bits,$cbr);
 $4 = HEAP32[$tbits>>2]|0;
 $5 = HEAP32[$extra_bits>>2]|0;
 $add = (($5) + ($4))|0;
 $6 = ($add|0)<(7680);
 $$add = $6 ? $add : 7680;
 $channels_out = ((($gfc)) + 72|0);
 $7 = HEAP32[$channels_out>>2]|0;
 $cmp278 = ($7|0)>(0);
 if (!($cmp278)) {
  STACKTOP = sp;return ($$add|0);
 }
 $mul17 = ($mean_bits*3)|0;
 $div18 = (($mul17|0) / 4)&-1;
 $8 = $7;$bits$079 = 0;$ch$080 = 0;
 while(1) {
  $div = (($4|0) / ($8|0))&-1;
  $9 = ($div|0)<(4095);
  $$div = $9 ? $div : 4095;
  $arrayidx = (($targ_bits) + ($ch$080<<2)|0);
  HEAP32[$arrayidx>>2] = $$div;
  $conv = (+($$div|0));
  $arrayidx9 = ((($pe) + ($gr<<3)|0) + ($ch$080<<2)|0);
  $10 = +HEAPF32[$arrayidx9>>2];
  $mul = $conv * $10;
  $conv10 = $mul;
  $div11 = $conv10 * 0.0014285714285714286;
  $conv13 = (+($$div|0));
  $sub = $div11 - $conv13;
  $conv14 = (~~(($sub)));
  $arrayidx15 = (($add_bits) + ($ch$080<<2)|0);
  $cmp19 = ($conv14|0)>($div18|0);
  $storemerge = $cmp19 ? $div18 : $conv14;
  $11 = ($storemerge|0)>(0);
  $$storemerge = $11 ? $storemerge : 0;
  $add34 = (($$storemerge) + ($$div))|0;
  $cmp35 = ($add34|0)>(4095);
  $sub39 = (4095 - ($$div))|0;
  $12 = ($sub39|0)>(0);
  $$sub39 = $12 ? $sub39 : 0;
  $storemerge88 = $cmp35 ? $$sub39 : $$storemerge;
  HEAP32[$arrayidx15>>2] = $storemerge88;
  $add51 = (($storemerge88) + ($bits$079))|0;
  $inc = (($ch$080) + 1)|0;
  $13 = HEAP32[$channels_out>>2]|0;
  $cmp2 = ($inc|0)<($13|0);
  if ($cmp2) {
   $8 = $13;$bits$079 = $add51;$ch$080 = $inc;
  } else {
   break;
  }
 }
 $cmp52 = ($add51|0)>($5|0);
 $cmp54 = ($add51|0)>(0);
 $or$cond = $cmp54 & $cmp52;
 $cmp5976 = ($13|0)>(0);
 $or$cond84 = $or$cond & $cmp5976;
 if ($or$cond84) {
  $ch$177 = 0;
  while(1) {
   $arrayidx62 = (($add_bits) + ($ch$177<<2)|0);
   $14 = HEAP32[$arrayidx62>>2]|0;
   $mul63 = Math_imul($14, $5)|0;
   $div64 = (($mul63|0) / ($add51|0))&-1;
   HEAP32[$arrayidx62>>2] = $div64;
   $inc67 = (($ch$177) + 1)|0;
   $exitcond87 = ($inc67|0)==($13|0);
   if ($exitcond87) {
    break;
   } else {
    $ch$177 = $inc67;
   }
  }
 }
 if ($cmp5976) {
  $ch$273 = 0;$sub7975 = $5;
  while(1) {
   $arrayidx75 = (($add_bits) + ($ch$273<<2)|0);
   $16 = HEAP32[$arrayidx75>>2]|0;
   $arrayidx76 = (($targ_bits) + ($ch$273<<2)|0);
   $17 = HEAP32[$arrayidx76>>2]|0;
   $add77 = (($17) + ($16))|0;
   HEAP32[$arrayidx76>>2] = $add77;
   $sub79 = (($sub7975) - ($16))|0;
   $inc81 = (($ch$273) + 1)|0;
   $18 = HEAP32[$channels_out>>2]|0;
   $cmp72 = ($inc81|0)<($18|0);
   if ($cmp72) {
    $ch$273 = $inc81;$sub7975 = $sub79;
   } else {
    break;
   }
  }
  HEAP32[$extra_bits>>2] = $sub79;
  $15 = $18;
 } else {
  $15 = $13;
 }
 $cmp8569 = ($15|0)>(0);
 if ($cmp8569) {
  $bits$170 = 0;$ch$371 = 0;
 } else {
  STACKTOP = sp;return ($$add|0);
 }
 while(1) {
  $arrayidx88 = (($targ_bits) + ($ch$371<<2)|0);
  $19 = HEAP32[$arrayidx88>>2]|0;
  $add89 = (($19) + ($bits$170))|0;
  $inc91 = (($ch$371) + 1)|0;
  $exitcond = ($inc91|0)==($15|0);
  if ($exitcond) {
   break;
  } else {
   $bits$170 = $add89;$ch$371 = $inc91;
  }
 }
 $cmp93$not = ($add89|0)<(7681);
 $cmp8569$not = $cmp8569 ^ 1;
 $brmerge = $cmp93$not | $cmp8569$not;
 if ($brmerge) {
  STACKTOP = sp;return ($$add|0);
 } else {
  $ch$468 = 0;
 }
 while(1) {
  $arrayidx101 = (($targ_bits) + ($ch$468<<2)|0);
  $20 = HEAP32[$arrayidx101>>2]|0;
  $mul102 = ($20*7680)|0;
  $div104 = (($mul102|0) / ($add89|0))&-1;
  HEAP32[$arrayidx101>>2] = $div104;
  $inc108 = (($ch$468) + 1)|0;
  $21 = HEAP32[$channels_out>>2]|0;
  $cmp98 = ($inc108|0)<($21|0);
  if ($cmp98) {
   $ch$468 = $inc108;
  } else {
   break;
  }
 }
 STACKTOP = sp;return ($$add|0);
}
function _reduce_side($targ_bits,$ms_ener_ratio,$mean_bits,$max_bits) {
 $targ_bits = $targ_bits|0;
 $ms_ener_ratio = +$ms_ener_ratio;
 $mean_bits = $mean_bits|0;
 $max_bits = $max_bits|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $add = 0, $add40 = 0, $add40$sink = 0, $add47 = 0, $add53 = 0, $arrayidx10 = 0, $cmp = 0, $cmp16 = 0, $cmp27 = 0, $cmp32 = 0, $cmp36 = 0, $cmp4 = 0, $cmp54 = 0, $conv = 0.0;
 var $conv1 = 0.0, $conv11 = 0.0, $conv13 = 0, $conv8 = 0.0, $div = 0.0, $div59 = 0, $div63 = 0, $fac$0 = 0.0, $fac$1 = 0.0, $move_bits$1 = 0, $mul12 = 0.0, $mul58 = 0, $mul62 = 0, $mul9 = 0.0, $sub = 0.0, $sub15 = 0, $sub15$conv13 = 0, $sub31 = 0, $sub43$sink = 0, $sub43$sink$ph = 0;
 var $sub45 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $conv = $ms_ener_ratio;
 $sub = 0.5 - $conv;
 $div = $sub * 0.66000000000000003;
 $conv1 = $div;
 $cmp = $conv1 < 0.0;
 $fac$0 = $cmp ? 0.0 : $conv1;
 $cmp4 = $fac$0 > 0.5;
 $fac$1 = $cmp4 ? 0.5 : $fac$0;
 $conv8 = $fac$1;
 $mul9 = $conv8 * 0.5;
 $0 = HEAP32[$targ_bits>>2]|0;
 $arrayidx10 = ((($targ_bits)) + 4|0);
 $1 = HEAP32[$arrayidx10>>2]|0;
 $add = (($1) + ($0))|0;
 $conv11 = (+($add|0));
 $mul12 = $mul9 * $conv11;
 $conv13 = (~~(($mul12)));
 $sub15 = (4095 - ($0))|0;
 $cmp16 = ($conv13|0)>($sub15|0);
 $sub15$conv13 = $cmp16 ? $sub15 : $conv13;
 $2 = ($sub15$conv13|0)>(0);
 $move_bits$1 = $2 ? $sub15$conv13 : 0;
 $cmp27 = ($1|0)>(124);
 if ($cmp27) {
  $sub31 = (($1) - ($move_bits$1))|0;
  $cmp32 = ($sub31|0)>(125);
  if ($cmp32) {
   $cmp36 = ($0|0)<($mean_bits|0);
   if ($cmp36) {
    $add40 = (($move_bits$1) + ($0))|0;
    $add40$sink = $add40;$sub43$sink$ph = $sub31;
    label = 6;
   } else {
    $5 = $0;$sub43$sink = $sub31;
   }
  } else {
   $sub45 = (($0) + -125)|0;
   $add47 = (($sub45) + ($1))|0;
   $add40$sink = $add47;$sub43$sink$ph = 125;
   label = 6;
  }
  if ((label|0) == 6) {
   HEAP32[$targ_bits>>2] = $add40$sink;
   $5 = $add40$sink;$sub43$sink = $sub43$sink$ph;
  }
  HEAP32[$arrayidx10>>2] = $sub43$sink;
  $3 = $sub43$sink;$4 = $5;
 } else {
  $3 = $1;$4 = $0;
 }
 $add53 = (($3) + ($4))|0;
 $cmp54 = ($add53|0)>($max_bits|0);
 if (!($cmp54)) {
  return;
 }
 $mul62 = Math_imul($3, $max_bits)|0;
 $mul58 = Math_imul($4, $max_bits)|0;
 $div59 = (($mul58|0) / ($add53|0))&-1;
 HEAP32[$targ_bits>>2] = $div59;
 $div63 = (($mul62|0) / ($add53|0))&-1;
 HEAP32[$arrayidx10>>2] = $div63;
 return;
}
function _athAdjust($a,$x,$athFloor,$ATHfixpoint) {
 $a = +$a;
 $x = +$x;
 $athFloor = +$athFloor;
 $ATHfixpoint = +$ATHfixpoint;
 var $0 = 0.0, $ATHfixpoint$op = 0.0, $add = 0.0, $add14 = 0.0, $add16 = 0.0, $call = 0.0, $call5 = 0.0, $cmp = 0, $cmp3 = 0, $cmp9 = 0, $cond$neg = 0.0, $conv = 0.0, $conv1 = 0.0, $conv6 = 0.0, $conv8 = 0.0, $mul = 0.0, $mul13 = 0.0, $mul17 = 0.0, $mul2 = 0.0, $mul7 = 0.0;
 var $sub = 0.0, $sub15 = 0.0, $w$0 = 0.0, $w$1 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = $ATHfixpoint < 1.0;
 $call = (+_fast_log2($x));
 $conv = $call;
 $mul = $conv * 3.0102999566398116;
 $conv1 = $mul;
 $mul2 = $a * $a;
 $sub = $conv1 - $athFloor;
 $cmp3 = $mul2 > 9.9999996826552254E-21;
 if ($cmp3) {
  $call5 = (+_fast_log2($mul2));
  $conv6 = $call5;
  $mul7 = $conv6 * 0.03333343265598758;
  $add = $mul7 + 1.0;
  $conv8 = $add;
  $w$0 = $conv8;
 } else {
  $w$0 = 0.0;
 }
 $cmp9 = $w$0 < 0.0;
 $w$1 = $cmp9 ? 0.0 : $w$0;
 $mul13 = $w$1 * $sub;
 $add14 = $athFloor + 90.308731079101563;
 $ATHfixpoint$op = -$ATHfixpoint;
 $cond$neg = $cmp ? -94.824447631835938 : $ATHfixpoint$op;
 $sub15 = $add14 + $cond$neg;
 $add16 = $sub15 + $mul13;
 $mul17 = $add16 * 0.10000000149011612;
 $0 = (+Math_pow(10.0,(+$mul17)));
 return (+$0);
}
function _calc_xmin($gfc,$ratio,$cod_info,$pxmin) {
 $gfc = $gfc|0;
 $ratio = $ratio|0;
 $cod_info = $cod_info|0;
 $pxmin = $pxmin|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0.0, $12 = 0.0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0.0, $20 = 0, $21 = 0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0;
 var $27 = 0.0, $28 = 0, $29 = 0.0, $3 = 0.0, $30 = 0, $31 = 0.0, $32 = 0.0, $33 = 0, $34 = 0.0, $35 = 0.0, $36 = 0, $37 = 0.0, $38 = 0, $39 = 0.0, $4 = 0.0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0, $44 = 0.0;
 var $45 = 0.0, $46 = 0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0.0, $50 = 0, $51 = 0.0, $52 = 0, $53 = 0.0, $54 = 0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $6 = 0.0, $60 = 0.0, $61 = 0.0, $62 = 0;
 var $7 = 0.0, $8 = 0, $9 = 0.0, $ATH2 = 0, $ATHfixpoint = 0, $ATHfixpoint$op$i = 0.0, $ATHfixpoint$op$i184 = 0.0, $ATHfixpoint128 = 0, $add = 0.0, $add$i = 0.0, $add$i176 = 0.0, $add14$i = 0.0, $add14$i183 = 0.0, $add155$us = 0.0, $add155$us$1 = 0.0, $add155$us$2 = 0.0, $add16 = 0.0, $add16$i = 0.0, $add16$i187 = 0.0, $add162$us = 0.0;
 var $add162$us$1 = 0.0, $add162$us$2 = 0.0, $add214 = 0.0, $add214$1 = 0.0, $add214$2 = 0.0, $add214$us = 0.0, $add214$us$1 = 0.0, $add214$us$2 = 0.0, $add220$1 = 0, $add220$2 = 0, $add220$us$1 = 0, $add220$us$2 = 0, $add237 = 0.0, $add251 = 0.0, $add256 = 0, $add57 = 0.0, $add85 = 0, $adjust_factor = 0, $adjust_factor124 = 0, $arrayidx = 0;
 var $arrayidx106 = 0, $arrayidx109 = 0, $arrayidx12 = 0, $arrayidx126 = 0, $arrayidx131 = 0, $arrayidx134 = 0, $arrayidx152$us = 0, $arrayidx152$us$1 = 0, $arrayidx152$us$2 = 0, $arrayidx185 = 0, $arrayidx185$1 = 0, $arrayidx185$2 = 0, $arrayidx185$us = 0, $arrayidx185$us$1 = 0, $arrayidx185$us$2 = 0, $arrayidx193$us = 0, $arrayidx193$us$1 = 0, $arrayidx193$us$2 = 0, $arrayidx221 = 0, $arrayidx221$1 = 0;
 var $arrayidx221$2 = 0, $arrayidx221$us = 0, $arrayidx221$us$1 = 0, $arrayidx221$us$2 = 0, $arrayidx228 = 0, $arrayidx240 = 0, $arrayidx31 = 0, $arrayidx36 = 0, $arrayidx5 = 0, $arrayidx62 = 0, $arrayidx7 = 0, $arrayidx70 = 0, $ath_over$0$lcssa = 0, $ath_over$0221 = 0, $ath_over$1 = 0, $ath_over$2$lcssa = 0, $ath_over$2203 = 0, $ath_over$3$lcssa = 0, $ath_over$4 = 0, $ath_over$4$1 = 0;
 var $ath_over$4$2 = 0, $ath_over$4$us = 0, $ath_over$4$us$1 = 0, $ath_over$4$us$2 = 0, $block_type = 0, $call$i = 0.0, $call$i166 = 0.0, $call5$i = 0.0, $call5$i173 = 0.0, $cd_psy = 0, $cmp = 0, $cmp$i = 0, $cmp$i165 = 0, $cmp113 = 0, $cmp119 = 0, $cmp119202 = 0, $cmp14 = 0, $cmp147191 = 0, $cmp156$us = 0, $cmp156$us$1 = 0;
 var $cmp156$us$2 = 0, $cmp166 = 0, $cmp166$us = 0, $cmp166$us$1 = 0, $cmp166$us$2 = 0, $cmp171 = 0, $cmp171$us = 0, $cmp171$us$1 = 0, $cmp171$us$2 = 0, $cmp175 = 0, $cmp175$us = 0, $cmp175$us$1 = 0, $cmp175$us$2 = 0, $cmp18 = 0, $cmp186 = 0, $cmp186$1 = 0, $cmp186$2 = 0, $cmp186$us = 0, $cmp186$us$1 = 0, $cmp186$us$2 = 0;
 var $cmp200 = 0, $cmp200$1 = 0, $cmp200$2 = 0, $cmp200$us = 0, $cmp200$us$1 = 0, $cmp200$us$2 = 0, $cmp206 = 0, $cmp206$1 = 0, $cmp206$2 = 0, $cmp206$us = 0, $cmp206$us$1 = 0, $cmp206$us$2 = 0, $cmp21 = 0, $cmp215 = 0, $cmp215$1 = 0, $cmp215$2 = 0, $cmp215$us = 0, $cmp215$us$1 = 0, $cmp215$us$2 = 0, $cmp220 = 0;
 var $cmp229 = 0, $cmp24 = 0, $cmp241 = 0, $cmp3$i = 0, $cmp3$i172 = 0, $cmp32 = 0, $cmp43 = 0, $cmp49 = 0, $cmp58 = 0, $cmp67 = 0, $cmp73 = 0, $cmp79 = 0, $cmp88 = 0, $cmp9$i = 0, $cmp9$i180 = 0, $cmp90 = 0, $cmp9212 = 0, $cmp94 = 0, $cond = 0.0, $cond$neg$i = 0.0;
 var $cond$neg$i185 = 0.0, $cond100 = 0, $cond161$us = 0.0, $cond161$us$1 = 0.0, $cond161$us$2 = 0.0, $cond212 = 0.0, $cond212$1 = 0.0, $cond212$2 = 0.0, $cond212$us = 0.0, $cond212$us$1 = 0.0, $cond212$us$2 = 0.0, $cond55 = 0.0, $cond96 = 0, $conv = 0.0, $conv$i = 0.0, $conv$i167 = 0.0, $conv1$i = 0.0, $conv1$i169 = 0.0, $conv144 = 0.0, $conv205 = 0.0;
 var $conv205$1 = 0.0, $conv205$2 = 0.0, $conv205$us = 0.0, $conv205$us$1 = 0.0, $conv205$us$2 = 0.0, $conv213 = 0.0, $conv213$1 = 0.0, $conv213$2 = 0.0, $conv213$us = 0.0, $conv213$us$1 = 0.0, $conv213$us$2 = 0.0, $conv218 = 0, $conv218$1 = 0, $conv218$2 = 0, $conv218$us = 0, $conv218$us$1 = 0, $conv218$us$2 = 0, $conv48 = 0.0, $conv56 = 0.0, $conv6$i = 0.0;
 var $conv6$i174 = 0.0, $conv61 = 0, $conv8$i = 0.0, $conv8$i177 = 0.0, $dec = 0, $decay = 0, $decay248 = 0, $div = 0.0, $div145 = 0.0, $div195$us = 0.0, $div195$us$1 = 0.0, $div195$us$2 = 0.0, $div38 = 0.0, $div83190 = 0, $en0$0$lcssa = 0.0, $en0$0215 = 0.0, $en0139$0193$us = 0.0, $en0139$0193$us$1 = 0.0, $en0139$0193$us$2 = 0.0, $exitcond = 0;
 var $exitcond$1 = 0, $exitcond$2 = 0, $exitcond232 = 0, $fabsf = 0.0, $floor = 0, $floor127 = 0, $gsfb$0$lcssa = 0, $gsfb$0223 = 0, $gsfb$1205 = 0, $inc = 0, $inc151$us = 0, $inc151$us$1 = 0, $inc151$us$2 = 0, $inc164$us = 0, $inc164$us$1 = 0, $inc164$us$2 = 0, $inc169 = 0, $inc169$us = 0, $inc169$us$1 = 0, $inc169$us$2 = 0;
 var $inc17 = 0, $inc20 = 0, $inc255 = 0, $inc64 = 0, $incdec$ptr = 0, $incdec$ptr222 = 0, $incdec$ptr222$1 = 0, $incdec$ptr222$us = 0, $incdec$ptr222$us$1 = 0, $j$0$lcssa = 0, $j$0222 = 0, $j$1$lcssa = 0, $j$1216 = 0, $j$2204 = 0, $j$3$lcssa = 0, $j$4194$us = 0, $j$4194$us$1 = 0, $j$4194$us$2 = 0, $k$0211 = 0, $l$0213 = 0;
 var $l123$0192$us = 0, $l123$0192$us$1 = 0, $l123$0192$us$2 = 0, $limit$0 = 0, $limit$0$in = 0, $max_nonzero$0 = 0, $max_nonzero$1 = 0, $max_nonzero$1$limit$0 = 0, $max_nonzero$3 = 0, $max_nonzero_coeff = 0, $mul = 0.0, $mul$i = 0.0, $mul$i168 = 0.0, $mul$rh2$0 = 0.0, $mul110 = 0, $mul13 = 0.0, $mul13$i = 0.0, $mul13$i182 = 0.0, $mul132 = 0.0, $mul132$rh2142$0 = 0.0;
 var $mul132$rh2142$0$us = 0.0, $mul132$rh2142$0$us$1 = 0.0, $mul132$rh2142$0$us$2 = 0.0, $mul154$us = 0.0, $mul154$us$1 = 0.0, $mul154$us$2 = 0.0, $mul17$i = 0.0, $mul17$i188 = 0.0, $mul194$us = 0.0, $mul194$us$1 = 0.0, $mul194$us$2 = 0.0, $mul199$us = 0.0, $mul199$us$1 = 0.0, $mul199$us$2 = 0.0, $mul2$i = 0.0, $mul2$i170 = 0.0, $mul235 = 0.0, $mul249 = 0.0, $mul37 = 0.0, $mul42 = 0.0;
 var $mul7$i = 0.0, $mul7$i175 = 0.0, $mul84 = 0, $or = 0, $psy_lmax = 0, $psymax = 0, $pxmin$addr$0$lcssa = 0, $pxmin$addr$0224 = 0, $pxmin$addr$1209 = 0, $pxmin$addr$2$lcssa = 0, $rh2$0$lcssa = 0.0, $rh2$0214 = 0.0, $rh2142$0195$us = 0.0, $rh2142$0195$us$1 = 0.0, $rh2142$0195$us$2 = 0.0, $rh3$0 = 0.0, $rh3143$0 = 0.0, $rh3143$0$us = 0.0, $rh3143$0$us$1 = 0.0, $rh3143$0$us$2 = 0.0;
 var $samplerate_out = 0, $sfb$0207 = 0, $sfb21_extra = 0, $sfb_smin = 0, $sub$i = 0.0, $sub$i171 = 0.0, $sub15$i = 0.0, $sub15$i186 = 0.0, $sub234 = 0.0, $sub246 = 0.0, $tobool = 0, $use_temporal_masking_effect = 0, $w$0$i = 0.0, $w$0$i179 = 0.0, $w$1$i = 0.0, $w$1$i181 = 0.0, $xmin$0 = 0.0, $xmin$1 = 0.0, $xmin140$0$us = 0.0, $xmin140$0$us$1 = 0.0;
 var $xmin140$0$us$2 = 0.0, $xmin140$1$us = 0.0, $xmin140$1$us$1 = 0.0, $xmin140$1$us$2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $ATH2 = ((($gfc)) + 85796|0);
 $0 = HEAP32[$ATH2>>2]|0;
 $psy_lmax = ((($cod_info)) + 4856|0);
 $1 = HEAP32[$psy_lmax>>2]|0;
 $cmp220 = ($1|0)>(0);
 if ($cmp220) {
  $adjust_factor = ((($0)) + 8|0);
  $floor = ((($0)) + 20|0);
  $ATHfixpoint = ((($gfc)) + 224|0);
  $ath_over$0221 = 0;$gsfb$0223 = 0;$j$0222 = 0;$pxmin$addr$0224 = $pxmin;
  while(1) {
   $2 = +HEAPF32[$adjust_factor>>2];
   $arrayidx = (((($0)) + 24|0) + ($gsfb$0223<<2)|0);
   $3 = +HEAPF32[$arrayidx>>2];
   $4 = +HEAPF32[$floor>>2];
   $5 = +HEAPF32[$ATHfixpoint>>2];
   $cmp$i = $5 < 1.0;
   $call$i = (+_fast_log2($3));
   $conv$i = $call$i;
   $mul$i = $conv$i * 3.0102999566398116;
   $conv1$i = $mul$i;
   $mul2$i = $2 * $2;
   $sub$i = $conv1$i - $4;
   $cmp3$i = $mul2$i > 9.9999996826552254E-21;
   if ($cmp3$i) {
    $call5$i = (+_fast_log2($mul2$i));
    $conv6$i = $call5$i;
    $mul7$i = $conv6$i * 0.03333343265598758;
    $add$i = $mul7$i + 1.0;
    $conv8$i = $add$i;
    $w$0$i = $conv8$i;
   } else {
    $w$0$i = 0.0;
   }
   $cmp9$i = $w$0$i < 0.0;
   $w$1$i = $cmp9$i ? 0.0 : $w$0$i;
   $mul13$i = $w$1$i * $sub$i;
   $add14$i = $4 + 90.308731079101563;
   $ATHfixpoint$op$i = -$5;
   $cond$neg$i = $cmp$i ? -94.824447631835938 : $ATHfixpoint$op$i;
   $sub15$i = $add14$i + $cond$neg$i;
   $add16$i = $sub15$i + $mul13$i;
   $mul17$i = $add16$i * 0.10000000149011612;
   $6 = (+Math_pow(10.0,(+$mul17$i)));
   $arrayidx5 = (((($gfc)) + 84768|0) + ($gsfb$0223<<2)|0);
   $7 = +HEAPF32[$arrayidx5>>2];
   $mul = $7 * $6;
   $arrayidx7 = (((($cod_info)) + 4872|0) + ($gsfb$0223<<2)|0);
   $8 = HEAP32[$arrayidx7>>2]|0;
   $conv = (+($8|0));
   $div = $mul / $conv;
   $cmp9212 = ($8|0)>(0);
   if ($cmp9212) {
    $en0$0215 = 0.0;$j$1216 = $j$0222;$l$0213 = 0;$rh2$0214 = 2.2204460492503131E-16;
    while(1) {
     $inc = (($j$1216) + 1)|0;
     $arrayidx12 = (($cod_info) + ($j$1216<<2)|0);
     $9 = +HEAPF32[$arrayidx12>>2];
     $mul13 = $9 * $9;
     $add = $mul13 + $en0$0215;
     $cmp14 = $mul13 < $div;
     $cond = $cmp14 ? $mul13 : $div;
     $add16 = $cond + $rh2$0214;
     $inc17 = (($l$0213) + 1)|0;
     $exitcond232 = ($inc17|0)==($8|0);
     if ($exitcond232) {
      break;
     } else {
      $en0$0215 = $add;$j$1216 = $inc;$l$0213 = $inc17;$rh2$0214 = $add16;
     }
    }
    $10 = (($j$0222) + ($8))|0;
    $en0$0$lcssa = $add;$j$1$lcssa = $10;$rh2$0$lcssa = $add16;
   } else {
    $en0$0$lcssa = 0.0;$j$1$lcssa = $j$0222;$rh2$0$lcssa = 2.2204460492503131E-16;
   }
   $cmp18 = $en0$0$lcssa > $mul;
   $inc20 = $cmp18&1;
   $ath_over$1 = (($inc20) + ($ath_over$0221))|0;
   $cmp21 = $en0$0$lcssa < $mul;
   $cmp24 = $rh2$0$lcssa < $mul;
   $mul$rh2$0 = $cmp24 ? $mul : $rh2$0$lcssa;
   $rh3$0 = $cmp21 ? $en0$0$lcssa : $mul$rh2$0;
   $arrayidx31 = (((($ratio)) + 244|0) + ($gsfb$0223<<2)|0);
   $11 = +HEAPF32[$arrayidx31>>2];
   $cmp32 = $11 > 9.999999960041972E-13;
   if ($cmp32) {
    $arrayidx36 = (($ratio) + ($gsfb$0223<<2)|0);
    $12 = +HEAPF32[$arrayidx36>>2];
    $mul37 = $12 * $en0$0$lcssa;
    $div38 = $mul37 / $11;
    $mul42 = $div38 * $7;
    $cmp43 = $rh3$0 < $mul42;
    $xmin$0 = $cmp43 ? $mul42 : $rh3$0;
    $xmin$1 = $xmin$0;
   } else {
    $xmin$1 = $rh3$0;
   }
   $conv48 = $xmin$1;
   $cmp49 = $conv48 > 2.2204460492503131E-16;
   $cond55 = $cmp49 ? $conv48 : 2.2204460492503131E-16;
   $conv56 = $cond55;
   $add57 = $conv56 + 9.9999998245167004E-15;
   $cmp58 = $en0$0$lcssa > $add57;
   $conv61 = $cmp58&1;
   $arrayidx62 = (((($cod_info)) + 5212|0) + ($gsfb$0223)|0);
   HEAP8[$arrayidx62>>0] = $conv61;
   $incdec$ptr = ((($pxmin$addr$0224)) + 4|0);
   HEAPF32[$pxmin$addr$0224>>2] = $conv56;
   $inc64 = (($gsfb$0223) + 1)|0;
   $13 = HEAP32[$psy_lmax>>2]|0;
   $cmp = ($inc64|0)<($13|0);
   if ($cmp) {
    $ath_over$0221 = $ath_over$1;$gsfb$0223 = $inc64;$j$0222 = $j$1$lcssa;$pxmin$addr$0224 = $incdec$ptr;
   } else {
    $ath_over$0$lcssa = $ath_over$1;$gsfb$0$lcssa = $inc64;$j$0$lcssa = $j$1$lcssa;$pxmin$addr$0$lcssa = $incdec$ptr;
    break;
   }
  }
 } else {
  $ath_over$0$lcssa = 0;$gsfb$0$lcssa = 0;$j$0$lcssa = 0;$pxmin$addr$0$lcssa = $pxmin;
 }
 $k$0211 = 575;
 while(1) {
  $arrayidx70 = (($cod_info) + ($k$0211<<2)|0);
  $14 = +HEAPF32[$arrayidx70>>2];
  $fabsf = (+Math_abs((+$14)));
  $cmp73 = $fabsf > 9.999999960041972E-13;
  if ($cmp73) {
   $max_nonzero$0 = $k$0211;
   break;
  }
  $dec = (($k$0211) + -1)|0;
  $cmp67 = ($k$0211|0)>(1);
  if ($cmp67) {
   $k$0211 = $dec;
  } else {
   $max_nonzero$0 = 0;
   break;
  }
 }
 $block_type = ((($cod_info)) + 4788|0);
 $15 = HEAP32[$block_type>>2]|0;
 $cmp79 = ($15|0)==(2);
 if ($cmp79) {
  $div83190 = (($max_nonzero$0>>>0) % 6)&-1;
  $mul84 = (($max_nonzero$0) + 5)|0;
  $add85 = (($mul84) - ($div83190))|0;
  $max_nonzero$1 = $add85;
 } else {
  $or = $max_nonzero$0 | 1;
  $max_nonzero$1 = $or;
 }
 $sfb21_extra = ((($gfc)) + 85092|0);
 $16 = HEAP32[$sfb21_extra>>2]|0;
 $cmp88 = ($16|0)==(0);
 if ($cmp88) {
  $samplerate_out = ((($gfc)) + 64|0);
  $17 = HEAP32[$samplerate_out>>2]|0;
  $cmp90 = ($17|0)<(44000);
  if ($cmp90) {
   $cmp94 = ($17|0)<(8001);
   if ($cmp79) {
    $cond100 = $cmp94 ? 9 : 12;
    $arrayidx109 = (((($gfc)) + 21452|0) + ($cond100<<2)|0);
    $19 = HEAP32[$arrayidx109>>2]|0;
    $mul110 = ($19*3)|0;
    $limit$0$in = $mul110;
   } else {
    $cond96 = $cmp94 ? 17 : 21;
    $arrayidx106 = (((($gfc)) + 21360|0) + ($cond96<<2)|0);
    $18 = HEAP32[$arrayidx106>>2]|0;
    $limit$0$in = $18;
   }
   $cmp113 = ($max_nonzero$1|0)<($limit$0$in|0);
   $limit$0 = (($limit$0$in) + -1)|0;
   $max_nonzero$1$limit$0 = $cmp113 ? $max_nonzero$1 : $limit$0;
   $max_nonzero$3 = $max_nonzero$1$limit$0;
  } else {
   $max_nonzero$3 = $max_nonzero$1;
  }
 } else {
  $max_nonzero$3 = $max_nonzero$1;
 }
 $max_nonzero_coeff = ((($cod_info)) + 5208|0);
 HEAP32[$max_nonzero_coeff>>2] = $max_nonzero$3;
 $psymax = ((($cod_info)) + 4864|0);
 $20 = HEAP32[$psymax>>2]|0;
 $cmp119202 = ($gsfb$0$lcssa|0)<($20|0);
 if (!($cmp119202)) {
  $ath_over$2$lcssa = $ath_over$0$lcssa;
  return ($ath_over$2$lcssa|0);
 }
 $sfb_smin = ((($cod_info)) + 4852|0);
 $21 = HEAP32[$sfb_smin>>2]|0;
 $adjust_factor124 = ((($0)) + 8|0);
 $floor127 = ((($0)) + 20|0);
 $ATHfixpoint128 = ((($gfc)) + 224|0);
 $use_temporal_masking_effect = ((($gfc)) + 92|0);
 $cd_psy = ((($gfc)) + 85800|0);
 $ath_over$2203 = $ath_over$0$lcssa;$gsfb$1205 = $gsfb$0$lcssa;$j$2204 = $j$0$lcssa;$pxmin$addr$1209 = $pxmin$addr$0$lcssa;$sfb$0207 = $21;
 while(1) {
  $22 = +HEAPF32[$adjust_factor124>>2];
  $arrayidx126 = (((($0)) + 112|0) + ($sfb$0207<<2)|0);
  $23 = +HEAPF32[$arrayidx126>>2];
  $24 = +HEAPF32[$floor127>>2];
  $25 = +HEAPF32[$ATHfixpoint128>>2];
  $cmp$i165 = $25 < 1.0;
  $call$i166 = (+_fast_log2($23));
  $conv$i167 = $call$i166;
  $mul$i168 = $conv$i167 * 3.0102999566398116;
  $conv1$i169 = $mul$i168;
  $mul2$i170 = $22 * $22;
  $sub$i171 = $conv1$i169 - $24;
  $cmp3$i172 = $mul2$i170 > 9.9999996826552254E-21;
  if ($cmp3$i172) {
   $call5$i173 = (+_fast_log2($mul2$i170));
   $conv6$i174 = $call5$i173;
   $mul7$i175 = $conv6$i174 * 0.03333343265598758;
   $add$i176 = $mul7$i175 + 1.0;
   $conv8$i177 = $add$i176;
   $w$0$i179 = $conv8$i177;
  } else {
   $w$0$i179 = 0.0;
  }
  $cmp9$i180 = $w$0$i179 < 0.0;
  $w$1$i181 = $cmp9$i180 ? 0.0 : $w$0$i179;
  $mul13$i182 = $w$1$i181 * $sub$i171;
  $add14$i183 = $24 + 90.308731079101563;
  $ATHfixpoint$op$i184 = -$25;
  $cond$neg$i185 = $cmp$i165 ? -94.824447631835938 : $ATHfixpoint$op$i184;
  $sub15$i186 = $add14$i183 + $cond$neg$i185;
  $add16$i187 = $sub15$i186 + $mul13$i182;
  $mul17$i188 = $add16$i187 * 0.10000000149011612;
  $26 = (+Math_pow(10.0,(+$mul17$i188)));
  $arrayidx131 = (((($gfc)) + 84856|0) + ($sfb$0207<<2)|0);
  $27 = +HEAPF32[$arrayidx131>>2];
  $mul132 = $27 * $26;
  $arrayidx134 = (((($cod_info)) + 4872|0) + ($gsfb$1205<<2)|0);
  $28 = HEAP32[$arrayidx134>>2]|0;
  $conv144 = (+($28|0));
  $div145 = $mul132 / $conv144;
  $cmp147191 = ($28|0)>(0);
  if ($cmp147191) {
   $38 = ($28*3)|0;
   $en0139$0193$us = 0.0;$j$4194$us = $j$2204;$l123$0192$us = 0;$rh2142$0195$us = 2.2204460492503131E-16;
   while(1) {
    $inc151$us = (($j$4194$us) + 1)|0;
    $arrayidx152$us = (($cod_info) + ($j$4194$us<<2)|0);
    $41 = +HEAPF32[$arrayidx152$us>>2];
    $mul154$us = $41 * $41;
    $add155$us = $mul154$us + $en0139$0193$us;
    $cmp156$us = $mul154$us < $div145;
    $cond161$us = $cmp156$us ? $mul154$us : $div145;
    $add162$us = $cond161$us + $rh2142$0195$us;
    $inc164$us = (($l123$0192$us) + 1)|0;
    $exitcond = ($inc164$us|0)==($28|0);
    if ($exitcond) {
     break;
    } else {
     $en0139$0193$us = $add155$us;$j$4194$us = $inc151$us;$l123$0192$us = $inc164$us;$rh2142$0195$us = $add162$us;
    }
   }
   $42 = (($28) + ($j$2204))|0;
   $cmp166$us = $add155$us > $mul132;
   $inc169$us = $cmp166$us&1;
   $ath_over$4$us = (($inc169$us) + ($ath_over$2203))|0;
   $cmp171$us = $add155$us < $mul132;
   $cmp175$us = $add162$us < $mul132;
   $mul132$rh2142$0$us = $cmp175$us ? $mul132 : $add162$us;
   $rh3143$0$us = $cmp171$us ? $add155$us : $mul132$rh2142$0$us;
   $arrayidx185$us = (((($ratio)) + 332|0) + (($sfb$0207*12)|0)|0);
   $40 = +HEAPF32[$arrayidx185$us>>2];
   $cmp186$us = $40 > 9.999999960041972E-13;
   if ($cmp186$us) {
    $arrayidx193$us = (((($ratio)) + 88|0) + (($sfb$0207*12)|0)|0);
    $39 = +HEAPF32[$arrayidx193$us>>2];
    $mul194$us = $39 * $add155$us;
    $div195$us = $mul194$us / $40;
    $mul199$us = $div195$us * $27;
    $cmp200$us = $rh3143$0$us < $mul199$us;
    $xmin140$0$us = $cmp200$us ? $mul199$us : $rh3143$0$us;
    $xmin140$1$us = $xmin140$0$us;
   } else {
    $xmin140$1$us = $rh3143$0$us;
   }
   $conv205$us = $xmin140$1$us;
   $cmp206$us = $conv205$us > 2.2204460492503131E-16;
   $cond212$us = $cmp206$us ? $conv205$us : 2.2204460492503131E-16;
   $conv213$us = $cond212$us;
   $add214$us = $conv213$us + 9.9999998245167004E-15;
   $cmp215$us = $add155$us > $add214$us;
   $conv218$us = $cmp215$us&1;
   $arrayidx221$us = (((($cod_info)) + 5212|0) + ($gsfb$1205)|0);
   HEAP8[$arrayidx221$us>>0] = $conv218$us;
   $incdec$ptr222$us = ((($pxmin$addr$1209)) + 4|0);
   HEAPF32[$pxmin$addr$1209>>2] = $conv213$us;
   $en0139$0193$us$1 = 0.0;$j$4194$us$1 = $42;$l123$0192$us$1 = 0;$rh2142$0195$us$1 = 2.2204460492503131E-16;
   while(1) {
    $inc151$us$1 = (($j$4194$us$1) + 1)|0;
    $arrayidx152$us$1 = (($cod_info) + ($j$4194$us$1<<2)|0);
    $53 = +HEAPF32[$arrayidx152$us$1>>2];
    $mul154$us$1 = $53 * $53;
    $add155$us$1 = $mul154$us$1 + $en0139$0193$us$1;
    $cmp156$us$1 = $mul154$us$1 < $div145;
    $cond161$us$1 = $cmp156$us$1 ? $mul154$us$1 : $div145;
    $add162$us$1 = $cond161$us$1 + $rh2142$0195$us$1;
    $inc164$us$1 = (($l123$0192$us$1) + 1)|0;
    $exitcond$1 = ($inc164$us$1|0)==($28|0);
    if ($exitcond$1) {
     break;
    } else {
     $en0139$0193$us$1 = $add155$us$1;$j$4194$us$1 = $inc151$us$1;$l123$0192$us$1 = $inc164$us$1;$rh2142$0195$us$1 = $add162$us$1;
    }
   }
   $54 = (($28) + ($42))|0;
   $cmp166$us$1 = $add155$us$1 > $mul132;
   $inc169$us$1 = $cmp166$us$1&1;
   $ath_over$4$us$1 = (($inc169$us$1) + ($ath_over$4$us))|0;
   $cmp171$us$1 = $add155$us$1 < $mul132;
   $cmp175$us$1 = $add162$us$1 < $mul132;
   $mul132$rh2142$0$us$1 = $cmp175$us$1 ? $mul132 : $add162$us$1;
   $rh3143$0$us$1 = $cmp171$us$1 ? $add155$us$1 : $mul132$rh2142$0$us$1;
   $arrayidx185$us$1 = (((((($ratio)) + 332|0) + (($sfb$0207*12)|0)|0)) + 4|0);
   $55 = +HEAPF32[$arrayidx185$us$1>>2];
   $cmp186$us$1 = $55 > 9.999999960041972E-13;
   if ($cmp186$us$1) {
    $arrayidx193$us$1 = (((((($ratio)) + 88|0) + (($sfb$0207*12)|0)|0)) + 4|0);
    $56 = +HEAPF32[$arrayidx193$us$1>>2];
    $mul194$us$1 = $56 * $add155$us$1;
    $div195$us$1 = $mul194$us$1 / $55;
    $57 = +HEAPF32[$arrayidx131>>2];
    $mul199$us$1 = $div195$us$1 * $57;
    $cmp200$us$1 = $rh3143$0$us$1 < $mul199$us$1;
    $xmin140$0$us$1 = $cmp200$us$1 ? $mul199$us$1 : $rh3143$0$us$1;
    $xmin140$1$us$1 = $xmin140$0$us$1;
   } else {
    $xmin140$1$us$1 = $rh3143$0$us$1;
   }
   $conv205$us$1 = $xmin140$1$us$1;
   $cmp206$us$1 = $conv205$us$1 > 2.2204460492503131E-16;
   $cond212$us$1 = $cmp206$us$1 ? $conv205$us$1 : 2.2204460492503131E-16;
   $conv213$us$1 = $cond212$us$1;
   $add214$us$1 = $conv213$us$1 + 9.9999998245167004E-15;
   $cmp215$us$1 = $add155$us$1 > $add214$us$1;
   $conv218$us$1 = $cmp215$us$1&1;
   $add220$us$1 = (($gsfb$1205) + 1)|0;
   $arrayidx221$us$1 = (((($cod_info)) + 5212|0) + ($add220$us$1)|0);
   HEAP8[$arrayidx221$us$1>>0] = $conv218$us$1;
   $incdec$ptr222$us$1 = ((($pxmin$addr$1209)) + 8|0);
   HEAPF32[$incdec$ptr222$us>>2] = $conv213$us$1;
   $en0139$0193$us$2 = 0.0;$j$4194$us$2 = $54;$l123$0192$us$2 = 0;$rh2142$0195$us$2 = 2.2204460492503131E-16;
   while(1) {
    $inc151$us$2 = (($j$4194$us$2) + 1)|0;
    $arrayidx152$us$2 = (($cod_info) + ($j$4194$us$2<<2)|0);
    $58 = +HEAPF32[$arrayidx152$us$2>>2];
    $mul154$us$2 = $58 * $58;
    $add155$us$2 = $mul154$us$2 + $en0139$0193$us$2;
    $cmp156$us$2 = $mul154$us$2 < $div145;
    $cond161$us$2 = $cmp156$us$2 ? $mul154$us$2 : $div145;
    $add162$us$2 = $cond161$us$2 + $rh2142$0195$us$2;
    $inc164$us$2 = (($l123$0192$us$2) + 1)|0;
    $exitcond$2 = ($inc164$us$2|0)==($28|0);
    if ($exitcond$2) {
     break;
    } else {
     $en0139$0193$us$2 = $add155$us$2;$j$4194$us$2 = $inc151$us$2;$l123$0192$us$2 = $inc164$us$2;$rh2142$0195$us$2 = $add162$us$2;
    }
   }
   $cmp166$us$2 = $add155$us$2 > $mul132;
   $inc169$us$2 = $cmp166$us$2&1;
   $ath_over$4$us$2 = (($inc169$us$2) + ($ath_over$4$us$1))|0;
   $cmp171$us$2 = $add155$us$2 < $mul132;
   $cmp175$us$2 = $add162$us$2 < $mul132;
   $mul132$rh2142$0$us$2 = $cmp175$us$2 ? $mul132 : $add162$us$2;
   $rh3143$0$us$2 = $cmp171$us$2 ? $add155$us$2 : $mul132$rh2142$0$us$2;
   $arrayidx185$us$2 = (((((($ratio)) + 332|0) + (($sfb$0207*12)|0)|0)) + 8|0);
   $59 = +HEAPF32[$arrayidx185$us$2>>2];
   $cmp186$us$2 = $59 > 9.999999960041972E-13;
   if ($cmp186$us$2) {
    $arrayidx193$us$2 = (((((($ratio)) + 88|0) + (($sfb$0207*12)|0)|0)) + 8|0);
    $60 = +HEAPF32[$arrayidx193$us$2>>2];
    $mul194$us$2 = $60 * $add155$us$2;
    $div195$us$2 = $mul194$us$2 / $59;
    $61 = +HEAPF32[$arrayidx131>>2];
    $mul199$us$2 = $div195$us$2 * $61;
    $cmp200$us$2 = $rh3143$0$us$2 < $mul199$us$2;
    $xmin140$0$us$2 = $cmp200$us$2 ? $mul199$us$2 : $rh3143$0$us$2;
    $xmin140$1$us$2 = $xmin140$0$us$2;
   } else {
    $xmin140$1$us$2 = $rh3143$0$us$2;
   }
   $conv205$us$2 = $xmin140$1$us$2;
   $cmp206$us$2 = $conv205$us$2 > 2.2204460492503131E-16;
   $cond212$us$2 = $cmp206$us$2 ? $conv205$us$2 : 2.2204460492503131E-16;
   $conv213$us$2 = $cond212$us$2;
   $add214$us$2 = $conv213$us$2 + 9.9999998245167004E-15;
   $cmp215$us$2 = $add155$us$2 > $add214$us$2;
   $conv218$us$2 = $cmp215$us$2&1;
   $add220$us$2 = (($gsfb$1205) + 2)|0;
   $arrayidx221$us$2 = (((($cod_info)) + 5212|0) + ($add220$us$2)|0);
   HEAP8[$arrayidx221$us$2>>0] = $conv218$us$2;
   HEAPF32[$incdec$ptr222$us$1>>2] = $conv213$us$2;
   $62 = (($j$2204) + ($38))|0;
   $ath_over$3$lcssa = $ath_over$4$us$2;$j$3$lcssa = $62;
  } else {
   $cmp166 = $mul132 < 0.0;
   $inc169 = $cmp166&1;
   $ath_over$4 = (($inc169) + ($ath_over$2203))|0;
   $cmp171 = $mul132 > 0.0;
   $cmp175 = $mul132 > 2.2204460492503131E-16;
   $mul132$rh2142$0 = $cmp175 ? $mul132 : 2.2204460492503131E-16;
   $rh3143$0 = $cmp171 ? 0.0 : $mul132$rh2142$0;
   $arrayidx185 = (((($ratio)) + 332|0) + (($sfb$0207*12)|0)|0);
   $29 = +HEAPF32[$arrayidx185>>2];
   $cmp186 = $29 > 9.999999960041972E-13;
   $cmp200 = $rh3143$0 < 0.0;
   $30 = $cmp186 & $cmp200;
   $31 = $rh3143$0;
   $conv205 = $30 ? 0.0 : $31;
   $cmp206 = $conv205 > 2.2204460492503131E-16;
   $cond212 = $cmp206 ? $conv205 : 2.2204460492503131E-16;
   $conv213 = $cond212;
   $add214 = $conv213 + 9.9999998245167004E-15;
   $cmp215 = $add214 < 0.0;
   $conv218 = $cmp215&1;
   $arrayidx221 = (((($cod_info)) + 5212|0) + ($gsfb$1205)|0);
   HEAP8[$arrayidx221>>0] = $conv218;
   $incdec$ptr222 = ((($pxmin$addr$1209)) + 4|0);
   HEAPF32[$pxmin$addr$1209>>2] = $conv213;
   $ath_over$4$1 = (($inc169) + ($ath_over$4))|0;
   $arrayidx185$1 = (((((($ratio)) + 332|0) + (($sfb$0207*12)|0)|0)) + 4|0);
   $32 = +HEAPF32[$arrayidx185$1>>2];
   $cmp186$1 = $32 > 9.999999960041972E-13;
   $cmp200$1 = $rh3143$0 < 0.0;
   $33 = $cmp186$1 & $cmp200$1;
   $34 = $rh3143$0;
   $conv205$1 = $33 ? 0.0 : $34;
   $cmp206$1 = $conv205$1 > 2.2204460492503131E-16;
   $cond212$1 = $cmp206$1 ? $conv205$1 : 2.2204460492503131E-16;
   $conv213$1 = $cond212$1;
   $add214$1 = $conv213$1 + 9.9999998245167004E-15;
   $cmp215$1 = $add214$1 < 0.0;
   $conv218$1 = $cmp215$1&1;
   $add220$1 = (($gsfb$1205) + 1)|0;
   $arrayidx221$1 = (((($cod_info)) + 5212|0) + ($add220$1)|0);
   HEAP8[$arrayidx221$1>>0] = $conv218$1;
   $incdec$ptr222$1 = ((($pxmin$addr$1209)) + 8|0);
   HEAPF32[$incdec$ptr222>>2] = $conv213$1;
   $ath_over$4$2 = (($inc169) + ($ath_over$4$1))|0;
   $arrayidx185$2 = (((((($ratio)) + 332|0) + (($sfb$0207*12)|0)|0)) + 8|0);
   $35 = +HEAPF32[$arrayidx185$2>>2];
   $cmp186$2 = $35 > 9.999999960041972E-13;
   $cmp200$2 = $rh3143$0 < 0.0;
   $36 = $cmp186$2 & $cmp200$2;
   $37 = $rh3143$0;
   $conv205$2 = $36 ? 0.0 : $37;
   $cmp206$2 = $conv205$2 > 2.2204460492503131E-16;
   $cond212$2 = $cmp206$2 ? $conv205$2 : 2.2204460492503131E-16;
   $conv213$2 = $cond212$2;
   $add214$2 = $conv213$2 + 9.9999998245167004E-15;
   $cmp215$2 = $add214$2 < 0.0;
   $conv218$2 = $cmp215$2&1;
   $add220$2 = (($gsfb$1205) + 2)|0;
   $arrayidx221$2 = (((($cod_info)) + 5212|0) + ($add220$2)|0);
   HEAP8[$arrayidx221$2>>0] = $conv218$2;
   HEAPF32[$incdec$ptr222$1>>2] = $conv213$2;
   $ath_over$3$lcssa = $ath_over$4$2;$j$3$lcssa = $j$2204;
  }
  $pxmin$addr$2$lcssa = ((($pxmin$addr$1209)) + 12|0);
  $43 = HEAP32[$use_temporal_masking_effect>>2]|0;
  $tobool = ($43|0)==(0);
  if (!($tobool)) {
   $44 = +HEAPF32[$pxmin$addr$1209>>2];
   $arrayidx228 = ((($pxmin$addr$1209)) + 4|0);
   $45 = +HEAPF32[$arrayidx228>>2];
   $cmp229 = $44 > $45;
   if ($cmp229) {
    $sub234 = $44 - $45;
    $46 = HEAP32[$cd_psy>>2]|0;
    $decay = ((($46)) + 6496|0);
    $47 = +HEAPF32[$decay>>2];
    $mul235 = $47 * $sub234;
    $add237 = $mul235 + $45;
    HEAPF32[$arrayidx228>>2] = $add237;
    $49 = $add237;
   } else {
    $49 = $45;
   }
   $arrayidx240 = ((($pxmin$addr$1209)) + 8|0);
   $48 = +HEAPF32[$arrayidx240>>2];
   $cmp241 = $49 > $48;
   if ($cmp241) {
    $sub246 = $49 - $48;
    $50 = HEAP32[$cd_psy>>2]|0;
    $decay248 = ((($50)) + 6496|0);
    $51 = +HEAPF32[$decay248>>2];
    $mul249 = $51 * $sub246;
    $add251 = $mul249 + $48;
    HEAPF32[$arrayidx240>>2] = $add251;
   }
  }
  $inc255 = (($sfb$0207) + 1)|0;
  $add256 = (($gsfb$1205) + 3)|0;
  $52 = HEAP32[$psymax>>2]|0;
  $cmp119 = ($add256|0)<($52|0);
  if ($cmp119) {
   $ath_over$2203 = $ath_over$3$lcssa;$gsfb$1205 = $add256;$j$2204 = $j$3$lcssa;$pxmin$addr$1209 = $pxmin$addr$2$lcssa;$sfb$0207 = $inc255;
  } else {
   $ath_over$2$lcssa = $ath_over$3$lcssa;
   break;
  }
 }
 return ($ath_over$2$lcssa|0);
}
function _calc_noise($cod_info,$l3_xmin,$distort,$res,$prev_noise) {
 $cod_info = $cod_info|0;
 $l3_xmin = $l3_xmin|0;
 $distort = $distort|0;
 $res = $res|0;
 $prev_noise = $prev_noise|0;
 var $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0, $2 = 0, $20 = 0.0, $21 = 0, $22 = 0.0, $23 = 0.0, $24 = 0, $25 = 0.0;
 var $26 = 0, $27 = 0, $28 = 0.0, $29 = 0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0.0, $9 = 0, $add = 0, $add$i = 0.0, $add11 = 0, $add17 = 0, $add2 = 0, $add23$i = 0.0, $add28 = 0, $add35$i = 0.0, $add5$i = 0.0, $add55$i = 0.0, $add62 = 0.0, $add68$i = 0.0, $add69 = 0.0, $add83 = 0, $add84 = 0.0, $arraydecay = 0, $arrayidx = 0;
 var $arrayidx$i = 0, $arrayidx13 = 0, $arrayidx15 = 0, $arrayidx16$i = 0, $arrayidx17$i = 0, $arrayidx18 = 0, $arrayidx18$i = 0, $arrayidx2$i = 0, $arrayidx25$i = 0, $arrayidx28$i = 0, $arrayidx29$i = 0, $arrayidx3 = 0, $arrayidx37 = 0, $arrayidx39 = 0, $arrayidx4 = 0, $arrayidx44$i = 0, $arrayidx47$i = 0, $arrayidx48$i = 0, $arrayidx53 = 0, $arrayidx57$i = 0;
 var $arrayidx60$i = 0, $arrayidx61$i = 0, $arrayidx8 = 0, $arrayidx9$i = 0, $big_values$i = 0, $call47 = 0.0, $cmp = 0, $cmp$i = 0, $cmp24 = 0, $cmp29 = 0, $cmp42 = 0, $cmp6$i = 0, $cmp64 = 0, $cmp71 = 0, $cmp86 = 0, $cmp87 = 0, $cmp9 = 0, $cond = 0, $cond46 = 0.0, $cond91 = 0.0;
 var $conv = 0.0, $conv20$i = 0.0, $conv32$i = 0.0, $conv49 = 0.0, $conv52$i = 0.0, $conv65$i = 0.0, $conv68 = 0.0, $conv70 = 0, $count1$i = 0, $dec$i = 0, $dec11$i = 0, $dec39$i = 0, $distort$addr$097 = 0, $distort_$0$ph = 0.0, $div = 0.0, $fabsf$i = 0.0, $fabsf56$i = 0.0, $fabsf57$i = 0.0, $fabsf58$i = 0.0, $global_gain = 0;
 var $inc = 0, $inc$i = 0, $inc21$i = 0, $inc3$i = 0, $inc33$i = 0, $inc53$i = 0, $inc66$i = 0, $inc92 = 0, $incdec$ptr = 0, $incdec$ptr5684 = 0, $incdec$ptr6 = 0, $ix01$i = 0, $j$061$i = 0, $j$088 = 0, $j$1$lcssa$i = 0, $j$1$ph = 0, $j$166$i = 0, $j$180 = 0, $j$272$i = 0, $j$3$i = 0;
 var $l$0 = 0, $l$0$shr = 0, $l$addr$063$i = 0, $l$addr$168$i = 0, $l$addr$274$i = 0, $l3_xmin$addr$098 = 0, $max_noise$0$lcssa = 0.0, $max_noise$091 = 0.0, $max_noise93 = 0, $max_nonzero_coeff = 0, $mul = 0, $mul$i = 0.0, $mul14 = 0.0, $mul22$i = 0.0, $mul34$i = 0.0, $mul4$i = 0.0, $mul41 = 0.0, $mul48 = 0.0, $mul49$i = 0.0, $mul54$i = 0.0;
 var $mul62$i = 0.0, $mul67 = 0.0, $mul67$i = 0.0, $mul81 = 0, $noise$0$ph = 0.0, $noise$062$i = 0.0, $noise$082 = 0.0, $noise$1$lcssa$i = 0.0, $noise$167$i = 0.0, $noise$273$i = 0.0, $noise$3$i = 0.0, $over$0$lcssa = 0, $over$093 = 0, $over$1 = 0, $over_SSD = 0, $over_count = 0, $over_noise_db$0$lcssa = 0.0, $over_noise_db$089 = 0.0, $over_noise_db$1 = 0.0, $preflag = 0;
 var $psymax = 0, $scalefac$092 = 0, $scalefac_scale = 0, $sfb$094 = 0, $shl = 0, $shr = 0, $shr31 = 0, $sub = 0, $sub27 = 0, $sub5 = 0, $tobool = 0, $tobool$i = 0, $tobool12$i = 0, $tobool1265$i = 0, $tobool40$i = 0, $tobool4071$i = 0, $tobool60$i = 0, $tobool7 = 0, $tot_noise = 0, $tot_noise_db$0$lcssa = 0.0;
 var $tot_noise_db$090 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $ix01$i = sp;
 $over_SSD = ((($res)) + 16|0);
 HEAP32[$over_SSD>>2] = 0;
 $psymax = ((($cod_info)) + 4864|0);
 $0 = HEAP32[$psymax>>2]|0;
 $cmp87 = ($0|0)>(0);
 if (!($cmp87)) {
  $max_noise$0$lcssa = -20.0;$over$0$lcssa = 0;$over_noise_db$0$lcssa = 0.0;$tot_noise_db$0$lcssa = 0.0;
  $over_count = ((($res)) + 12|0);
  HEAP32[$over_count>>2] = $over$0$lcssa;
  $tot_noise = ((($res)) + 4|0);
  HEAPF32[$tot_noise>>2] = $tot_noise_db$0$lcssa;
  HEAPF32[$res>>2] = $over_noise_db$0$lcssa;
  $max_noise93 = ((($res)) + 8|0);
  HEAPF32[$max_noise93>>2] = $max_noise$0$lcssa;
  STACKTOP = sp;return ($over$0$lcssa|0);
 }
 $arraydecay = ((($cod_info)) + 4608|0);
 $global_gain = ((($cod_info)) + 4780|0);
 $preflag = ((($cod_info)) + 4832|0);
 $scalefac_scale = ((($cod_info)) + 4836|0);
 $tobool7 = ($prev_noise|0)!=(0|0);
 $max_nonzero_coeff = ((($cod_info)) + 5208|0);
 $count1$i = ((($cod_info)) + 4776|0);
 $big_values$i = ((($cod_info)) + 4772|0);
 $arrayidx9$i = ((($ix01$i)) + 4|0);
 $distort$addr$097 = $distort;$j$088 = 0;$l3_xmin$addr$098 = $l3_xmin;$max_noise$091 = -20.0;$over$093 = 0;$over_noise_db$089 = 0.0;$scalefac$092 = $arraydecay;$sfb$094 = 0;$tot_noise_db$090 = 0.0;
 while(1) {
  $1 = HEAP32[$global_gain>>2]|0;
  $incdec$ptr = ((($scalefac$092)) + 4|0);
  $2 = HEAP32[$scalefac$092>>2]|0;
  $3 = HEAP32[$preflag>>2]|0;
  $tobool = ($3|0)==(0);
  if ($tobool) {
   $cond = 0;
  } else {
   $arrayidx = (6388 + ($sfb$094<<2)|0);
   $4 = HEAP32[$arrayidx>>2]|0;
   $cond = $4;
  }
  $add = (($cond) + ($2))|0;
  $5 = HEAP32[$scalefac_scale>>2]|0;
  $add2 = (($5) + 1)|0;
  $shl = $add << $add2;
  $sub = (($1) - ($shl))|0;
  $arrayidx3 = (((($cod_info)) + 5028|0) + ($sfb$094<<2)|0);
  $6 = HEAP32[$arrayidx3>>2]|0;
  $arrayidx4 = (((($cod_info)) + 4808|0) + ($6<<2)|0);
  $7 = HEAP32[$arrayidx4>>2]|0;
  $mul = $7 << 3;
  $sub5 = (($sub) - ($mul))|0;
  $incdec$ptr6 = ((($l3_xmin$addr$098)) + 4|0);
  $8 = +HEAPF32[$l3_xmin$addr$098>>2];
  $div = 1.0 / $8;
  $9 = (((($cod_info)) + 4872|0) + ($sfb$094<<2)|0);
  $10 = HEAP32[$9>>2]|0;
  $add11 = (($10) + ($j$088))|0;
  if ($tobool7) {
   $arrayidx8 = (((($prev_noise)) + 8|0) + ($sfb$094<<2)|0);
   $11 = HEAP32[$arrayidx8>>2]|0;
   $cmp9 = ($11|0)==($sub5|0);
   if ($cmp9) {
    $arrayidx13 = (((($prev_noise)) + 164|0) + ($sfb$094<<2)|0);
    $12 = +HEAPF32[$arrayidx13>>2];
    $mul14 = $12 * $div;
    $arrayidx15 = (((($prev_noise)) + 320|0) + ($sfb$094<<2)|0);
    $13 = +HEAPF32[$arrayidx15>>2];
    $38 = $1;$distort_$0$ph = $mul14;$j$1$ph = $add11;$noise$0$ph = $13;
    label = 25;
   } else {
    label = 8;
   }
  } else {
   label = 8;
  }
  do {
   if ((label|0) == 8) {
    label = 0;
    $add17 = (($sub5) + 116)|0;
    $arrayidx18 = (91016 + ($add17<<2)|0);
    $14 = +HEAPF32[$arrayidx18>>2];
    $shr = $10 >> 1;
    $15 = HEAP32[$max_nonzero_coeff>>2]|0;
    $cmp24 = ($add11|0)>($15|0);
    $sub27 = (($15) - ($j$088))|0;
    $cmp29 = ($sub27|0)>(-1);
    $add28 = (($sub27) + 1)|0;
    $shr31 = $add28 >> 1;
    $l$0 = $cmp29 ? $shr31 : 0;
    $l$0$shr = $cmp24 ? $l$0 : $shr;
    $16 = HEAP32[$count1$i>>2]|0;
    $cmp$i = ($j$088|0)>($16|0);
    do {
     if ($cmp$i) {
      $tobool60$i = ($l$0$shr|0)==(0);
      if ($tobool60$i) {
       $j$3$i = $j$088;$noise$3$i = 0.0;
      } else {
       $j$061$i = $j$088;$l$addr$063$i = $l$0$shr;$noise$062$i = 0.0;
       while(1) {
        $dec$i = (($l$addr$063$i) + -1)|0;
        $arrayidx$i = (($cod_info) + ($j$061$i<<2)|0);
        $17 = +HEAPF32[$arrayidx$i>>2];
        $inc$i = (($j$061$i) + 1)|0;
        $mul$i = $17 * $17;
        $add$i = $mul$i + $noise$062$i;
        $arrayidx2$i = (($cod_info) + ($inc$i<<2)|0);
        $18 = +HEAPF32[$arrayidx2$i>>2];
        $inc3$i = (($j$061$i) + 2)|0;
        $mul4$i = $18 * $18;
        $add5$i = $add$i + $mul4$i;
        $tobool$i = ($dec$i|0)==(0);
        if ($tobool$i) {
         break;
        } else {
         $j$061$i = $inc3$i;$l$addr$063$i = $dec$i;$noise$062$i = $add5$i;
        }
       }
       $34 = $l$0$shr << 1;
       $35 = (($34) + ($j$088))|0;
       $j$3$i = $35;$noise$3$i = $add5$i;
      }
     } else {
      $19 = HEAP32[$big_values$i>>2]|0;
      $cmp6$i = ($j$088|0)>($19|0);
      if (!($cmp6$i)) {
       $tobool4071$i = ($l$0$shr|0)==(0);
       if ($tobool4071$i) {
        $j$3$i = $j$088;$noise$3$i = 0.0;
        break;
       } else {
        $j$272$i = $j$088;$l$addr$274$i = $l$0$shr;$noise$273$i = 0.0;
       }
       while(1) {
        $dec39$i = (($l$addr$274$i) + -1)|0;
        $arrayidx44$i = (($cod_info) + ($j$272$i<<2)|0);
        $28 = +HEAPF32[$arrayidx44$i>>2];
        $fabsf$i = (+Math_abs((+$28)));
        $arrayidx47$i = (((($cod_info)) + 2304|0) + ($j$272$i<<2)|0);
        $29 = HEAP32[$arrayidx47$i>>2]|0;
        $arrayidx48$i = (24324 + ($29<<2)|0);
        $30 = +HEAPF32[$arrayidx48$i>>2];
        $mul49$i = $30 * $14;
        $conv52$i = $fabsf$i - $mul49$i;
        $inc53$i = (($j$272$i) + 1)|0;
        $mul54$i = $conv52$i * $conv52$i;
        $add55$i = $mul54$i + $noise$273$i;
        $arrayidx57$i = (($cod_info) + ($inc53$i<<2)|0);
        $31 = +HEAPF32[$arrayidx57$i>>2];
        $fabsf56$i = (+Math_abs((+$31)));
        $arrayidx60$i = (((($cod_info)) + 2304|0) + ($inc53$i<<2)|0);
        $32 = HEAP32[$arrayidx60$i>>2]|0;
        $arrayidx61$i = (24324 + ($32<<2)|0);
        $33 = +HEAPF32[$arrayidx61$i>>2];
        $mul62$i = $33 * $14;
        $conv65$i = $fabsf56$i - $mul62$i;
        $inc66$i = (($j$272$i) + 2)|0;
        $mul67$i = $conv65$i * $conv65$i;
        $add68$i = $add55$i + $mul67$i;
        $tobool40$i = ($dec39$i|0)==(0);
        if ($tobool40$i) {
         break;
        } else {
         $j$272$i = $inc66$i;$l$addr$274$i = $dec39$i;$noise$273$i = $add68$i;
        }
       }
       $36 = $l$0$shr << 1;
       $37 = (($36) + ($j$088))|0;
       $j$3$i = $37;$noise$3$i = $add68$i;
       break;
      }
      HEAPF32[$ix01$i>>2] = 0.0;
      HEAPF32[$arrayidx9$i>>2] = $14;
      $tobool1265$i = ($l$0$shr|0)==(0);
      if ($tobool1265$i) {
       $j$1$lcssa$i = $j$088;$noise$1$lcssa$i = 0.0;
      } else {
       $j$166$i = $j$088;$l$addr$168$i = $l$0$shr;$noise$167$i = 0.0;
       while(1) {
        $dec11$i = (($l$addr$168$i) + -1)|0;
        $arrayidx16$i = (($cod_info) + ($j$166$i<<2)|0);
        $20 = +HEAPF32[$arrayidx16$i>>2];
        $fabsf57$i = (+Math_abs((+$20)));
        $arrayidx17$i = (((($cod_info)) + 2304|0) + ($j$166$i<<2)|0);
        $21 = HEAP32[$arrayidx17$i>>2]|0;
        $arrayidx18$i = (($ix01$i) + ($21<<2)|0);
        $22 = +HEAPF32[$arrayidx18$i>>2];
        $conv20$i = $fabsf57$i - $22;
        $inc21$i = (($j$166$i) + 1)|0;
        $mul22$i = $conv20$i * $conv20$i;
        $add23$i = $mul22$i + $noise$167$i;
        $arrayidx25$i = (($cod_info) + ($inc21$i<<2)|0);
        $23 = +HEAPF32[$arrayidx25$i>>2];
        $fabsf58$i = (+Math_abs((+$23)));
        $arrayidx28$i = (((($cod_info)) + 2304|0) + ($inc21$i<<2)|0);
        $24 = HEAP32[$arrayidx28$i>>2]|0;
        $arrayidx29$i = (($ix01$i) + ($24<<2)|0);
        $25 = +HEAPF32[$arrayidx29$i>>2];
        $conv32$i = $fabsf58$i - $25;
        $inc33$i = (($j$166$i) + 2)|0;
        $mul34$i = $conv32$i * $conv32$i;
        $add35$i = $add23$i + $mul34$i;
        $tobool12$i = ($dec11$i|0)==(0);
        if ($tobool12$i) {
         break;
        } else {
         $j$166$i = $inc33$i;$l$addr$168$i = $dec11$i;$noise$167$i = $add35$i;
        }
       }
       $26 = $l$0$shr << 1;
       $27 = (($26) + ($j$088))|0;
       $j$1$lcssa$i = $27;$noise$1$lcssa$i = $add35$i;
      }
      $j$3$i = $j$1$lcssa$i;$noise$3$i = $noise$1$lcssa$i;
     }
    } while(0);
    if ($tobool7) {
     $arrayidx39 = (((($prev_noise)) + 164|0) + ($sfb$094<<2)|0);
     $arrayidx37 = (((($prev_noise)) + 8|0) + ($sfb$094<<2)|0);
     HEAP32[$arrayidx37>>2] = $sub5;
     HEAPF32[$arrayidx39>>2] = $noise$3$i;
    }
    $mul41 = $noise$3$i * $div;
    $cmp42 = $mul41 > 9.9999996826552254E-21;
    $cond46 = $cmp42 ? $mul41 : 9.9999996826552254E-21;
    $call47 = (+_fast_log2($cond46));
    $conv = $call47;
    $mul48 = $conv * 0.30102999566398114;
    $conv49 = $mul48;
    if ($tobool7) {
     $arrayidx53 = (((($prev_noise)) + 320|0) + ($sfb$094<<2)|0);
     HEAPF32[$arrayidx53>>2] = $conv49;
     $$pre = HEAP32[$global_gain>>2]|0;
     $38 = $$pre;$distort_$0$ph = $mul41;$j$1$ph = $j$3$i;$noise$0$ph = $conv49;
     label = 25;
     break;
    } else {
     HEAPF32[$distort$addr$097>>2] = $mul41;
     $j$180 = $j$3$i;$noise$082 = $conv49;
     break;
    }
   }
  } while(0);
  if ((label|0) == 25) {
   label = 0;
   HEAPF32[$distort$addr$097>>2] = $distort_$0$ph;
   HEAP32[$prev_noise>>2] = $38;
   $j$180 = $j$1$ph;$noise$082 = $noise$0$ph;
  }
  $incdec$ptr5684 = ((($distort$addr$097)) + 4|0);
  $add62 = $noise$082 + $tot_noise_db$090;
  $cmp64 = $noise$082 > 0.0;
  if ($cmp64) {
   $mul67 = $noise$082 * 10.0;
   $conv68 = $mul67;
   $add69 = $conv68 + 0.5;
   $conv70 = (~~(($add69)));
   $cmp71 = ($conv70|0)>(1);
   $39 = Math_imul($conv70, $conv70)|0;
   $mul81 = $cmp71 ? $39 : 1;
   $40 = HEAP32[$over_SSD>>2]|0;
   $add83 = (($40) + ($mul81))|0;
   HEAP32[$over_SSD>>2] = $add83;
   $inc = (($over$093) + 1)|0;
   $add84 = $noise$082 + $over_noise_db$089;
   $over$1 = $inc;$over_noise_db$1 = $add84;
  } else {
   $over$1 = $over$093;$over_noise_db$1 = $over_noise_db$089;
  }
  $cmp86 = $max_noise$091 > $noise$082;
  $cond91 = $cmp86 ? $max_noise$091 : $noise$082;
  $inc92 = (($sfb$094) + 1)|0;
  $41 = HEAP32[$psymax>>2]|0;
  $cmp = ($inc92|0)<($41|0);
  if ($cmp) {
   $distort$addr$097 = $incdec$ptr5684;$j$088 = $j$180;$l3_xmin$addr$098 = $incdec$ptr6;$max_noise$091 = $cond91;$over$093 = $over$1;$over_noise_db$089 = $over_noise_db$1;$scalefac$092 = $incdec$ptr;$sfb$094 = $inc92;$tot_noise_db$090 = $add62;
  } else {
   $max_noise$0$lcssa = $cond91;$over$0$lcssa = $over$1;$over_noise_db$0$lcssa = $over_noise_db$1;$tot_noise_db$0$lcssa = $add62;
   break;
  }
 }
 $over_count = ((($res)) + 12|0);
 HEAP32[$over_count>>2] = $over$0$lcssa;
 $tot_noise = ((($res)) + 4|0);
 HEAPF32[$tot_noise>>2] = $tot_noise_db$0$lcssa;
 HEAPF32[$res>>2] = $over_noise_db$0$lcssa;
 $max_noise93 = ((($res)) + 8|0);
 HEAPF32[$max_noise93>>2] = $max_noise$0$lcssa;
 STACKTOP = sp;return ($over$0$lcssa|0);
}
function _set_frame_pinfo($gfc,$ratio) {
 $gfc = $gfc|0;
 $ratio = $ratio|0;
 var $$pre = 0, $$pre226$i = 0, $$pre227$i = 0, $$pre47 = 0, $$pre48 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0.0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0.0;
 var $16 = 0.0, $17 = 0.0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0.0, $21 = 0, $22 = 0.0, $23 = 0, $24 = 0.0, $25 = 0.0, $26 = 0, $27 = 0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0, $33 = 0.0;
 var $34 = 0.0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0, $47 = 0.0, $48 = 0, $49 = 0, $5 = 0, $50 = 0.0, $51 = 0;
 var $52 = 0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0, $57 = 0.0, $58 = 0, $59 = 0, $6 = 0, $60 = 0.0, $61 = 0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0, $66 = 0.0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0.0, $71 = 0, $72 = 0.0, $73 = 0.0, $74 = 0, $75 = 0, $76 = 0.0, $77 = 0.0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0.0, $86 = 0.0, $87 = 0.0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0.0, $93 = 0.0, $94 = 0, $95 = 0, $96 = 0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $ATH$i = 0, $ATHonly$i = 0, $ATHshort$i = 0, $add$i = 0, $add$us$i = 0, $add124$i = 0, $add140$us$i = 0.0, $add140$us$i$us = 0.0;
 var $add164$i$1 = 0, $add164$i$2 = 0, $add164$i$us$1 = 0, $add164$i$us$2 = 0, $add164$us$i = 0, $add164$us$i$us = 0, $add22$i = 0.0, $add22$us$i = 0.0, $add264$i = 0, $arrayidx$phi$trans$insert$i = 0, $arrayidx12 = 0, $arrayidx121$phi$trans$insert$i = 0, $arrayidx125$i = 0, $arrayidx136$us$i = 0, $arrayidx136$us$i$us = 0, $arrayidx14$i = 0, $arrayidx14$us$i = 0, $arrayidx165$i$1 = 0, $arrayidx165$i$2 = 0, $arrayidx165$i$us = 0;
 var $arrayidx165$i$us$1 = 0, $arrayidx165$i$us$2 = 0, $arrayidx165$us$i = 0, $arrayidx165$us$i$us = 0, $arrayidx166$i$1 = 0, $arrayidx166$i$2 = 0, $arrayidx166$i$us = 0, $arrayidx166$i$us$1 = 0, $arrayidx166$i$us$2 = 0, $arrayidx166$us$i = 0, $arrayidx166$us$i$us = 0, $arrayidx168$i$1 = 0, $arrayidx168$i$2 = 0, $arrayidx168$i$us = 0, $arrayidx168$i$us$1 = 0, $arrayidx168$i$us$2 = 0, $arrayidx168$us$i = 0, $arrayidx168$us$i$us = 0, $arrayidx178$i$1 = 0, $arrayidx178$i$2 = 0;
 var $arrayidx178$i$us = 0, $arrayidx178$i$us$1 = 0, $arrayidx178$i$us$2 = 0, $arrayidx178$us$i = 0, $arrayidx178$us$i$us = 0, $arrayidx182$i$us = 0, $arrayidx182$i$us$1 = 0, $arrayidx182$i$us$2 = 0, $arrayidx182$us$i$us = 0, $arrayidx19$i = 0, $arrayidx19$us$i = 0, $arrayidx20 = 0, $arrayidx201$i$us = 0, $arrayidx201$i$us$1 = 0, $arrayidx201$i$us$2 = 0, $arrayidx201$us$i$us = 0, $arrayidx205$i = 0, $arrayidx227$i = 0, $arrayidx227$i$1 = 0, $arrayidx227$i$2 = 0;
 var $arrayidx227$i$us = 0, $arrayidx227$i$us$1 = 0, $arrayidx227$i$us$2 = 0, $arrayidx227$us$i = 0, $arrayidx227$us$i$us = 0, $arrayidx228$i = 0, $arrayidx228$i$1 = 0, $arrayidx228$i$2 = 0, $arrayidx228$i$us = 0, $arrayidx228$i$us$1 = 0, $arrayidx228$i$us$2 = 0, $arrayidx228$us$i = 0, $arrayidx228$us$i$us = 0, $arrayidx236$i = 0, $arrayidx236$i$1 = 0, $arrayidx236$i$2 = 0, $arrayidx236$i$us = 0, $arrayidx236$i$us$1 = 0, $arrayidx236$i$us$2 = 0, $arrayidx236$us$i = 0;
 var $arrayidx236$us$i$us = 0, $arrayidx240$i = 0, $arrayidx240$i$1 = 0, $arrayidx240$i$2 = 0, $arrayidx240$i$us = 0, $arrayidx240$i$us$1 = 0, $arrayidx240$i$us$2 = 0, $arrayidx240$us$i = 0, $arrayidx240$us$i$us = 0, $arrayidx25 = 0, $arrayidx263$i = 0, $arrayidx267$i = 0, $arrayidx271$i = 0, $arrayidx274$i = 0, $arrayidx28$i = 0, $arrayidx28$us$i = 0, $arrayidx280$i = 0, $arrayidx286$i = 0, $arrayidx29$i = 0, $arrayidx29$us$i = 0;
 var $arrayidx292$i = 0, $arrayidx296$i = 0, $arrayidx31$i = 0, $arrayidx31$us$i = 0, $arrayidx40$i = 0, $arrayidx40$us$i = 0, $arrayidx43$i = 0, $arrayidx43$us$i = 0, $arrayidx5 = 0, $arrayidx55$i = 0, $arrayidx55$us$i = 0, $arrayidx58$i = 0, $arrayidx58$us$i = 0, $arrayidx74$i = 0, $arrayidx74$us$i = 0, $arrayidx78$i = 0, $arrayidx78$us$i = 0, $arrayidx85$us$i = 0, $arrayidx98$i = 0, $arrayidx98$us$i = 0;
 var $block_type$i = 0, $ch$036 = 0, $channels_out = 0, $cmp = 0, $cmp$i = 0, $cmp117203$i = 0, $cmp13 = 0, $cmp132195$i = 0, $cmp148$us$i = 0, $cmp148$us$i$us = 0, $cmp16207$i = 0, $cmp16207$us$i = 0, $cmp183$i$us = 0, $cmp183$i$us$1 = 0, $cmp183$i$us$2 = 0, $cmp183$us$i$us = 0, $cmp206$i = 0, $cmp206$i$us = 0, $cmp206$i$us$1 = 0, $cmp206$i$us$2 = 0;
 var $cmp206$us$i = 0, $cmp206$us$i$us = 0, $cmp237$i = 0, $cmp3 = 0, $cmp335 = 0, $cmp38 = 0, $cmp44$i = 0, $cmp44$us$i = 0, $cmp59$i = 0, $cmp59$us$i = 0, $cmp7 = 0, $cmp7$i = 0, $cmp81$us$i = 0, $cmp9 = 0, $cmp9212$i = 0, $cmp933 = 0, $cmp95$i = 0, $cmp95$us$i = 0, $cond156$us$i = 0.0, $cond156$us$i$us = 0.0;
 var $conv$i = 0.0, $conv101$i = 0.0, $conv101$us$i = 0.0, $conv145$i = 0.0, $conv147$us$i = 0.0, $conv147$us$i$us = 0.0, $conv157$us$i = 0.0, $conv157$us$i$us = 0.0, $conv159$us$i = 0.0, $conv159$us$i$us = 0.0, $conv172$i$1 = 0.0, $conv172$i$2 = 0.0, $conv172$i$us = 0.0, $conv172$i$us$1 = 0.0, $conv172$i$us$2 = 0.0, $conv172$us$i = 0.0, $conv172$us$i$us = 0.0, $conv221$i = 0.0, $conv221$i$us = 0.0, $conv221$i$us$1 = 0.0;
 var $conv221$i$us$2 = 0.0, $conv221$us$i = 0.0, $conv221$us$i$us = 0.0, $conv229$i = 0.0, $conv229$i$1 = 0.0, $conv229$i$2 = 0.0, $conv229$i$us = 0.0, $conv229$i$us$1 = 0.0, $conv229$i$us$2 = 0.0, $conv229$us$i = 0.0, $conv229$us$i$us = 0.0, $conv23$i = 0.0, $conv23$us$i = 0.0, $conv241$i = 0.0, $conv241$i$1 = 0.0, $conv241$i$2 = 0.0, $conv241$i$us = 0.0, $conv241$i$us$1 = 0.0, $conv241$i$us$2 = 0.0, $conv241$us$i = 0.0;
 var $conv241$us$i$us = 0.0, $conv243$i = 0.0, $conv243$i$1 = 0.0, $conv243$i$2 = 0.0, $conv243$i$us = 0.0, $conv243$i$us$1 = 0.0, $conv243$i$us$2 = 0.0, $conv243$us$i = 0.0, $conv243$us$i$us = 0.0, $conv25$i = 0.0, $conv25$us$i = 0.0, $conv275$i = 0.0, $conv281$i = 0.0, $conv287$i = 0.0, $conv35$i = 0.0, $conv35$us$i = 0.0, $conv70$i = 0.0, $conv70$us$i = 0.0, $conv86$us$i = 0.0, $conv88$us$i = 0.0;
 var $conv99$i = 0.0, $conv99$us$i = 0.0, $div$i = 0.0, $div$us$i = 0.0, $div146$us$i = 0.0, $div146$us$i$us = 0.0, $div171$i$1 = 0.0, $div171$i$2 = 0.0, $div171$i$us = 0.0, $div171$i$us$1 = 0.0, $div171$i$us$2 = 0.0, $div171$us$i = 0.0, $div171$us$i$us = 0.0, $div190$i$us = 0.0, $div190$i$us$1 = 0.0, $div190$i$us$2 = 0.0, $div190$us$i$us = 0.0, $div34$i = 0.0, $div34$us$i = 0.0, $div52$$i = 0.0;
 var $div52$$us$i = 0.0, $div52$i = 0.0, $div52$us$i = 0.0, $en0$0$lcssa$i = 0.0, $en0$0$lcssa$us$i = 0.0, $en0$0209$i = 0.0, $en0$0209$us$i = 0.0, $en0$1$i = 0.0, $en0$1$us$i = 0.0, $en0$2198$us$i = 0.0, $en0$2198$us$i$us = 0.0, $en0$4$i$us = 0.0, $en0$4$i$us$1 = 0.0, $en0$4$i$us$2 = 0.0, $en0$4$us$i$us = 0.0, $exitcond219$i = 0, $exitcond219$i$us = 0, $exitcond220$i = 0, $exitcond220$i$us = 0, $exitcond221$i = 0;
 var $exitcond222$i = 0, $exitcond223$i = 0, $exitcond224$i = 0, $exitcond225$i = 0, $global_gain$i = 0, $gr$039 = 0, $i$0201$us$i = 0, $i$0201$us$i$us = 0, $inc = 0, $inc$i = 0, $inc$us$i = 0, $inc141$us$i = 0, $inc141$us$i$us = 0, $inc143$us$i = 0, $inc143$us$i$us = 0, $inc253$i = 0, $inc253$i$1 = 0, $inc253$i$us = 0, $inc253$i$us$1 = 0, $inc253$us$i = 0;
 var $inc253$us$i$us = 0, $inc255$us$i = 0, $inc255$us$i$us = 0, $inc30 = 0, $inc33 = 0, $j$0$lcssa$i = 0, $j$0213$i = 0, $j$0213$us$i = 0, $j$1$lcssa$i = 0, $j$1$lcssa$us$i = 0, $j$1208$i = 0, $j$1208$us$i = 0, $j$2204$i = 0, $j$3$lcssa$i = 0, $j$3200$us$i = 0, $j$3200$us$i$us = 0, $j$4196$us$i = 0, $j$4196$us$i$us = 0, $l$0197$us$i = 0, $l$0197$us$i$us = 0;
 var $l3_xmin$i = 0, $max_noise$i = 0, $mixed_block_flag$i = 0, $mode_gr = 0, $mul$i = 0.0, $mul$us$i = 0.0, $mul100$i = 0.0, $mul100$us$i = 0.0, $mul139$us$i = 0.0, $mul139$us$i$us = 0.0, $mul158$us$i = 0.0, $mul158$us$i$us = 0.0, $mul163$i = 0, $mul167$i$1 = 0.0, $mul167$i$2 = 0.0, $mul167$i$us = 0.0, $mul167$i$us$1 = 0.0, $mul167$i$us$2 = 0.0, $mul167$us$i = 0.0, $mul167$us$i$us = 0.0;
 var $mul169$i$1 = 0.0, $mul169$i$2 = 0.0, $mul169$i$us = 0.0, $mul169$i$us$1 = 0.0, $mul169$i$us$2 = 0.0, $mul169$us$i = 0.0, $mul169$us$i$us = 0.0, $mul202$$i = 0.0, $mul202$$i$us = 0.0, $mul202$$i$us$1 = 0.0, $mul202$$i$us$2 = 0.0, $mul202$$us$i = 0.0, $mul202$$us$i$us = 0.0, $mul202$i$us = 0.0, $mul202$i$us$1 = 0.0, $mul202$i$us$2 = 0.0, $mul202$us$i$us = 0.0, $mul220$i = 0.0, $mul220$i$us = 0.0, $mul220$i$us$1 = 0.0;
 var $mul220$i$us$2 = 0.0, $mul220$us$i = 0.0, $mul220$us$i$us = 0.0, $mul230$i = 0.0, $mul230$i$1 = 0.0, $mul230$i$2 = 0.0, $mul230$i$us = 0.0, $mul230$i$us$1 = 0.0, $mul230$i$us$2 = 0.0, $mul230$us$i = 0.0, $mul230$us$i$us = 0.0, $mul24$i = 0.0, $mul24$us$i = 0.0, $mul242$i = 0.0, $mul242$i$1 = 0.0, $mul242$i$2 = 0.0, $mul242$i$us = 0.0, $mul242$i$us$1 = 0.0, $mul242$i$us$2 = 0.0, $mul242$us$i = 0.0;
 var $mul242$us$i$us = 0.0, $mul276$i = 0.0, $mul282$i = 0.0, $mul288$i = 0.0, $mul30$i = 0.0, $mul30$us$i = 0.0, $mul32$i = 0.0, $mul32$us$i = 0.0, $mul56$$i = 0.0, $mul56$$us$i = 0.0, $mul56$i = 0.0, $mul56$us$i = 0.0, $mul69$i = 0.0, $mul69$us$i = 0.0, $mul87$us$i = 0.0, $noise$i = 0, $over_SSD$i = 0, $over_count$i = 0, $part2_3_length$i = 0, $part2_length$i = 0;
 var $pinfo$i = 0, $preflag$i = 0, $scalefac = 0, $scalefac_sav = 0, $scalefac_scale$i = 0, $sfb$0$lcssa$i = 0, $sfb$0214$i = 0, $sfb$0214$us$i = 0, $sfb$034 = 0, $sfb$1206$i = 0, $sfb2$0229$i = 0, $sfb2$1205$i = 0, $sfb2$2$lcssa$i = 0, $sfb2$2202$us$i = 0, $sfb2$2202$us$i$us = 0, $sfb_lmax = 0, $sfb_lmax$i = 0, $sfb_smin$i = 0, $sub$i = 0, $sub$us$i = 0;
 var $sub107$i = 0.0, $sub107$us$i = 0.0, $sub126$i = 0, $sub251$i = 0.0, $sub251$i$1 = 0.0, $sub251$i$2 = 0.0, $sub251$i$us = 0.0, $sub251$i$us$1 = 0.0, $sub251$i$us$2 = 0.0, $sub251$us$i = 0.0, $sub251$us$i$us = 0.0, $tmp31 = 0, $tobool$i = 0, $tobool194$i = 0, $tobool195$i$us = 0, $tobool195$us$i$us = 0, $tobool47$i = 0, $tobool47$us$i = 0, $tobool79$i = 0, $tot_noise$i = 0;
 var $xfsf$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 496|0;
 $l3_xmin$i = sp + 340|0;
 $xfsf$i = sp + 184|0;
 $noise$i = sp + 160|0;
 $scalefac_sav = sp;
 $mode_gr = ((($gfc)) + 76|0);
 $0 = HEAP32[$mode_gr>>2]|0;
 $cmp38 = ($0|0)>(0);
 if (!($cmp38)) {
  STACKTOP = sp;return;
 }
 $channels_out = ((($gfc)) + 72|0);
 $pinfo$i = ((($gfc)) + 85804|0);
 $ATHonly$i = ((($gfc)) + 212|0);
 $ATH$i = ((($gfc)) + 85796|0);
 $arrayidx$phi$trans$insert$i = ((($gfc)) + 21360|0);
 $ATHshort$i = ((($gfc)) + 216|0);
 $over_count$i = ((($noise$i)) + 12|0);
 $max_noise$i = ((($noise$i)) + 8|0);
 $tot_noise$i = ((($noise$i)) + 4|0);
 $over_SSD$i = ((($noise$i)) + 16|0);
 $$pre = HEAP32[$channels_out>>2]|0;
 $1 = $$pre;$104 = $0;$gr$039 = 0;
 while(1) {
  $cmp335 = ($1|0)>(0);
  if ($cmp335) {
   $cmp7 = ($gr$039|0)==(1);
   $ch$036 = 0;
   while(1) {
    $arrayidx5 = ((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0);
    $scalefac = ((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4608|0);
    _memcpy(($scalefac_sav|0),($scalefac|0),156)|0;
    if ($cmp7) {
     $sfb_lmax = (((((($gfc)) + 10808|0) + (($ch$036*5252)|0)|0)) + 4848|0);
     $2 = HEAP32[$sfb_lmax>>2]|0;
     $cmp933 = ($2|0)>(0);
     if ($cmp933) {
      $106 = $2;$sfb$034 = 0;
      while(1) {
       $arrayidx12 = ((((((($gfc)) + 10808|0) + (($ch$036*5252)|0)|0)) + 4608|0) + ($sfb$034<<2)|0);
       $3 = HEAP32[$arrayidx12>>2]|0;
       $cmp13 = ($3|0)<(0);
       if ($cmp13) {
        $arrayidx20 = ((((((($gfc)) + 304|0) + (($ch$036*5252)|0)|0)) + 4608|0) + ($sfb$034<<2)|0);
        $4 = HEAP32[$arrayidx20>>2]|0;
        HEAP32[$arrayidx12>>2] = $4;
        $$pre47 = HEAP32[$sfb_lmax>>2]|0;
        $5 = $$pre47;
       } else {
        $5 = $106;
       }
       $inc = (($sfb$034) + 1)|0;
       $cmp9 = ($inc|0)<($5|0);
       if ($cmp9) {
        $106 = $5;$sfb$034 = $inc;
       } else {
        break;
       }
      }
     }
    }
    $arrayidx25 = ((($ratio) + (($gr$039*976)|0)|0) + (($ch$036*488)|0)|0);
    $scalefac_scale$i = ((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4836|0);
    $6 = HEAP32[$scalefac_scale$i>>2]|0;
    $cmp$i = ($6|0)==(0);
    $conv$i = $cmp$i ? 0.5 : 1.0;
    (_calc_xmin($gfc,$arrayidx25,$arrayidx5,$l3_xmin$i)|0);
    (_calc_noise($arrayidx5,$l3_xmin$i,$xfsf$i,$noise$i,0)|0);
    $sfb_lmax$i = ((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4848|0);
    $7 = HEAP32[$sfb_lmax$i>>2]|0;
    $block_type$i = ((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4788|0);
    $8 = HEAP32[$block_type$i>>2]|0;
    $cmp7$i = ($8|0)==(2);
    if ($cmp7$i) {
     label = 12;
    } else {
     $mixed_block_flag$i = ((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4792|0);
     $9 = HEAP32[$mixed_block_flag$i>>2]|0;
     $tobool$i = ($9|0)==(0);
     if ($tobool$i) {
      $sfb2$0229$i = 22;
      label = 13;
     } else {
      label = 12;
     }
    }
    if ((label|0) == 12) {
     label = 0;
     $cmp9212$i = ($7|0)>(0);
     if ($cmp9212$i) {
      $sfb2$0229$i = $7;
      label = 13;
     } else {
      $j$0$lcssa$i = 0;$sfb$0$lcssa$i = 0;
     }
    }
    L22: do {
     if ((label|0) == 13) {
      label = 0;
      $10 = HEAP32[$pinfo$i>>2]|0;
      $11 = HEAP32[$ATH$i>>2]|0;
      $preflag$i = ((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4832|0);
      $12 = HEAP32[$preflag$i>>2]|0;
      $tobool79$i = ($12|0)==(0);
      $$pre226$i = HEAP32[$arrayidx$phi$trans$insert$i>>2]|0;
      if ($tobool79$i) {
       $27 = $$pre226$i;$j$0213$i = 0;$sfb$0214$i = 0;
       while(1) {
        $add$i = (($sfb$0214$i) + 1)|0;
        $arrayidx14$i = (((($gfc)) + 21360|0) + ($add$i<<2)|0);
        $26 = HEAP32[$arrayidx14$i>>2]|0;
        $sub$i = (($26) - ($27))|0;
        $cmp16207$i = ($j$0213$i|0)<($26|0);
        if ($cmp16207$i) {
         $en0$0209$i = 0.0;$j$1208$i = $j$0213$i;
         while(1) {
          $arrayidx19$i = (((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0) + ($j$1208$i<<2)|0);
          $28 = +HEAPF32[$arrayidx19$i>>2];
          $mul$i = $28 * $28;
          $add22$i = $mul$i + $en0$0209$i;
          $inc$i = (($j$1208$i) + 1)|0;
          $exitcond222$i = ($inc$i|0)==($26|0);
          if ($exitcond222$i) {
           $en0$0$lcssa$i = $add22$i;$j$1$lcssa$i = $26;
           break;
          } else {
           $en0$0209$i = $add22$i;$j$1208$i = $inc$i;
          }
         }
        } else {
         $en0$0$lcssa$i = 0.0;$j$1$lcssa$i = $j$0213$i;
        }
        $conv23$i = (+($sub$i|0));
        $div$i = $en0$0$lcssa$i / $conv23$i;
        $mul24$i = $div$i * 999999986991104.0;
        $conv25$i = $mul24$i;
        $arrayidx28$i = (((((($10)) + 190712|0) + (($gr$039*704)|0)|0) + (($ch$036*176)|0)|0) + ($sfb$0214$i<<3)|0);
        HEAPF64[$arrayidx28$i>>3] = $conv25$i;
        $arrayidx29$i = (($l3_xmin$i) + ($sfb$0214$i<<2)|0);
        $29 = +HEAPF32[$arrayidx29$i>>2];
        $mul30$i = $29 * 999999986991104.0;
        $arrayidx31$i = (($xfsf$i) + ($sfb$0214$i<<2)|0);
        $30 = +HEAPF32[$arrayidx31$i>>2];
        $mul32$i = $mul30$i * $30;
        $div34$i = $mul32$i / $conv23$i;
        $conv35$i = $div34$i;
        $arrayidx40$i = (((((($10)) + 201208|0) + (($gr$039*352)|0)|0) + (($ch$036*176)|0)|0) + ($sfb$0214$i<<3)|0);
        HEAPF64[$arrayidx40$i>>3] = $conv35$i;
        $arrayidx43$i = (((((($ratio) + (($gr$039*976)|0)|0) + (($ch$036*488)|0)|0)) + 244|0) + ($sfb$0214$i<<2)|0);
        $31 = +HEAPF32[$arrayidx43$i>>2];
        $cmp44$i = $31 > 0.0;
        if ($cmp44$i) {
         $div52$i = $div$i / $31;
         $32 = HEAP32[$ATHonly$i>>2]|0;
         $tobool47$i = ($32|0)==(0);
         $div52$$i = $tobool47$i ? $div52$i : 0.0;
         $en0$1$i = $div52$$i;
        } else {
         $en0$1$i = 0.0;
        }
        $arrayidx55$i = (((($ratio) + (($gr$039*976)|0)|0) + (($ch$036*488)|0)|0) + ($sfb$0214$i<<2)|0);
        $33 = +HEAPF32[$arrayidx55$i>>2];
        $mul56$i = $33 * $en0$1$i;
        $arrayidx58$i = (((($11)) + 24|0) + ($sfb$0214$i<<2)|0);
        $34 = +HEAPF32[$arrayidx58$i>>2];
        $cmp59$i = $mul56$i > $34;
        $mul56$$i = $cmp59$i ? $mul56$i : $34;
        $mul69$i = $mul56$$i * 999999986991104.0;
        $conv70$i = $mul69$i;
        $arrayidx74$i = (((((($10)) + 189304|0) + (($gr$039*704)|0)|0) + (($ch$036*176)|0)|0) + ($sfb$0214$i<<3)|0);
        HEAPF64[$arrayidx74$i>>3] = $conv70$i;
        $arrayidx78$i = (((((($10)) + 199160|0) + (($gr$039*352)|0)|0) + (($ch$036*176)|0)|0) + ($sfb$0214$i<<3)|0);
        HEAPF64[$arrayidx78$i>>3] = 0.0;
        $cmp95$i = ($sfb$0214$i|0)<(21);
        if ($cmp95$i) {
         $arrayidx98$i = (((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4608|0) + ($sfb$0214$i<<2)|0);
         $35 = HEAP32[$arrayidx98$i>>2]|0;
         $conv99$i = (+($35|0));
         $mul100$i = $conv99$i * $conv$i;
         $conv101$i = $mul100$i;
         $sub107$i = -$conv101$i;
         HEAPF64[$arrayidx78$i>>3] = $sub107$i;
        }
        $exitcond223$i = ($add$i|0)==($sfb2$0229$i|0);
        if ($exitcond223$i) {
         $j$0$lcssa$i = $j$1$lcssa$i;$sfb$0$lcssa$i = $sfb2$0229$i;
         break L22;
        } else {
         $27 = $26;$j$0213$i = $j$1$lcssa$i;$sfb$0214$i = $add$i;
        }
       }
      } else {
       $14 = $$pre226$i;$j$0213$us$i = 0;$sfb$0214$us$i = 0;
      }
      while(1) {
       $add$us$i = (($sfb$0214$us$i) + 1)|0;
       $arrayidx14$us$i = (((($gfc)) + 21360|0) + ($add$us$i<<2)|0);
       $13 = HEAP32[$arrayidx14$us$i>>2]|0;
       $sub$us$i = (($13) - ($14))|0;
       $cmp16207$us$i = ($j$0213$us$i|0)<($13|0);
       if ($cmp16207$us$i) {
        $en0$0209$us$i = 0.0;$j$1208$us$i = $j$0213$us$i;
        while(1) {
         $arrayidx19$us$i = (((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0) + ($j$1208$us$i<<2)|0);
         $25 = +HEAPF32[$arrayidx19$us$i>>2];
         $mul$us$i = $25 * $25;
         $add22$us$i = $mul$us$i + $en0$0209$us$i;
         $inc$us$i = (($j$1208$us$i) + 1)|0;
         $exitcond224$i = ($inc$us$i|0)==($13|0);
         if ($exitcond224$i) {
          $en0$0$lcssa$us$i = $add22$us$i;$j$1$lcssa$us$i = $13;
          break;
         } else {
          $en0$0209$us$i = $add22$us$i;$j$1208$us$i = $inc$us$i;
         }
        }
       } else {
        $en0$0$lcssa$us$i = 0.0;$j$1$lcssa$us$i = $j$0213$us$i;
       }
       $conv23$us$i = (+($sub$us$i|0));
       $div$us$i = $en0$0$lcssa$us$i / $conv23$us$i;
       $mul24$us$i = $div$us$i * 999999986991104.0;
       $conv25$us$i = $mul24$us$i;
       $arrayidx28$us$i = (((((($10)) + 190712|0) + (($gr$039*704)|0)|0) + (($ch$036*176)|0)|0) + ($sfb$0214$us$i<<3)|0);
       HEAPF64[$arrayidx28$us$i>>3] = $conv25$us$i;
       $arrayidx29$us$i = (($l3_xmin$i) + ($sfb$0214$us$i<<2)|0);
       $15 = +HEAPF32[$arrayidx29$us$i>>2];
       $mul30$us$i = $15 * 999999986991104.0;
       $arrayidx31$us$i = (($xfsf$i) + ($sfb$0214$us$i<<2)|0);
       $16 = +HEAPF32[$arrayidx31$us$i>>2];
       $mul32$us$i = $mul30$us$i * $16;
       $div34$us$i = $mul32$us$i / $conv23$us$i;
       $conv35$us$i = $div34$us$i;
       $arrayidx40$us$i = (((((($10)) + 201208|0) + (($gr$039*352)|0)|0) + (($ch$036*176)|0)|0) + ($sfb$0214$us$i<<3)|0);
       HEAPF64[$arrayidx40$us$i>>3] = $conv35$us$i;
       $arrayidx43$us$i = (((((($ratio) + (($gr$039*976)|0)|0) + (($ch$036*488)|0)|0)) + 244|0) + ($sfb$0214$us$i<<2)|0);
       $17 = +HEAPF32[$arrayidx43$us$i>>2];
       $cmp44$us$i = $17 > 0.0;
       if ($cmp44$us$i) {
        $div52$us$i = $div$us$i / $17;
        $18 = HEAP32[$ATHonly$i>>2]|0;
        $tobool47$us$i = ($18|0)==(0);
        $div52$$us$i = $tobool47$us$i ? $div52$us$i : 0.0;
        $en0$1$us$i = $div52$$us$i;
       } else {
        $en0$1$us$i = 0.0;
       }
       $arrayidx55$us$i = (((($ratio) + (($gr$039*976)|0)|0) + (($ch$036*488)|0)|0) + ($sfb$0214$us$i<<2)|0);
       $19 = +HEAPF32[$arrayidx55$us$i>>2];
       $mul56$us$i = $19 * $en0$1$us$i;
       $arrayidx58$us$i = (((($11)) + 24|0) + ($sfb$0214$us$i<<2)|0);
       $20 = +HEAPF32[$arrayidx58$us$i>>2];
       $cmp59$us$i = $mul56$us$i > $20;
       $mul56$$us$i = $cmp59$us$i ? $mul56$us$i : $20;
       $mul69$us$i = $mul56$$us$i * 999999986991104.0;
       $conv70$us$i = $mul69$us$i;
       $arrayidx74$us$i = (((((($10)) + 189304|0) + (($gr$039*704)|0)|0) + (($ch$036*176)|0)|0) + ($sfb$0214$us$i<<3)|0);
       HEAPF64[$arrayidx74$us$i>>3] = $conv70$us$i;
       $arrayidx78$us$i = (((((($10)) + 199160|0) + (($gr$039*352)|0)|0) + (($ch$036*176)|0)|0) + ($sfb$0214$us$i<<3)|0);
       HEAPF64[$arrayidx78$us$i>>3] = 0.0;
       $cmp81$us$i = ($sfb$0214$us$i|0)>(10);
       if ($cmp81$us$i) {
        $arrayidx85$us$i = (6388 + ($sfb$0214$us$i<<2)|0);
        $21 = HEAP32[$arrayidx85$us$i>>2]|0;
        $conv86$us$i = (+($21|0));
        $22 = $conv$i * $conv86$us$i;
        $mul87$us$i = -$22;
        $conv88$us$i = $mul87$us$i;
        HEAPF64[$arrayidx78$us$i>>3] = $conv88$us$i;
        $cmp95$us$i = ($sfb$0214$us$i|0)<(21);
        if ($cmp95$us$i) {
         $24 = $conv88$us$i;
         label = 19;
        }
       } else {
        $24 = 0.0;
        label = 19;
       }
       if ((label|0) == 19) {
        label = 0;
        $arrayidx98$us$i = (((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4608|0) + ($sfb$0214$us$i<<2)|0);
        $23 = HEAP32[$arrayidx98$us$i>>2]|0;
        $conv99$us$i = (+($23|0));
        $mul100$us$i = $conv99$us$i * $conv$i;
        $conv101$us$i = $mul100$us$i;
        $sub107$us$i = $24 - $conv101$us$i;
        HEAPF64[$arrayidx78$us$i>>3] = $sub107$us$i;
       }
       $exitcond225$i = ($add$us$i|0)==($sfb2$0229$i|0);
       if ($exitcond225$i) {
        $j$0$lcssa$i = $j$1$lcssa$us$i;$sfb$0$lcssa$i = $sfb2$0229$i;
        break;
       } else {
        $14 = $13;$j$0213$us$i = $j$1$lcssa$us$i;$sfb$0214$us$i = $add$us$i;
       }
      }
     }
    } while(0);
    if ($cmp7$i) {
     $sfb_smin$i = ((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4852|0);
     $36 = HEAP32[$sfb_smin$i>>2]|0;
     $cmp117203$i = ($36|0)<(13);
     if ($cmp117203$i) {
      $37 = HEAP32[$pinfo$i>>2]|0;
      $38 = HEAP32[$ATHonly$i>>2]|0;
      $tobool194$i = ($38|0)==(0);
      $39 = HEAP32[$ATH$i>>2]|0;
      $arrayidx121$phi$trans$insert$i = (((($gfc)) + 21452|0) + ($36<<2)|0);
      $$pre227$i = HEAP32[$arrayidx121$phi$trans$insert$i>>2]|0;
      $arrayidx228$i$us = ((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4808|0);
      $arrayidx228$i$us$1 = ((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4812|0);
      $arrayidx228$i$us$2 = ((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4816|0);
      $arrayidx228$i = ((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4808|0);
      $arrayidx228$i$1 = ((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4812|0);
      $arrayidx228$i$2 = ((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4816|0);
      $42 = $$pre227$i;$j$2204$i = $j$0$lcssa$i;$sfb$1206$i = $36;$sfb2$1205$i = $sfb$0$lcssa$i;
      while(1) {
       $add124$i = (($sfb$1206$i) + 1)|0;
       $arrayidx125$i = (((($gfc)) + 21452|0) + ($add124$i<<2)|0);
       $41 = HEAP32[$arrayidx125$i>>2]|0;
       $sub126$i = (($41) - ($42))|0;
       $cmp132195$i = ($41|0)>($42|0);
       $conv145$i = (+($sub126$i|0));
       $mul163$i = ($sfb$1206$i*3)|0;
       $arrayidx205$i = (((($39)) + 112|0) + ($sfb$1206$i<<2)|0);
       $43 = +HEAPF32[$arrayidx205$i>>2];
       $cmp237$i = ($sfb$1206$i|0)<(12);
       do {
        if ($cmp132195$i) {
         if ($tobool194$i) {
          $59 = HEAP32[$ATHshort$i>>2]|0;
          $tobool195$us$i$us = ($59|0)==(0);
          $i$0201$us$i$us = 0;$j$3200$us$i$us = $j$2204$i;$sfb2$2202$us$i$us = $sfb2$1205$i;
          while(1) {
           $en0$2198$us$i$us = 0.0;$j$4196$us$i$us = $j$3200$us$i$us;$l$0197$us$i$us = $42;
           while(1) {
            $arrayidx136$us$i$us = (((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0) + ($j$4196$us$i$us<<2)|0);
            $60 = +HEAPF32[$arrayidx136$us$i$us>>2];
            $mul139$us$i$us = $60 * $60;
            $add140$us$i$us = $mul139$us$i$us + $en0$2198$us$i$us;
            $inc141$us$i$us = (($j$4196$us$i$us) + 1)|0;
            $inc143$us$i$us = (($l$0197$us$i$us) + 1)|0;
            $exitcond219$i$us = ($inc143$us$i$us|0)==($41|0);
            if ($exitcond219$i$us) {
             break;
            } else {
             $en0$2198$us$i$us = $add140$us$i$us;$j$4196$us$i$us = $inc141$us$i$us;$l$0197$us$i$us = $inc143$us$i$us;
            }
           }
           $61 = (($j$3200$us$i$us) + ($sub126$i))|0;
           $div146$us$i$us = $add140$us$i$us / $conv145$i;
           $conv147$us$i$us = $div146$us$i$us;
           $cmp148$us$i$us = $conv147$us$i$us > 9.9999999999999995E-21;
           $cond156$us$i$us = $cmp148$us$i$us ? $conv147$us$i$us : 9.9999999999999995E-21;
           $conv157$us$i$us = $cond156$us$i$us;
           $mul158$us$i$us = $conv157$us$i$us * 999999986991104.0;
           $conv159$us$i$us = $mul158$us$i$us;
           $add164$us$i$us = (($i$0201$us$i$us) + ($mul163$i))|0;
           $arrayidx165$us$i$us = (((((($37)) + 194616|0) + (($gr$039*1248)|0)|0) + (($ch$036*312)|0)|0) + ($add164$us$i$us<<3)|0);
           HEAPF64[$arrayidx165$us$i$us>>3] = $conv159$us$i$us;
           $arrayidx166$us$i$us = (($l3_xmin$i) + ($sfb2$2202$us$i$us<<2)|0);
           $62 = +HEAPF32[$arrayidx166$us$i$us>>2];
           $mul167$us$i$us = $62 * 999999986991104.0;
           $arrayidx168$us$i$us = (($xfsf$i) + ($sfb2$2202$us$i$us<<2)|0);
           $63 = +HEAPF32[$arrayidx168$us$i$us>>2];
           $mul169$us$i$us = $mul167$us$i$us * $63;
           $div171$us$i$us = $mul169$us$i$us / $conv145$i;
           $conv172$us$i$us = $div171$us$i$us;
           $arrayidx178$us$i$us = (((((($37)) + 201912|0) + (($gr$039*624)|0)|0) + (($ch$036*312)|0)|0) + ($add164$us$i$us<<3)|0);
           HEAPF64[$arrayidx178$us$i$us>>3] = $conv172$us$i$us;
           $arrayidx182$us$i$us = ((((((($ratio) + (($gr$039*976)|0)|0) + (($ch$036*488)|0)|0)) + 332|0) + (($sfb$1206$i*12)|0)|0) + ($i$0201$us$i$us<<2)|0);
           $64 = +HEAPF32[$arrayidx182$us$i$us>>2];
           $cmp183$us$i$us = $64 > 0.0;
           $div190$us$i$us = $conv157$us$i$us / $64;
           $65 = $tobool195$us$i$us & $cmp183$us$i$us;
           $en0$4$us$i$us = $65 ? $div190$us$i$us : 0.0;
           $arrayidx201$us$i$us = ((((((($ratio) + (($gr$039*976)|0)|0) + (($ch$036*488)|0)|0)) + 88|0) + (($sfb$1206$i*12)|0)|0) + ($i$0201$us$i$us<<2)|0);
           $66 = +HEAPF32[$arrayidx201$us$i$us>>2];
           $mul202$us$i$us = $66 * $en0$4$us$i$us;
           $cmp206$us$i$us = $mul202$us$i$us > $43;
           $mul202$$us$i$us = $cmp206$us$i$us ? $mul202$us$i$us : $43;
           $mul220$us$i$us = $mul202$$us$i$us * 999999986991104.0;
           $conv221$us$i$us = $mul220$us$i$us;
           $arrayidx227$us$i$us = (((((($37)) + 192120|0) + (($gr$039*1248)|0)|0) + (($ch$036*312)|0)|0) + ($add164$us$i$us<<3)|0);
           HEAPF64[$arrayidx227$us$i$us>>3] = $conv221$us$i$us;
           $arrayidx228$us$i$us = (((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4808|0) + ($i$0201$us$i$us<<2)|0);
           $67 = HEAP32[$arrayidx228$us$i$us>>2]|0;
           $conv229$us$i$us = (+($67|0));
           $mul230$us$i$us = $conv229$us$i$us * -2.0;
           $arrayidx236$us$i$us = (((((($37)) + 199864|0) + (($gr$039*624)|0)|0) + (($ch$036*312)|0)|0) + ($add164$us$i$us<<3)|0);
           HEAPF64[$arrayidx236$us$i$us>>3] = $mul230$us$i$us;
           if ($cmp237$i) {
            $arrayidx240$us$i$us = (((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4608|0) + ($sfb2$2202$us$i$us<<2)|0);
            $68 = HEAP32[$arrayidx240$us$i$us>>2]|0;
            $conv241$us$i$us = (+($68|0));
            $mul242$us$i$us = $conv241$us$i$us * $conv$i;
            $conv243$us$i$us = $mul242$us$i$us;
            $sub251$us$i$us = $mul230$us$i$us - $conv243$us$i$us;
            HEAPF64[$arrayidx236$us$i$us>>3] = $sub251$us$i$us;
           }
           $inc253$us$i$us = (($sfb2$2202$us$i$us) + 1)|0;
           $inc255$us$i$us = (($i$0201$us$i$us) + 1)|0;
           $exitcond220$i$us = ($inc255$us$i$us|0)==(3);
           if ($exitcond220$i$us) {
            break;
           } else {
            $i$0201$us$i$us = $inc255$us$i$us;$j$3200$us$i$us = $61;$sfb2$2202$us$i$us = $inc253$us$i$us;
           }
          }
         } else {
          $cmp206$us$i = $43 < 0.0;
          $mul202$$us$i = $cmp206$us$i ? 0.0 : $43;
          $mul220$us$i = $mul202$$us$i * 999999986991104.0;
          $conv221$us$i = $mul220$us$i;
          $i$0201$us$i = 0;$j$3200$us$i = $j$2204$i;$sfb2$2202$us$i = $sfb2$1205$i;
          while(1) {
           $en0$2198$us$i = 0.0;$j$4196$us$i = $j$3200$us$i;$l$0197$us$i = $42;
           while(1) {
            $arrayidx136$us$i = (((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0) + ($j$4196$us$i<<2)|0);
            $70 = +HEAPF32[$arrayidx136$us$i>>2];
            $mul139$us$i = $70 * $70;
            $add140$us$i = $mul139$us$i + $en0$2198$us$i;
            $inc141$us$i = (($j$4196$us$i) + 1)|0;
            $inc143$us$i = (($l$0197$us$i) + 1)|0;
            $exitcond219$i = ($inc143$us$i|0)==($41|0);
            if ($exitcond219$i) {
             break;
            } else {
             $en0$2198$us$i = $add140$us$i;$j$4196$us$i = $inc141$us$i;$l$0197$us$i = $inc143$us$i;
            }
           }
           $71 = (($j$3200$us$i) + ($sub126$i))|0;
           $div146$us$i = $add140$us$i / $conv145$i;
           $conv147$us$i = $div146$us$i;
           $cmp148$us$i = $conv147$us$i > 9.9999999999999995E-21;
           $cond156$us$i = $cmp148$us$i ? $conv147$us$i : 9.9999999999999995E-21;
           $conv157$us$i = $cond156$us$i;
           $mul158$us$i = $conv157$us$i * 999999986991104.0;
           $conv159$us$i = $mul158$us$i;
           $add164$us$i = (($i$0201$us$i) + ($mul163$i))|0;
           $arrayidx165$us$i = (((((($37)) + 194616|0) + (($gr$039*1248)|0)|0) + (($ch$036*312)|0)|0) + ($add164$us$i<<3)|0);
           HEAPF64[$arrayidx165$us$i>>3] = $conv159$us$i;
           $arrayidx166$us$i = (($l3_xmin$i) + ($sfb2$2202$us$i<<2)|0);
           $72 = +HEAPF32[$arrayidx166$us$i>>2];
           $mul167$us$i = $72 * 999999986991104.0;
           $arrayidx168$us$i = (($xfsf$i) + ($sfb2$2202$us$i<<2)|0);
           $73 = +HEAPF32[$arrayidx168$us$i>>2];
           $mul169$us$i = $mul167$us$i * $73;
           $div171$us$i = $mul169$us$i / $conv145$i;
           $conv172$us$i = $div171$us$i;
           $arrayidx178$us$i = (((((($37)) + 201912|0) + (($gr$039*624)|0)|0) + (($ch$036*312)|0)|0) + ($add164$us$i<<3)|0);
           HEAPF64[$arrayidx178$us$i>>3] = $conv172$us$i;
           $arrayidx227$us$i = (((((($37)) + 192120|0) + (($gr$039*1248)|0)|0) + (($ch$036*312)|0)|0) + ($add164$us$i<<3)|0);
           HEAPF64[$arrayidx227$us$i>>3] = $conv221$us$i;
           $arrayidx228$us$i = (((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4808|0) + ($i$0201$us$i<<2)|0);
           $74 = HEAP32[$arrayidx228$us$i>>2]|0;
           $conv229$us$i = (+($74|0));
           $mul230$us$i = $conv229$us$i * -2.0;
           $arrayidx236$us$i = (((((($37)) + 199864|0) + (($gr$039*624)|0)|0) + (($ch$036*312)|0)|0) + ($add164$us$i<<3)|0);
           HEAPF64[$arrayidx236$us$i>>3] = $mul230$us$i;
           if ($cmp237$i) {
            $arrayidx240$us$i = (((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4608|0) + ($sfb2$2202$us$i<<2)|0);
            $69 = HEAP32[$arrayidx240$us$i>>2]|0;
            $conv241$us$i = (+($69|0));
            $mul242$us$i = $conv241$us$i * $conv$i;
            $conv243$us$i = $mul242$us$i;
            $sub251$us$i = $mul230$us$i - $conv243$us$i;
            HEAPF64[$arrayidx236$us$i>>3] = $sub251$us$i;
           }
           $inc253$us$i = (($sfb2$2202$us$i) + 1)|0;
           $inc255$us$i = (($i$0201$us$i) + 1)|0;
           $exitcond220$i = ($inc255$us$i|0)==(3);
           if ($exitcond220$i) {
            break;
           } else {
            $i$0201$us$i = $inc255$us$i;$j$3200$us$i = $71;$sfb2$2202$us$i = $inc253$us$i;
           }
          }
         }
         $tmp31 = ($sub126$i*3)|0;
         $40 = (($tmp31) + ($j$2204$i))|0;
         $j$3$lcssa$i = $40;
        } else {
         $arrayidx165$i$us = (((((($37)) + 194616|0) + (($gr$039*1248)|0)|0) + (($ch$036*312)|0)|0) + ($mul163$i<<3)|0);
         HEAPF64[$arrayidx165$i$us>>3] = 9.9999997473787516E-6;
         $arrayidx166$i$us = (($l3_xmin$i) + ($sfb2$1205$i<<2)|0);
         $44 = +HEAPF32[$arrayidx166$i$us>>2];
         $mul167$i$us = $44 * 999999986991104.0;
         $arrayidx168$i$us = (($xfsf$i) + ($sfb2$1205$i<<2)|0);
         $45 = +HEAPF32[$arrayidx168$i$us>>2];
         $mul169$i$us = $mul167$i$us * $45;
         $div171$i$us = $mul169$i$us / $conv145$i;
         $conv172$i$us = $div171$i$us;
         $arrayidx178$i$us = (((((($37)) + 201912|0) + (($gr$039*624)|0)|0) + (($ch$036*312)|0)|0) + ($mul163$i<<3)|0);
         HEAPF64[$arrayidx178$i$us>>3] = $conv172$i$us;
         if ($tobool194$i) {
          $arrayidx182$i$us = (((((($ratio) + (($gr$039*976)|0)|0) + (($ch$036*488)|0)|0)) + 332|0) + (($sfb$1206$i*12)|0)|0);
          $47 = +HEAPF32[$arrayidx182$i$us>>2];
          $cmp183$i$us = $47 > 0.0;
          $div190$i$us = 9.9999996826552254E-21 / $47;
          $48 = HEAP32[$ATHshort$i>>2]|0;
          $tobool195$i$us = ($48|0)==(0);
          $49 = $tobool195$i$us & $cmp183$i$us;
          $en0$4$i$us = $49 ? $div190$i$us : 0.0;
          $arrayidx201$i$us = (((((($ratio) + (($gr$039*976)|0)|0) + (($ch$036*488)|0)|0)) + 88|0) + (($sfb$1206$i*12)|0)|0);
          $50 = +HEAPF32[$arrayidx201$i$us>>2];
          $mul202$i$us = $50 * $en0$4$i$us;
          $cmp206$i$us = $mul202$i$us > $43;
          $mul202$$i$us = $cmp206$i$us ? $mul202$i$us : $43;
          $mul220$i$us = $mul202$$i$us * 999999986991104.0;
          $conv221$i$us = $mul220$i$us;
          $arrayidx227$i$us = (((((($37)) + 192120|0) + (($gr$039*1248)|0)|0) + (($ch$036*312)|0)|0) + ($mul163$i<<3)|0);
          HEAPF64[$arrayidx227$i$us>>3] = $conv221$i$us;
          $51 = HEAP32[$arrayidx228$i$us>>2]|0;
          $conv229$i$us = (+($51|0));
          $mul230$i$us = $conv229$i$us * -2.0;
          $arrayidx236$i$us = (((((($37)) + 199864|0) + (($gr$039*624)|0)|0) + (($ch$036*312)|0)|0) + ($mul163$i<<3)|0);
          HEAPF64[$arrayidx236$i$us>>3] = $mul230$i$us;
          if ($cmp237$i) {
           $arrayidx240$i$us = (((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4608|0) + ($sfb2$1205$i<<2)|0);
           $52 = HEAP32[$arrayidx240$i$us>>2]|0;
           $conv241$i$us = (+($52|0));
           $mul242$i$us = $conv241$i$us * $conv$i;
           $conv243$i$us = $mul242$i$us;
           $sub251$i$us = $mul230$i$us - $conv243$i$us;
           HEAPF64[$arrayidx236$i$us>>3] = $sub251$i$us;
          }
          $inc253$i$us = (($sfb2$1205$i) + 1)|0;
          $add164$i$us$1 = (($mul163$i) + 1)|0;
          $arrayidx165$i$us$1 = (((((($37)) + 194616|0) + (($gr$039*1248)|0)|0) + (($ch$036*312)|0)|0) + ($add164$i$us$1<<3)|0);
          HEAPF64[$arrayidx165$i$us$1>>3] = 9.9999997473787516E-6;
          $arrayidx166$i$us$1 = (($l3_xmin$i) + ($inc253$i$us<<2)|0);
          $53 = +HEAPF32[$arrayidx166$i$us$1>>2];
          $mul167$i$us$1 = $53 * 999999986991104.0;
          $arrayidx168$i$us$1 = (($xfsf$i) + ($inc253$i$us<<2)|0);
          $54 = +HEAPF32[$arrayidx168$i$us$1>>2];
          $mul169$i$us$1 = $mul167$i$us$1 * $54;
          $div171$i$us$1 = $mul169$i$us$1 / $conv145$i;
          $conv172$i$us$1 = $div171$i$us$1;
          $arrayidx178$i$us$1 = (((((($37)) + 201912|0) + (($gr$039*624)|0)|0) + (($ch$036*312)|0)|0) + ($add164$i$us$1<<3)|0);
          HEAPF64[$arrayidx178$i$us$1>>3] = $conv172$i$us$1;
          $arrayidx182$i$us$1 = (((((((($ratio) + (($gr$039*976)|0)|0) + (($ch$036*488)|0)|0)) + 332|0) + (($sfb$1206$i*12)|0)|0)) + 4|0);
          $55 = +HEAPF32[$arrayidx182$i$us$1>>2];
          $cmp183$i$us$1 = $55 > 0.0;
          $div190$i$us$1 = 9.9999996826552254E-21 / $55;
          $56 = $tobool195$i$us & $cmp183$i$us$1;
          $en0$4$i$us$1 = $56 ? $div190$i$us$1 : 0.0;
          $arrayidx201$i$us$1 = (((((((($ratio) + (($gr$039*976)|0)|0) + (($ch$036*488)|0)|0)) + 88|0) + (($sfb$1206$i*12)|0)|0)) + 4|0);
          $57 = +HEAPF32[$arrayidx201$i$us$1>>2];
          $mul202$i$us$1 = $57 * $en0$4$i$us$1;
          $cmp206$i$us$1 = $mul202$i$us$1 > $43;
          $mul202$$i$us$1 = $cmp206$i$us$1 ? $mul202$i$us$1 : $43;
          $mul220$i$us$1 = $mul202$$i$us$1 * 999999986991104.0;
          $conv221$i$us$1 = $mul220$i$us$1;
          $arrayidx227$i$us$1 = (((((($37)) + 192120|0) + (($gr$039*1248)|0)|0) + (($ch$036*312)|0)|0) + ($add164$i$us$1<<3)|0);
          HEAPF64[$arrayidx227$i$us$1>>3] = $conv221$i$us$1;
          $58 = HEAP32[$arrayidx228$i$us$1>>2]|0;
          $conv229$i$us$1 = (+($58|0));
          $mul230$i$us$1 = $conv229$i$us$1 * -2.0;
          $arrayidx236$i$us$1 = (((((($37)) + 199864|0) + (($gr$039*624)|0)|0) + (($ch$036*312)|0)|0) + ($add164$i$us$1<<3)|0);
          HEAPF64[$arrayidx236$i$us$1>>3] = $mul230$i$us$1;
          if ($cmp237$i) {
           $arrayidx240$i$us$1 = (((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4608|0) + ($inc253$i$us<<2)|0);
           $96 = HEAP32[$arrayidx240$i$us$1>>2]|0;
           $conv241$i$us$1 = (+($96|0));
           $mul242$i$us$1 = $conv241$i$us$1 * $conv$i;
           $conv243$i$us$1 = $mul242$i$us$1;
           $sub251$i$us$1 = $mul230$i$us$1 - $conv243$i$us$1;
           HEAPF64[$arrayidx236$i$us$1>>3] = $sub251$i$us$1;
          }
          $inc253$i$us$1 = (($sfb2$1205$i) + 2)|0;
          $add164$i$us$2 = (($mul163$i) + 2)|0;
          $arrayidx165$i$us$2 = (((((($37)) + 194616|0) + (($gr$039*1248)|0)|0) + (($ch$036*312)|0)|0) + ($add164$i$us$2<<3)|0);
          HEAPF64[$arrayidx165$i$us$2>>3] = 9.9999997473787516E-6;
          $arrayidx166$i$us$2 = (($l3_xmin$i) + ($inc253$i$us$1<<2)|0);
          $97 = +HEAPF32[$arrayidx166$i$us$2>>2];
          $mul167$i$us$2 = $97 * 999999986991104.0;
          $arrayidx168$i$us$2 = (($xfsf$i) + ($inc253$i$us$1<<2)|0);
          $98 = +HEAPF32[$arrayidx168$i$us$2>>2];
          $mul169$i$us$2 = $mul167$i$us$2 * $98;
          $div171$i$us$2 = $mul169$i$us$2 / $conv145$i;
          $conv172$i$us$2 = $div171$i$us$2;
          $arrayidx178$i$us$2 = (((((($37)) + 201912|0) + (($gr$039*624)|0)|0) + (($ch$036*312)|0)|0) + ($add164$i$us$2<<3)|0);
          HEAPF64[$arrayidx178$i$us$2>>3] = $conv172$i$us$2;
          $arrayidx182$i$us$2 = (((((((($ratio) + (($gr$039*976)|0)|0) + (($ch$036*488)|0)|0)) + 332|0) + (($sfb$1206$i*12)|0)|0)) + 8|0);
          $99 = +HEAPF32[$arrayidx182$i$us$2>>2];
          $cmp183$i$us$2 = $99 > 0.0;
          $div190$i$us$2 = 9.9999996826552254E-21 / $99;
          $100 = $tobool195$i$us & $cmp183$i$us$2;
          $en0$4$i$us$2 = $100 ? $div190$i$us$2 : 0.0;
          $arrayidx201$i$us$2 = (((((((($ratio) + (($gr$039*976)|0)|0) + (($ch$036*488)|0)|0)) + 88|0) + (($sfb$1206$i*12)|0)|0)) + 8|0);
          $101 = +HEAPF32[$arrayidx201$i$us$2>>2];
          $mul202$i$us$2 = $101 * $en0$4$i$us$2;
          $cmp206$i$us$2 = $mul202$i$us$2 > $43;
          $mul202$$i$us$2 = $cmp206$i$us$2 ? $mul202$i$us$2 : $43;
          $mul220$i$us$2 = $mul202$$i$us$2 * 999999986991104.0;
          $conv221$i$us$2 = $mul220$i$us$2;
          $arrayidx227$i$us$2 = (((((($37)) + 192120|0) + (($gr$039*1248)|0)|0) + (($ch$036*312)|0)|0) + ($add164$i$us$2<<3)|0);
          HEAPF64[$arrayidx227$i$us$2>>3] = $conv221$i$us$2;
          $102 = HEAP32[$arrayidx228$i$us$2>>2]|0;
          $conv229$i$us$2 = (+($102|0));
          $mul230$i$us$2 = $conv229$i$us$2 * -2.0;
          $arrayidx236$i$us$2 = (((((($37)) + 199864|0) + (($gr$039*624)|0)|0) + (($ch$036*312)|0)|0) + ($add164$i$us$2<<3)|0);
          HEAPF64[$arrayidx236$i$us$2>>3] = $mul230$i$us$2;
          if (!($cmp237$i)) {
           $j$3$lcssa$i = $j$2204$i;
           break;
          }
          $arrayidx240$i$us$2 = (((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4608|0) + ($inc253$i$us$1<<2)|0);
          $103 = HEAP32[$arrayidx240$i$us$2>>2]|0;
          $conv241$i$us$2 = (+($103|0));
          $mul242$i$us$2 = $conv241$i$us$2 * $conv$i;
          $conv243$i$us$2 = $mul242$i$us$2;
          $sub251$i$us$2 = $mul230$i$us$2 - $conv243$i$us$2;
          HEAPF64[$arrayidx236$i$us$2>>3] = $sub251$i$us$2;
          $j$3$lcssa$i = $j$2204$i;
          break;
         } else {
          $cmp206$i = $43 < 0.0;
          $mul202$$i = $cmp206$i ? 0.0 : $43;
          $mul220$i = $mul202$$i * 999999986991104.0;
          $conv221$i = $mul220$i;
          $arrayidx227$i = (((((($37)) + 192120|0) + (($gr$039*1248)|0)|0) + (($ch$036*312)|0)|0) + ($mul163$i<<3)|0);
          HEAPF64[$arrayidx227$i>>3] = $conv221$i;
          $46 = HEAP32[$arrayidx228$i>>2]|0;
          $conv229$i = (+($46|0));
          $mul230$i = $conv229$i * -2.0;
          $arrayidx236$i = (((((($37)) + 199864|0) + (($gr$039*624)|0)|0) + (($ch$036*312)|0)|0) + ($mul163$i<<3)|0);
          HEAPF64[$arrayidx236$i>>3] = $mul230$i;
          if ($cmp237$i) {
           $arrayidx240$i = (((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4608|0) + ($sfb2$1205$i<<2)|0);
           $75 = HEAP32[$arrayidx240$i>>2]|0;
           $conv241$i = (+($75|0));
           $mul242$i = $conv241$i * $conv$i;
           $conv243$i = $mul242$i;
           $sub251$i = $mul230$i - $conv243$i;
           HEAPF64[$arrayidx236$i>>3] = $sub251$i;
          }
          $inc253$i = (($sfb2$1205$i) + 1)|0;
          $add164$i$1 = (($mul163$i) + 1)|0;
          $arrayidx165$i$1 = (((((($37)) + 194616|0) + (($gr$039*1248)|0)|0) + (($ch$036*312)|0)|0) + ($add164$i$1<<3)|0);
          HEAPF64[$arrayidx165$i$1>>3] = 9.9999997473787516E-6;
          $arrayidx166$i$1 = (($l3_xmin$i) + ($inc253$i<<2)|0);
          $76 = +HEAPF32[$arrayidx166$i$1>>2];
          $mul167$i$1 = $76 * 999999986991104.0;
          $arrayidx168$i$1 = (($xfsf$i) + ($inc253$i<<2)|0);
          $77 = +HEAPF32[$arrayidx168$i$1>>2];
          $mul169$i$1 = $mul167$i$1 * $77;
          $div171$i$1 = $mul169$i$1 / $conv145$i;
          $conv172$i$1 = $div171$i$1;
          $arrayidx178$i$1 = (((((($37)) + 201912|0) + (($gr$039*624)|0)|0) + (($ch$036*312)|0)|0) + ($add164$i$1<<3)|0);
          HEAPF64[$arrayidx178$i$1>>3] = $conv172$i$1;
          $arrayidx227$i$1 = (((((($37)) + 192120|0) + (($gr$039*1248)|0)|0) + (($ch$036*312)|0)|0) + ($add164$i$1<<3)|0);
          HEAPF64[$arrayidx227$i$1>>3] = $conv221$i;
          $78 = HEAP32[$arrayidx228$i$1>>2]|0;
          $conv229$i$1 = (+($78|0));
          $mul230$i$1 = $conv229$i$1 * -2.0;
          $arrayidx236$i$1 = (((((($37)) + 199864|0) + (($gr$039*624)|0)|0) + (($ch$036*312)|0)|0) + ($add164$i$1<<3)|0);
          HEAPF64[$arrayidx236$i$1>>3] = $mul230$i$1;
          if ($cmp237$i) {
           $arrayidx240$i$1 = (((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4608|0) + ($inc253$i<<2)|0);
           $91 = HEAP32[$arrayidx240$i$1>>2]|0;
           $conv241$i$1 = (+($91|0));
           $mul242$i$1 = $conv241$i$1 * $conv$i;
           $conv243$i$1 = $mul242$i$1;
           $sub251$i$1 = $mul230$i$1 - $conv243$i$1;
           HEAPF64[$arrayidx236$i$1>>3] = $sub251$i$1;
          }
          $inc253$i$1 = (($sfb2$1205$i) + 2)|0;
          $add164$i$2 = (($mul163$i) + 2)|0;
          $arrayidx165$i$2 = (((((($37)) + 194616|0) + (($gr$039*1248)|0)|0) + (($ch$036*312)|0)|0) + ($add164$i$2<<3)|0);
          HEAPF64[$arrayidx165$i$2>>3] = 9.9999997473787516E-6;
          $arrayidx166$i$2 = (($l3_xmin$i) + ($inc253$i$1<<2)|0);
          $92 = +HEAPF32[$arrayidx166$i$2>>2];
          $mul167$i$2 = $92 * 999999986991104.0;
          $arrayidx168$i$2 = (($xfsf$i) + ($inc253$i$1<<2)|0);
          $93 = +HEAPF32[$arrayidx168$i$2>>2];
          $mul169$i$2 = $mul167$i$2 * $93;
          $div171$i$2 = $mul169$i$2 / $conv145$i;
          $conv172$i$2 = $div171$i$2;
          $arrayidx178$i$2 = (((((($37)) + 201912|0) + (($gr$039*624)|0)|0) + (($ch$036*312)|0)|0) + ($add164$i$2<<3)|0);
          HEAPF64[$arrayidx178$i$2>>3] = $conv172$i$2;
          $arrayidx227$i$2 = (((((($37)) + 192120|0) + (($gr$039*1248)|0)|0) + (($ch$036*312)|0)|0) + ($add164$i$2<<3)|0);
          HEAPF64[$arrayidx227$i$2>>3] = $conv221$i;
          $94 = HEAP32[$arrayidx228$i$2>>2]|0;
          $conv229$i$2 = (+($94|0));
          $mul230$i$2 = $conv229$i$2 * -2.0;
          $arrayidx236$i$2 = (((((($37)) + 199864|0) + (($gr$039*624)|0)|0) + (($ch$036*312)|0)|0) + ($add164$i$2<<3)|0);
          HEAPF64[$arrayidx236$i$2>>3] = $mul230$i$2;
          if (!($cmp237$i)) {
           $j$3$lcssa$i = $j$2204$i;
           break;
          }
          $arrayidx240$i$2 = (((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4608|0) + ($inc253$i$1<<2)|0);
          $95 = HEAP32[$arrayidx240$i$2>>2]|0;
          $conv241$i$2 = (+($95|0));
          $mul242$i$2 = $conv241$i$2 * $conv$i;
          $conv243$i$2 = $mul242$i$2;
          $sub251$i$2 = $mul230$i$2 - $conv243$i$2;
          HEAPF64[$arrayidx236$i$2>>3] = $sub251$i$2;
          $j$3$lcssa$i = $j$2204$i;
          break;
         }
        }
       } while(0);
       $sfb2$2$lcssa$i = (($sfb2$1205$i) + 3)|0;
       $exitcond221$i = ($add124$i|0)==(13);
       if ($exitcond221$i) {
        break;
       } else {
        $42 = $41;$j$2204$i = $j$3$lcssa$i;$sfb$1206$i = $add124$i;$sfb2$1205$i = $sfb2$2$lcssa$i;
       }
      }
     }
    }
    $global_gain$i = ((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4780|0);
    $79 = HEAP32[$global_gain$i>>2]|0;
    $80 = HEAP32[$pinfo$i>>2]|0;
    $arrayidx263$i = ((((($80)) + 201112|0) + ($gr$039<<3)|0) + ($ch$036<<2)|0);
    HEAP32[$arrayidx263$i>>2] = $79;
    $part2_3_length$i = ((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4768|0);
    $81 = HEAP32[$part2_3_length$i>>2]|0;
    $part2_length$i = ((((((($gfc)) + 304|0) + (($gr$039*10504)|0)|0) + (($ch$036*5252)|0)|0)) + 4844|0);
    $82 = HEAP32[$part2_length$i>>2]|0;
    $add264$i = (($82) + ($81))|0;
    $arrayidx267$i = ((((($80)) + 203400|0) + ($gr$039<<3)|0) + ($ch$036<<2)|0);
    HEAP32[$arrayidx267$i>>2] = $add264$i;
    $83 = HEAP32[$part2_length$i>>2]|0;
    $arrayidx271$i = ((((($80)) + 203416|0) + ($gr$039<<3)|0) + ($ch$036<<2)|0);
    HEAP32[$arrayidx271$i>>2] = $83;
    $84 = HEAP32[$over_count$i>>2]|0;
    $arrayidx274$i = ((((($80)) + 203160|0) + ($gr$039<<3)|0) + ($ch$036<<2)|0);
    HEAP32[$arrayidx274$i>>2] = $84;
    $85 = +HEAPF32[$max_noise$i>>2];
    $conv275$i = $85;
    $mul276$i = $conv275$i * 10.0;
    $arrayidx280$i = ((((($80)) + 203208|0) + ($gr$039<<4)|0) + ($ch$036<<3)|0);
    HEAPF64[$arrayidx280$i>>3] = $mul276$i;
    $86 = +HEAPF32[$noise$i>>2];
    $conv281$i = $86;
    $mul282$i = $conv281$i * 10.0;
    $arrayidx286$i = ((((($80)) + 203240|0) + ($gr$039<<4)|0) + ($ch$036<<3)|0);
    HEAPF64[$arrayidx286$i>>3] = $mul282$i;
    $87 = +HEAPF32[$tot_noise$i>>2];
    $conv287$i = $87;
    $mul288$i = $conv287$i * 10.0;
    $arrayidx292$i = ((((($80)) + 203176|0) + ($gr$039<<4)|0) + ($ch$036<<3)|0);
    HEAPF64[$arrayidx292$i>>3] = $mul288$i;
    $88 = HEAP32[$over_SSD$i>>2]|0;
    $arrayidx296$i = ((((($80)) + 203272|0) + ($gr$039<<3)|0) + ($ch$036<<2)|0);
    HEAP32[$arrayidx296$i>>2] = $88;
    _memcpy(($scalefac|0),($scalefac_sav|0),156)|0;
    $inc30 = (($ch$036) + 1)|0;
    $89 = HEAP32[$channels_out>>2]|0;
    $cmp3 = ($inc30|0)<($89|0);
    if ($cmp3) {
     $ch$036 = $inc30;
    } else {
     break;
    }
   }
   $$pre48 = HEAP32[$mode_gr>>2]|0;
   $105 = $89;$90 = $$pre48;
  } else {
   $105 = $1;$90 = $104;
  }
  $inc33 = (($gr$039) + 1)|0;
  $cmp = ($inc33|0)<($90|0);
  if ($cmp) {
   $1 = $105;$104 = $90;$gr$039 = $inc33;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function _ResvFrameBegin($gfc,$mean_bits) {
 $gfc = $gfc|0;
 $mean_bits = $mean_bits|0;
 var $$ = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $ResvMax = 0, $ResvSize = 0, $add = 0, $buffer_constraint = 0, $call = 0, $cmp = 0, $cmp10 = 0, $cmp17 = 0, $cmp20 = 0, $cmp23 = 0, $disable_reservoir = 0, $div = 0;
 var $div25 = 0, $fullFrameBits$0 = 0, $mean_bits27 = 0, $mode_gr = 0, $mul = 0, $mul15 = 0, $mul4 = 0, $pinfo = 0, $resvDrain_pre = 0, $resvsize = 0, $sideinfo_len = 0, $sub = 0, $sub5 = 0, $sub5$sub6 = 0, $sub6 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_getframebits($gfc)|0);
 $sideinfo_len = ((($gfc)) + 24|0);
 $0 = HEAP32[$sideinfo_len>>2]|0;
 $mul = $0 << 3;
 $sub = (($call) - ($mul))|0;
 $mode_gr = ((($gfc)) + 76|0);
 $1 = HEAP32[$mode_gr>>2]|0;
 $div = (($sub|0) / ($1|0))&-1;
 $mul4 = $1 << 11;
 $sub5 = (($mul4) + -8)|0;
 $buffer_constraint = ((($gfc)) + 148|0);
 $2 = HEAP32[$buffer_constraint>>2]|0;
 $sub6 = (($2) - ($call))|0;
 $ResvMax = ((($gfc)) + 52144|0);
 $cmp = ($sub6|0)>($sub5|0);
 $sub5$sub6 = $cmp ? $sub5 : $sub6;
 HEAP32[$ResvMax>>2] = $sub5$sub6;
 $cmp10 = ($sub5$sub6|0)<(0);
 if ($cmp10) {
  label = 3;
 } else {
  $disable_reservoir = ((($gfc)) + 144|0);
  $3 = HEAP32[$disable_reservoir>>2]|0;
  $tobool = ($3|0)==(0);
  if ($tobool) {
   $5 = $sub5$sub6;
  } else {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  HEAP32[$ResvMax>>2] = 0;
  $5 = 0;
 }
 $mul15 = Math_imul($1, $div)|0;
 $ResvSize = ((($gfc)) + 52140|0);
 $4 = HEAP32[$ResvSize>>2]|0;
 $cmp17 = ($4|0)<($5|0);
 $$ = $cmp17 ? $4 : $5;
 $add = (($$) + ($mul15))|0;
 $cmp20 = ($add|0)>($2|0);
 $fullFrameBits$0 = $cmp20 ? $2 : $add;
 $resvDrain_pre = ((($gfc)) + 21320|0);
 HEAP32[$resvDrain_pre>>2] = 0;
 $pinfo = ((($gfc)) + 85804|0);
 $6 = HEAP32[$pinfo>>2]|0;
 $cmp23 = ($6|0)==(0|0);
 if ($cmp23) {
  HEAP32[$mean_bits>>2] = $div;
  return ($fullFrameBits$0|0);
 }
 $resvsize = ((($6)) + 203488|0);
 $mean_bits27 = ((($6)) + 203484|0);
 $div25 = (($div|0) / 2)&-1;
 HEAP32[$mean_bits27>>2] = $div25;
 HEAP32[$resvsize>>2] = $4;
 HEAP32[$mean_bits>>2] = $div;
 return ($fullFrameBits$0|0);
}
function _ResvMaxBits($gfc,$mean_bits,$targ_bits,$extra_bits,$cbr) {
 $gfc = $gfc|0;
 $mean_bits = $mean_bits|0;
 $targ_bits = $targ_bits|0;
 $extra_bits = $extra_bits|0;
 $cbr = $cbr|0;
 var $$add = 0, $$add$div34 = 0, $$conv6 = 0, $$sub40 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0, $ResvMax3 = 0, $ResvSize2 = 0, $add = 0, $add13 = 0, $add_bits$0 = 0, $and = 0, $and18 = 0, $cmp = 0;
 var $cmp35 = 0, $conv = 0.0, $conv25 = 0.0, $conv29 = 0, $conv29$mean_bits = 0, $conv6 = 0, $disable_reservoir = 0, $div = 0, $div34 = 0, $mul = 0.0, $mul33 = 0, $mul8 = 0, $mul9 = 0, $or = 0, $sub = 0, $sub40 = 0, $substep_shaping = 0, $targBits$0 = 0, $tobool = 0, $tobool4 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $ResvSize2 = ((($gfc)) + 52140|0);
 $0 = HEAP32[$ResvSize2>>2]|0;
 $ResvMax3 = ((($gfc)) + 52144|0);
 $1 = HEAP32[$ResvMax3>>2]|0;
 $tobool = ($cbr|0)==(0);
 $add = $tobool ? 0 : $mean_bits;
 $$add = (($0) + ($add))|0;
 $substep_shaping = ((($gfc)) + 85096|0);
 $2 = HEAP32[$substep_shaping>>2]|0;
 $and = $2 & 1;
 $tobool4 = ($and|0)==(0);
 $conv = (+($1|0));
 $mul = $conv * 0.90000000000000002;
 $conv6 = (~~(($mul)));
 $$conv6 = $tobool4 ? $1 : $conv6;
 $mul8 = ($$add*10)|0;
 $mul9 = ($$conv6*9)|0;
 $cmp = ($mul8|0)>($mul9|0);
 if ($cmp) {
  $div = (($mul9|0) / 10)&-1;
  $sub = (($$add) - ($div))|0;
  $add13 = (($sub) + ($mean_bits))|0;
  $or = $2 | 128;
  HEAP32[$substep_shaping>>2] = $or;
  $add_bits$0 = $sub;$targBits$0 = $add13;
 } else {
  $and18 = $2 & 127;
  HEAP32[$substep_shaping>>2] = $and18;
  $disable_reservoir = ((($gfc)) + 144|0);
  $3 = HEAP32[$disable_reservoir>>2]|0;
  $4 = $3 | $and;
  $5 = ($4|0)==(0);
  $conv25 = (+($mean_bits|0));
  $6 = $conv25 * 0.90000000000000002;
  $conv29 = (~~(($6)));
  $conv29$mean_bits = $5 ? $conv29 : $mean_bits;
  $add_bits$0 = 0;$targBits$0 = $conv29$mean_bits;
 }
 $mul33 = ($1*6)|0;
 $div34 = (($mul33|0) / 10)&-1;
 $cmp35 = ($$add|0)<($div34|0);
 $$add$div34 = $cmp35 ? $$add : $div34;
 $sub40 = (($$add$div34) - ($add_bits$0))|0;
 $7 = ($sub40|0)>(0);
 $$sub40 = $7 ? $sub40 : 0;
 HEAP32[$targ_bits>>2] = $targBits$0;
 HEAP32[$extra_bits>>2] = $$sub40;
 return;
}
function _ResvAdjust($gfc,$gi) {
 $gfc = $gfc|0;
 $gi = $gi|0;
 var $0 = 0, $1 = 0, $2 = 0, $ResvSize = 0, $part2_3_length = 0, $part2_length = 0, $sub = 0, $sum = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $part2_3_length = ((($gi)) + 4768|0);
 $0 = HEAP32[$part2_3_length>>2]|0;
 $part2_length = ((($gi)) + 4844|0);
 $1 = HEAP32[$part2_length>>2]|0;
 $ResvSize = ((($gfc)) + 52140|0);
 $2 = HEAP32[$ResvSize>>2]|0;
 $sum = (($1) + ($0))|0;
 $sub = (($2) - ($sum))|0;
 HEAP32[$ResvSize>>2] = $sub;
 return;
}
function _ResvFrameEnd($gfc,$mean_bits) {
 $gfc = $gfc|0;
 $mean_bits = $mean_bits|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $ResvMax = 0, $ResvSize = 0, $add = 0, $add9 = 0, $cmp12 = 0, $cmp7 = 0, $div = 0, $main_data_begin = 0, $mode_gr = 0, $mul = 0, $mul11 = 0, $mul11$stuffingBits$1 = 0, $mul15 = 0, $rem = 0, $resvDrain_post = 0, $resvDrain_pre = 0;
 var $stuffingBits$1 = 0, $sub = 0, $sub19 = 0, $sub22 = 0, $sub24 = 0, $sub28 = 0, $sub6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $mode_gr = ((($gfc)) + 76|0);
 $0 = HEAP32[$mode_gr>>2]|0;
 $mul = Math_imul($0, $mean_bits)|0;
 $ResvSize = ((($gfc)) + 52140|0);
 $1 = HEAP32[$ResvSize>>2]|0;
 $add = (($1) + ($mul))|0;
 $resvDrain_post = ((($gfc)) + 21324|0);
 $resvDrain_pre = ((($gfc)) + 21320|0);
 $rem = (($add|0) % 8)&-1;
 $sub = (($add) - ($rem))|0;
 $ResvMax = ((($gfc)) + 52144|0);
 $2 = HEAP32[$ResvMax>>2]|0;
 $sub6 = (($sub) - ($2))|0;
 $cmp7 = ($sub6|0)>(0);
 $add9 = $cmp7 ? $sub6 : 0;
 $stuffingBits$1 = (($add9) + ($rem))|0;
 $main_data_begin = ((($gfc)) + 21312|0);
 $3 = HEAP32[$main_data_begin>>2]|0;
 $mul11 = $3 << 3;
 $cmp12 = ($mul11|0)<($stuffingBits$1|0);
 $mul11$stuffingBits$1 = $cmp12 ? $mul11 : $stuffingBits$1;
 $div = (($mul11$stuffingBits$1|0) / 8)&-1;
 $mul15 = $div << 3;
 HEAP32[$resvDrain_pre>>2] = $mul15;
 $sub19 = (($stuffingBits$1) - ($mul15))|0;
 $sub22 = (($add) - ($mul15))|0;
 $sub24 = (($3) - ($div))|0;
 HEAP32[$main_data_begin>>2] = $sub24;
 HEAP32[$resvDrain_post>>2] = $sub19;
 $sub28 = (($sub22) - ($sub19))|0;
 HEAP32[$ResvSize>>2] = $sub28;
 return;
}
function _lame_set_in_samplerate($gfp,$in_samplerate) {
 $gfp = $gfp|0;
 $in_samplerate = $in_samplerate|0;
 var $call = 0, $retval$0 = 0, $samplerate_in = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = -1;
  return ($retval$0|0);
 }
 $samplerate_in = ((($gfp)) + 12|0);
 HEAP32[$samplerate_in>>2] = $in_samplerate;
 $retval$0 = 0;
 return ($retval$0|0);
}
function _lame_set_num_channels($gfp,$num_channels) {
 $gfp = $gfp|0;
 $num_channels = $num_channels|0;
 var $call = 0, $cmp = 0, $cmp1 = 0, $num_channels3 = 0, $or$cond = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = -1;
  return ($retval$0|0);
 }
 $cmp = ($num_channels|0)>(2);
 $cmp1 = ($num_channels|0)==(0);
 $or$cond = $cmp | $cmp1;
 if ($or$cond) {
  $retval$0 = -1;
  return ($retval$0|0);
 }
 $num_channels3 = ((($gfp)) + 8|0);
 HEAP32[$num_channels3>>2] = $num_channels;
 $retval$0 = 0;
 return ($retval$0|0);
}
function _lame_set_scale($gfp,$scale) {
 $gfp = $gfp|0;
 $scale = +$scale;
 var $call = 0, $retval$0 = 0, $scale1 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = -1;
  return ($retval$0|0);
 }
 $scale1 = ((($gfp)) + 20|0);
 HEAPF32[$scale1>>2] = $scale;
 $retval$0 = 0;
 return ($retval$0|0);
}
function _lame_get_scale($gfp) {
 $gfp = $gfp|0;
 var $0 = 0.0, $call = 0, $retval$0 = 0.0, $scale = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = 0.0;
  return (+$retval$0);
 }
 $scale = ((($gfp)) + 20|0);
 $0 = +HEAPF32[$scale>>2];
 $retval$0 = $0;
 return (+$retval$0);
}
function _lame_set_mode($gfp,$mode) {
 $gfp = $gfp|0;
 $mode = $mode|0;
 var $0 = 0, $call = 0, $mode3 = 0, $or$cond = 0, $retval$1 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 $0 = ($mode>>>0)>(4);
 $or$cond = $0 | $tobool;
 if ($or$cond) {
  $retval$1 = -1;
  return ($retval$1|0);
 }
 $mode3 = ((($gfp)) + 48|0);
 HEAP32[$mode3>>2] = $mode;
 $retval$1 = 0;
 return ($retval$1|0);
}
function _lame_set_brate($gfp,$brate) {
 $gfp = $gfp|0;
 $brate = $brate|0;
 var $brate1 = 0, $call = 0, $cmp = 0, $disable_reservoir = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = -1;
  return ($retval$0|0);
 }
 $brate1 = ((($gfp)) + 96|0);
 HEAP32[$brate1>>2] = $brate;
 $cmp = ($brate|0)>(320);
 if (!($cmp)) {
  $retval$0 = 0;
  return ($retval$0|0);
 }
 $disable_reservoir = ((($gfp)) + 128|0);
 HEAP32[$disable_reservoir>>2] = 1;
 $retval$0 = 0;
 return ($retval$0|0);
}
function _lame_set_quant_comp($gfp,$quant_type) {
 $gfp = $gfp|0;
 $quant_type = $quant_type|0;
 var $call = 0, $quant_comp = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = -1;
  return ($retval$0|0);
 }
 $quant_comp = ((($gfp)) + 132|0);
 HEAP32[$quant_comp>>2] = $quant_type;
 $retval$0 = 0;
 return ($retval$0|0);
}
function _lame_set_quant_comp_short($gfp,$quant_type) {
 $gfp = $gfp|0;
 $quant_type = $quant_type|0;
 var $call = 0, $quant_comp_short = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = -1;
  return ($retval$0|0);
 }
 $quant_comp_short = ((($gfp)) + 136|0);
 HEAP32[$quant_comp_short>>2] = $quant_type;
 $retval$0 = 0;
 return ($retval$0|0);
}
function _lame_get_quant_comp($gfp) {
 $gfp = $gfp|0;
 var $0 = 0, $call = 0, $quant_comp = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = 0;
  return ($retval$0|0);
 }
 $quant_comp = ((($gfp)) + 132|0);
 $0 = HEAP32[$quant_comp>>2]|0;
 $retval$0 = $0;
 return ($retval$0|0);
}
function _lame_get_quant_comp_short($gfp) {
 $gfp = $gfp|0;
 var $0 = 0, $call = 0, $quant_comp_short = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = 0;
  return ($retval$0|0);
 }
 $quant_comp_short = ((($gfp)) + 136|0);
 $0 = HEAP32[$quant_comp_short>>2]|0;
 $retval$0 = $0;
 return ($retval$0|0);
}
function _lame_set_experimentalY($gfp,$experimentalY) {
 $gfp = $gfp|0;
 $experimentalY = $experimentalY|0;
 var $call = 0, $experimentalY1 = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = -1;
  return ($retval$0|0);
 }
 $experimentalY1 = ((($gfp)) + 140|0);
 HEAP32[$experimentalY1>>2] = $experimentalY;
 $retval$0 = 0;
 return ($retval$0|0);
}
function _lame_set_exp_nspsytune($gfp,$exp_nspsytune) {
 $gfp = $gfp|0;
 $exp_nspsytune = $exp_nspsytune|0;
 var $call = 0, $exp_nspsytune1 = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = -1;
  return ($retval$0|0);
 }
 $exp_nspsytune1 = ((($gfp)) + 148|0);
 HEAP32[$exp_nspsytune1>>2] = $exp_nspsytune;
 $retval$0 = 0;
 return ($retval$0|0);
}
function _lame_get_exp_nspsytune($gfp) {
 $gfp = $gfp|0;
 var $0 = 0, $call = 0, $exp_nspsytune = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = 0;
  return ($retval$0|0);
 }
 $exp_nspsytune = ((($gfp)) + 148|0);
 $0 = HEAP32[$exp_nspsytune>>2]|0;
 $retval$0 = $0;
 return ($retval$0|0);
}
function _lame_set_VBR($gfp,$VBR) {
 $gfp = $gfp|0;
 $VBR = $VBR|0;
 var $0 = 0, $VBR3 = 0, $call = 0, $or$cond = 0, $retval$1 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 $0 = ($VBR>>>0)>(4);
 $or$cond = $0 | $tobool;
 if ($or$cond) {
  $retval$1 = -1;
  return ($retval$1|0);
 }
 $VBR3 = ((($gfp)) + 156|0);
 HEAP32[$VBR3>>2] = $VBR;
 $retval$1 = 0;
 return ($retval$1|0);
}
function _lame_get_VBR($gfp) {
 $gfp = $gfp|0;
 var $0 = 0, $VBR = 0, $call = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = 0;
  return ($retval$0|0);
 }
 $VBR = ((($gfp)) + 156|0);
 $0 = HEAP32[$VBR>>2]|0;
 $retval$0 = $0;
 return ($retval$0|0);
}
function _lame_set_VBR_q($gfp,$VBR_q) {
 $gfp = $gfp|0;
 $VBR_q = $VBR_q|0;
 var $$VBR_q = 0, $0 = 0, $VBR_q$addr$1 = 0, $VBR_q$lobit = 0, $VBR_q5 = 0, $VBR_q_frac = 0, $call = 0, $cmp2 = 0, $ret$1 = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 $0 = ($VBR_q|0)>(0);
 $$VBR_q = $0 ? $VBR_q : 0;
 $cmp2 = ($$VBR_q|0)>(9);
 if ($tobool) {
  $retval$0 = -1;
  return ($retval$0|0);
 }
 $VBR_q_frac = ((($gfp)) + 160|0);
 $VBR_q5 = ((($gfp)) + 164|0);
 $VBR_q$lobit = $VBR_q >> 31;
 $ret$1 = $cmp2 ? -1 : $VBR_q$lobit;
 $VBR_q$addr$1 = $cmp2 ? 9 : $$VBR_q;
 HEAP32[$VBR_q5>>2] = $VBR_q$addr$1;
 HEAPF32[$VBR_q_frac>>2] = 0.0;
 $retval$0 = $ret$1;
 return ($retval$0|0);
}
function _lame_set_VBR_mean_bitrate_kbps($gfp,$VBR_mean_bitrate_kbps) {
 $gfp = $gfp|0;
 $VBR_mean_bitrate_kbps = $VBR_mean_bitrate_kbps|0;
 var $VBR_mean_bitrate_kbps1 = 0, $call = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = -1;
  return ($retval$0|0);
 }
 $VBR_mean_bitrate_kbps1 = ((($gfp)) + 168|0);
 HEAP32[$VBR_mean_bitrate_kbps1>>2] = $VBR_mean_bitrate_kbps;
 $retval$0 = 0;
 return ($retval$0|0);
}
function _lame_get_VBR_mean_bitrate_kbps($gfp) {
 $gfp = $gfp|0;
 var $0 = 0, $VBR_mean_bitrate_kbps = 0, $call = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = 0;
  return ($retval$0|0);
 }
 $VBR_mean_bitrate_kbps = ((($gfp)) + 168|0);
 $0 = HEAP32[$VBR_mean_bitrate_kbps>>2]|0;
 $retval$0 = $0;
 return ($retval$0|0);
}
function _lame_set_maskingadjust($gfp,$adjust) {
 $gfp = $gfp|0;
 $adjust = +$adjust;
 var $call = 0, $maskingadjust = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = -1;
  return ($retval$0|0);
 }
 $maskingadjust = ((($gfp)) + 200|0);
 HEAPF32[$maskingadjust>>2] = $adjust;
 $retval$0 = 0;
 return ($retval$0|0);
}
function _lame_get_maskingadjust($gfp) {
 $gfp = $gfp|0;
 var $0 = 0.0, $call = 0, $maskingadjust = 0, $retval$0 = 0.0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = 0.0;
  return (+$retval$0);
 }
 $maskingadjust = ((($gfp)) + 200|0);
 $0 = +HEAPF32[$maskingadjust>>2];
 $retval$0 = $0;
 return (+$retval$0);
}
function _lame_set_maskingadjust_short($gfp,$adjust) {
 $gfp = $gfp|0;
 $adjust = +$adjust;
 var $call = 0, $maskingadjust_short = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = -1;
  return ($retval$0|0);
 }
 $maskingadjust_short = ((($gfp)) + 204|0);
 HEAPF32[$maskingadjust_short>>2] = $adjust;
 $retval$0 = 0;
 return ($retval$0|0);
}
function _lame_get_maskingadjust_short($gfp) {
 $gfp = $gfp|0;
 var $0 = 0.0, $call = 0, $maskingadjust_short = 0, $retval$0 = 0.0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = 0.0;
  return (+$retval$0);
 }
 $maskingadjust_short = ((($gfp)) + 204|0);
 $0 = +HEAPF32[$maskingadjust_short>>2];
 $retval$0 = $0;
 return (+$retval$0);
}
function _lame_set_ATHtype($gfp,$ATHtype) {
 $gfp = $gfp|0;
 $ATHtype = $ATHtype|0;
 var $ATHtype1 = 0, $call = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = -1;
  return ($retval$0|0);
 }
 $ATHtype1 = ((($gfp)) + 220|0);
 HEAP32[$ATHtype1>>2] = $ATHtype;
 $retval$0 = 0;
 return ($retval$0|0);
}
function _lame_set_ATHcurve($gfp,$ATHcurve) {
 $gfp = $gfp|0;
 $ATHcurve = +$ATHcurve;
 var $ATHcurve1 = 0, $call = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = -1;
  return ($retval$0|0);
 }
 $ATHcurve1 = ((($gfp)) + 224|0);
 HEAPF32[$ATHcurve1>>2] = $ATHcurve;
 $retval$0 = 0;
 return ($retval$0|0);
}
function _lame_get_ATHcurve($gfp) {
 $gfp = $gfp|0;
 var $0 = 0.0, $ATHcurve = 0, $call = 0, $retval$0 = 0.0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = 0.0;
  return (+$retval$0);
 }
 $ATHcurve = ((($gfp)) + 224|0);
 $0 = +HEAPF32[$ATHcurve>>2];
 $retval$0 = $0;
 return (+$retval$0);
}
function _lame_set_ATHlower($gfp,$ATHlower) {
 $gfp = $gfp|0;
 $ATHlower = +$ATHlower;
 var $ATH_lower_db = 0, $call = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = -1;
  return ($retval$0|0);
 }
 $ATH_lower_db = ((($gfp)) + 228|0);
 HEAPF32[$ATH_lower_db>>2] = $ATHlower;
 $retval$0 = 0;
 return ($retval$0|0);
}
function _lame_get_ATHlower($gfp) {
 $gfp = $gfp|0;
 var $0 = 0.0, $ATH_lower_db = 0, $call = 0, $retval$0 = 0.0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = 0.0;
  return (+$retval$0);
 }
 $ATH_lower_db = ((($gfp)) + 228|0);
 $0 = +HEAPF32[$ATH_lower_db>>2];
 $retval$0 = $0;
 return (+$retval$0);
}
function _lame_set_athaa_sensitivity($gfp,$athaa_sensitivity) {
 $gfp = $gfp|0;
 $athaa_sensitivity = +$athaa_sensitivity;
 var $athaa_sensitivity1 = 0, $call = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = -1;
  return ($retval$0|0);
 }
 $athaa_sensitivity1 = ((($gfp)) + 236|0);
 HEAPF32[$athaa_sensitivity1>>2] = $athaa_sensitivity;
 $retval$0 = 0;
 return ($retval$0|0);
}
function _lame_get_athaa_sensitivity($gfp) {
 $gfp = $gfp|0;
 var $0 = 0.0, $athaa_sensitivity = 0, $call = 0, $retval$0 = 0.0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = 0.0;
  return (+$retval$0);
 }
 $athaa_sensitivity = ((($gfp)) + 236|0);
 $0 = +HEAPF32[$athaa_sensitivity>>2];
 $retval$0 = $0;
 return (+$retval$0);
}
function _lame_set_interChRatio($gfp,$ratio) {
 $gfp = $gfp|0;
 $ratio = +$ratio;
 var $call = 0, $cmp1 = 0, $interChRatio = 0, $notlhs = 0, $notrhs = 0, $or$cond$not = 0, $or$cond4 = 0, $retval$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $notlhs = ($call|0)==(0);
 $notrhs = !($ratio >= 0.0);
 $or$cond$not = $notrhs | $notlhs;
 $cmp1 = !($ratio <= 1.0);
 $or$cond4 = $cmp1 | $or$cond$not;
 if ($or$cond4) {
  $retval$0 = -1;
  return ($retval$0|0);
 }
 $interChRatio = ((($gfp)) + 248|0);
 HEAPF32[$interChRatio>>2] = $ratio;
 $retval$0 = 0;
 return ($retval$0|0);
}
function _lame_get_interChRatio($gfp) {
 $gfp = $gfp|0;
 var $0 = 0.0, $call = 0, $interChRatio = 0, $retval$0 = 0.0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = 0.0;
  return (+$retval$0);
 }
 $interChRatio = ((($gfp)) + 248|0);
 $0 = +HEAPF32[$interChRatio>>2];
 $retval$0 = $0;
 return (+$retval$0);
}
function _lame_set_sfscale($gfp,$val) {
 $gfp = $gfp|0;
 $val = $val|0;
 var $call = 0, $cmp = 0, $cond = 0, $noise_shaping = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = -1;
  return ($retval$0|0);
 }
 $noise_shaping = ((($gfp)) + 84|0);
 $cmp = ($val|0)!=(0);
 $cond = $cmp ? 2 : 1;
 HEAP32[$noise_shaping>>2] = $cond;
 $retval$0 = 0;
 return ($retval$0|0);
}
function _lame_set_short_threshold_lrm($gfp,$lrm) {
 $gfp = $gfp|0;
 $lrm = +$lrm;
 var $attackthre = 0, $call = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = -1;
  return ($retval$0|0);
 }
 $attackthre = ((($gfp)) + 264|0);
 HEAPF32[$attackthre>>2] = $lrm;
 $retval$0 = 0;
 return ($retval$0|0);
}
function _lame_get_short_threshold_lrm($gfp) {
 $gfp = $gfp|0;
 var $0 = 0.0, $attackthre = 0, $call = 0, $retval$0 = 0.0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = 0.0;
  return (+$retval$0);
 }
 $attackthre = ((($gfp)) + 264|0);
 $0 = +HEAPF32[$attackthre>>2];
 $retval$0 = $0;
 return (+$retval$0);
}
function _lame_set_short_threshold_s($gfp,$s) {
 $gfp = $gfp|0;
 $s = +$s;
 var $attackthre_s = 0, $call = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = -1;
  return ($retval$0|0);
 }
 $attackthre_s = ((($gfp)) + 268|0);
 HEAPF32[$attackthre_s>>2] = $s;
 $retval$0 = 0;
 return ($retval$0|0);
}
function _lame_get_short_threshold_s($gfp) {
 $gfp = $gfp|0;
 var $0 = 0.0, $attackthre_s = 0, $call = 0, $retval$0 = 0.0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = 0.0;
  return (+$retval$0);
 }
 $attackthre_s = ((($gfp)) + 268|0);
 $0 = +HEAPF32[$attackthre_s>>2];
 $retval$0 = $0;
 return (+$retval$0);
}
function _lame_set_msfix($gfp,$msfix) {
 $gfp = $gfp|0;
 $msfix = +$msfix;
 var $call = 0, $conv = 0.0, $msfix1 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  return;
 }
 $msfix1 = ((($gfp)) + 252|0);
 $conv = $msfix;
 HEAPF32[$msfix1>>2] = $conv;
 return;
}
function _lame_get_msfix($gfp) {
 $gfp = $gfp|0;
 var $0 = 0.0, $call = 0, $msfix = 0, $retval$0 = 0.0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_is_lame_global_flags_valid($gfp)|0);
 $tobool = ($call|0)==(0);
 if ($tobool) {
  $retval$0 = 0.0;
  return (+$retval$0);
 }
 $msfix = ((($gfp)) + 252|0);
 $0 = +HEAPF32[$msfix>>2];
 $retval$0 = $0;
 return (+$retval$0);
}
function _noquant_count_bits($gfc,$gi,$prev_noise) {
 $gfc = $gfc|0;
 $gi = $gi|0;
 $prev_noise = $prev_noise|0;
 var $$shr111 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $a1$0$lcssa = 0, $a1$0114 = 0, $a1$4 = 0, $a2$0$lcssa = 0, $a2$0113 = 0, $a2$3 = 0, $add = 0, $add$ptr = 0, $add$ptr122 = 0, $add$ptr131 = 0, $add$ptr132 = 0;
 var $add$ptr91 = 0, $add30 = 0, $add32 = 0, $add34 = 0, $add36 = 0, $add39 = 0, $add81 = 0, $add82 = 0, $add86 = 0, $arraydecay = 0, $arrayidx = 0, $arrayidx125 = 0, $arrayidx135 = 0, $arrayidx150 = 0, $arrayidx17 = 0, $arrayidx19 = 0, $arrayidx21 = 0, $arrayidx23 = 0, $arrayidx35 = 0, $arrayidx37 = 0;
 var $arrayidx59 = 0, $arrayidx73 = 0, $arrayidx78 = 0, $arrayidx8 = 0, $arrayidx83 = 0, $arrayidx87 = 0, $arrayidx92 = 0, $arrayidx99 = 0, $big_values = 0, $bits = 0, $block_type = 0, $call = 0, $call123 = 0, $call133 = 0, $choose_table = 0, $choose_table121 = 0, $choose_table130 = 0, $cmp100 = 0, $cmp106 = 0, $cmp112 = 0;
 var $cmp118 = 0, $cmp127 = 0, $cmp137 = 0, $cmp14 = 0, $cmp14112 = 0, $cmp145 = 0, $cmp152 = 0, $cmp27 = 0, $cmp47 = 0, $cmp52 = 0, $cmp6 = 0, $cmp62 = 0, $cmp88 = 0, $cond111 = 0, $cond117 = 0, $conv = 0, $conv38 = 0, $conv74 = 0, $conv79 = 0, $count1 = 0;
 var $count1121 = 0, $count1bits = 0, $count1table_select = 0, $count1table_select123 = 0, $i$0 = 0, $i$1$ = 0, $i$1$lcssa = 0, $i$1$lcssa125 = 0, $i$1$mul60 = 0, $i$1115 = 0, $inc = 0, $max_nonzero_coeff = 0, $mul = 0, $mul31 = 0, $mul33 = 0, $mul60 = 0, $or = 0, $or24 = 0, $or25 = 0, $or26 = 0;
 var $part2_3_length = 0, $region0_count = 0, $region0_count95 = 0, $region1_count = 0, $region1_count96 = 0, $retval$0 = 0, $sfb$0 = 0, $sfb_count1 = 0, $sfb_count1154 = 0, $shr111 = 0, $sub = 0, $sub16 = 0, $sub18 = 0, $sub20 = 0, $sub22 = 0, $sub7 = 0, $sub72 = 0, $sub77 = 0, $tobool = 0, $tobool9 = 0;
 var $use_best_huffman = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $bits = sp;
 HEAP32[$bits>>2] = 0;
 $arraydecay = ((($gi)) + 2304|0);
 $max_nonzero_coeff = ((($gi)) + 5208|0);
 $0 = HEAP32[$max_nonzero_coeff>>2]|0;
 $add = (($0) + 2)|0;
 $shr111 = $add & -2;
 $1 = ($shr111|0)<(576);
 $$shr111 = $1 ? $shr111 : 576;
 $tobool = ($prev_noise|0)!=(0|0);
 if ($tobool) {
  $sfb_count1 = ((($prev_noise)) + 4|0);
  HEAP32[$sfb_count1>>2] = 0;
  $i$0 = $$shr111;
 } else {
  $i$0 = $$shr111;
 }
 while(1) {
  $cmp6 = ($i$0|0)>(1);
  if (!($cmp6)) {
   label = 4;
   break;
  }
  $sub = (($i$0) + -1)|0;
  $arrayidx = (((($gi)) + 2304|0) + ($sub<<2)|0);
  $2 = HEAP32[$arrayidx>>2]|0;
  $sub7 = (($i$0) + -2)|0;
  $arrayidx8 = (((($gi)) + 2304|0) + ($sub7<<2)|0);
  $3 = HEAP32[$arrayidx8>>2]|0;
  $or = $3 | $2;
  $tobool9 = ($or|0)==(0);
  if ($tobool9) {
   $i$0 = $sub7;
  } else {
   label = 6;
   break;
  }
 }
 if ((label|0) == 4) {
  $count1121 = ((($gi)) + 4776|0);
  HEAP32[$count1121>>2] = $i$0;
  label = 9;
 }
 else if ((label|0) == 6) {
  $count1 = ((($gi)) + 4776|0);
  HEAP32[$count1>>2] = $i$0;
  $cmp14112 = ($i$0|0)>(3);
  if ($cmp14112) {
   $a1$0114 = 0;$a2$0113 = 0;$i$1115 = $i$0;
   while(1) {
    $sub16 = (($i$1115) + -4)|0;
    $arrayidx17 = (((($gi)) + 2304|0) + ($sub16<<2)|0);
    $4 = HEAP32[$arrayidx17>>2]|0;
    $sub18 = (($i$1115) + -3)|0;
    $arrayidx19 = (((($gi)) + 2304|0) + ($sub18<<2)|0);
    $5 = HEAP32[$arrayidx19>>2]|0;
    $sub20 = (($i$1115) + -2)|0;
    $arrayidx21 = (((($gi)) + 2304|0) + ($sub20<<2)|0);
    $6 = HEAP32[$arrayidx21>>2]|0;
    $sub22 = (($i$1115) + -1)|0;
    $arrayidx23 = (((($gi)) + 2304|0) + ($sub22<<2)|0);
    $7 = HEAP32[$arrayidx23>>2]|0;
    $or24 = $5 | $4;
    $or25 = $or24 | $6;
    $or26 = $or25 | $7;
    $cmp27 = ($or26>>>0)>(1);
    if ($cmp27) {
     $a1$0$lcssa = $a1$0114;$a2$0$lcssa = $a2$0113;$i$1$lcssa = $i$1115;
     break;
    }
    $mul = $4 << 1;
    $add30 = (($mul) + ($5))|0;
    $mul31 = $add30 << 1;
    $add32 = (($mul31) + ($6))|0;
    $mul33 = $add32 << 1;
    $add34 = (($mul33) + ($7))|0;
    $arrayidx35 = (15612 + ($add34)|0);
    $8 = HEAP8[$arrayidx35>>0]|0;
    $conv = $8&255;
    $add36 = (($conv) + ($a1$0114))|0;
    $arrayidx37 = (15628 + ($add34)|0);
    $9 = HEAP8[$arrayidx37>>0]|0;
    $conv38 = $9&255;
    $add39 = (($conv38) + ($a2$0113))|0;
    $cmp14 = ($sub16|0)>(3);
    if ($cmp14) {
     $a1$0114 = $add36;$a2$0113 = $add39;$i$1115 = $sub16;
    } else {
     $a1$0$lcssa = $add36;$a2$0$lcssa = $add39;$i$1$lcssa = $sub16;
     break;
    }
   }
   HEAP32[$bits>>2] = $a1$0$lcssa;
   $count1table_select = ((($gi)) + 4840|0);
   HEAP32[$count1table_select>>2] = 0;
   $cmp47 = ($a1$0$lcssa|0)>($a2$0$lcssa|0);
   if ($cmp47) {
    HEAP32[$bits>>2] = $a2$0$lcssa;
    HEAP32[$count1table_select>>2] = 1;
    $10 = $a2$0$lcssa;$i$1$lcssa125 = $i$1$lcssa;
   } else {
    $10 = $a1$0$lcssa;$i$1$lcssa125 = $i$1$lcssa;
   }
  } else {
   label = 9;
  }
 }
 if ((label|0) == 9) {
  HEAP32[$bits>>2] = 0;
  $count1table_select123 = ((($gi)) + 4840|0);
  HEAP32[$count1table_select123>>2] = 0;
  $10 = 0;$i$1$lcssa125 = $i$0;
 }
 $count1bits = ((($gi)) + 5184|0);
 HEAP32[$count1bits>>2] = $10;
 $big_values = ((($gi)) + 4772|0);
 HEAP32[$big_values>>2] = $i$1$lcssa125;
 $cmp52 = ($i$1$lcssa125|0)==(0);
 if ($cmp52) {
  $retval$0 = $10;
  STACKTOP = sp;return ($retval$0|0);
 }
 $block_type = ((($gi)) + 4788|0);
 $11 = HEAP32[$block_type>>2]|0;
 switch ($11|0) {
 case 2:  {
  $arrayidx59 = ((($gfc)) + 21464|0);
  $12 = HEAP32[$arrayidx59>>2]|0;
  $mul60 = ($12*3)|0;
  $cmp62 = ($mul60|0)>($i$1$lcssa125|0);
  $i$1$mul60 = $cmp62 ? $i$1$lcssa125 : $mul60;
  $a1$4 = $i$1$mul60;$a2$3 = $i$1$lcssa125;
  break;
 }
 case 0:  {
  $sub72 = (($i$1$lcssa125) + -2)|0;
  $arrayidx73 = (((($gfc)) + 85100|0) + ($sub72)|0);
  $13 = HEAP8[$arrayidx73>>0]|0;
  $conv74 = $13 << 24 >> 24;
  $region0_count = ((($gi)) + 4824|0);
  HEAP32[$region0_count>>2] = $conv74;
  $sub77 = (($i$1$lcssa125) + -1)|0;
  $arrayidx78 = (((($gfc)) + 85100|0) + ($sub77)|0);
  $14 = HEAP8[$arrayidx78>>0]|0;
  $conv79 = $14 << 24 >> 24;
  $region1_count = ((($gi)) + 4828|0);
  HEAP32[$region1_count>>2] = $conv79;
  $add81 = (($conv74) + 2)|0;
  $add82 = (($add81) + ($conv79))|0;
  $arrayidx83 = (((($gfc)) + 21360|0) + ($add82<<2)|0);
  $15 = HEAP32[$arrayidx83>>2]|0;
  $add86 = (($conv74) + 1)|0;
  $arrayidx87 = (((($gfc)) + 21360|0) + ($add86<<2)|0);
  $16 = HEAP32[$arrayidx87>>2]|0;
  $cmp88 = ($15|0)<($i$1$lcssa125|0);
  if ($cmp88) {
   $arrayidx92 = ((($gi)) + 4804|0);
   $add$ptr91 = (((($gi)) + 2304|0) + ($i$1$lcssa125<<2)|0);
   $add$ptr = (((($gi)) + 2304|0) + ($15<<2)|0);
   $choose_table = ((($gfc)) + 85816|0);
   $17 = HEAP32[$choose_table>>2]|0;
   $call = (FUNCTION_TABLE_iiii[$17 & 7]($add$ptr,$add$ptr91,$bits)|0);
   HEAP32[$arrayidx92>>2] = $call;
   $a1$4 = $16;$a2$3 = $15;
  } else {
   $a1$4 = $16;$a2$3 = $15;
  }
  break;
 }
 default: {
  $region0_count95 = ((($gi)) + 4824|0);
  HEAP32[$region0_count95>>2] = 7;
  $region1_count96 = ((($gi)) + 4828|0);
  HEAP32[$region1_count96>>2] = 13;
  $arrayidx99 = ((($gfc)) + 21392|0);
  $18 = HEAP32[$arrayidx99>>2]|0;
  $cmp100 = ($18|0)>($i$1$lcssa125|0);
  $i$1$ = $cmp100 ? $i$1$lcssa125 : $18;
  $a1$4 = $i$1$;$a2$3 = $i$1$lcssa125;
 }
 }
 $cmp106 = ($a1$4|0)<($i$1$lcssa125|0);
 $cond111 = $cmp106 ? $a1$4 : $i$1$lcssa125;
 $cmp112 = ($a2$3|0)<($i$1$lcssa125|0);
 $cond117 = $cmp112 ? $a2$3 : $i$1$lcssa125;
 $cmp118 = ($cond111|0)>(0);
 if ($cmp118) {
  $arrayidx125 = ((($gi)) + 4796|0);
  $add$ptr122 = (((($gi)) + 2304|0) + ($cond111<<2)|0);
  $choose_table121 = ((($gfc)) + 85816|0);
  $19 = HEAP32[$choose_table121>>2]|0;
  $call123 = (FUNCTION_TABLE_iiii[$19 & 7]($arraydecay,$add$ptr122,$bits)|0);
  HEAP32[$arrayidx125>>2] = $call123;
 }
 $cmp127 = ($cond111|0)<($cond117|0);
 if ($cmp127) {
  $arrayidx135 = ((($gi)) + 4800|0);
  $add$ptr132 = (((($gi)) + 2304|0) + ($cond117<<2)|0);
  $add$ptr131 = (((($gi)) + 2304|0) + ($cond111<<2)|0);
  $choose_table130 = ((($gfc)) + 85816|0);
  $20 = HEAP32[$choose_table130>>2]|0;
  $call133 = (FUNCTION_TABLE_iiii[$20 & 7]($add$ptr131,$add$ptr132,$bits)|0);
  HEAP32[$arrayidx135>>2] = $call133;
 }
 $use_best_huffman = ((($gfc)) + 36|0);
 $21 = HEAP32[$use_best_huffman>>2]|0;
 $cmp137 = ($21|0)==(2);
 if ($cmp137) {
  $22 = HEAP32[$bits>>2]|0;
  $part2_3_length = ((($gi)) + 4768|0);
  HEAP32[$part2_3_length>>2] = $22;
  _best_huffman_divide($gfc,$gi);
  $23 = HEAP32[$part2_3_length>>2]|0;
  HEAP32[$bits>>2] = $23;
 }
 if ($tobool) {
  $24 = HEAP32[$block_type>>2]|0;
  $cmp145 = ($24|0)==(0);
  if ($cmp145) {
   $25 = HEAP32[$big_values>>2]|0;
   $sfb$0 = 0;
   while(1) {
    $arrayidx150 = (((($gfc)) + 21360|0) + ($sfb$0<<2)|0);
    $26 = HEAP32[$arrayidx150>>2]|0;
    $cmp152 = ($26|0)<($25|0);
    $inc = (($sfb$0) + 1)|0;
    if ($cmp152) {
     $sfb$0 = $inc;
    } else {
     break;
    }
   }
   $sfb_count1154 = ((($prev_noise)) + 4|0);
   HEAP32[$sfb_count1154>>2] = $sfb$0;
  }
 }
 $27 = HEAP32[$bits>>2]|0;
 $retval$0 = $27;
 STACKTOP = sp;return ($retval$0|0);
}
function _best_huffman_divide($gfc,$gi) {
 $gfc = $gfc|0;
 $gi = $gi|0;
 var $$ = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $a1$0$lcssa = 0, $a1$0104 = 0, $a2$0$a1$0 = 0, $a2$0$lcssa = 0, $a2$0103 = 0, $add = 0, $add$i = 0, $add$i63 = 0, $add$i86 = 0, $add$ptr = 0, $add$ptr$i = 0, $add$ptr$i65 = 0, $add$ptr$i89 = 0, $add$ptr19$i = 0, $add$ptr6$i = 0, $add$ptr6$i74 = 0, $add$ptr75 = 0, $add$ptr76 = 0, $add11$i = 0, $add12$i = 0;
 var $add31 = 0, $add35 = 0, $add39 = 0, $add41 = 0, $add44 = 0, $arraydecay = 0, $arrayidx = 0, $arrayidx$1$i = 0, $arrayidx$10$i = 0, $arrayidx$11$i = 0, $arrayidx$12$i = 0, $arrayidx$13$i = 0, $arrayidx$14$i = 0, $arrayidx$15$i = 0, $arrayidx$16$i = 0, $arrayidx$17$i = 0, $arrayidx$18$i = 0, $arrayidx$19$i = 0, $arrayidx$2$i = 0, $arrayidx$20$i = 0;
 var $arrayidx$21$i = 0, $arrayidx$22$i = 0, $arrayidx$3$i = 0, $arrayidx$4$i = 0, $arrayidx$5$i = 0, $arrayidx$6$i = 0, $arrayidx$7$i = 0, $arrayidx$8$i = 0, $arrayidx$9$i = 0, $arrayidx$i = 0, $arrayidx$i81 = 0, $arrayidx13$i = 0, $arrayidx13$i67 = 0, $arrayidx13$i93 = 0, $arrayidx17 = 0, $arrayidx19$i = 0, $arrayidx19$i95 = 0, $arrayidx2$i = 0, $arrayidx2$i85 = 0, $arrayidx20$i = 0;
 var $arrayidx20$i77 = 0, $arrayidx22$i = 0, $arrayidx22$i68 = 0, $arrayidx22$i96 = 0, $arrayidx24$i = 0, $arrayidx24$i78 = 0, $arrayidx26$i = 0, $arrayidx26$i79 = 0, $arrayidx28 = 0, $arrayidx28$i = 0, $arrayidx30 = 0, $arrayidx30$i = 0, $arrayidx32$i = 0, $arrayidx34 = 0, $arrayidx38 = 0, $arrayidx4$i = 0, $arrayidx40 = 0, $arrayidx42 = 0, $arrayidx60 = 0, $arrayidx69 = 0;
 var $arrayidx80 = 0, $big_values$i = 0, $big_values$pre$phiZ2D = 0, $bits$i69 = 0, $block_type = 0, $block_type52 = 0, $call = 0, $call$i = 0, $call$i66 = 0, $call$i90 = 0, $call20$i = 0, $call78 = 0, $choose_table = 0, $choose_table$i = 0, $choose_table$i73 = 0, $choose_table74 = 0, $cmp = 0, $cmp$i = 0, $cmp$i99 = 0, $cmp1$i = 0;
 var $cmp1$i82 = 0, $cmp14$i = 0, $cmp15 = 0, $cmp18 = 0, $cmp2 = 0, $cmp2$i = 0, $cmp21 = 0, $cmp23$i = 0, $cmp26 = 0, $cmp26102 = 0, $cmp3$i = 0, $cmp3$i87 = 0, $cmp4 = 0, $cmp47 = 0, $cmp5$i = 0, $cmp53 = 0, $cmp61 = 0, $cmp65 = 0, $cmp7$i = 0, $cmp71 = 0;
 var $cmp8$i = 0, $cmp8$i91 = 0, $cmp84 = 0, $cod_info2 = 0, $conv = 0, $conv43 = 0, $count1 = 0, $count124 = 0, $count1bits = 0, $count1bits$i = 0, $count1table_select = 0, $gi$idx = 0, $gi$idx$val = 0, $i$0$ = 0, $i$0105 = 0, $inc$i = 0, $inc$i98 = 0, $inc35$i = 0, $mode_gr = 0, $mul = 0;
 var $mul32 = 0, $mul36 = 0, $or = 0, $part2_3_length = 0, $part2_3_length$i = 0, $part2_3_length$i72 = 0, $part2_3_length82 = 0, $r0$12$i = 0, $r01_bits = 0, $r01_div = 0, $r0_tbl = 0, $r0bits$i = 0, $r1$01$i = 0, $r1_tbl = 0, $r2$028$i = 0, $r2$028$i80 = 0, $region0_count$i = 0, $region0_count$i75 = 0, $region1_count$i = 0, $region1_count$i76 = 0;
 var $smax = 0, $sub = 0, $sub$i = 0, $sub$i84 = 0, $sub16 = 0, $sub17$i = 0, $sub17$i94 = 0, $sub27 = 0, $sub29 = 0, $sub33 = 0, $sub37 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 5632|0;
 $bits$i69 = sp + 5624|0;
 $r0bits$i = sp + 5620|0;
 $cod_info2 = sp + 368|0;
 $r01_bits = sp + 276|0;
 $r01_div = sp + 184|0;
 $r0_tbl = sp + 92|0;
 $r1_tbl = sp;
 $arraydecay = ((($gi)) + 2304|0);
 $block_type = ((($gi)) + 4788|0);
 $0 = HEAP32[$block_type>>2]|0;
 $cmp = ($0|0)==(2);
 do {
  if ($cmp) {
   $mode_gr = ((($gfc)) + 76|0);
   $1 = HEAP32[$mode_gr>>2]|0;
   $cmp2 = ($1|0)==(1);
   if ($cmp2) {
    STACKTOP = sp;return;
   } else {
    _memcpy(($cod_info2|0),($gi|0),5252)|0;
    $57 = $gi;
    label = 5;
    break;
   }
  } else {
   _memcpy(($cod_info2|0),($gi|0),5252)|0;
   $cmp4 = ($0|0)==(0);
   if ($cmp4) {
    $gi$idx = ((($gi)) + 4772|0);
    $gi$idx$val = HEAP32[$gi$idx>>2]|0;
    HEAP32[$r01_bits>>2] = 100000;
    $arrayidx$1$i = ((($r01_bits)) + 4|0);
    HEAP32[$arrayidx$1$i>>2] = 100000;
    $arrayidx$2$i = ((($r01_bits)) + 8|0);
    HEAP32[$arrayidx$2$i>>2] = 100000;
    $arrayidx$3$i = ((($r01_bits)) + 12|0);
    HEAP32[$arrayidx$3$i>>2] = 100000;
    $arrayidx$4$i = ((($r01_bits)) + 16|0);
    HEAP32[$arrayidx$4$i>>2] = 100000;
    $arrayidx$5$i = ((($r01_bits)) + 20|0);
    HEAP32[$arrayidx$5$i>>2] = 100000;
    $arrayidx$6$i = ((($r01_bits)) + 24|0);
    HEAP32[$arrayidx$6$i>>2] = 100000;
    $arrayidx$7$i = ((($r01_bits)) + 28|0);
    HEAP32[$arrayidx$7$i>>2] = 100000;
    $arrayidx$8$i = ((($r01_bits)) + 32|0);
    HEAP32[$arrayidx$8$i>>2] = 100000;
    $arrayidx$9$i = ((($r01_bits)) + 36|0);
    HEAP32[$arrayidx$9$i>>2] = 100000;
    $arrayidx$10$i = ((($r01_bits)) + 40|0);
    HEAP32[$arrayidx$10$i>>2] = 100000;
    $arrayidx$11$i = ((($r01_bits)) + 44|0);
    HEAP32[$arrayidx$11$i>>2] = 100000;
    $arrayidx$12$i = ((($r01_bits)) + 48|0);
    HEAP32[$arrayidx$12$i>>2] = 100000;
    $arrayidx$13$i = ((($r01_bits)) + 52|0);
    HEAP32[$arrayidx$13$i>>2] = 100000;
    $arrayidx$14$i = ((($r01_bits)) + 56|0);
    HEAP32[$arrayidx$14$i>>2] = 100000;
    $arrayidx$15$i = ((($r01_bits)) + 60|0);
    HEAP32[$arrayidx$15$i>>2] = 100000;
    $arrayidx$16$i = ((($r01_bits)) + 64|0);
    HEAP32[$arrayidx$16$i>>2] = 100000;
    $arrayidx$17$i = ((($r01_bits)) + 68|0);
    HEAP32[$arrayidx$17$i>>2] = 100000;
    $arrayidx$18$i = ((($r01_bits)) + 72|0);
    HEAP32[$arrayidx$18$i>>2] = 100000;
    $arrayidx$19$i = ((($r01_bits)) + 76|0);
    HEAP32[$arrayidx$19$i>>2] = 100000;
    $arrayidx$20$i = ((($r01_bits)) + 80|0);
    HEAP32[$arrayidx$20$i>>2] = 100000;
    $arrayidx$21$i = ((($r01_bits)) + 84|0);
    HEAP32[$arrayidx$21$i>>2] = 100000;
    $arrayidx$22$i = ((($r01_bits)) + 88|0);
    HEAP32[$arrayidx$22$i>>2] = 100000;
    $choose_table$i = ((($gfc)) + 85816|0);
    $r0$12$i = 0;
    while(1) {
     $add$i = (($r0$12$i) + 1)|0;
     $arrayidx4$i = (((($gfc)) + 21360|0) + ($add$i<<2)|0);
     $2 = HEAP32[$arrayidx4$i>>2]|0;
     $cmp5$i = ($2|0)<($gi$idx$val|0);
     if (!($cmp5$i)) {
      label = 14;
      break;
     }
     HEAP32[$r0bits$i>>2] = 0;
     $3 = HEAP32[$choose_table$i>>2]|0;
     $add$ptr$i = (((($gi)) + 2304|0) + ($2<<2)|0);
     $call$i = (FUNCTION_TABLE_iiii[$3 & 7]($arraydecay,$add$ptr$i,$r0bits$i)|0);
     $r1$01$i = 0;
     while(1) {
      $add11$i = (($r1$01$i) + ($r0$12$i))|0;
      $add12$i = (($add11$i) + 2)|0;
      $arrayidx13$i = (((($gfc)) + 21360|0) + ($add12$i<<2)|0);
      $4 = HEAP32[$arrayidx13$i>>2]|0;
      $cmp14$i = ($4|0)<($gi$idx$val|0);
      if (!($cmp14$i)) {
       break;
      }
      $5 = HEAP32[$r0bits$i>>2]|0;
      HEAP32[$bits$i69>>2] = $5;
      $6 = HEAP32[$choose_table$i>>2]|0;
      $add$ptr19$i = (((($gi)) + 2304|0) + ($4<<2)|0);
      $call20$i = (FUNCTION_TABLE_iiii[$6 & 7]($add$ptr$i,$add$ptr19$i,$bits$i69)|0);
      $arrayidx22$i = (($r01_bits) + ($add11$i<<2)|0);
      $7 = HEAP32[$arrayidx22$i>>2]|0;
      $8 = HEAP32[$bits$i69>>2]|0;
      $cmp23$i = ($7|0)>($8|0);
      if ($cmp23$i) {
       $arrayidx28$i = (($r01_div) + ($add11$i<<2)|0);
       $arrayidx30$i = (($r0_tbl) + ($add11$i<<2)|0);
       $arrayidx32$i = (($r1_tbl) + ($add11$i<<2)|0);
       HEAP32[$arrayidx22$i>>2] = $8;
       HEAP32[$arrayidx28$i>>2] = $r0$12$i;
       HEAP32[$arrayidx30$i>>2] = $call$i;
       HEAP32[$arrayidx32$i>>2] = $call20$i;
      }
      $inc35$i = (($r1$01$i) + 1)|0;
      $cmp7$i = ($inc35$i|0)<(8);
      if ($cmp7$i) {
       $r1$01$i = $inc35$i;
      } else {
       break;
      }
     }
     $cmp2$i = ($add$i|0)<(16);
     if ($cmp2$i) {
      $r0$12$i = $add$i;
     } else {
      break;
     }
    }
    if ((label|0) == 14) {
    }
    $big_values$i = ((($cod_info2)) + 4772|0);
    $9 = HEAP32[$big_values$i>>2]|0;
    $count1bits$i = ((($cod_info2)) + 5184|0);
    $part2_3_length$i = ((($gi)) + 4768|0);
    $add$ptr6$i = (((($gi)) + 2304|0) + ($9<<2)|0);
    $region0_count$i = ((($gi)) + 4824|0);
    $region1_count$i = ((($gi)) + 4828|0);
    $arrayidx20$i = ((($gi)) + 4796|0);
    $arrayidx24$i = ((($gi)) + 4800|0);
    $arrayidx26$i = ((($gi)) + 4804|0);
    $r2$028$i = 2;
    while(1) {
     $arrayidx$i = (((($gfc)) + 21360|0) + ($r2$028$i<<2)|0);
     $10 = HEAP32[$arrayidx$i>>2]|0;
     $cmp1$i = ($10|0)<($9|0);
     if (!($cmp1$i)) {
      break;
     }
     $sub$i = (($r2$028$i) + -2)|0;
     $arrayidx2$i = (($r01_bits) + ($sub$i<<2)|0);
     $11 = HEAP32[$arrayidx2$i>>2]|0;
     $12 = HEAP32[$count1bits$i>>2]|0;
     $add$i63 = (($12) + ($11))|0;
     HEAP32[$bits$i69>>2] = $add$i63;
     $13 = HEAP32[$part2_3_length$i>>2]|0;
     $cmp3$i = ($13|0)>($add$i63|0);
     if (!($cmp3$i)) {
      break;
     }
     $14 = HEAP32[$choose_table$i>>2]|0;
     $add$ptr$i65 = (((($gi)) + 2304|0) + ($10<<2)|0);
     $call$i66 = (FUNCTION_TABLE_iiii[$14 & 7]($add$ptr$i65,$add$ptr6$i,$bits$i69)|0);
     $15 = HEAP32[$part2_3_length$i>>2]|0;
     $16 = HEAP32[$bits$i69>>2]|0;
     $cmp8$i = ($15|0)>($16|0);
     if ($cmp8$i) {
      _memcpy(($gi|0),($cod_info2|0),5252)|0;
      HEAP32[$part2_3_length$i>>2] = $16;
      $arrayidx13$i67 = (($r01_div) + ($sub$i<<2)|0);
      $17 = HEAP32[$arrayidx13$i67>>2]|0;
      HEAP32[$region0_count$i>>2] = $17;
      $sub17$i = (($sub$i) - ($17))|0;
      HEAP32[$region1_count$i>>2] = $sub17$i;
      $arrayidx19$i = (($r0_tbl) + ($sub$i<<2)|0);
      $18 = HEAP32[$arrayidx19$i>>2]|0;
      HEAP32[$arrayidx20$i>>2] = $18;
      $arrayidx22$i68 = (($r1_tbl) + ($sub$i<<2)|0);
      $19 = HEAP32[$arrayidx22$i68>>2]|0;
      HEAP32[$arrayidx24$i>>2] = $19;
      HEAP32[$arrayidx26$i>>2] = $call$i66;
     }
     $inc$i = (($r2$028$i) + 1)|0;
     $cmp$i = ($inc$i|0)<(23);
     if ($cmp$i) {
      $r2$028$i = $inc$i;
     } else {
      break;
     }
    }
    $24 = $gi;$big_values$pre$phiZ2D = $big_values$i;
   } else {
    $57 = $gi;
    label = 5;
   }
  }
 } while(0);
 if ((label|0) == 5) {
  $$pre = ((($cod_info2)) + 4772|0);
  $24 = $57;$big_values$pre$phiZ2D = $$pre;
 }
 $20 = HEAP32[$big_values$pre$phiZ2D>>2]|0;
 $cmp15 = ($20|0)==(0);
 if ($cmp15) {
  STACKTOP = sp;return;
 }
 $sub = (($20) + -2)|0;
 $arrayidx = (((($gi)) + 2304|0) + ($sub<<2)|0);
 $21 = HEAP32[$arrayidx>>2]|0;
 $sub16 = (($20) + -1)|0;
 $arrayidx17 = (((($gi)) + 2304|0) + ($sub16<<2)|0);
 $22 = HEAP32[$arrayidx17>>2]|0;
 $or = $22 | $21;
 $cmp18 = ($or>>>0)>(1);
 if ($cmp18) {
  STACKTOP = sp;return;
 }
 $count1 = ((($gi)) + 4776|0);
 $23 = HEAP32[$count1>>2]|0;
 $add = (($23) + 2)|0;
 $cmp21 = ($add|0)>(576);
 if ($cmp21) {
  STACKTOP = sp;return;
 }
 _memcpy(($cod_info2|0),($24|0),5252)|0;
 $count124 = ((($cod_info2)) + 4776|0);
 HEAP32[$count124>>2] = $add;
 $25 = HEAP32[$big_values$pre$phiZ2D>>2]|0;
 $cmp26102 = ($add|0)>($25|0);
 if ($cmp26102) {
  $26 = $25 ^ -1;
  $27 = (1 - ($23))|0;
  $28 = ($27|0)<($26|0);
  $smax = $28 ? $26 : $27;
  $29 = (($23) + ($smax))|0;
  $30 = (($29) + 2)|0;
  $31 = $30 & -4;
  $a1$0104 = 0;$a2$0103 = 0;$i$0105 = $add;
  while(1) {
   $sub27 = (($i$0105) + -4)|0;
   $arrayidx28 = (((($gi)) + 2304|0) + ($sub27<<2)|0);
   $32 = HEAP32[$arrayidx28>>2]|0;
   $mul = $32 << 1;
   $sub29 = (($i$0105) + -3)|0;
   $arrayidx30 = (((($gi)) + 2304|0) + ($sub29<<2)|0);
   $33 = HEAP32[$arrayidx30>>2]|0;
   $add31 = (($mul) + ($33))|0;
   $mul32 = $add31 << 1;
   $sub33 = (($i$0105) + -2)|0;
   $arrayidx34 = (((($gi)) + 2304|0) + ($sub33<<2)|0);
   $34 = HEAP32[$arrayidx34>>2]|0;
   $add35 = (($mul32) + ($34))|0;
   $mul36 = $add35 << 1;
   $sub37 = (($i$0105) + -1)|0;
   $arrayidx38 = (((($gi)) + 2304|0) + ($sub37<<2)|0);
   $35 = HEAP32[$arrayidx38>>2]|0;
   $add39 = (($mul36) + ($35))|0;
   $arrayidx40 = (15612 + ($add39)|0);
   $36 = HEAP8[$arrayidx40>>0]|0;
   $conv = $36&255;
   $add41 = (($conv) + ($a1$0104))|0;
   $arrayidx42 = (15628 + ($add39)|0);
   $37 = HEAP8[$arrayidx42>>0]|0;
   $conv43 = $37&255;
   $add44 = (($conv43) + ($a2$0103))|0;
   $cmp26 = ($sub27|0)>($25|0);
   if ($cmp26) {
    $a1$0104 = $add41;$a2$0103 = $add44;$i$0105 = $sub27;
   } else {
    break;
   }
  }
  $38 = (($23) + -2)|0;
  $39 = (($38) - ($31))|0;
  $40 = $39;$a1$0$lcssa = $add41;$a2$0$lcssa = $add44;
 } else {
  $40 = $add;$a1$0$lcssa = 0;$a2$0$lcssa = 0;
 }
 HEAP32[$big_values$pre$phiZ2D>>2] = $40;
 $count1table_select = ((($cod_info2)) + 4840|0);
 $cmp47 = ($a1$0$lcssa|0)>($a2$0$lcssa|0);
 $$ = $cmp47&1;
 $a2$0$a1$0 = $cmp47 ? $a2$0$lcssa : $a1$0$lcssa;
 HEAP32[$count1table_select>>2] = $$;
 $count1bits = ((($cod_info2)) + 5184|0);
 HEAP32[$count1bits>>2] = $a2$0$a1$0;
 $block_type52 = ((($cod_info2)) + 4788|0);
 $41 = HEAP32[$block_type52>>2]|0;
 $cmp53 = ($41|0)==(0);
 if ($cmp53) {
  $part2_3_length$i72 = ((($gi)) + 4768|0);
  $choose_table$i73 = ((($gfc)) + 85816|0);
  $add$ptr6$i74 = (((($gi)) + 2304|0) + ($40<<2)|0);
  $region0_count$i75 = ((($gi)) + 4824|0);
  $region1_count$i76 = ((($gi)) + 4828|0);
  $arrayidx20$i77 = ((($gi)) + 4796|0);
  $arrayidx24$i78 = ((($gi)) + 4800|0);
  $arrayidx26$i79 = ((($gi)) + 4804|0);
  $r2$028$i80 = 2;
  while(1) {
   $arrayidx$i81 = (((($gfc)) + 21360|0) + ($r2$028$i80<<2)|0);
   $42 = HEAP32[$arrayidx$i81>>2]|0;
   $cmp1$i82 = ($42|0)<($40|0);
   if (!($cmp1$i82)) {
    break;
   }
   $sub$i84 = (($r2$028$i80) + -2)|0;
   $arrayidx2$i85 = (($r01_bits) + ($sub$i84<<2)|0);
   $43 = HEAP32[$arrayidx2$i85>>2]|0;
   $44 = HEAP32[$count1bits>>2]|0;
   $add$i86 = (($44) + ($43))|0;
   HEAP32[$bits$i69>>2] = $add$i86;
   $45 = HEAP32[$part2_3_length$i72>>2]|0;
   $cmp3$i87 = ($45|0)>($add$i86|0);
   if (!($cmp3$i87)) {
    break;
   }
   $46 = HEAP32[$choose_table$i73>>2]|0;
   $add$ptr$i89 = (((($gi)) + 2304|0) + ($42<<2)|0);
   $call$i90 = (FUNCTION_TABLE_iiii[$46 & 7]($add$ptr$i89,$add$ptr6$i74,$bits$i69)|0);
   $47 = HEAP32[$part2_3_length$i72>>2]|0;
   $48 = HEAP32[$bits$i69>>2]|0;
   $cmp8$i91 = ($47|0)>($48|0);
   if ($cmp8$i91) {
    _memcpy(($24|0),($cod_info2|0),5252)|0;
    HEAP32[$part2_3_length$i72>>2] = $48;
    $arrayidx13$i93 = (($r01_div) + ($sub$i84<<2)|0);
    $49 = HEAP32[$arrayidx13$i93>>2]|0;
    HEAP32[$region0_count$i75>>2] = $49;
    $sub17$i94 = (($sub$i84) - ($49))|0;
    HEAP32[$region1_count$i76>>2] = $sub17$i94;
    $arrayidx19$i95 = (($r0_tbl) + ($sub$i84<<2)|0);
    $50 = HEAP32[$arrayidx19$i95>>2]|0;
    HEAP32[$arrayidx20$i77>>2] = $50;
    $arrayidx22$i96 = (($r1_tbl) + ($sub$i84<<2)|0);
    $51 = HEAP32[$arrayidx22$i96>>2]|0;
    HEAP32[$arrayidx24$i78>>2] = $51;
    HEAP32[$arrayidx26$i79>>2] = $call$i90;
   }
   $inc$i98 = (($r2$028$i80) + 1)|0;
   $cmp$i99 = ($inc$i98|0)<(23);
   if ($cmp$i99) {
    $r2$028$i80 = $inc$i98;
   } else {
    break;
   }
  }
  STACKTOP = sp;return;
 } else {
  $part2_3_length = ((($cod_info2)) + 4768|0);
  HEAP32[$part2_3_length>>2] = $a2$0$a1$0;
  $arrayidx60 = ((($gfc)) + 21392|0);
  $52 = HEAP32[$arrayidx60>>2]|0;
  $cmp61 = ($52|0)>($40|0);
  $i$0$ = $cmp61 ? $40 : $52;
  $cmp65 = ($i$0$|0)>(0);
  if ($cmp65) {
   $arrayidx69 = ((($cod_info2)) + 4796|0);
   $add$ptr = (((($gi)) + 2304|0) + ($i$0$<<2)|0);
   $choose_table = ((($gfc)) + 85816|0);
   $53 = HEAP32[$choose_table>>2]|0;
   $call = (FUNCTION_TABLE_iiii[$53 & 7]($arraydecay,$add$ptr,$part2_3_length)|0);
   HEAP32[$arrayidx69>>2] = $call;
  }
  $cmp71 = ($40|0)>($52|0);
  if ($cmp71) {
   $arrayidx80 = ((($cod_info2)) + 4800|0);
   $add$ptr76 = (((($gi)) + 2304|0) + ($40<<2)|0);
   $add$ptr75 = (((($gi)) + 2304|0) + ($i$0$<<2)|0);
   $choose_table74 = ((($gfc)) + 85816|0);
   $54 = HEAP32[$choose_table74>>2]|0;
   $call78 = (FUNCTION_TABLE_iiii[$54 & 7]($add$ptr75,$add$ptr76,$part2_3_length)|0);
   HEAP32[$arrayidx80>>2] = $call78;
  }
  $part2_3_length82 = ((($gi)) + 4768|0);
  $55 = HEAP32[$part2_3_length82>>2]|0;
  $56 = HEAP32[$part2_3_length>>2]|0;
  $cmp84 = ($55|0)>($56|0);
  if (!($cmp84)) {
   STACKTOP = sp;return;
  }
  _memcpy(($24|0),($cod_info2|0),5252)|0;
  STACKTOP = sp;return;
 }
}
function _count_bits($gfc,$xr,$gi,$prev_noise) {
 $gfc = $gfc|0;
 $xr = $xr|0;
 $gi = $gi|0;
 $prev_noise = $prev_noise|0;
 var $$$i = 0, $$110$i = 0, $$pre = 0, $$pre40 = 0, $0 = 0, $1 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0.0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $acc_iData$0189$i = 0, $acc_iData$2$i = 0, $acc_iData$3$i = 0, $acc_iData$4$i = 0, $acc_iData$5$i = 0, $acc_xp$0191$i = 0, $acc_xp$2$i = 0, $acc_xp$3$i = 0, $acc_xp$4$i = 0, $acc_xp$5$i = 0, $accumulate$0187$i = 0, $accumulate$3$i = 0, $accumulate$6$i = 0, $accumulate01$0188$i = 0;
 var $accumulate01$2$i = 0, $accumulate01$5$i = 0, $add = 0, $add$i = 0, $add$ptr$i = 0, $add$ptr93$i = 0, $add1$i$i = 0, $add1$i116$i = 0, $add1$i132$i = 0, $add1$i148$i = 0, $add10$i$i = 0, $add10$i124$i = 0, $add10$i140$i = 0, $add10$i156$i = 0, $add11$i = 0, $add17 = 0, $add31$i = 0, $add36$i = 0, $add45$i = 0, $add70$i = 0;
 var $add75$i = 0, $add96$i = 0, $and = 0, $arraydecay = 0, $arrayidx = 0, $arrayidx$i = 0, $arrayidx$i$i = 0, $arrayidx$i115$i = 0, $arrayidx$i131$i = 0, $arrayidx$i147$i = 0, $arrayidx10$i = 0, $arrayidx11 = 0, $arrayidx12$i = 0, $arrayidx13 = 0, $arrayidx13$i = 0, $arrayidx18$i = 0, $arrayidx2$i$i = 0, $arrayidx2$i117$i = 0, $arrayidx2$i133$i = 0, $arrayidx2$i149$i = 0;
 var $arrayidx22 = 0, $arrayidx28$i = 0, $arrayidx38$i = 0, $arrayidx5 = 0, $arrayidx60$i = 0, $arrayidx7$i$i = 0, $arrayidx7$i122$i = 0, $arrayidx7$i138$i = 0, $arrayidx7$i154$i = 0, $arrayidx9$i$i = 0, $arrayidx9$i123$i = 0, $arrayidx9$i139$i = 0, $arrayidx9$i155$i = 0, $arrayidx90$i = 0, $block_type$i = 0, $call = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i = 0, $cmp$i125$i = 0;
 var $cmp$i141$i = 0, $cmp$i157$i = 0, $cmp19 = 0, $cmp19$i = 0, $cmp1935 = 0, $cmp2$i = 0, $cmp23 = 0, $cmp3$i = 0, $cmp32$i = 0, $cmp54$i = 0, $cmp57$i = 0, $cmp6$i = 0, $cmp61$i = 0, $cmp65$i = 0, $cmp77$i = 0, $cmp8 = 0, $cmp837 = 0, $cmp87$i = 0, $cond = 0, $cond$i = 0;
 var $cond$i$i = 0, $cond$i119$i = 0, $cond$i135$i = 0, $cond$i151$i = 0, $cond5$i$i = 0, $cond5$i121$i = 0, $cond5$i137$i = 0, $cond5$i153$i = 0, $conv = 0.0, $conv7 = 0.0, $div = 0.0, $div$i$i = 0.0, $div6 = 0.0, $global_gain = 0, $i$016$i$i = 0, $i$016$i114$i = 0, $i$016$i130$i = 0, $i$016$i146$i = 0, $iData$0$acc_iData$0$i = 0, $iData$0183$i = 0;
 var $iData$2$ph$i = 0, $inc = 0, $inc$i = 0, $inc29 = 0, $j$0180$i = 0, $j$038 = 0, $j$2$ph$i = 0, $k$036 = 0, $l$0$i = 0, $max_nonzero_coeff$i = 0, $mul$i = 0, $mul41$i = 0, $not$cmp3$i$i = 0, $not$cmp3$i118$i = 0, $not$cmp3$i134$i = 0, $not$cmp3$i150$i = 0, $not$cmp4$i$i = 0, $not$cmp4$i120$i = 0, $not$cmp4$i136$i = 0, $not$cmp4$i152$i = 0;
 var $or$cond = 0, $or$cond$i = 0, $or$cond111$i = 0, $preflag$i = 0, $retval$0 = 0, $scalefac_scale$i = 0, $sfb$0181$i = 0, $sfb$039 = 0, $sfb$1$i = 0, $sfb$2$i = 0, $sfb_count1$i = 0, $sfbmax = 0, $shl$i = 0, $step$0160$i = 0, $sub$i = 0, $sub14$i = 0, $sub35$i = 0, $sub40$i = 0, $substep_shaping = 0, $tobool = 0;
 var $tobool$i = 0, $tobool101$i = 0, $tobool104$i = 0, $tobool14 = 0, $tobool21$i = 0, $tobool24$i = 0, $tobool47$i = 0, $tobool49$i = 0, $tobool79$i = 0, $tobool82$i = 0, $tobool9$i = 0, $xp$addr$0$acc_xp$0$i = 0, $xp$addr$0193$i = 0, $xp$addr$2$ph$i = 0, $xrpow_max = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $global_gain = ((($gi)) + 4780|0);
 $0 = HEAP32[$global_gain>>2]|0;
 $arrayidx = (89988 + ($0<<2)|0);
 $1 = +HEAPF32[$arrayidx>>2];
 $div = 8206.0 / $1;
 $xrpow_max = ((($gi)) + 4764|0);
 $2 = +HEAPF32[$xrpow_max>>2];
 $cmp = $2 > $div;
 if ($cmp) {
  $retval$0 = 100000;
  return ($retval$0|0);
 }
 $arraydecay = ((($gi)) + 2304|0);
 $tobool$i = ($prev_noise|0)!=(0|0);
 if ($tobool$i) {
  $3 = HEAP32[$prev_noise>>2]|0;
  $cmp$i = ($0|0)==($3|0);
  $40 = $cmp$i;
 } else {
  $40 = 0;
 }
 $block_type$i = ((($gi)) + 4788|0);
 $4 = HEAP32[$block_type$i>>2]|0;
 $cmp2$i = ($4|0)==(2);
 $$110$i = $cmp2$i ? 38 : 21;
 $preflag$i = ((($gi)) + 4832|0);
 $scalefac_scale$i = ((($gi)) + 4836|0);
 $div$i$i = 0.59459996223449707 / $1;
 $max_nonzero_coeff$i = ((($gi)) + 5208|0);
 $add45$i = (($$110$i) + 1)|0;
 $sfb_count1$i = ((($prev_noise)) + 4|0);
 $acc_iData$0189$i = $arraydecay;$acc_xp$0191$i = $xr;$accumulate$0187$i = 0;$accumulate01$0188$i = 0;$iData$0183$i = $arraydecay;$j$0180$i = 0;$sfb$0181$i = 0;$xp$addr$0193$i = $xr;
 while(1) {
  if ($40) {
   label = 7;
  } else {
   $5 = HEAP32[$block_type$i>>2]|0;
   $cmp6$i = ($5|0)==(0);
   if ($cmp6$i) {
    label = 7;
   } else {
    $step$0160$i = -1;
    label = 15;
   }
  }
  if ((label|0) == 7) {
   label = 0;
   $6 = HEAP32[$global_gain>>2]|0;
   $arrayidx$i = (((($gi)) + 4608|0) + ($sfb$0181$i<<2)|0);
   $7 = HEAP32[$arrayidx$i>>2]|0;
   $8 = HEAP32[$preflag$i>>2]|0;
   $tobool9$i = ($8|0)==(0);
   if ($tobool9$i) {
    $cond$i = 0;
   } else {
    $arrayidx10$i = (6388 + ($sfb$0181$i<<2)|0);
    $9 = HEAP32[$arrayidx10$i>>2]|0;
    $cond$i = $9;
   }
   $add$i = (($cond$i) + ($7))|0;
   $10 = HEAP32[$scalefac_scale$i>>2]|0;
   $add11$i = (($10) + 1)|0;
   $shl$i = $add$i << $add11$i;
   $sub$i = (($6) - ($shl$i))|0;
   $arrayidx12$i = (((($gi)) + 5028|0) + ($sfb$0181$i<<2)|0);
   $11 = HEAP32[$arrayidx12$i>>2]|0;
   $arrayidx13$i = (((($gi)) + 4808|0) + ($11<<2)|0);
   $12 = HEAP32[$arrayidx13$i>>2]|0;
   $mul$i = $12 << 3;
   $sub14$i = (($sub$i) - ($mul$i))|0;
   if ($40) {
    $arrayidx18$i = (((($prev_noise)) + 8|0) + ($sfb$0181$i<<2)|0);
    $13 = HEAP32[$arrayidx18$i>>2]|0;
    $cmp19$i = ($13|0)==($sub14$i|0);
    if ($cmp19$i) {
     $tobool21$i = ($accumulate$0187$i|0)==(0);
     if (!($tobool21$i)) {
      _quantize_lines_xrpow($accumulate$0187$i,$1,$acc_xp$0191$i,$acc_iData$0189$i);
     }
     $tobool24$i = ($accumulate01$0188$i|0)==(0);
     if ($tobool24$i) {
      $acc_iData$5$i = $acc_iData$0189$i;$acc_xp$5$i = $acc_xp$0191$i;$accumulate$6$i = 0;$accumulate01$5$i = 0;$sfb$2$i = $sfb$0181$i;
     } else {
      $i$016$i$i = 0;
      while(1) {
       $arrayidx$i$i = (($acc_xp$0191$i) + ($i$016$i$i<<2)|0);
       $14 = +HEAPF32[$arrayidx$i$i>>2];
       $add1$i$i = $i$016$i$i | 1;
       $arrayidx2$i$i = (($acc_xp$0191$i) + ($add1$i$i<<2)|0);
       $15 = +HEAPF32[$arrayidx2$i$i>>2];
       $not$cmp3$i$i = !($div$i$i > $14);
       $cond$i$i = $not$cmp3$i$i&1;
       $not$cmp4$i$i = !($div$i$i > $15);
       $cond5$i$i = $not$cmp4$i$i&1;
       $arrayidx7$i$i = (($acc_iData$0189$i) + ($i$016$i$i<<2)|0);
       HEAP32[$arrayidx7$i$i>>2] = $cond$i$i;
       $arrayidx9$i$i = (($acc_iData$0189$i) + ($add1$i$i<<2)|0);
       HEAP32[$arrayidx9$i$i>>2] = $cond5$i$i;
       $add10$i$i = (($i$016$i$i) + 2)|0;
       $cmp$i$i = ($add10$i$i>>>0)<($accumulate01$0188$i>>>0);
       if ($cmp$i$i) {
        $i$016$i$i = $add10$i$i;
       } else {
        $acc_iData$5$i = $acc_iData$0189$i;$acc_xp$5$i = $acc_xp$0191$i;$accumulate$6$i = 0;$accumulate01$5$i = 0;$sfb$2$i = $sfb$0181$i;
        break;
       }
      }
     }
    } else {
     $step$0160$i = $sub14$i;
     label = 15;
    }
   } else {
    $step$0160$i = $sub14$i;
    label = 15;
   }
  }
  if ((label|0) == 15) {
   label = 0;
   $arrayidx28$i = (((($gi)) + 4872|0) + ($sfb$0181$i<<2)|0);
   $16 = HEAP32[$arrayidx28$i>>2]|0;
   $add31$i = (($16) + ($j$0180$i))|0;
   $17 = HEAP32[$max_nonzero_coeff$i>>2]|0;
   $cmp32$i = ($add31$i|0)>($17|0);
   $sub35$i = (($17) - ($j$0180$i))|0;
   $add36$i = (($sub35$i) + 1)|0;
   if ($cmp32$i) {
    $18 = ($add36$i|0)>(0);
    $$$i = $18 ? $add36$i : 0;
    $sub40$i = (576 - ($17))|0;
    $mul41$i = $sub40$i << 2;
    $arrayidx38$i = (((($gi)) + 2304|0) + ($17<<2)|0);
    _memset(($arrayidx38$i|0),0,($mul41$i|0))|0;
    $l$0$i = $$$i;$sfb$1$i = $add45$i;
   } else {
    $l$0$i = $16;$sfb$1$i = $sfb$0181$i;
   }
   $tobool47$i = ($accumulate$0187$i|0)==(0);
   $tobool49$i = ($accumulate01$0188$i|0)==(0);
   $19 = $accumulate$0187$i | $accumulate01$0188$i;
   $20 = ($19|0)==(0);
   $iData$0$acc_iData$0$i = $20 ? $iData$0183$i : $acc_iData$0189$i;
   $xp$addr$0$acc_xp$0$i = $20 ? $xp$addr$0193$i : $acc_xp$0191$i;
   if ($tobool$i) {
    $21 = HEAP32[$sfb_count1$i>>2]|0;
    $cmp54$i = ($21|0)<(1);
    $cmp57$i = ($sfb$1$i|0)<($21|0);
    $or$cond$i = $cmp54$i | $cmp57$i;
    if ($or$cond$i) {
     label = 23;
    } else {
     $arrayidx60$i = (((($prev_noise)) + 8|0) + ($sfb$1$i<<2)|0);
     $22 = HEAP32[$arrayidx60$i>>2]|0;
     $cmp61$i = ($22|0)<(1);
     $cmp65$i = ($step$0160$i|0)<($22|0);
     $or$cond111$i = $cmp61$i | $cmp65$i;
     if ($or$cond111$i) {
      label = 23;
     } else {
      if ($tobool47$i) {
       $acc_iData$2$i = $iData$0$acc_iData$0$i;$acc_xp$2$i = $xp$addr$0$acc_xp$0$i;
      } else {
       _quantize_lines_xrpow($accumulate$0187$i,$1,$xp$addr$0$acc_xp$0$i,$iData$0$acc_iData$0$i);
       $acc_iData$2$i = $iData$0183$i;$acc_xp$2$i = $xp$addr$0193$i;
      }
      $add70$i = (($l$0$i) + ($accumulate01$0188$i))|0;
      $acc_iData$4$i = $acc_iData$2$i;$acc_xp$4$i = $acc_xp$2$i;$accumulate$3$i = 0;$accumulate01$2$i = $add70$i;
     }
    }
   } else {
    label = 23;
   }
   if ((label|0) == 23) {
    label = 0;
    if ($tobool49$i) {
     $acc_iData$3$i = $iData$0$acc_iData$0$i;$acc_xp$3$i = $xp$addr$0$acc_xp$0$i;
    } else {
     $i$016$i130$i = 0;
     while(1) {
      $arrayidx$i131$i = (($xp$addr$0$acc_xp$0$i) + ($i$016$i130$i<<2)|0);
      $23 = +HEAPF32[$arrayidx$i131$i>>2];
      $add1$i132$i = $i$016$i130$i | 1;
      $arrayidx2$i133$i = (($xp$addr$0$acc_xp$0$i) + ($add1$i132$i<<2)|0);
      $24 = +HEAPF32[$arrayidx2$i133$i>>2];
      $not$cmp3$i134$i = !($div$i$i > $23);
      $cond$i135$i = $not$cmp3$i134$i&1;
      $not$cmp4$i136$i = !($div$i$i > $24);
      $cond5$i137$i = $not$cmp4$i136$i&1;
      $arrayidx7$i138$i = (($iData$0$acc_iData$0$i) + ($i$016$i130$i<<2)|0);
      HEAP32[$arrayidx7$i138$i>>2] = $cond$i135$i;
      $arrayidx9$i139$i = (($iData$0$acc_iData$0$i) + ($add1$i132$i<<2)|0);
      HEAP32[$arrayidx9$i139$i>>2] = $cond5$i137$i;
      $add10$i140$i = (($i$016$i130$i) + 2)|0;
      $cmp$i141$i = ($add10$i140$i>>>0)<($accumulate01$0188$i>>>0);
      if ($cmp$i141$i) {
       $i$016$i130$i = $add10$i140$i;
      } else {
       $acc_iData$3$i = $iData$0183$i;$acc_xp$3$i = $xp$addr$0193$i;
       break;
      }
     }
    }
    $add75$i = (($l$0$i) + ($accumulate$0187$i))|0;
    $acc_iData$4$i = $acc_iData$3$i;$acc_xp$4$i = $acc_xp$3$i;$accumulate$3$i = $add75$i;$accumulate01$2$i = 0;
   }
   $cmp77$i = ($l$0$i|0)<(1);
   if ($cmp77$i) {
    label = 27;
    break;
   } else {
    $acc_iData$5$i = $acc_iData$4$i;$acc_xp$5$i = $acc_xp$4$i;$accumulate$6$i = $accumulate$3$i;$accumulate01$5$i = $accumulate01$2$i;$sfb$2$i = $sfb$1$i;
   }
  }
  $cmp87$i = ($sfb$2$i|0)>($$110$i|0);
  if ($cmp87$i) {
   $iData$2$ph$i = $iData$0183$i;$j$2$ph$i = $j$0180$i;$xp$addr$2$ph$i = $xp$addr$0193$i;
  } else {
   $arrayidx90$i = (((($gi)) + 4872|0) + ($sfb$2$i<<2)|0);
   $27 = HEAP32[$arrayidx90$i>>2]|0;
   $add$ptr$i = (($iData$0183$i) + ($27<<2)|0);
   $add$ptr93$i = (($xp$addr$0193$i) + ($27<<2)|0);
   $add96$i = (($27) + ($j$0180$i))|0;
   $iData$2$ph$i = $add$ptr$i;$j$2$ph$i = $add96$i;$xp$addr$2$ph$i = $add$ptr93$i;
  }
  $inc$i = (($sfb$2$i) + 1)|0;
  $cmp3$i = ($sfb$2$i|0)<($$110$i|0);
  if ($cmp3$i) {
   $acc_iData$0189$i = $acc_iData$5$i;$acc_xp$0191$i = $acc_xp$5$i;$accumulate$0187$i = $accumulate$6$i;$accumulate01$0188$i = $accumulate01$5$i;$iData$0183$i = $iData$2$ph$i;$j$0180$i = $j$2$ph$i;$sfb$0181$i = $inc$i;$xp$addr$0193$i = $xp$addr$2$ph$i;
  } else {
   label = 34;
   break;
  }
 }
 if ((label|0) == 27) {
  $tobool79$i = ($accumulate01$2$i|0)==(0);
  if (!($tobool79$i)) {
   $i$016$i146$i = 0;
   while(1) {
    $arrayidx$i147$i = (($acc_xp$4$i) + ($i$016$i146$i<<2)|0);
    $25 = +HEAPF32[$arrayidx$i147$i>>2];
    $add1$i148$i = $i$016$i146$i | 1;
    $arrayidx2$i149$i = (($acc_xp$4$i) + ($add1$i148$i<<2)|0);
    $26 = +HEAPF32[$arrayidx2$i149$i>>2];
    $not$cmp3$i150$i = !($div$i$i > $25);
    $cond$i151$i = $not$cmp3$i150$i&1;
    $not$cmp4$i152$i = !($div$i$i > $26);
    $cond5$i153$i = $not$cmp4$i152$i&1;
    $arrayidx7$i154$i = (($acc_iData$4$i) + ($i$016$i146$i<<2)|0);
    HEAP32[$arrayidx7$i154$i>>2] = $cond$i151$i;
    $arrayidx9$i155$i = (($acc_iData$4$i) + ($add1$i148$i<<2)|0);
    HEAP32[$arrayidx9$i155$i>>2] = $cond5$i153$i;
    $add10$i156$i = (($i$016$i146$i) + 2)|0;
    $cmp$i157$i = ($add10$i156$i>>>0)<($accumulate01$2$i>>>0);
    if ($cmp$i157$i) {
     $i$016$i146$i = $add10$i156$i;
    } else {
     break;
    }
   }
  }
  $tobool82$i = ($accumulate$3$i|0)==(0);
  if (!($tobool82$i)) {
   _quantize_lines_xrpow($accumulate$3$i,$1,$acc_xp$4$i,$acc_iData$4$i);
  }
 }
 else if ((label|0) == 34) {
  $tobool101$i = ($accumulate$6$i|0)==(0);
  if (!($tobool101$i)) {
   _quantize_lines_xrpow($accumulate$6$i,$1,$acc_xp$5$i,$acc_iData$5$i);
  }
  $tobool104$i = ($accumulate01$5$i|0)==(0);
  if (!($tobool104$i)) {
   $i$016$i114$i = 0;
   while(1) {
    $arrayidx$i115$i = (($acc_xp$5$i) + ($i$016$i114$i<<2)|0);
    $28 = +HEAPF32[$arrayidx$i115$i>>2];
    $add1$i116$i = $i$016$i114$i | 1;
    $arrayidx2$i117$i = (($acc_xp$5$i) + ($add1$i116$i<<2)|0);
    $29 = +HEAPF32[$arrayidx2$i117$i>>2];
    $not$cmp3$i118$i = !($div$i$i > $28);
    $cond$i119$i = $not$cmp3$i118$i&1;
    $not$cmp4$i120$i = !($div$i$i > $29);
    $cond5$i121$i = $not$cmp4$i120$i&1;
    $arrayidx7$i122$i = (($acc_iData$5$i) + ($i$016$i114$i<<2)|0);
    HEAP32[$arrayidx7$i122$i>>2] = $cond$i119$i;
    $arrayidx9$i123$i = (($acc_iData$5$i) + ($add1$i116$i<<2)|0);
    HEAP32[$arrayidx9$i123$i>>2] = $cond5$i121$i;
    $add10$i124$i = (($i$016$i114$i) + 2)|0;
    $cmp$i125$i = ($add10$i124$i>>>0)<($accumulate01$5$i>>>0);
    if ($cmp$i125$i) {
     $i$016$i114$i = $add10$i124$i;
    } else {
     break;
    }
   }
  }
 }
 $substep_shaping = ((($gfc)) + 85096|0);
 $30 = HEAP32[$substep_shaping>>2]|0;
 $and = $30 & 2;
 $tobool = ($and|0)==(0);
 if (!($tobool)) {
  $31 = HEAP32[$global_gain>>2]|0;
  $32 = HEAP32[$scalefac_scale$i>>2]|0;
  $add = (($32) + ($31))|0;
  $arrayidx5 = (89988 + ($add<<2)|0);
  $33 = +HEAPF32[$arrayidx5>>2];
  $conv = $33;
  $div6 = 0.63452168224243899 / $conv;
  $conv7 = $div6;
  $sfbmax = ((($gi)) + 4860|0);
  $34 = HEAP32[$sfbmax>>2]|0;
  $cmp837 = ($34|0)>(0);
  if ($cmp837) {
   $41 = $34;$j$038 = 0;$sfb$039 = 0;
   while(1) {
    $arrayidx11 = (((($gi)) + 4872|0) + ($sfb$039<<2)|0);
    $35 = HEAP32[$arrayidx11>>2]|0;
    $arrayidx13 = (((($gfc)) + 84936|0) + ($sfb$039<<2)|0);
    $36 = HEAP32[$arrayidx13>>2]|0;
    $tobool14 = ($36|0)!=(0);
    $add17 = (($35) + ($j$038))|0;
    $cmp1935 = ($35|0)>(0);
    $or$cond = $tobool14 & $cmp1935;
    if ($or$cond) {
     $k$036 = $j$038;
     while(1) {
      $arrayidx22 = (($xr) + ($k$036<<2)|0);
      $37 = +HEAPF32[$arrayidx22>>2];
      $cmp23 = !($37 >= $conv7);
      $$pre40 = (((($gi)) + 2304|0) + ($k$036<<2)|0);
      if ($cmp23) {
       $cond = 0;
      } else {
       $38 = HEAP32[$$pre40>>2]|0;
       $cond = $38;
      }
      HEAP32[$$pre40>>2] = $cond;
      $inc = (($k$036) + 1)|0;
      $cmp19 = ($inc|0)<($add17|0);
      if ($cmp19) {
       $k$036 = $inc;
      } else {
       break;
      }
     }
     $$pre = HEAP32[$sfbmax>>2]|0;
     $39 = $$pre;
    } else {
     $39 = $41;
    }
    $inc29 = (($sfb$039) + 1)|0;
    $cmp8 = ($inc29|0)<($39|0);
    if ($cmp8) {
     $41 = $39;$j$038 = $add17;$sfb$039 = $inc29;
    } else {
     break;
    }
   }
  }
 }
 $call = (_noquant_count_bits($gfc,$gi,$prev_noise)|0);
 $retval$0 = $call;
 return ($retval$0|0);
}
function _quantize_lines_xrpow($l,$istep,$xp,$pi) {
 $l = $l|0;
 $istep = +$istep;
 $xp = $xp|0;
 $pi = $pi|0;
 var $$cast = 0, $0 = 0, $1 = 0.0, $10 = 0.0, $11 = 0, $12 = 0.0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0, $2 = 0.0, $20 = 0.0, $21 = 0, $22 = 0.0, $23 = 0, $3 = 0.0, $4 = 0.0;
 var $5 = 0, $6 = 0.0, $7 = 0, $8 = 0.0, $9 = 0, $add = 0.0, $add$ptr = 0, $add$ptr71 = 0, $add103 = 0.0, $add13 = 0.0, $add17 = 0.0, $add21 = 0.0, $add28 = 0.0, $add37 = 0.0, $add46 = 0.0, $add55 = 0.0, $add81 = 0.0, $add85 = 0.0, $add94 = 0.0, $arrayidx101 = 0;
 var $arrayidx15 = 0, $arrayidx19 = 0, $arrayidx2 = 0, $arrayidx23 = 0, $arrayidx26 = 0, $arrayidx35 = 0, $arrayidx44 = 0, $arrayidx5 = 0, $arrayidx53 = 0, $arrayidx78 = 0, $arrayidx8 = 0, $arrayidx87 = 0, $arrayidx92 = 0, $conv = 0.0, $conv10 = 0.0, $conv102 = 0.0, $conv104 = 0.0, $conv11 = 0.0, $conv14 = 0.0, $conv18 = 0.0;
 var $conv22 = 0.0, $conv27 = 0.0, $conv29 = 0.0, $conv36 = 0.0, $conv38 = 0.0, $conv4 = 0.0, $conv45 = 0.0, $conv47 = 0.0, $conv54 = 0.0, $conv56 = 0.0, $conv7 = 0.0, $conv76 = 0.0, $conv80 = 0.0, $conv82 = 0.0, $conv86 = 0.0, $conv93 = 0.0, $conv95 = 0.0, $dec = 0, $fi$0$lcssa = 0, $fi$060 = 0;
 var $l$addr$062 = 0, $mul = 0.0, $mul3 = 0.0, $mul6 = 0.0, $mul75 = 0.0, $mul79 = 0.0, $mul9 = 0.0, $rem = 0, $scevgep = 0, $scevgep65 = 0, $shr1 = 0, $sub = 0, $sub100 = 0, $sub109 = 0, $sub112 = 0, $sub34 = 0, $sub43 = 0, $sub52 = 0, $sub61 = 0, $sub64 = 0;
 var $sub67 = 0, $sub70 = 0, $sub91 = 0, $tobool = 0, $tobool59 = 0, $tobool72 = 0, $xp$addr$0$lcssa = 0, $xp$addr$061 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $rem = $l & 2;
 $shr1 = $l >>> 2;
 $tobool59 = ($shr1|0)==(0);
 if ($tobool59) {
  $fi$0$lcssa = $pi;$xp$addr$0$lcssa = $xp;
 } else {
  $0 = $shr1 << 2;
  $scevgep = (($pi) + ($0<<2)|0);
  $fi$060 = $pi;$l$addr$062 = $shr1;$xp$addr$061 = $xp;
  while(1) {
   $dec = (($l$addr$062) + -1)|0;
   $1 = +HEAPF32[$xp$addr$061>>2];
   $mul = $1 * $istep;
   $conv = $mul;
   $arrayidx2 = ((($xp$addr$061)) + 4|0);
   $2 = +HEAPF32[$arrayidx2>>2];
   $mul3 = $2 * $istep;
   $conv4 = $mul3;
   $arrayidx5 = ((($xp$addr$061)) + 8|0);
   $3 = +HEAPF32[$arrayidx5>>2];
   $mul6 = $3 * $istep;
   $conv7 = $mul6;
   $arrayidx8 = ((($xp$addr$061)) + 12|0);
   $4 = +HEAPF32[$arrayidx8>>2];
   $mul9 = $4 * $istep;
   $conv10 = $mul9;
   $add = $conv + 8388608.0;
   $conv11 = $add;
   $add13 = $conv4 + 8388608.0;
   $conv14 = $add13;
   $arrayidx15 = ((($fi$060)) + 4|0);
   $add17 = $conv7 + 8388608.0;
   $conv18 = $add17;
   $arrayidx19 = ((($fi$060)) + 8|0);
   $add21 = $conv10 + 8388608.0;
   $conv22 = $add21;
   $arrayidx23 = ((($fi$060)) + 12|0);
   $5 = (HEAPF32[tempDoublePtr>>2]=$conv11,HEAP32[tempDoublePtr>>2]|0);
   $sub = (($5) + -1258291200)|0;
   $arrayidx26 = (57156 + ($sub<<2)|0);
   $6 = +HEAPF32[$arrayidx26>>2];
   $conv27 = $6;
   $add28 = $conv27 + $add;
   $conv29 = $add28;
   $7 = (HEAPF32[tempDoublePtr>>2]=$conv14,HEAP32[tempDoublePtr>>2]|0);
   $sub34 = (($7) + -1258291200)|0;
   $arrayidx35 = (57156 + ($sub34<<2)|0);
   $8 = +HEAPF32[$arrayidx35>>2];
   $conv36 = $8;
   $add37 = $conv36 + $add13;
   $conv38 = $add37;
   $9 = (HEAPF32[tempDoublePtr>>2]=$conv18,HEAP32[tempDoublePtr>>2]|0);
   $sub43 = (($9) + -1258291200)|0;
   $arrayidx44 = (57156 + ($sub43<<2)|0);
   $10 = +HEAPF32[$arrayidx44>>2];
   $conv45 = $10;
   $add46 = $conv45 + $add17;
   $conv47 = $add46;
   $11 = (HEAPF32[tempDoublePtr>>2]=$conv22,HEAP32[tempDoublePtr>>2]|0);
   $sub52 = (($11) + -1258291200)|0;
   $arrayidx53 = (57156 + ($sub52<<2)|0);
   $12 = +HEAPF32[$arrayidx53>>2];
   $conv54 = $12;
   $add55 = $conv54 + $add21;
   $conv56 = $add55;
   $13 = (HEAPF32[tempDoublePtr>>2]=$conv29,HEAP32[tempDoublePtr>>2]|0);
   $sub61 = (($13) + -1258291200)|0;
   HEAP32[$fi$060>>2] = $sub61;
   $14 = (HEAPF32[tempDoublePtr>>2]=$conv38,HEAP32[tempDoublePtr>>2]|0);
   $sub64 = (($14) + -1258291200)|0;
   HEAP32[$arrayidx15>>2] = $sub64;
   $15 = (HEAPF32[tempDoublePtr>>2]=$conv47,HEAP32[tempDoublePtr>>2]|0);
   $sub67 = (($15) + -1258291200)|0;
   HEAP32[$arrayidx19>>2] = $sub67;
   $16 = (HEAPF32[tempDoublePtr>>2]=$conv56,HEAP32[tempDoublePtr>>2]|0);
   $sub70 = (($16) + -1258291200)|0;
   HEAP32[$arrayidx23>>2] = $sub70;
   $add$ptr = ((($fi$060)) + 16|0);
   $add$ptr71 = ((($xp$addr$061)) + 16|0);
   $tobool = ($dec|0)==(0);
   if ($tobool) {
    break;
   } else {
    $fi$060 = $add$ptr;$l$addr$062 = $dec;$xp$addr$061 = $add$ptr71;
   }
  }
  $scevgep65 = (($xp) + ($0<<2)|0);
  $fi$0$lcssa = $scevgep;$xp$addr$0$lcssa = $scevgep65;
 }
 $tobool72 = ($rem|0)==(0);
 if ($tobool72) {
  return;
 }
 $17 = +HEAPF32[$xp$addr$0$lcssa>>2];
 $mul75 = $17 * $istep;
 $conv76 = $mul75;
 $arrayidx78 = ((($xp$addr$0$lcssa)) + 4|0);
 $18 = +HEAPF32[$arrayidx78>>2];
 $mul79 = $18 * $istep;
 $conv80 = $mul79;
 $add81 = $conv76 + 8388608.0;
 $conv82 = $add81;
 $add85 = $conv80 + 8388608.0;
 $conv86 = $add85;
 $arrayidx87 = ((($fi$0$lcssa)) + 4|0);
 $19 = (HEAPF32[tempDoublePtr>>2]=$conv82,HEAP32[tempDoublePtr>>2]|0);
 $sub91 = (($19) + -1258291200)|0;
 $arrayidx92 = (57156 + ($sub91<<2)|0);
 $20 = +HEAPF32[$arrayidx92>>2];
 $conv93 = $20;
 $add94 = $conv93 + $add81;
 $conv95 = $add94;
 $21 = (HEAPF32[tempDoublePtr>>2]=$conv86,HEAP32[tempDoublePtr>>2]|0);
 $sub100 = (($21) + -1258291200)|0;
 $arrayidx101 = (57156 + ($sub100<<2)|0);
 $22 = +HEAPF32[$arrayidx101>>2];
 $conv102 = $22;
 $add103 = $conv102 + $add85;
 $conv104 = $add103;
 $23 = (HEAPF32[tempDoublePtr>>2]=$conv95,HEAP32[tempDoublePtr>>2]|0);
 $sub109 = (($23) + -1258291200)|0;
 HEAP32[$fi$0$lcssa>>2] = $sub109;
 $$cast = (HEAPF32[tempDoublePtr>>2]=$conv104,HEAP32[tempDoublePtr>>2]|0);
 $sub112 = (($$cast) + -1258291200)|0;
 HEAP32[$arrayidx87>>2] = $sub112;
 return;
}
function _best_scalefac_store($gfc,$gr,$ch,$l3_side) {
 $gfc = $gfc|0;
 $gr = $gr|0;
 $ch = $ch|0;
 $l3_side = $l3_side|0;
 var $$pre = 0, $$pre$i = 0, $$pre108 = 0, $$pre109 = 0, $$s1$0$1$i = 0, $$s1$0$10$i = 0, $$s1$0$2$i = 0, $$s1$0$3$i = 0, $$s1$0$4$i = 0, $$s1$0$5$i = 0, $$s1$0$6$i = 0, $$s1$0$7$i = 0, $$s1$0$8$i = 0, $$s1$0$9$i = 0, $$s1$0$i = 0, $$s2$0$i = 0, $$s2$0$i$1 = 0, $$s2$0$i$2 = 0, $$s2$0$i$3 = 0, $$s2$0$i$4 = 0;
 var $$s2$0$i$5 = 0, $$s2$0$i$6 = 0, $$s2$0$i$7 = 0, $$s2$0$i$8 = 0, $$s2$0$i$9 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $add = 0, $add88$i = 0, $and = 0, $arrayidx10$i = 0, $arrayidx10$i$1 = 0;
 var $arrayidx10$i$2 = 0, $arrayidx10$i$3 = 0, $arrayidx12 = 0, $arrayidx12$i = 0, $arrayidx12$i$1 = 0, $arrayidx12$i$2 = 0, $arrayidx12$i$3 = 0, $arrayidx127 = 0, $arrayidx2 = 0, $arrayidx24 = 0, $arrayidx33$i = 0, $arrayidx33$i$1 = 0, $arrayidx33$i$2 = 0, $arrayidx33$i$3 = 0, $arrayidx4 = 0, $arrayidx42 = 0, $arrayidx42$1$i = 0, $arrayidx42$10$i = 0, $arrayidx42$2$i = 0, $arrayidx42$3$i = 0;
 var $arrayidx42$4$i = 0, $arrayidx42$5$i = 0, $arrayidx42$6$i = 0, $arrayidx42$7$i = 0, $arrayidx42$8$i = 0, $arrayidx42$9$i = 0, $arrayidx61$i = 0, $arrayidx61$i$1 = 0, $arrayidx61$i$2 = 0, $arrayidx61$i$3 = 0, $arrayidx61$i$4 = 0, $arrayidx61$i$5 = 0, $arrayidx61$i$6 = 0, $arrayidx61$i$7 = 0, $arrayidx61$i$8 = 0, $arrayidx61$i$9 = 0, $arrayidx65 = 0, $arrayidx65$1 = 0, $arrayidx65$2 = 0, $arrayidx65$3 = 0;
 var $arrayidx65$4 = 0, $arrayidx65$5 = 0, $arrayidx65$6 = 0, $arrayidx65$7 = 0, $arrayidx65$8 = 0, $arrayidx65$9 = 0, $arrayidx79$i = 0, $arrayidx8 = 0, $arrayidx82$i = 0, $arrayidx85$i = 0, $arrayidx86$i = 0, $block_type = 0, $block_type112 = 0, $block_type118 = 0, $c1$0$inc46$1$i = 0, $c1$0$inc46$10$i = 0, $c1$0$inc46$2$i = 0, $c1$0$inc46$3$i = 0, $c1$0$inc46$4$i = 0, $c1$0$inc46$5$i = 0;
 var $c1$0$inc46$6$i = 0, $c1$0$inc46$7$i = 0, $c1$0$inc46$8$i = 0, $c1$0$inc46$9$i = 0, $c2$0$inc65$i$1 = 0, $c2$0$inc65$i$2 = 0, $c2$0$inc65$i$3 = 0, $c2$0$inc65$i$4 = 0, $c2$0$inc65$i$5 = 0, $c2$0$inc65$i$6 = 0, $c2$0$inc65$i$7 = 0, $c2$0$inc65$i$8 = 0, $c2$0$inc65$i$9 = 0, $cmp = 0, $cmp10 = 0, $cmp105 = 0, $cmp107 = 0, $cmp113 = 0, $cmp119 = 0, $cmp124 = 0;
 var $cmp12484 = 0, $cmp128 = 0, $cmp13$i = 0, $cmp13$i$1 = 0, $cmp13$i$2 = 0, $cmp13$i$3 = 0, $cmp16$i = 0, $cmp16$i$1 = 0, $cmp16$i$2 = 0, $cmp16$i$3 = 0, $cmp19$i = 0, $cmp19$i$1 = 0, $cmp19$i$2 = 0, $cmp19$i$3 = 0, $cmp21 = 0, $cmp2191 = 0, $cmp25 = 0, $cmp35 = 0, $cmp39 = 0, $cmp43 = 0;
 var $cmp43$1$i = 0, $cmp43$10$i = 0, $cmp43$2$i = 0, $cmp43$3$i = 0, $cmp43$4$i = 0, $cmp43$5$i = 0, $cmp43$6$i = 0, $cmp43$7$i = 0, $cmp43$8$i = 0, $cmp43$9$i = 0, $cmp43$i = 0, $cmp49$1$i = 0, $cmp49$10$i = 0, $cmp49$2$i = 0, $cmp49$3$i = 0, $cmp49$4$i = 0, $cmp49$5$i = 0, $cmp49$6$i = 0, $cmp49$7$i = 0, $cmp49$8$i = 0;
 var $cmp49$9$i = 0, $cmp49$i = 0, $cmp57 = 0, $cmp59 = 0, $cmp6 = 0, $cmp62$i = 0, $cmp62$i$1 = 0, $cmp62$i$2 = 0, $cmp62$i$3 = 0, $cmp62$i$4 = 0, $cmp62$i$5 = 0, $cmp62$i$6 = 0, $cmp62$i$7 = 0, $cmp62$i$8 = 0, $cmp62$i$9 = 0, $cmp67 = 0, $cmp67$1 = 0, $cmp67$2 = 0, $cmp67$3 = 0, $cmp67$4 = 0;
 var $cmp67$5 = 0, $cmp67$6 = 0, $cmp67$7 = 0, $cmp67$8 = 0, $cmp67$9 = 0, $cmp68$i = 0, $cmp68$i$1 = 0, $cmp68$i$2 = 0, $cmp68$i$3 = 0, $cmp68$i$4 = 0, $cmp68$i$5 = 0, $cmp68$i$6 = 0, $cmp68$i$7 = 0, $cmp68$i$8 = 0, $cmp68$i$9 = 0, $cmp694 = 0, $cmp71 = 0, $cmp71$1 = 0, $cmp71$2 = 0, $cmp71$3 = 0;
 var $cmp71$4 = 0, $cmp71$5 = 0, $cmp71$6 = 0, $cmp71$7 = 0, $cmp71$8 = 0, $cmp71$9 = 0, $cmp8$i = 0, $cmp8$i$1 = 0, $cmp8$i$2 = 0, $cmp8$i$3 = 0, $cmp80$i = 0, $cmp83$i = 0, $cmp84 = 0, $cmp84$1 = 0, $cmp84$2 = 0, $cmp84$3 = 0, $cmp84$4 = 0, $cmp84$5 = 0, $cmp84$6 = 0, $cmp84$7 = 0;
 var $cmp84$8 = 0, $cmp84$9 = 0, $cmp871$i = 0, $cmp871$i$1 = 0, $cmp871$i$2 = 0, $cmp871$i$3 = 0, $cmp89$i = 0, $cmp9 = 0, $cmp98 = 0, $exitcond$i = 0, $i$162$i = 0, $inc = 0, $inc$i = 0, $inc$i$1 = 0, $inc$i$2 = 0, $inc$i$3 = 0, $inc134 = 0, $inc15 = 0, $inc31 = 0, $inc46$1$i = 0;
 var $inc46$10$i = 0, $inc46$2$i = 0, $inc46$3$i = 0, $inc46$4$i = 0, $inc46$5$i = 0, $inc46$6$i = 0, $inc46$7$i = 0, $inc46$8$i = 0, $inc46$9$i = 0, $inc46$i = 0, $inc49 = 0, $inc65$i = 0, $inc65$i$1 = 0, $inc65$i$2 = 0, $inc65$i$3 = 0, $inc65$i$4 = 0, $inc65$i$5 = 0, $inc65$i$6 = 0, $inc65$i$7 = 0, $inc65$i$8 = 0;
 var $inc65$i$9 = 0, $inc95$i = 0, $j$099 = 0, $l$0$lcssa = 0, $l$095 = 0, $mode_gr = 0, $mode_gr104 = 0, $mul$i = 0, $mul87$i = 0, $not$cmp43$1$i = 0, $not$cmp43$10$i = 0, $not$cmp43$2$i = 0, $not$cmp43$3$i = 0, $not$cmp43$4$i = 0, $not$cmp43$5$i = 0, $not$cmp43$6$i = 0, $not$cmp43$7$i = 0, $not$cmp43$8$i = 0, $not$cmp43$9$i = 0, $not$cmp43$i = 0;
 var $not$cmp62$i = 0, $not$cmp62$i$1 = 0, $not$cmp62$i$2 = 0, $not$cmp62$i$3 = 0, $not$cmp62$i$4 = 0, $not$cmp62$i$5 = 0, $not$cmp62$i$6 = 0, $not$cmp62$i$7 = 0, $not$cmp62$i$8 = 0, $not$cmp62$i$9 = 0, $or = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i$1 = 0, $or$cond$i$2 = 0, $or$cond$i$3 = 0, $or$cond1 = 0, $or$cond81 = 0, $or$cond81$1 = 0, $or$cond81$2 = 0;
 var $or$cond81$3 = 0, $or$cond81$4 = 0, $or$cond81$5 = 0, $or$cond81$6 = 0, $or$cond81$7 = 0, $or$cond81$8 = 0, $or$cond81$9 = 0, $or$s$0 = 0, $part2_length$i = 0, $preflag = 0, $recalc$0$lcssa = 0, $recalc$0100 = 0, $recalc$1 = 0, $recalc$3 = 0, $recalc$4 = 0, $recalc$5 = 0, $s$093 = 0, $s1$0$$s1$0$1$i = 0, $s1$0$$s1$0$10$i = 0, $s1$0$$s1$0$2$i = 0;
 var $s1$0$$s1$0$3$i = 0, $s1$0$$s1$0$4$i = 0, $s1$0$$s1$0$5$i = 0, $s1$0$$s1$0$6$i = 0, $s1$0$$s1$0$7$i = 0, $s1$0$$s1$0$8$i = 0, $s1$0$$s1$0$9$i = 0, $s1$0$$s1$0$i = 0, $s2$0$$s2$0$i = 0, $s2$0$$s2$0$i$1 = 0, $s2$0$$s2$0$i$2 = 0, $s2$0$$s2$0$i$3 = 0, $s2$0$$s2$0$i$4 = 0, $s2$0$$s2$0$i$5 = 0, $s2$0$$s2$0$i$6 = 0, $s2$0$$s2$0$i$7 = 0, $s2$0$$s2$0$i$8 = 0, $s2$0$$s2$0$i$9 = 0, $scalefac_compress$i = 0, $scalefac_scale = 0;
 var $scevgep = 0, $scevgep104 = 0, $scevgep104$1 = 0, $scevgep104$2 = 0, $scevgep104$3 = 0, $scevgep106 = 0, $sfb$0$lcssa$i = 0, $sfb$0$lcssa$i$1 = 0, $sfb$0$lcssa$i$2 = 0, $sfb$0$lcssa$i$3 = 0, $sfb$0101 = 0, $sfb$072$i = 0, $sfb$072$i$1 = 0, $sfb$072$i$2 = 0, $sfb$072$i$3 = 0, $sfb$192 = 0, $sfb$290 = 0, $sfb$585 = 0, $sfbmax = 0, $shr115 = 0;
 var $sub = 0, $sub$1 = 0, $sub$2 = 0, $sub$3 = 0, $sub$4 = 0, $sub$5 = 0, $sub$6 = 0, $sub$7 = 0, $sub$8 = 0, $sub$9 = 0, $tobool = 0, $tobool136 = 0, $tobool17 = 0, $tobool33 = 0, $tobool55 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $arrayidx2 = ((($l3_side) + (($gr*10504)|0)|0) + (($ch*5252)|0)|0);
 $sfbmax = ((((($l3_side) + (($gr*10504)|0)|0) + (($ch*5252)|0)|0)) + 4860|0);
 $0 = HEAP32[$sfbmax>>2]|0;
 $cmp98 = ($0|0)>(0);
 if ($cmp98) {
  $87 = $0;$j$099 = 0;$recalc$0100 = 0;$sfb$0101 = 0;
  while(1) {
   $arrayidx4 = (((((($l3_side) + (($gr*10504)|0)|0) + (($ch*5252)|0)|0)) + 4872|0) + ($sfb$0101<<2)|0);
   $1 = HEAP32[$arrayidx4>>2]|0;
   $add = (($1) + ($j$099))|0;
   $cmp694 = ($1|0)>(0);
   L4: do {
    if ($cmp694) {
     $l$095 = $j$099;
     while(1) {
      $arrayidx8 = (((((($l3_side) + (($gr*10504)|0)|0) + (($ch*5252)|0)|0)) + 2304|0) + ($l$095<<2)|0);
      $2 = HEAP32[$arrayidx8>>2]|0;
      $cmp9 = ($2|0)==(0);
      if (!($cmp9)) {
       $l$0$lcssa = $l$095;
       break L4;
      }
      $inc = (($l$095) + 1)|0;
      $cmp6 = ($inc|0)<($add|0);
      if ($cmp6) {
       $l$095 = $inc;
      } else {
       $l$0$lcssa = $inc;
       break;
      }
     }
    } else {
     $l$0$lcssa = $j$099;
    }
   } while(0);
   $cmp10 = ($l$0$lcssa|0)==($add|0);
   if ($cmp10) {
    $arrayidx12 = (((((($l3_side) + (($gr*10504)|0)|0) + (($ch*5252)|0)|0)) + 4608|0) + ($sfb$0101<<2)|0);
    HEAP32[$arrayidx12>>2] = -2;
    $$pre = HEAP32[$sfbmax>>2]|0;
    $3 = $$pre;$recalc$1 = -2;
   } else {
    $3 = $87;$recalc$1 = $recalc$0100;
   }
   $inc15 = (($sfb$0101) + 1)|0;
   $cmp = ($inc15|0)<($3|0);
   if ($cmp) {
    $87 = $3;$j$099 = $add;$recalc$0100 = $recalc$1;$sfb$0101 = $inc15;
   } else {
    $6 = $3;$recalc$0$lcssa = $recalc$1;
    break;
   }
  }
 } else {
  $6 = $0;$recalc$0$lcssa = 0;
 }
 $scalefac_scale = ((((($l3_side) + (($gr*10504)|0)|0) + (($ch*5252)|0)|0)) + 4836|0);
 $4 = HEAP32[$scalefac_scale>>2]|0;
 $tobool = ($4|0)==(0);
 $preflag = ((((($l3_side) + (($gr*10504)|0)|0) + (($ch*5252)|0)|0)) + 4832|0);
 if ($tobool) {
  $5 = HEAP32[$preflag>>2]|0;
  $tobool17 = ($5|0)==(0);
  if ($tobool17) {
   $cmp2191 = ($6|0)>(0);
   if ($cmp2191) {
    $s$093 = 0;$sfb$192 = 0;
    while(1) {
     $arrayidx24 = (((((($l3_side) + (($gr*10504)|0)|0) + (($ch*5252)|0)|0)) + 4608|0) + ($sfb$192<<2)|0);
     $7 = HEAP32[$arrayidx24>>2]|0;
     $cmp25 = ($7|0)>(0);
     $or = $cmp25 ? $7 : 0;
     $or$s$0 = $or | $s$093;
     $inc31 = (($sfb$192) + 1)|0;
     $cmp21 = ($inc31|0)<($6|0);
     if ($cmp21) {
      $s$093 = $or$s$0;$sfb$192 = $inc31;
     } else {
      break;
     }
    }
    $and = $or$s$0 & 1;
    $tobool33 = ($and|0)==(0);
    $cmp35 = ($or$s$0|0)!=(0);
    $or$cond = $cmp35 & $tobool33;
    if ($or$cond) {
     if ($cmp2191) {
      $88 = $6;$sfb$290 = 0;
      while(1) {
       $arrayidx42 = (((((($l3_side) + (($gr*10504)|0)|0) + (($ch*5252)|0)|0)) + 4608|0) + ($sfb$290<<2)|0);
       $8 = HEAP32[$arrayidx42>>2]|0;
       $cmp43 = ($8|0)>(0);
       if ($cmp43) {
        $shr115 = $8 >>> 1;
        HEAP32[$arrayidx42>>2] = $shr115;
        $$pre108 = HEAP32[$sfbmax>>2]|0;
        $9 = $$pre108;
       } else {
        $9 = $88;
       }
       $inc49 = (($sfb$290) + 1)|0;
       $cmp39 = ($inc49|0)<($9|0);
       if ($cmp39) {
        $88 = $9;$sfb$290 = $inc49;
       } else {
        break;
       }
      }
     }
     HEAP32[$scalefac_scale>>2] = 1;
     $recalc$3 = 1;
    } else {
     $recalc$3 = $recalc$0$lcssa;
    }
   } else {
    $recalc$3 = $recalc$0$lcssa;
   }
  } else {
   $recalc$3 = $recalc$0$lcssa;
  }
 } else {
  $recalc$3 = $recalc$0$lcssa;
 }
 $10 = HEAP32[$preflag>>2]|0;
 $tobool55 = ($10|0)==(0);
 if ($tobool55) {
  $block_type = ((((($l3_side) + (($gr*10504)|0)|0) + (($ch*5252)|0)|0)) + 4788|0);
  $11 = HEAP32[$block_type>>2]|0;
  $cmp57 = ($11|0)==(2);
  if ($cmp57) {
   $recalc$4 = $recalc$3;
  } else {
   $mode_gr = ((($gfc)) + 76|0);
   $12 = HEAP32[$mode_gr>>2]|0;
   $cmp59 = ($12|0)==(2);
   if ($cmp59) {
    $arrayidx65 = ((((($l3_side) + (($gr*10504)|0)|0) + (($ch*5252)|0)|0)) + 4652|0);
    $13 = HEAP32[$arrayidx65>>2]|0;
    $14 = HEAP32[(6432)>>2]|0;
    $cmp67 = ($13|0)>=($14|0);
    $cmp71 = ($13|0)==(-2);
    $or$cond81 = $cmp71 | $cmp67;
    if ($or$cond81) {
     $arrayidx65$1 = ((((($l3_side) + (($gr*10504)|0)|0) + (($ch*5252)|0)|0)) + 4656|0);
     $15 = HEAP32[$arrayidx65$1>>2]|0;
     $16 = HEAP32[(6436)>>2]|0;
     $cmp67$1 = ($15|0)>=($16|0);
     $cmp71$1 = ($15|0)==(-2);
     $or$cond81$1 = $cmp71$1 | $cmp67$1;
     if ($or$cond81$1) {
      $arrayidx65$2 = ((((($l3_side) + (($gr*10504)|0)|0) + (($ch*5252)|0)|0)) + 4660|0);
      $71 = HEAP32[$arrayidx65$2>>2]|0;
      $72 = HEAP32[(6440)>>2]|0;
      $cmp67$2 = ($71|0)>=($72|0);
      $cmp71$2 = ($71|0)==(-2);
      $or$cond81$2 = $cmp71$2 | $cmp67$2;
      if ($or$cond81$2) {
       $arrayidx65$3 = ((((($l3_side) + (($gr*10504)|0)|0) + (($ch*5252)|0)|0)) + 4664|0);
       $73 = HEAP32[$arrayidx65$3>>2]|0;
       $74 = HEAP32[(6444)>>2]|0;
       $cmp67$3 = ($73|0)>=($74|0);
       $cmp71$3 = ($73|0)==(-2);
       $or$cond81$3 = $cmp71$3 | $cmp67$3;
       if ($or$cond81$3) {
        $arrayidx65$4 = ((((($l3_side) + (($gr*10504)|0)|0) + (($ch*5252)|0)|0)) + 4668|0);
        $75 = HEAP32[$arrayidx65$4>>2]|0;
        $76 = HEAP32[(6448)>>2]|0;
        $cmp67$4 = ($75|0)>=($76|0);
        $cmp71$4 = ($75|0)==(-2);
        $or$cond81$4 = $cmp71$4 | $cmp67$4;
        if ($or$cond81$4) {
         $arrayidx65$5 = ((((($l3_side) + (($gr*10504)|0)|0) + (($ch*5252)|0)|0)) + 4672|0);
         $77 = HEAP32[$arrayidx65$5>>2]|0;
         $78 = HEAP32[(6452)>>2]|0;
         $cmp67$5 = ($77|0)>=($78|0);
         $cmp71$5 = ($77|0)==(-2);
         $or$cond81$5 = $cmp71$5 | $cmp67$5;
         if ($or$cond81$5) {
          $arrayidx65$6 = ((((($l3_side) + (($gr*10504)|0)|0) + (($ch*5252)|0)|0)) + 4676|0);
          $79 = HEAP32[$arrayidx65$6>>2]|0;
          $80 = HEAP32[(6456)>>2]|0;
          $cmp67$6 = ($79|0)>=($80|0);
          $cmp71$6 = ($79|0)==(-2);
          $or$cond81$6 = $cmp71$6 | $cmp67$6;
          if ($or$cond81$6) {
           $arrayidx65$7 = ((((($l3_side) + (($gr*10504)|0)|0) + (($ch*5252)|0)|0)) + 4680|0);
           $81 = HEAP32[$arrayidx65$7>>2]|0;
           $82 = HEAP32[(6460)>>2]|0;
           $cmp67$7 = ($81|0)>=($82|0);
           $cmp71$7 = ($81|0)==(-2);
           $or$cond81$7 = $cmp71$7 | $cmp67$7;
           if ($or$cond81$7) {
            $arrayidx65$8 = ((((($l3_side) + (($gr*10504)|0)|0) + (($ch*5252)|0)|0)) + 4684|0);
            $83 = HEAP32[$arrayidx65$8>>2]|0;
            $84 = HEAP32[(6464)>>2]|0;
            $cmp67$8 = ($83|0)>=($84|0);
            $cmp71$8 = ($83|0)==(-2);
            $or$cond81$8 = $cmp71$8 | $cmp67$8;
            if ($or$cond81$8) {
             $arrayidx65$9 = ((((($l3_side) + (($gr*10504)|0)|0) + (($ch*5252)|0)|0)) + 4688|0);
             $85 = HEAP32[$arrayidx65$9>>2]|0;
             $86 = HEAP32[(6468)>>2]|0;
             $cmp67$9 = ($85|0)>=($86|0);
             $cmp71$9 = ($85|0)==(-2);
             $or$cond81$9 = $cmp71$9 | $cmp67$9;
             if ($or$cond81$9) {
              $cmp84 = ($13|0)>(0);
              if ($cmp84) {
               $sub = (($13) - ($14))|0;
               HEAP32[$arrayidx65>>2] = $sub;
              }
              $cmp84$1 = ($15|0)>(0);
              if ($cmp84$1) {
               $sub$1 = (($15) - ($16))|0;
               HEAP32[$arrayidx65$1>>2] = $sub$1;
              }
              $cmp84$2 = ($71|0)>(0);
              if ($cmp84$2) {
               $sub$2 = (($71) - ($72))|0;
               HEAP32[$arrayidx65$2>>2] = $sub$2;
              }
              $cmp84$3 = ($73|0)>(0);
              if ($cmp84$3) {
               $sub$3 = (($73) - ($74))|0;
               HEAP32[$arrayidx65$3>>2] = $sub$3;
              }
              $cmp84$4 = ($75|0)>(0);
              if ($cmp84$4) {
               $sub$4 = (($75) - ($76))|0;
               HEAP32[$arrayidx65$4>>2] = $sub$4;
              }
              $cmp84$5 = ($77|0)>(0);
              if ($cmp84$5) {
               $sub$5 = (($77) - ($78))|0;
               HEAP32[$arrayidx65$5>>2] = $sub$5;
              }
              $cmp84$6 = ($79|0)>(0);
              if ($cmp84$6) {
               $sub$6 = (($79) - ($80))|0;
               HEAP32[$arrayidx65$6>>2] = $sub$6;
              }
              $cmp84$7 = ($81|0)>(0);
              if ($cmp84$7) {
               $sub$7 = (($81) - ($82))|0;
               HEAP32[$arrayidx65$7>>2] = $sub$7;
              }
              $cmp84$8 = ($83|0)>(0);
              if ($cmp84$8) {
               $sub$8 = (($83) - ($84))|0;
               HEAP32[$arrayidx65$8>>2] = $sub$8;
              }
              $cmp84$9 = ($85|0)>(0);
              if ($cmp84$9) {
               $sub$9 = (($85) - ($86))|0;
               HEAP32[$arrayidx65$9>>2] = $sub$9;
              }
              HEAP32[$preflag>>2] = 1;
              $recalc$4 = 1;
             } else {
              $recalc$4 = $recalc$3;
             }
            } else {
             $recalc$4 = $recalc$3;
            }
           } else {
            $recalc$4 = $recalc$3;
           }
          } else {
           $recalc$4 = $recalc$3;
          }
         } else {
          $recalc$4 = $recalc$3;
         }
        } else {
         $recalc$4 = $recalc$3;
        }
       } else {
        $recalc$4 = $recalc$3;
       }
      } else {
       $recalc$4 = $recalc$3;
      }
     } else {
      $recalc$4 = $recalc$3;
     }
    } else {
     $recalc$4 = $recalc$3;
    }
   } else {
    $recalc$4 = $recalc$3;
   }
  }
 } else {
  $recalc$4 = $recalc$3;
 }
 $17 = $ch << 2;
 $18 = (($17) + 4)|0;
 $scevgep106 = (((($l3_side)) + 21008|0) + ($18<<2)|0);
 ;HEAP32[$scevgep106>>2]=0|0;HEAP32[$scevgep106+4>>2]=0|0;HEAP32[$scevgep106+8>>2]=0|0;HEAP32[$scevgep106+12>>2]=0|0;
 $mode_gr104 = ((($gfc)) + 76|0);
 $19 = HEAP32[$mode_gr104>>2]|0;
 $cmp105 = ($19|0)==(2);
 $cmp107 = ($gr|0)==(1);
 $or$cond1 = $cmp107 & $cmp105;
 if ($or$cond1) {
  $block_type112 = (((($l3_side) + (($ch*5252)|0)|0)) + 4788|0);
  $20 = HEAP32[$block_type112>>2]|0;
  $cmp113 = ($20|0)==(2);
  if ($cmp113) {
   $recalc$5 = $recalc$4;
  } else {
   $block_type118 = (((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4788|0);
   $21 = HEAP32[$block_type118>>2]|0;
   $cmp119 = ($21|0)==(2);
   if ($cmp119) {
    $recalc$5 = $recalc$4;
   } else {
    $$pre$i = HEAP32[2543]|0;
    $scevgep = (((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4608|0);
    $22 = HEAP32[(10176)>>2]|0;
    $cmp871$i = ($22|0)>($$pre$i|0);
    L77: do {
     if ($cmp871$i) {
      $sfb$072$i = $$pre$i;
      while(1) {
       $arrayidx10$i = ((((($l3_side) + (($ch*5252)|0)|0)) + 4608|0) + ($sfb$072$i<<2)|0);
       $23 = HEAP32[$arrayidx10$i>>2]|0;
       $arrayidx12$i = ((((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4608|0) + ($sfb$072$i<<2)|0);
       $24 = HEAP32[$arrayidx12$i>>2]|0;
       $cmp13$i = ($23|0)!=($24|0);
       $cmp16$i = ($24|0)>(-1);
       $or$cond$i = $cmp13$i & $cmp16$i;
       if ($or$cond$i) {
        $sfb$0$lcssa$i = $sfb$072$i;
        break L77;
       }
       $inc$i = (($sfb$072$i) + 1)|0;
       $cmp8$i = ($inc$i|0)<($22|0);
       if ($cmp8$i) {
        $sfb$072$i = $inc$i;
       } else {
        $sfb$0$lcssa$i = $inc$i;
        break;
       }
      }
     } else {
      $sfb$0$lcssa$i = $$pre$i;
     }
    } while(0);
    $cmp19$i = ($sfb$0$lcssa$i|0)==($22|0);
    if ($cmp19$i) {
     if ($cmp871$i) {
      $scevgep104 = ((((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4608|0) + ($$pre$i<<2)|0);
      $26 = (($22) - ($$pre$i))|0;
      $27 = $26 << 2;
      _memset(($scevgep104|0),-1,($27|0))|0;
     }
     $arrayidx33$i = (((($l3_side)) + 21024|0) + ($ch<<4)|0);
     HEAP32[$arrayidx33$i>>2] = 1;
    }
    $25 = HEAP32[(10180)>>2]|0;
    $cmp871$i$1 = ($25|0)>($22|0);
    L88: do {
     if ($cmp871$i$1) {
      $sfb$072$i$1 = $22;
      while(1) {
       $arrayidx10$i$1 = ((((($l3_side) + (($ch*5252)|0)|0)) + 4608|0) + ($sfb$072$i$1<<2)|0);
       $36 = HEAP32[$arrayidx10$i$1>>2]|0;
       $arrayidx12$i$1 = ((((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4608|0) + ($sfb$072$i$1<<2)|0);
       $37 = HEAP32[$arrayidx12$i$1>>2]|0;
       $cmp13$i$1 = ($36|0)!=($37|0);
       $cmp16$i$1 = ($37|0)>(-1);
       $or$cond$i$1 = $cmp13$i$1 & $cmp16$i$1;
       if ($or$cond$i$1) {
        $sfb$0$lcssa$i$1 = $sfb$072$i$1;
        break L88;
       }
       $inc$i$1 = (($sfb$072$i$1) + 1)|0;
       $cmp8$i$1 = ($inc$i$1|0)<($25|0);
       if ($cmp8$i$1) {
        $sfb$072$i$1 = $inc$i$1;
       } else {
        $sfb$0$lcssa$i$1 = $inc$i$1;
        break;
       }
      }
     } else {
      $sfb$0$lcssa$i$1 = $22;
     }
    } while(0);
    $cmp19$i$1 = ($sfb$0$lcssa$i$1|0)==($25|0);
    if ($cmp19$i$1) {
     if ($cmp871$i$1) {
      $scevgep104$1 = ((((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4608|0) + ($22<<2)|0);
      $38 = (($25) - ($22))|0;
      $39 = $38 << 2;
      _memset(($scevgep104$1|0),-1,($39|0))|0;
     }
     $arrayidx33$i$1 = (((((($l3_side)) + 21024|0) + ($ch<<4)|0)) + 4|0);
     HEAP32[$arrayidx33$i$1>>2] = 1;
    }
    $40 = HEAP32[(10184)>>2]|0;
    $cmp871$i$2 = ($40|0)>($25|0);
    L99: do {
     if ($cmp871$i$2) {
      $sfb$072$i$2 = $25;
      while(1) {
       $arrayidx10$i$2 = ((((($l3_side) + (($ch*5252)|0)|0)) + 4608|0) + ($sfb$072$i$2<<2)|0);
       $41 = HEAP32[$arrayidx10$i$2>>2]|0;
       $arrayidx12$i$2 = ((((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4608|0) + ($sfb$072$i$2<<2)|0);
       $42 = HEAP32[$arrayidx12$i$2>>2]|0;
       $cmp13$i$2 = ($41|0)!=($42|0);
       $cmp16$i$2 = ($42|0)>(-1);
       $or$cond$i$2 = $cmp13$i$2 & $cmp16$i$2;
       if ($or$cond$i$2) {
        $sfb$0$lcssa$i$2 = $sfb$072$i$2;
        break L99;
       }
       $inc$i$2 = (($sfb$072$i$2) + 1)|0;
       $cmp8$i$2 = ($inc$i$2|0)<($40|0);
       if ($cmp8$i$2) {
        $sfb$072$i$2 = $inc$i$2;
       } else {
        $sfb$0$lcssa$i$2 = $inc$i$2;
        break;
       }
      }
     } else {
      $sfb$0$lcssa$i$2 = $25;
     }
    } while(0);
    $cmp19$i$2 = ($sfb$0$lcssa$i$2|0)==($40|0);
    if ($cmp19$i$2) {
     if ($cmp871$i$2) {
      $scevgep104$2 = ((((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4608|0) + ($25<<2)|0);
      $43 = (($40) - ($25))|0;
      $44 = $43 << 2;
      _memset(($scevgep104$2|0),-1,($44|0))|0;
     }
     $arrayidx33$i$2 = (((((($l3_side)) + 21024|0) + ($ch<<4)|0)) + 8|0);
     HEAP32[$arrayidx33$i$2>>2] = 1;
    }
    $45 = HEAP32[(10188)>>2]|0;
    $cmp871$i$3 = ($45|0)>($40|0);
    L110: do {
     if ($cmp871$i$3) {
      $sfb$072$i$3 = $40;
      while(1) {
       $arrayidx10$i$3 = ((((($l3_side) + (($ch*5252)|0)|0)) + 4608|0) + ($sfb$072$i$3<<2)|0);
       $46 = HEAP32[$arrayidx10$i$3>>2]|0;
       $arrayidx12$i$3 = ((((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4608|0) + ($sfb$072$i$3<<2)|0);
       $47 = HEAP32[$arrayidx12$i$3>>2]|0;
       $cmp13$i$3 = ($46|0)!=($47|0);
       $cmp16$i$3 = ($47|0)>(-1);
       $or$cond$i$3 = $cmp13$i$3 & $cmp16$i$3;
       if ($or$cond$i$3) {
        $sfb$0$lcssa$i$3 = $sfb$072$i$3;
        break L110;
       }
       $inc$i$3 = (($sfb$072$i$3) + 1)|0;
       $cmp8$i$3 = ($inc$i$3|0)<($45|0);
       if ($cmp8$i$3) {
        $sfb$072$i$3 = $inc$i$3;
       } else {
        $sfb$0$lcssa$i$3 = $inc$i$3;
        break;
       }
      }
     } else {
      $sfb$0$lcssa$i$3 = $40;
     }
    } while(0);
    $cmp19$i$3 = ($sfb$0$lcssa$i$3|0)==($45|0);
    if ($cmp19$i$3) {
     if ($cmp871$i$3) {
      $scevgep104$3 = ((((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4608|0) + ($40<<2)|0);
      $48 = (($45) - ($40))|0;
      $49 = $48 << 2;
      _memset(($scevgep104$3|0),-1,($49|0))|0;
     }
     $arrayidx33$i$3 = (((((($l3_side)) + 21024|0) + ($ch<<4)|0)) + 12|0);
     HEAP32[$arrayidx33$i$3>>2] = 1;
    }
    $50 = HEAP32[$scevgep>>2]|0;
    $cmp43$i = ($50|0)==(-1);
    $cmp49$i = ($50|0)>(0);
    $$s1$0$i = $cmp49$i ? $50 : 0;
    $not$cmp43$i = $cmp43$i ^ 1;
    $inc46$i = $not$cmp43$i&1;
    $s1$0$$s1$0$i = $cmp43$i ? 0 : $$s1$0$i;
    $arrayidx42$1$i = (((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4612|0);
    $51 = HEAP32[$arrayidx42$1$i>>2]|0;
    $cmp43$1$i = ($51|0)==(-1);
    $cmp49$1$i = ($s1$0$$s1$0$i|0)<($51|0);
    $$s1$0$1$i = $cmp49$1$i ? $51 : $s1$0$$s1$0$i;
    $not$cmp43$1$i = $cmp43$1$i ^ 1;
    $inc46$1$i = $not$cmp43$1$i&1;
    $c1$0$inc46$1$i = (($inc46$1$i) + ($inc46$i))|0;
    $s1$0$$s1$0$1$i = $cmp43$1$i ? $s1$0$$s1$0$i : $$s1$0$1$i;
    $arrayidx42$2$i = (((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4616|0);
    $52 = HEAP32[$arrayidx42$2$i>>2]|0;
    $cmp43$2$i = ($52|0)==(-1);
    $cmp49$2$i = ($s1$0$$s1$0$1$i|0)<($52|0);
    $$s1$0$2$i = $cmp49$2$i ? $52 : $s1$0$$s1$0$1$i;
    $not$cmp43$2$i = $cmp43$2$i ^ 1;
    $inc46$2$i = $not$cmp43$2$i&1;
    $c1$0$inc46$2$i = (($c1$0$inc46$1$i) + ($inc46$2$i))|0;
    $s1$0$$s1$0$2$i = $cmp43$2$i ? $s1$0$$s1$0$1$i : $$s1$0$2$i;
    $arrayidx42$3$i = (((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4620|0);
    $53 = HEAP32[$arrayidx42$3$i>>2]|0;
    $cmp43$3$i = ($53|0)==(-1);
    $cmp49$3$i = ($s1$0$$s1$0$2$i|0)<($53|0);
    $$s1$0$3$i = $cmp49$3$i ? $53 : $s1$0$$s1$0$2$i;
    $not$cmp43$3$i = $cmp43$3$i ^ 1;
    $inc46$3$i = $not$cmp43$3$i&1;
    $c1$0$inc46$3$i = (($c1$0$inc46$2$i) + ($inc46$3$i))|0;
    $s1$0$$s1$0$3$i = $cmp43$3$i ? $s1$0$$s1$0$2$i : $$s1$0$3$i;
    $arrayidx42$4$i = (((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4624|0);
    $54 = HEAP32[$arrayidx42$4$i>>2]|0;
    $cmp43$4$i = ($54|0)==(-1);
    $cmp49$4$i = ($s1$0$$s1$0$3$i|0)<($54|0);
    $$s1$0$4$i = $cmp49$4$i ? $54 : $s1$0$$s1$0$3$i;
    $not$cmp43$4$i = $cmp43$4$i ^ 1;
    $inc46$4$i = $not$cmp43$4$i&1;
    $c1$0$inc46$4$i = (($c1$0$inc46$3$i) + ($inc46$4$i))|0;
    $s1$0$$s1$0$4$i = $cmp43$4$i ? $s1$0$$s1$0$3$i : $$s1$0$4$i;
    $arrayidx42$5$i = (((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4628|0);
    $55 = HEAP32[$arrayidx42$5$i>>2]|0;
    $cmp43$5$i = ($55|0)==(-1);
    $cmp49$5$i = ($s1$0$$s1$0$4$i|0)<($55|0);
    $$s1$0$5$i = $cmp49$5$i ? $55 : $s1$0$$s1$0$4$i;
    $not$cmp43$5$i = $cmp43$5$i ^ 1;
    $inc46$5$i = $not$cmp43$5$i&1;
    $c1$0$inc46$5$i = (($c1$0$inc46$4$i) + ($inc46$5$i))|0;
    $s1$0$$s1$0$5$i = $cmp43$5$i ? $s1$0$$s1$0$4$i : $$s1$0$5$i;
    $arrayidx42$6$i = (((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4632|0);
    $56 = HEAP32[$arrayidx42$6$i>>2]|0;
    $cmp43$6$i = ($56|0)==(-1);
    $cmp49$6$i = ($s1$0$$s1$0$5$i|0)<($56|0);
    $$s1$0$6$i = $cmp49$6$i ? $56 : $s1$0$$s1$0$5$i;
    $not$cmp43$6$i = $cmp43$6$i ^ 1;
    $inc46$6$i = $not$cmp43$6$i&1;
    $c1$0$inc46$6$i = (($c1$0$inc46$5$i) + ($inc46$6$i))|0;
    $s1$0$$s1$0$6$i = $cmp43$6$i ? $s1$0$$s1$0$5$i : $$s1$0$6$i;
    $arrayidx42$7$i = (((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4636|0);
    $57 = HEAP32[$arrayidx42$7$i>>2]|0;
    $cmp43$7$i = ($57|0)==(-1);
    $cmp49$7$i = ($s1$0$$s1$0$6$i|0)<($57|0);
    $$s1$0$7$i = $cmp49$7$i ? $57 : $s1$0$$s1$0$6$i;
    $not$cmp43$7$i = $cmp43$7$i ^ 1;
    $inc46$7$i = $not$cmp43$7$i&1;
    $c1$0$inc46$7$i = (($c1$0$inc46$6$i) + ($inc46$7$i))|0;
    $s1$0$$s1$0$7$i = $cmp43$7$i ? $s1$0$$s1$0$6$i : $$s1$0$7$i;
    $arrayidx42$8$i = (((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4640|0);
    $58 = HEAP32[$arrayidx42$8$i>>2]|0;
    $cmp43$8$i = ($58|0)==(-1);
    $cmp49$8$i = ($s1$0$$s1$0$7$i|0)<($58|0);
    $$s1$0$8$i = $cmp49$8$i ? $58 : $s1$0$$s1$0$7$i;
    $not$cmp43$8$i = $cmp43$8$i ^ 1;
    $inc46$8$i = $not$cmp43$8$i&1;
    $c1$0$inc46$8$i = (($c1$0$inc46$7$i) + ($inc46$8$i))|0;
    $s1$0$$s1$0$8$i = $cmp43$8$i ? $s1$0$$s1$0$7$i : $$s1$0$8$i;
    $arrayidx42$9$i = (((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4644|0);
    $59 = HEAP32[$arrayidx42$9$i>>2]|0;
    $cmp43$9$i = ($59|0)==(-1);
    $cmp49$9$i = ($s1$0$$s1$0$8$i|0)<($59|0);
    $$s1$0$9$i = $cmp49$9$i ? $59 : $s1$0$$s1$0$8$i;
    $not$cmp43$9$i = $cmp43$9$i ^ 1;
    $inc46$9$i = $not$cmp43$9$i&1;
    $c1$0$inc46$9$i = (($c1$0$inc46$8$i) + ($inc46$9$i))|0;
    $s1$0$$s1$0$9$i = $cmp43$9$i ? $s1$0$$s1$0$8$i : $$s1$0$9$i;
    $arrayidx42$10$i = (((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4648|0);
    $60 = HEAP32[$arrayidx42$10$i>>2]|0;
    $cmp43$10$i = ($60|0)==(-1);
    $cmp49$10$i = ($s1$0$$s1$0$9$i|0)<($60|0);
    $not$cmp43$10$i = $cmp43$10$i ^ 1;
    $inc46$10$i = $not$cmp43$10$i&1;
    $c1$0$inc46$10$i = (($c1$0$inc46$9$i) + ($inc46$10$i))|0;
    $arrayidx61$i = (((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4652|0);
    $61 = HEAP32[$arrayidx61$i>>2]|0;
    $cmp62$i = ($61|0)==(-1);
    $cmp68$i = ($61|0)>(0);
    $$s2$0$i = $cmp68$i ? $61 : 0;
    $not$cmp62$i = $cmp62$i ^ 1;
    $inc65$i = $not$cmp62$i&1;
    $s2$0$$s2$0$i = $cmp62$i ? 0 : $$s2$0$i;
    $arrayidx61$i$1 = (((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4656|0);
    $62 = HEAP32[$arrayidx61$i$1>>2]|0;
    $cmp62$i$1 = ($62|0)==(-1);
    $cmp68$i$1 = ($s2$0$$s2$0$i|0)<($62|0);
    $$s2$0$i$1 = $cmp68$i$1 ? $62 : $s2$0$$s2$0$i;
    $not$cmp62$i$1 = $cmp62$i$1 ^ 1;
    $inc65$i$1 = $not$cmp62$i$1&1;
    $c2$0$inc65$i$1 = (($inc65$i$1) + ($inc65$i))|0;
    $s2$0$$s2$0$i$1 = $cmp62$i$1 ? $s2$0$$s2$0$i : $$s2$0$i$1;
    $arrayidx61$i$2 = (((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4660|0);
    $63 = HEAP32[$arrayidx61$i$2>>2]|0;
    $cmp62$i$2 = ($63|0)==(-1);
    $cmp68$i$2 = ($s2$0$$s2$0$i$1|0)<($63|0);
    $$s2$0$i$2 = $cmp68$i$2 ? $63 : $s2$0$$s2$0$i$1;
    $not$cmp62$i$2 = $cmp62$i$2 ^ 1;
    $inc65$i$2 = $not$cmp62$i$2&1;
    $c2$0$inc65$i$2 = (($inc65$i$2) + ($c2$0$inc65$i$1))|0;
    $s2$0$$s2$0$i$2 = $cmp62$i$2 ? $s2$0$$s2$0$i$1 : $$s2$0$i$2;
    $arrayidx61$i$3 = (((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4664|0);
    $64 = HEAP32[$arrayidx61$i$3>>2]|0;
    $cmp62$i$3 = ($64|0)==(-1);
    $cmp68$i$3 = ($s2$0$$s2$0$i$2|0)<($64|0);
    $$s2$0$i$3 = $cmp68$i$3 ? $64 : $s2$0$$s2$0$i$2;
    $not$cmp62$i$3 = $cmp62$i$3 ^ 1;
    $inc65$i$3 = $not$cmp62$i$3&1;
    $c2$0$inc65$i$3 = (($inc65$i$3) + ($c2$0$inc65$i$2))|0;
    $s2$0$$s2$0$i$3 = $cmp62$i$3 ? $s2$0$$s2$0$i$2 : $$s2$0$i$3;
    $arrayidx61$i$4 = (((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4668|0);
    $65 = HEAP32[$arrayidx61$i$4>>2]|0;
    $cmp62$i$4 = ($65|0)==(-1);
    $cmp68$i$4 = ($s2$0$$s2$0$i$3|0)<($65|0);
    $$s2$0$i$4 = $cmp68$i$4 ? $65 : $s2$0$$s2$0$i$3;
    $not$cmp62$i$4 = $cmp62$i$4 ^ 1;
    $inc65$i$4 = $not$cmp62$i$4&1;
    $c2$0$inc65$i$4 = (($inc65$i$4) + ($c2$0$inc65$i$3))|0;
    $s2$0$$s2$0$i$4 = $cmp62$i$4 ? $s2$0$$s2$0$i$3 : $$s2$0$i$4;
    $arrayidx61$i$5 = (((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4672|0);
    $66 = HEAP32[$arrayidx61$i$5>>2]|0;
    $cmp62$i$5 = ($66|0)==(-1);
    $cmp68$i$5 = ($s2$0$$s2$0$i$4|0)<($66|0);
    $$s2$0$i$5 = $cmp68$i$5 ? $66 : $s2$0$$s2$0$i$4;
    $not$cmp62$i$5 = $cmp62$i$5 ^ 1;
    $inc65$i$5 = $not$cmp62$i$5&1;
    $c2$0$inc65$i$5 = (($inc65$i$5) + ($c2$0$inc65$i$4))|0;
    $s2$0$$s2$0$i$5 = $cmp62$i$5 ? $s2$0$$s2$0$i$4 : $$s2$0$i$5;
    $arrayidx61$i$6 = (((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4676|0);
    $67 = HEAP32[$arrayidx61$i$6>>2]|0;
    $cmp62$i$6 = ($67|0)==(-1);
    $cmp68$i$6 = ($s2$0$$s2$0$i$5|0)<($67|0);
    $$s2$0$i$6 = $cmp68$i$6 ? $67 : $s2$0$$s2$0$i$5;
    $not$cmp62$i$6 = $cmp62$i$6 ^ 1;
    $inc65$i$6 = $not$cmp62$i$6&1;
    $c2$0$inc65$i$6 = (($inc65$i$6) + ($c2$0$inc65$i$5))|0;
    $s2$0$$s2$0$i$6 = $cmp62$i$6 ? $s2$0$$s2$0$i$5 : $$s2$0$i$6;
    $arrayidx61$i$7 = (((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4680|0);
    $68 = HEAP32[$arrayidx61$i$7>>2]|0;
    $cmp62$i$7 = ($68|0)==(-1);
    $cmp68$i$7 = ($s2$0$$s2$0$i$6|0)<($68|0);
    $$s2$0$i$7 = $cmp68$i$7 ? $68 : $s2$0$$s2$0$i$6;
    $not$cmp62$i$7 = $cmp62$i$7 ^ 1;
    $inc65$i$7 = $not$cmp62$i$7&1;
    $c2$0$inc65$i$7 = (($inc65$i$7) + ($c2$0$inc65$i$6))|0;
    $s2$0$$s2$0$i$7 = $cmp62$i$7 ? $s2$0$$s2$0$i$6 : $$s2$0$i$7;
    $arrayidx61$i$8 = (((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4684|0);
    $69 = HEAP32[$arrayidx61$i$8>>2]|0;
    $cmp62$i$8 = ($69|0)==(-1);
    $cmp68$i$8 = ($s2$0$$s2$0$i$7|0)<($69|0);
    $$s2$0$i$8 = $cmp68$i$8 ? $69 : $s2$0$$s2$0$i$7;
    $not$cmp62$i$8 = $cmp62$i$8 ^ 1;
    $inc65$i$8 = $not$cmp62$i$8&1;
    $c2$0$inc65$i$8 = (($inc65$i$8) + ($c2$0$inc65$i$7))|0;
    $s2$0$$s2$0$i$8 = $cmp62$i$8 ? $s2$0$$s2$0$i$7 : $$s2$0$i$8;
    $arrayidx61$i$9 = (((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4688|0);
    $70 = HEAP32[$arrayidx61$i$9>>2]|0;
    $cmp62$i$9 = ($70|0)==(-1);
    $cmp68$i$9 = ($s2$0$$s2$0$i$8|0)<($70|0);
    $$s2$0$i$9 = $cmp68$i$9 ? $70 : $s2$0$$s2$0$i$8;
    $not$cmp62$i$9 = $cmp62$i$9 ^ 1;
    $inc65$i$9 = $not$cmp62$i$9&1;
    $c2$0$inc65$i$9 = (($inc65$i$9) + ($c2$0$inc65$i$8))|0;
    $s2$0$$s2$0$i$9 = $cmp62$i$9 ? $s2$0$$s2$0$i$8 : $$s2$0$i$9;
    $$s1$0$10$i = $cmp49$10$i ? $60 : $s1$0$$s1$0$9$i;
    $s1$0$$s1$0$10$i = $cmp43$10$i ? $s1$0$$s1$0$9$i : $$s1$0$10$i;
    $part2_length$i = (((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4844|0);
    $scalefac_compress$i = (((((($l3_side)) + 10504|0) + (($ch*5252)|0)|0)) + 4784|0);
    $i$162$i = 0;
    while(1) {
     $arrayidx79$i = (10320 + ($i$162$i<<2)|0);
     $28 = HEAP32[$arrayidx79$i>>2]|0;
     $cmp80$i = ($s1$0$$s1$0$10$i|0)<($28|0);
     if ($cmp80$i) {
      $arrayidx82$i = (10384 + ($i$162$i<<2)|0);
      $29 = HEAP32[$arrayidx82$i>>2]|0;
      $cmp83$i = ($s2$0$$s2$0$i$9|0)<($29|0);
      if ($cmp83$i) {
       $arrayidx85$i = (10192 + ($i$162$i<<2)|0);
       $30 = HEAP32[$arrayidx85$i>>2]|0;
       $mul$i = Math_imul($30, $c1$0$inc46$10$i)|0;
       $arrayidx86$i = (10256 + ($i$162$i<<2)|0);
       $31 = HEAP32[$arrayidx86$i>>2]|0;
       $mul87$i = Math_imul($31, $c2$0$inc65$i$9)|0;
       $add88$i = (($mul87$i) + ($mul$i))|0;
       $32 = HEAP32[$part2_length$i>>2]|0;
       $cmp89$i = ($32|0)>($add88$i|0);
       if ($cmp89$i) {
        HEAP32[$part2_length$i>>2] = $add88$i;
        HEAP32[$scalefac_compress$i>>2] = $i$162$i;
       }
      }
     }
     $inc95$i = (($i$162$i) + 1)|0;
     $exitcond$i = ($inc95$i|0)==(16);
     if ($exitcond$i) {
      $recalc$5 = 0;
      break;
     } else {
      $i$162$i = $inc95$i;
     }
    }
   }
  }
 } else {
  $recalc$5 = $recalc$4;
 }
 $33 = HEAP32[$sfbmax>>2]|0;
 $cmp12484 = ($33|0)>(0);
 if ($cmp12484) {
  $89 = $33;$sfb$585 = 0;
  while(1) {
   $arrayidx127 = (((((($l3_side) + (($gr*10504)|0)|0) + (($ch*5252)|0)|0)) + 4608|0) + ($sfb$585<<2)|0);
   $34 = HEAP32[$arrayidx127>>2]|0;
   $cmp128 = ($34|0)==(-2);
   if ($cmp128) {
    HEAP32[$arrayidx127>>2] = 0;
    $$pre109 = HEAP32[$sfbmax>>2]|0;
    $35 = $$pre109;
   } else {
    $35 = $89;
   }
   $inc134 = (($sfb$585) + 1)|0;
   $cmp124 = ($inc134|0)<($35|0);
   if ($cmp124) {
    $89 = $35;$sfb$585 = $inc134;
   } else {
    break;
   }
  }
 }
 $tobool136 = ($recalc$5|0)==(0);
 if ($tobool136) {
  return;
 }
 (_scale_bitcount($gfc,$arrayidx2)|0);
 return;
}
function _scale_bitcount($gfc,$cod_info) {
 $gfc = $gfc|0;
 $cod_info = $cod_info|0;
 var $$$i = 0, $$$i4 = 0, $$22$1$1$i = 0, $$22$1$2$i = 0, $$22$1$3$i = 0, $$22$1$i = 0, $$22$128$i = 0, $$22$2$1$i = 0, $$22$2$2$i = 0, $$22$2$3$i = 0, $$22$2$i = 0, $$22$231$i = 0, $$22$3$i = 0, $$22$i = 0, $$23$1$i = 0, $$23$2$i = 0, $$23$3$i = 0, $$23$i = 0, $$lcssa11$1$i = 0, $$lcssa11$2$i = 0;
 var $$lcssa11$3$i = 0, $$lcssa11$i = 0, $$max_slen1$0$i = 0, $$max_slen2$0$i = 0, $$sink$i = 0, $$sink24$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $9 = 0, $add$1$1$i = 0, $add$1$2$i = 0, $add$1$3$i = 0, $add$1$i = 0, $add$2$1$i = 0, $add$2$2$i = 0, $add$2$3$i = 0;
 var $add$2$i = 0, $add101$i = 0, $add111$i = 0, $add126$1$i = 0, $add126$2$i = 0, $add126$3$i = 0, $add98$i = 0, $arraydecay79$i = 0, $arrayidx$1$i = 0, $arrayidx$2$i = 0, $arrayidx$3$i = 0, $arrayidx$4$i = 0, $arrayidx$5$i = 0, $arrayidx$6$i = 0, $arrayidx$7$i = 0, $arrayidx$8$i = 0, $arrayidx$9$i = 0, $arrayidx$i = 0, $arrayidx10$1$i = 0, $arrayidx10$2$i = 0;
 var $arrayidx10$3$i = 0, $arrayidx10$i = 0, $arrayidx17$1$1$i = 0, $arrayidx17$1$2$i = 0, $arrayidx17$1$3$i = 0, $arrayidx17$1$i = 0, $arrayidx17$126$i = 0, $arrayidx17$2$1$i = 0, $arrayidx17$2$2$i = 0, $arrayidx17$2$3$i = 0, $arrayidx17$2$i = 0, $arrayidx17$229$i = 0, $arrayidx17$3$i = 0, $arrayidx17$i = 0, $arrayidx27$i = 0, $arrayidx38$i = 0, $arrayidx43$1$i = 0, $arrayidx43$2$i = 0, $arrayidx43$3$i = 0, $arrayidx43$i = 0;
 var $arrayidx47$1$i = 0, $arrayidx47$2$i = 0, $arrayidx47$3$i = 0, $arrayidx47$i = 0, $arrayidx49$i = 0, $arrayidx51$i = 0, $arrayidx55$i = 0, $arrayidx67$1$i = 0, $arrayidx67$2$i = 0, $arrayidx67$3$i = 0, $arrayidx67$i = 0, $arrayidx84$1$i = 0, $arrayidx84$2$i = 0, $arrayidx84$3$i = 0, $arrayidx84$i = 0, $arrayidx85$1$i = 0, $arrayidx85$2$i = 0, $arrayidx85$3$i = 0, $arrayidx85$i = 0, $block_type$i = 0;
 var $block_type$i5 = 0, $cmp = 0, $cmp$i = 0, $cmp12$1$i = 0, $cmp12$2$i = 0, $cmp12$3$i = 0, $cmp12$i = 0, $cmp127$1$i = 0, $cmp127$2$i = 0, $cmp127$3$i = 0, $cmp127$i = 0, $cmp19$1$1$i = 0, $cmp19$1$2$i = 0, $cmp19$1$3$i = 0, $cmp19$1$i = 0, $cmp19$127$i = 0, $cmp19$2$1$i = 0, $cmp19$2$2$i = 0, $cmp19$2$3$i = 0, $cmp19$2$i = 0;
 var $cmp19$230$i = 0, $cmp19$3$i = 0, $cmp19$i = 0, $cmp2$i = 0, $cmp258$i = 0, $cmp28$i = 0, $cmp365$i = 0, $cmp39$i = 0, $cmp4514$1$i = 0, $cmp4514$2$i = 0, $cmp4514$3$i = 0, $cmp4514$i = 0, $cmp49$1$i = 0, $cmp49$2$i = 0, $cmp49$3$i = 0, $cmp49$i = 0, $cmp50$i = 0, $cmp52$i = 0, $cmp56$i = 0, $cmp65$i = 0;
 var $cmp68$1$i = 0, $cmp68$2$i = 0, $cmp68$3$i = 0, $cmp68$i = 0, $cmp7$1$i = 0, $cmp7$2$i = 0, $cmp7$3$i = 0, $cmp7$4$i = 0, $cmp7$5$i = 0, $cmp7$6$i = 0, $cmp7$7$i = 0, $cmp7$8$i = 0, $cmp7$9$i = 0, $cmp7$i = 0, $conv$i = 0, $div$1$i = 0, $div$2$i = 0, $div$3$i = 0, $div$i = 0, $exitcond = 0;
 var $exitcond$1$i = 0, $exitcond$2$i = 0, $exitcond$3$i = 0, $exitcond$i = 0, $exitcond$i6 = 0, $exitcond11 = 0, $i$18$1$i = 0, $i$18$2$i = 0, $i$18$3$i = 0, $i$215$1$i = 0, $i$215$2$i = 0, $i$215$3$i = 0, $inc30$1$i = 0, $inc30$2$i = 0, $inc30$3$i = 0, $inc31$1$i = 0, $inc31$2$i = 0, $inc31$3$i = 0, $inc31$i = 0, $inc33$i = 0;
 var $inc44$i = 0, $inc55$1$i = 0, $inc55$2$i = 0, $inc55$3$i = 0, $inc56$1$i = 0, $inc56$2$i = 0, $inc56$3$i = 0, $inc56$i = 0, $inc62$i = 0, $inc70$1$i = 0, $inc70$2$i = 0, $inc70$3$i = 0, $inc70$i = 0, $inc70$over$0$1$i = 0, $inc70$over$0$2$i = 0, $inc70$over$0$3$i = 0, $k$04$i = 0, $max_slen1$0$lcssa$i = 0, $max_slen1$010$i = 0, $max_slen2$0$lcssa$i = 0;
 var $max_slen2$07$i = 0, $mixed_block_flag$i = 0, $mode_gr = 0, $mul$1$i = 0, $mul$2$i = 0, $mul$3$i = 0, $mul$i = 0, $mul110$i = 0, $mul110$sink$i = 0, $mul124$1$i = 0, $mul124$2$i = 0, $mul124$3$i = 0, $mul124$i = 0, $mul97$i = 0, $part2_length$i = 0, $part2_length$i8 = 0, $preflag$i = 0, $preflag$i2 = 0, $retval$0 = 0, $row_in_table$0$i = 0;
 var $scalefac_compress$i = 0, $scalefac_compress$i7 = 0, $sfb$1$lcssa$1$i = 0, $sfb$1$lcssa$2$i = 0, $sfb$1$lcssa$i = 0, $sfb$19$1$i = 0, $sfb$19$2$i = 0, $sfb$19$3$i = 0, $sfb$19$i = 0, $sfb$2$lcssa$i = 0, $sfb$29$i = 0, $sfb$3$lcssa$1$i = 0, $sfb$3$lcssa$2$i = 0, $sfb$3$lcssa$i = 0, $sfb$316$1$i = 0, $sfb$316$2$i = 0, $sfb$316$3$i = 0, $sfb$316$i = 0, $sfb$36$i = 0, $sfb_partition_table$i = 0;
 var $sfbdivide$i = 0, $sfbmax$i = 0, $shl$i = 0, $shl99$i = 0, $sub$1$i = 0, $sub$2$i = 0, $sub$3$i = 0, $sub$4$i = 0, $sub$5$i = 0, $sub$6$i = 0, $sub$7$i = 0, $sub$8$i = 0, $sub$9$i = 0, $sub$i = 0, $tab$0$i = 0, $tobool$i = 0, $tobool$i3 = 0, $tobool3$i = 0, $tobool75$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $mode_gr = ((($gfc)) + 76|0);
 $0 = HEAP32[$mode_gr>>2]|0;
 $cmp = ($0|0)==(2);
 if ($cmp) {
  $block_type$i = ((($cod_info)) + 4788|0);
  $1 = HEAP32[$block_type$i>>2]|0;
  $cmp$i = ($1|0)==(2);
  if ($cmp$i) {
   $mixed_block_flag$i = ((($cod_info)) + 4792|0);
   $2 = HEAP32[$mixed_block_flag$i>>2]|0;
   $tobool$i = ($2|0)!=(0);
   $$$i = $tobool$i ? 10448 : 10512;
   $tab$0$i = $$$i;
  } else {
   $preflag$i = ((($cod_info)) + 4832|0);
   $3 = HEAP32[$preflag$i>>2]|0;
   $tobool3$i = ($3|0)==(0);
   if ($tobool3$i) {
    $arrayidx$i = ((($cod_info)) + 4652|0);
    $4 = HEAP32[$arrayidx$i>>2]|0;
    $5 = HEAP32[(6432)>>2]|0;
    $cmp7$i = ($4|0)<($5|0);
    if ($cmp7$i) {
     $tab$0$i = 10576;
    } else {
     $arrayidx$1$i = ((($cod_info)) + 4656|0);
     $6 = HEAP32[$arrayidx$1$i>>2]|0;
     $7 = HEAP32[(6436)>>2]|0;
     $cmp7$1$i = ($6|0)<($7|0);
     if ($cmp7$1$i) {
      $tab$0$i = 10576;
     } else {
      $arrayidx$2$i = ((($cod_info)) + 4660|0);
      $8 = HEAP32[$arrayidx$2$i>>2]|0;
      $9 = HEAP32[(6440)>>2]|0;
      $cmp7$2$i = ($8|0)<($9|0);
      if ($cmp7$2$i) {
       $tab$0$i = 10576;
      } else {
       $arrayidx$3$i = ((($cod_info)) + 4664|0);
       $10 = HEAP32[$arrayidx$3$i>>2]|0;
       $11 = HEAP32[(6444)>>2]|0;
       $cmp7$3$i = ($10|0)<($11|0);
       if ($cmp7$3$i) {
        $tab$0$i = 10576;
       } else {
        $arrayidx$4$i = ((($cod_info)) + 4668|0);
        $12 = HEAP32[$arrayidx$4$i>>2]|0;
        $13 = HEAP32[(6448)>>2]|0;
        $cmp7$4$i = ($12|0)<($13|0);
        if ($cmp7$4$i) {
         $tab$0$i = 10576;
        } else {
         $arrayidx$5$i = ((($cod_info)) + 4672|0);
         $14 = HEAP32[$arrayidx$5$i>>2]|0;
         $15 = HEAP32[(6452)>>2]|0;
         $cmp7$5$i = ($14|0)<($15|0);
         if ($cmp7$5$i) {
          $tab$0$i = 10576;
         } else {
          $arrayidx$6$i = ((($cod_info)) + 4676|0);
          $16 = HEAP32[$arrayidx$6$i>>2]|0;
          $17 = HEAP32[(6456)>>2]|0;
          $cmp7$6$i = ($16|0)<($17|0);
          if ($cmp7$6$i) {
           $tab$0$i = 10576;
          } else {
           $arrayidx$7$i = ((($cod_info)) + 4680|0);
           $18 = HEAP32[$arrayidx$7$i>>2]|0;
           $19 = HEAP32[(6460)>>2]|0;
           $cmp7$7$i = ($18|0)<($19|0);
           if ($cmp7$7$i) {
            $tab$0$i = 10576;
           } else {
            $arrayidx$8$i = ((($cod_info)) + 4684|0);
            $20 = HEAP32[$arrayidx$8$i>>2]|0;
            $21 = HEAP32[(6464)>>2]|0;
            $cmp7$8$i = ($20|0)<($21|0);
            if ($cmp7$8$i) {
             $tab$0$i = 10576;
            } else {
             $arrayidx$9$i = ((($cod_info)) + 4688|0);
             $22 = HEAP32[$arrayidx$9$i>>2]|0;
             $23 = HEAP32[(6468)>>2]|0;
             $cmp7$9$i = ($22|0)<($23|0);
             if ($cmp7$9$i) {
              $tab$0$i = 10576;
             } else {
              HEAP32[$preflag$i>>2] = 1;
              $sub$i = (($4) - ($5))|0;
              HEAP32[$arrayidx$i>>2] = $sub$i;
              $sub$1$i = (($6) - ($7))|0;
              HEAP32[$arrayidx$1$i>>2] = $sub$1$i;
              $sub$2$i = (($8) - ($9))|0;
              HEAP32[$arrayidx$2$i>>2] = $sub$2$i;
              $sub$3$i = (($10) - ($11))|0;
              HEAP32[$arrayidx$3$i>>2] = $sub$3$i;
              $sub$4$i = (($12) - ($13))|0;
              HEAP32[$arrayidx$4$i>>2] = $sub$4$i;
              $sub$5$i = (($14) - ($15))|0;
              HEAP32[$arrayidx$5$i>>2] = $sub$5$i;
              $sub$6$i = (($16) - ($17))|0;
              HEAP32[$arrayidx$6$i>>2] = $sub$6$i;
              $sub$7$i = (($18) - ($19))|0;
              HEAP32[$arrayidx$7$i>>2] = $sub$7$i;
              $sub$8$i = (($20) - ($21))|0;
              HEAP32[$arrayidx$8$i>>2] = $sub$8$i;
              $sub$9$i = (($22) - ($23))|0;
              HEAP32[$arrayidx$9$i>>2] = $sub$9$i;
              $tab$0$i = 10576;
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   } else {
    $tab$0$i = 10576;
   }
  }
  $sfbdivide$i = ((($cod_info)) + 4868|0);
  $24 = HEAP32[$sfbdivide$i>>2]|0;
  $cmp258$i = ($24|0)>(0);
  if ($cmp258$i) {
   $max_slen1$010$i = 0;$sfb$29$i = 0;
   while(1) {
    $arrayidx27$i = (((($cod_info)) + 4608|0) + ($sfb$29$i<<2)|0);
    $26 = HEAP32[$arrayidx27$i>>2]|0;
    $cmp28$i = ($max_slen1$010$i|0)<($26|0);
    $$max_slen1$0$i = $cmp28$i ? $26 : $max_slen1$010$i;
    $inc33$i = (($sfb$29$i) + 1)|0;
    $exitcond11 = ($inc33$i|0)==($24|0);
    if ($exitcond11) {
     $max_slen1$0$lcssa$i = $$max_slen1$0$i;$sfb$2$lcssa$i = $24;
     break;
    } else {
     $max_slen1$010$i = $$max_slen1$0$i;$sfb$29$i = $inc33$i;
    }
   }
  } else {
   $max_slen1$0$lcssa$i = 0;$sfb$2$lcssa$i = 0;
  }
  $sfbmax$i = ((($cod_info)) + 4860|0);
  $25 = HEAP32[$sfbmax$i>>2]|0;
  $cmp365$i = ($sfb$2$lcssa$i|0)<($25|0);
  if ($cmp365$i) {
   $max_slen2$07$i = 0;$sfb$36$i = $sfb$2$lcssa$i;
   while(1) {
    $arrayidx38$i = (((($cod_info)) + 4608|0) + ($sfb$36$i<<2)|0);
    $27 = HEAP32[$arrayidx38$i>>2]|0;
    $cmp39$i = ($max_slen2$07$i|0)<($27|0);
    $$max_slen2$0$i = $cmp39$i ? $27 : $max_slen2$07$i;
    $inc44$i = (($sfb$36$i) + 1)|0;
    $exitcond = ($inc44$i|0)==($25|0);
    if ($exitcond) {
     $max_slen2$0$lcssa$i = $$max_slen2$0$i;
     break;
    } else {
     $max_slen2$07$i = $$max_slen2$0$i;$sfb$36$i = $inc44$i;
    }
   }
  } else {
   $max_slen2$0$lcssa$i = 0;
  }
  $part2_length$i = ((($cod_info)) + 4844|0);
  HEAP32[$part2_length$i>>2] = 100000;
  $scalefac_compress$i = ((($cod_info)) + 4784|0);
  $31 = 100000;$k$04$i = 0;
  while(1) {
   $arrayidx49$i = (10320 + ($k$04$i<<2)|0);
   $28 = HEAP32[$arrayidx49$i>>2]|0;
   $cmp50$i = ($max_slen1$0$lcssa$i|0)<($28|0);
   if ($cmp50$i) {
    $arrayidx51$i = (10384 + ($k$04$i<<2)|0);
    $29 = HEAP32[$arrayidx51$i>>2]|0;
    $cmp52$i = ($max_slen2$0$lcssa$i|0)<($29|0);
    if ($cmp52$i) {
     $arrayidx55$i = (($tab$0$i) + ($k$04$i<<2)|0);
     $30 = HEAP32[$arrayidx55$i>>2]|0;
     $cmp56$i = ($31|0)>($30|0);
     if ($cmp56$i) {
      HEAP32[$part2_length$i>>2] = $30;
      HEAP32[$scalefac_compress$i>>2] = $k$04$i;
      $32 = $30;
     } else {
      $32 = $31;
     }
    } else {
     $32 = $31;
    }
   } else {
    $32 = $31;
   }
   $inc62$i = (($k$04$i) + 1)|0;
   $exitcond$i = ($inc62$i|0)==(16);
   if ($exitcond$i) {
    break;
   } else {
    $31 = $32;$k$04$i = $inc62$i;
   }
  }
  $cmp65$i = ($32|0)==(100000);
  $conv$i = $cmp65$i&1;
  $retval$0 = $conv$i;
  return ($retval$0|0);
 } else {
  $preflag$i2 = ((($cod_info)) + 4832|0);
  $33 = HEAP32[$preflag$i2>>2]|0;
  $tobool$i3 = ($33|0)==(0);
  $$$i4 = $tobool$i3 ? 0 : 2;
  $block_type$i5 = ((($cod_info)) + 4788|0);
  $34 = HEAP32[$block_type$i5>>2]|0;
  $cmp2$i = ($34|0)==(2);
  if ($cmp2$i) {
   $arrayidx10$i = (((6100 + (($$$i4*48)|0)|0)) + 16|0);
   $36 = HEAP32[$arrayidx10$i>>2]|0;
   $div$i = (($36|0) / 3)&-1;
   $cmp127$i = ($36|0)>(2);
   if ($cmp127$i) {
    $$lcssa11$i = 0;$sfb$19$i = 0;
    while(1) {
     $mul$i = ($sfb$19$i*3)|0;
     $arrayidx17$i = (((($cod_info)) + 4608|0) + ($mul$i<<2)|0);
     $37 = HEAP32[$arrayidx17$i>>2]|0;
     $cmp19$i = ($37|0)>($$lcssa11$i|0);
     $$22$i = $cmp19$i ? $37 : $$lcssa11$i;
     $add$1$i = (($mul$i) + 1)|0;
     $arrayidx17$1$i = (((($cod_info)) + 4608|0) + ($add$1$i<<2)|0);
     $38 = HEAP32[$arrayidx17$1$i>>2]|0;
     $cmp19$1$i = ($38|0)>($$22$i|0);
     $$22$1$i = $cmp19$1$i ? $38 : $$22$i;
     $add$2$i = (($mul$i) + 2)|0;
     $arrayidx17$2$i = (((($cod_info)) + 4608|0) + ($add$2$i<<2)|0);
     $39 = HEAP32[$arrayidx17$2$i>>2]|0;
     $cmp19$2$i = ($39|0)>($$22$1$i|0);
     $$22$2$i = $cmp19$2$i ? $39 : $$22$1$i;
     $inc31$i = (($sfb$19$i) + 1)|0;
     $cmp12$i = ($inc31$i|0)<($div$i|0);
     if ($cmp12$i) {
      $$lcssa11$i = $$22$2$i;$sfb$19$i = $inc31$i;
     } else {
      $82 = $$22$2$i;$sfb$1$lcssa$i = $inc31$i;
      break;
     }
    }
   } else {
    $82 = 0;$sfb$1$lcssa$i = 0;
   }
   $arrayidx10$1$i = (((6100 + (($$$i4*48)|0)|0)) + 20|0);
   $40 = HEAP32[$arrayidx10$1$i>>2]|0;
   $div$1$i = (($40|0) / 3)&-1;
   $cmp127$1$i = ($40|0)>(2);
   if ($cmp127$1$i) {
    $$lcssa11$1$i = 0;$i$18$1$i = 0;$sfb$19$1$i = $sfb$1$lcssa$i;
    while(1) {
     $mul$1$i = ($sfb$19$1$i*3)|0;
     $arrayidx17$126$i = (((($cod_info)) + 4608|0) + ($mul$1$i<<2)|0);
     $60 = HEAP32[$arrayidx17$126$i>>2]|0;
     $cmp19$127$i = ($60|0)>($$lcssa11$1$i|0);
     $$22$128$i = $cmp19$127$i ? $60 : $$lcssa11$1$i;
     $add$1$1$i = (($mul$1$i) + 1)|0;
     $arrayidx17$1$1$i = (((($cod_info)) + 4608|0) + ($add$1$1$i<<2)|0);
     $61 = HEAP32[$arrayidx17$1$1$i>>2]|0;
     $cmp19$1$1$i = ($61|0)>($$22$128$i|0);
     $$22$1$1$i = $cmp19$1$1$i ? $61 : $$22$128$i;
     $add$2$1$i = (($mul$1$i) + 2)|0;
     $arrayidx17$2$1$i = (((($cod_info)) + 4608|0) + ($add$2$1$i<<2)|0);
     $62 = HEAP32[$arrayidx17$2$1$i>>2]|0;
     $cmp19$2$1$i = ($62|0)>($$22$1$1$i|0);
     $$22$2$1$i = $cmp19$2$1$i ? $62 : $$22$1$1$i;
     $inc30$1$i = (($i$18$1$i) + 1)|0;
     $inc31$1$i = (($sfb$19$1$i) + 1)|0;
     $cmp12$1$i = ($inc30$1$i|0)<($div$1$i|0);
     if ($cmp12$1$i) {
      $$lcssa11$1$i = $$22$2$1$i;$i$18$1$i = $inc30$1$i;$sfb$19$1$i = $inc31$1$i;
     } else {
      $83 = $$22$2$1$i;$sfb$1$lcssa$1$i = $inc31$1$i;
      break;
     }
    }
   } else {
    $83 = 0;$sfb$1$lcssa$1$i = $sfb$1$lcssa$i;
   }
   $arrayidx10$2$i = (((6100 + (($$$i4*48)|0)|0)) + 24|0);
   $63 = HEAP32[$arrayidx10$2$i>>2]|0;
   $div$2$i = (($63|0) / 3)&-1;
   $cmp127$2$i = ($63|0)>(2);
   if ($cmp127$2$i) {
    $$lcssa11$2$i = 0;$i$18$2$i = 0;$sfb$19$2$i = $sfb$1$lcssa$1$i;
    while(1) {
     $mul$2$i = ($sfb$19$2$i*3)|0;
     $arrayidx17$229$i = (((($cod_info)) + 4608|0) + ($mul$2$i<<2)|0);
     $64 = HEAP32[$arrayidx17$229$i>>2]|0;
     $cmp19$230$i = ($64|0)>($$lcssa11$2$i|0);
     $$22$231$i = $cmp19$230$i ? $64 : $$lcssa11$2$i;
     $add$1$2$i = (($mul$2$i) + 1)|0;
     $arrayidx17$1$2$i = (((($cod_info)) + 4608|0) + ($add$1$2$i<<2)|0);
     $65 = HEAP32[$arrayidx17$1$2$i>>2]|0;
     $cmp19$1$2$i = ($65|0)>($$22$231$i|0);
     $$22$1$2$i = $cmp19$1$2$i ? $65 : $$22$231$i;
     $add$2$2$i = (($mul$2$i) + 2)|0;
     $arrayidx17$2$2$i = (((($cod_info)) + 4608|0) + ($add$2$2$i<<2)|0);
     $66 = HEAP32[$arrayidx17$2$2$i>>2]|0;
     $cmp19$2$2$i = ($66|0)>($$22$1$2$i|0);
     $$22$2$2$i = $cmp19$2$2$i ? $66 : $$22$1$2$i;
     $inc30$2$i = (($i$18$2$i) + 1)|0;
     $inc31$2$i = (($sfb$19$2$i) + 1)|0;
     $cmp12$2$i = ($inc30$2$i|0)<($div$2$i|0);
     if ($cmp12$2$i) {
      $$lcssa11$2$i = $$22$2$2$i;$i$18$2$i = $inc30$2$i;$sfb$19$2$i = $inc31$2$i;
     } else {
      $85 = $$22$2$2$i;$sfb$1$lcssa$2$i = $inc31$2$i;
      break;
     }
    }
   } else {
    $85 = 0;$sfb$1$lcssa$2$i = $sfb$1$lcssa$1$i;
   }
   $arrayidx10$3$i = (((6100 + (($$$i4*48)|0)|0)) + 28|0);
   $67 = HEAP32[$arrayidx10$3$i>>2]|0;
   $div$3$i = (($67|0) / 3)&-1;
   $cmp127$3$i = ($67|0)>(2);
   if ($cmp127$3$i) {
    $$lcssa11$3$i = 0;$i$18$3$i = 0;$sfb$19$3$i = $sfb$1$lcssa$2$i;
    while(1) {
     $mul$3$i = ($sfb$19$3$i*3)|0;
     $arrayidx17$3$i = (((($cod_info)) + 4608|0) + ($mul$3$i<<2)|0);
     $68 = HEAP32[$arrayidx17$3$i>>2]|0;
     $cmp19$3$i = ($68|0)>($$lcssa11$3$i|0);
     $$22$3$i = $cmp19$3$i ? $68 : $$lcssa11$3$i;
     $add$1$3$i = (($mul$3$i) + 1)|0;
     $arrayidx17$1$3$i = (((($cod_info)) + 4608|0) + ($add$1$3$i<<2)|0);
     $69 = HEAP32[$arrayidx17$1$3$i>>2]|0;
     $cmp19$1$3$i = ($69|0)>($$22$3$i|0);
     $$22$1$3$i = $cmp19$1$3$i ? $69 : $$22$3$i;
     $add$2$3$i = (($mul$3$i) + 2)|0;
     $arrayidx17$2$3$i = (((($cod_info)) + 4608|0) + ($add$2$3$i<<2)|0);
     $70 = HEAP32[$arrayidx17$2$3$i>>2]|0;
     $cmp19$2$3$i = ($70|0)>($$22$1$3$i|0);
     $$22$2$3$i = $cmp19$2$3$i ? $70 : $$22$1$3$i;
     $inc30$3$i = (($i$18$3$i) + 1)|0;
     $inc31$3$i = (($sfb$19$3$i) + 1)|0;
     $cmp12$3$i = ($inc30$3$i|0)<($div$3$i|0);
     if ($cmp12$3$i) {
      $$lcssa11$3$i = $$22$2$3$i;$i$18$3$i = $inc30$3$i;$sfb$19$3$i = $inc31$3$i;
     } else {
      $45 = $82;$47 = $83;$49 = $85;$51 = $$22$2$3$i;$56 = $36;$57 = $40;$58 = $63;$59 = $67;$row_in_table$0$i = 1;
      break;
     }
    }
   } else {
    $45 = $82;$47 = $83;$49 = $85;$51 = 0;$56 = $36;$57 = $40;$58 = $63;$59 = $67;$row_in_table$0$i = 1;
   }
  } else {
   $arrayidx43$i = (6100 + (($$$i4*48)|0)|0);
   $35 = HEAP32[$arrayidx43$i>>2]|0;
   $cmp4514$i = ($35|0)>(0);
   if ($cmp4514$i) {
    $42 = 0;$sfb$316$i = 0;
    while(1) {
     $arrayidx47$i = (((($cod_info)) + 4608|0) + ($sfb$316$i<<2)|0);
     $41 = HEAP32[$arrayidx47$i>>2]|0;
     $cmp49$i = ($41|0)>($42|0);
     $$23$i = $cmp49$i ? $41 : $42;
     $inc56$i = (($sfb$316$i) + 1)|0;
     $exitcond$i6 = ($inc56$i|0)==($35|0);
     if ($exitcond$i6) {
      $81 = $$23$i;$sfb$3$lcssa$i = $35;
      break;
     } else {
      $42 = $$23$i;$sfb$316$i = $inc56$i;
     }
    }
   } else {
    $81 = 0;$sfb$3$lcssa$i = 0;
   }
   $arrayidx43$1$i = (((6100 + (($$$i4*48)|0)|0)) + 4|0);
   $43 = HEAP32[$arrayidx43$1$i>>2]|0;
   $cmp4514$1$i = ($43|0)>(0);
   if ($cmp4514$1$i) {
    $72 = 0;$i$215$1$i = 0;$sfb$316$1$i = $sfb$3$lcssa$i;
    while(1) {
     $arrayidx47$1$i = (((($cod_info)) + 4608|0) + ($sfb$316$1$i<<2)|0);
     $71 = HEAP32[$arrayidx47$1$i>>2]|0;
     $cmp49$1$i = ($71|0)>($72|0);
     $$23$1$i = $cmp49$1$i ? $71 : $72;
     $inc55$1$i = (($i$215$1$i) + 1)|0;
     $inc56$1$i = (($sfb$316$1$i) + 1)|0;
     $exitcond$1$i = ($inc55$1$i|0)==($43|0);
     if ($exitcond$1$i) {
      break;
     } else {
      $72 = $$23$1$i;$i$215$1$i = $inc55$1$i;$sfb$316$1$i = $inc56$1$i;
     }
    }
    $73 = (($43) + ($sfb$3$lcssa$i))|0;
    $84 = $$23$1$i;$sfb$3$lcssa$1$i = $73;
   } else {
    $84 = 0;$sfb$3$lcssa$1$i = $sfb$3$lcssa$i;
   }
   $arrayidx43$2$i = (((6100 + (($$$i4*48)|0)|0)) + 8|0);
   $74 = HEAP32[$arrayidx43$2$i>>2]|0;
   $cmp4514$2$i = ($74|0)>(0);
   if ($cmp4514$2$i) {
    $76 = 0;$i$215$2$i = 0;$sfb$316$2$i = $sfb$3$lcssa$1$i;
    while(1) {
     $arrayidx47$2$i = (((($cod_info)) + 4608|0) + ($sfb$316$2$i<<2)|0);
     $75 = HEAP32[$arrayidx47$2$i>>2]|0;
     $cmp49$2$i = ($75|0)>($76|0);
     $$23$2$i = $cmp49$2$i ? $75 : $76;
     $inc55$2$i = (($i$215$2$i) + 1)|0;
     $inc56$2$i = (($sfb$316$2$i) + 1)|0;
     $exitcond$2$i = ($inc55$2$i|0)==($74|0);
     if ($exitcond$2$i) {
      break;
     } else {
      $76 = $$23$2$i;$i$215$2$i = $inc55$2$i;$sfb$316$2$i = $inc56$2$i;
     }
    }
    $77 = (($74) + ($sfb$3$lcssa$1$i))|0;
    $86 = $$23$2$i;$sfb$3$lcssa$2$i = $77;
   } else {
    $86 = 0;$sfb$3$lcssa$2$i = $sfb$3$lcssa$1$i;
   }
   $arrayidx43$3$i = (((6100 + (($$$i4*48)|0)|0)) + 12|0);
   $78 = HEAP32[$arrayidx43$3$i>>2]|0;
   $cmp4514$3$i = ($78|0)>(0);
   if ($cmp4514$3$i) {
    $80 = 0;$i$215$3$i = 0;$sfb$316$3$i = $sfb$3$lcssa$2$i;
    while(1) {
     $arrayidx47$3$i = (((($cod_info)) + 4608|0) + ($sfb$316$3$i<<2)|0);
     $79 = HEAP32[$arrayidx47$3$i>>2]|0;
     $cmp49$3$i = ($79|0)>($80|0);
     $$23$3$i = $cmp49$3$i ? $79 : $80;
     $inc55$3$i = (($i$215$3$i) + 1)|0;
     $inc56$3$i = (($sfb$316$3$i) + 1)|0;
     $exitcond$3$i = ($inc55$3$i|0)==($78|0);
     if ($exitcond$3$i) {
      $45 = $81;$47 = $84;$49 = $86;$51 = $$23$3$i;$56 = $35;$57 = $43;$58 = $74;$59 = $78;$row_in_table$0$i = 0;
      break;
     } else {
      $80 = $$23$3$i;$i$215$3$i = $inc55$3$i;$sfb$316$3$i = $inc56$3$i;
     }
    }
   } else {
    $45 = $81;$47 = $84;$49 = $86;$51 = 0;$56 = $35;$57 = $43;$58 = $74;$59 = $78;$row_in_table$0$i = 0;
   }
  }
  $arrayidx67$i = (10640 + ($$$i4<<4)|0);
  $44 = HEAP32[$arrayidx67$i>>2]|0;
  $cmp68$i = ($45|0)>($44|0);
  $inc70$i = $cmp68$i&1;
  $arrayidx67$1$i = (((10640 + ($$$i4<<4)|0)) + 4|0);
  $46 = HEAP32[$arrayidx67$1$i>>2]|0;
  $cmp68$1$i = ($47|0)>($46|0);
  $inc70$1$i = $cmp68$1$i&1;
  $inc70$over$0$1$i = (($inc70$1$i) + ($inc70$i))|0;
  $arrayidx67$2$i = (((10640 + ($$$i4<<4)|0)) + 8|0);
  $48 = HEAP32[$arrayidx67$2$i>>2]|0;
  $cmp68$2$i = ($49|0)>($48|0);
  $inc70$2$i = $cmp68$2$i&1;
  $inc70$over$0$2$i = (($inc70$over$0$1$i) + ($inc70$2$i))|0;
  $arrayidx67$3$i = (((10640 + ($$$i4<<4)|0)) + 12|0);
  $50 = HEAP32[$arrayidx67$3$i>>2]|0;
  $cmp68$3$i = ($51|0)>($50|0);
  $inc70$3$i = $cmp68$3$i&1;
  $inc70$over$0$3$i = (($inc70$over$0$2$i) + ($inc70$3$i))|0;
  $tobool75$i = ($inc70$over$0$3$i|0)==(0);
  if (!($tobool75$i)) {
   $retval$0 = $inc70$over$0$3$i;
   return ($retval$0|0);
  }
  $arraydecay79$i = ((6100 + (($$$i4*48)|0)|0) + ($row_in_table$0$i<<4)|0);
  $sfb_partition_table$i = ((($cod_info)) + 5188|0);
  HEAP32[$sfb_partition_table$i>>2] = $arraydecay79$i;
  $arrayidx84$i = (10736 + ($45<<2)|0);
  $52 = HEAP32[$arrayidx84$i>>2]|0;
  $arrayidx85$i = ((($cod_info)) + 5192|0);
  HEAP32[$arrayidx85$i>>2] = $52;
  $arrayidx84$1$i = (10736 + ($47<<2)|0);
  $53 = HEAP32[$arrayidx84$1$i>>2]|0;
  $arrayidx85$1$i = ((($cod_info)) + 5196|0);
  HEAP32[$arrayidx85$1$i>>2] = $53;
  $arrayidx84$2$i = (10736 + ($49<<2)|0);
  $54 = HEAP32[$arrayidx84$2$i>>2]|0;
  $arrayidx85$2$i = ((($cod_info)) + 5200|0);
  HEAP32[$arrayidx85$2$i>>2] = $54;
  $arrayidx84$3$i = (10736 + ($51<<2)|0);
  $55 = HEAP32[$arrayidx84$3$i>>2]|0;
  $arrayidx85$3$i = ((($cod_info)) + 5204|0);
  HEAP32[$arrayidx85$3$i>>2] = $55;
  if ($tobool$i3) {
   $mul97$i = ($52*5)|0;
   $add98$i = (($53) + ($mul97$i))|0;
   $shl$i = $add98$i << 4;
   $shl99$i = $54 << 2;
   $$sink$i = $55;$$sink24$i = $shl$i;$mul110$sink$i = $shl99$i;
  } else {
   $mul110$i = ($52*3)|0;
   $$sink$i = $53;$$sink24$i = 500;$mul110$sink$i = $mul110$i;
  }
  $add111$i = (($mul110$sink$i) + ($$sink24$i))|0;
  $add101$i = (($add111$i) + ($$sink$i))|0;
  $scalefac_compress$i7 = ((($cod_info)) + 4784|0);
  HEAP32[$scalefac_compress$i7>>2] = $add101$i;
  $part2_length$i8 = ((($cod_info)) + 4844|0);
  $mul124$i = Math_imul($52, $56)|0;
  $mul124$1$i = Math_imul($57, $53)|0;
  $add126$1$i = (($mul124$1$i) + ($mul124$i))|0;
  $mul124$2$i = Math_imul($58, $54)|0;
  $add126$2$i = (($add126$1$i) + ($mul124$2$i))|0;
  $mul124$3$i = Math_imul($59, $55)|0;
  $add126$3$i = (($add126$2$i) + ($mul124$3$i))|0;
  HEAP32[$part2_length$i8>>2] = $add126$3$i;
  $retval$0 = 0;
  return ($retval$0|0);
 }
 return (0)|0;
}
function _huffman_init($gfc) {
 $gfc = $gfc|0;
 var $$bv_index$0 = 0, $$bv_index$2 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $add = 0, $add23 = 0, $add24 = 0, $add42 = 0, $arrayidx = 0, $arrayidx13 = 0, $arrayidx25 = 0, $arrayidx41 = 0, $arrayidx6 = 0, $bv_index$0 = 0, $bv_index$2 = 0, $choose_table = 0, $cmp = 0;
 var $cmp1 = 0, $cmp10 = 0, $cmp26 = 0, $cmp31 = 0, $cmp7 = 0, $conv = 0, $conv22 = 0, $conv37 = 0, $dec = 0, $dec29 = 0, $i$026 = 0, $inc = 0, $region0_count = 0, $region1_count = 0, $scfb_anz$0 = 0, $sext = 0, $sub = 0, $sub40 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $choose_table = ((($gfc)) + 85816|0);
 HEAP32[$choose_table>>2] = 5;
 $i$026 = 2;
 while(1) {
  $scfb_anz$0 = 0;
  while(1) {
   $inc = (($scfb_anz$0) + 1)|0;
   $arrayidx = (((($gfc)) + 21360|0) + ($inc<<2)|0);
   $0 = HEAP32[$arrayidx>>2]|0;
   $cmp1 = ($0|0)<($i$026|0);
   if ($cmp1) {
    $scfb_anz$0 = $inc;
   } else {
    break;
   }
  }
  $region0_count = (10800 + ($inc<<3)|0);
  $1 = HEAP32[$region0_count>>2]|0;
  $bv_index$0 = $1;
  while(1) {
   $add = (($bv_index$0) + 1)|0;
   $arrayidx6 = (((($gfc)) + 21360|0) + ($add<<2)|0);
   $2 = HEAP32[$arrayidx6>>2]|0;
   $cmp7 = ($2|0)>($i$026|0);
   $dec = (($bv_index$0) + -1)|0;
   if ($cmp7) {
    $bv_index$0 = $dec;
   } else {
    break;
   }
  }
  $cmp10 = ($bv_index$0|0)<(0);
  $$bv_index$0 = $cmp10 ? $1 : $bv_index$0;
  $conv = $$bv_index$0&255;
  $sub = (($i$026) + -2)|0;
  $arrayidx13 = (((($gfc)) + 85100|0) + ($sub)|0);
  HEAP8[$arrayidx13>>0] = $conv;
  $region1_count = (((10800 + ($inc<<3)|0)) + 4|0);
  $3 = HEAP32[$region1_count>>2]|0;
  $sext = $$bv_index$0 << 24;
  $conv22 = $sext >> 24;
  $bv_index$2 = $3;
  while(1) {
   $add23 = (($bv_index$2) + 2)|0;
   $add24 = (($add23) + ($conv22))|0;
   $arrayidx25 = (((($gfc)) + 21360|0) + ($add24<<2)|0);
   $4 = HEAP32[$arrayidx25>>2]|0;
   $cmp26 = ($4|0)>($i$026|0);
   $dec29 = (($bv_index$2) + -1)|0;
   if ($cmp26) {
    $bv_index$2 = $dec29;
   } else {
    break;
   }
  }
  $cmp31 = ($bv_index$2|0)<(0);
  $$bv_index$2 = $cmp31 ? $3 : $bv_index$2;
  $conv37 = $$bv_index$2&255;
  $sub40 = (($i$026) + -1)|0;
  $arrayidx41 = (((($gfc)) + 85100|0) + ($sub40)|0);
  HEAP8[$arrayidx41>>0] = $conv37;
  $add42 = (($i$026) + 2)|0;
  $cmp = ($add42|0)<(577);
  if ($cmp) {
   $i$026 = $add42;
  } else {
   break;
  }
 }
 return;
}
function _choose_table_nonMMX($ix,$end,$_s) {
 $ix = $ix|0;
 $end = $end|0;
 $_s = $_s|0;
 var $$max1$0$i = 0, $$op$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $add$i = 0, $add11$i = 0, $add16$i = 0, $add4$i = 0, $add4$sum$0$i = 0, $add7$i = 0, $add9$i = 0, $and$i = 0, $and$shr$i = 0, $arrayidx = 0, $arrayidx10$i = 0, $call1 = 0, $choice$0$lcssa = 0, $choice$029 = 0, $choice2$0$lcssa$ph = 0, $choice2$0$lcssa34 = 0, $cmp = 0, $cmp$i = 0, $cmp$i25 = 0, $cmp12 = 0;
 var $cmp12$i = 0, $cmp13$i = 0, $cmp16 = 0, $cmp2 = 0, $cmp2$i = 0, $cmp5$i = 0, $cmp5$i26 = 0, $cmp6$i = 0, $cmp7 = 0, $cmp7$1 = 0, $cmp7$2 = 0, $cmp7$3 = 0, $cmp7$4 = 0, $cmp7$5 = 0, $cmp7$6 = 0, $cmp7$7 = 0, $inc20 = 0, $incdec$ptr$i = 0, $incdec$ptr$i24 = 0, $incdec$ptr1$i = 0;
 var $incdec$ptr3$i = 0, $ix$addr$0$i = 0, $ix$addr$0$i23 = 0, $linmax15 = 0, $max1$0$i = 0, $max2$0$i = 0, $max2$1$$max1$0$i = 0, $max2$1$i = 0, $mul$i = 0, $retval$0 = 0, $shl$i = 0, $shr$i = 0, $sub = 0, $sub1032 = 0, $sum$0$i = 0, $sum$2$i = 0, $t2$t1$i = 0, $xlen$i = 0, $xlen2$i = 0, $y$0$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $ix$addr$0$i = $ix;$max1$0$i = 0;$max2$0$i = 0;
 while(1) {
  $incdec$ptr$i = ((($ix$addr$0$i)) + 4|0);
  $0 = HEAP32[$ix$addr$0$i>>2]|0;
  $incdec$ptr1$i = ((($ix$addr$0$i)) + 8|0);
  $1 = HEAP32[$incdec$ptr$i>>2]|0;
  $cmp$i = ($max1$0$i|0)<($0|0);
  $$max1$0$i = $cmp$i ? $0 : $max1$0$i;
  $cmp2$i = ($max2$0$i|0)<($1|0);
  $max2$1$i = $cmp2$i ? $1 : $max2$0$i;
  $cmp5$i = ($incdec$ptr1$i>>>0)<($end>>>0);
  if ($cmp5$i) {
   $ix$addr$0$i = $incdec$ptr1$i;$max1$0$i = $$max1$0$i;$max2$0$i = $max2$1$i;
  } else {
   break;
  }
 }
 $cmp6$i = ($$max1$0$i|0)<($max2$1$i|0);
 $max2$1$$max1$0$i = $cmp6$i ? $max2$1$i : $$max1$0$i;
 $cmp = ($max2$1$$max1$0$i>>>0)<(16);
 if ($cmp) {
  $arrayidx = (10984 + ($max2$1$$max1$0$i<<2)|0);
  $2 = HEAP32[$arrayidx>>2]|0;
  $call1 = (FUNCTION_TABLE_iiiii[$2 & 7]($ix,$end,$max2$1$$max1$0$i,$_s)|0);
  $retval$0 = $call1;
  return ($retval$0|0);
 }
 $cmp2 = ($max2$1$$max1$0$i>>>0)>(8206);
 if ($cmp2) {
  HEAP32[$_s>>2] = 100000;
  $retval$0 = -1;
  return ($retval$0|0);
 }
 $sub = (($max2$1$$max1$0$i) + -15)|0;
 $3 = HEAP32[(8700)>>2]|0;
 $cmp7 = ($3>>>0)<($sub>>>0);
 if ($cmp7) {
  $4 = HEAP32[(8716)>>2]|0;
  $cmp7$1 = ($4>>>0)<($sub>>>0);
  if ($cmp7$1) {
   $12 = HEAP32[(8732)>>2]|0;
   $cmp7$2 = ($12>>>0)<($sub>>>0);
   if ($cmp7$2) {
    $13 = HEAP32[(8748)>>2]|0;
    $cmp7$3 = ($13>>>0)<($sub>>>0);
    if ($cmp7$3) {
     $14 = HEAP32[(8764)>>2]|0;
     $cmp7$4 = ($14>>>0)<($sub>>>0);
     if ($cmp7$4) {
      $15 = HEAP32[(8780)>>2]|0;
      $cmp7$5 = ($15>>>0)<($sub>>>0);
      if ($cmp7$5) {
       $16 = HEAP32[(8796)>>2]|0;
       $cmp7$6 = ($16>>>0)<($sub>>>0);
       if ($cmp7$6) {
        $17 = HEAP32[(8812)>>2]|0;
        $cmp7$7 = ($17>>>0)<($sub>>>0);
        if ($cmp7$7) {
         $choice$0$lcssa = 24;$choice2$0$lcssa34 = 32;
        } else {
         $choice2$0$lcssa$ph = 31;
         label = 9;
        }
       } else {
        $choice2$0$lcssa$ph = 30;
        label = 9;
       }
      } else {
       $choice2$0$lcssa$ph = 29;
       label = 9;
      }
     } else {
      $choice2$0$lcssa$ph = 28;
      label = 9;
     }
    } else {
     $choice2$0$lcssa$ph = 27;
     label = 9;
    }
   } else {
    $choice2$0$lcssa$ph = 26;
    label = 9;
   }
  } else {
   $choice2$0$lcssa$ph = 25;
   label = 9;
  }
 } else {
  $choice2$0$lcssa$ph = 24;
  label = 9;
 }
 L20: do {
  if ((label|0) == 9) {
   $sub1032 = (($choice2$0$lcssa$ph) + -8)|0;
   $choice$029 = $sub1032;
   while(1) {
    $linmax15 = (((8312 + ($choice$029<<4)|0)) + 4|0);
    $5 = HEAP32[$linmax15>>2]|0;
    $cmp16 = ($5>>>0)<($sub>>>0);
    if (!($cmp16)) {
     $choice$0$lcssa = $choice$029;$choice2$0$lcssa34 = $choice2$0$lcssa$ph;
     break L20;
    }
    $inc20 = (($choice$029) + 1)|0;
    $cmp12 = ($inc20|0)<(24);
    if ($cmp12) {
     $choice$029 = $inc20;
    } else {
     $choice$0$lcssa = $inc20;$choice2$0$lcssa34 = $choice2$0$lcssa$ph;
     break;
    }
   }
  }
 } while(0);
 $xlen$i = (8312 + ($choice$0$lcssa<<4)|0);
 $6 = HEAP32[$xlen$i>>2]|0;
 $mul$i = $6 << 16;
 $xlen2$i = (8312 + ($choice2$0$lcssa34<<4)|0);
 $7 = HEAP32[$xlen2$i>>2]|0;
 $add$i = (($mul$i) + ($7))|0;
 $ix$addr$0$i23 = $ix;$sum$0$i = 0;
 while(1) {
  $incdec$ptr$i24 = ((($ix$addr$0$i23)) + 4|0);
  $8 = HEAP32[$ix$addr$0$i23>>2]|0;
  $incdec$ptr3$i = ((($ix$addr$0$i23)) + 8|0);
  $9 = HEAP32[$incdec$ptr$i24>>2]|0;
  $cmp$i25 = ($8>>>0)>(14);
  $add4$i = $cmp$i25 ? $add$i : 0;
  $add4$sum$0$i = (($add4$i) + ($sum$0$i))|0;
  $cmp5$i26 = ($9>>>0)>(14);
  $add7$i = $cmp5$i26 ? $add$i : 0;
  $y$0$i = $cmp5$i26 ? 15 : $9;
  $$op$i = $8 << 4;
  $shl$i = $cmp$i25 ? 240 : $$op$i;
  $add9$i = (($y$0$i) + ($shl$i))|0;
  $arrayidx10$i = (8856 + ($add9$i<<2)|0);
  $10 = HEAP32[$arrayidx10$i>>2]|0;
  $sum$2$i = (($add4$sum$0$i) + ($10))|0;
  $add11$i = (($sum$2$i) + ($add7$i))|0;
  $cmp12$i = ($incdec$ptr3$i>>>0)<($end>>>0);
  if ($cmp12$i) {
   $ix$addr$0$i23 = $incdec$ptr3$i;$sum$0$i = $add11$i;
  } else {
   break;
  }
 }
 $and$i = $add11$i & 65535;
 $shr$i = $add11$i >>> 16;
 $cmp13$i = ($shr$i>>>0)>($and$i>>>0);
 $t2$t1$i = $cmp13$i ? $choice2$0$lcssa34 : $choice$0$lcssa;
 $and$shr$i = $cmp13$i ? $and$i : $shr$i;
 $11 = HEAP32[$_s>>2]|0;
 $add16$i = (($11) + ($and$shr$i))|0;
 HEAP32[$_s>>2] = $add16$i;
 $retval$0 = $t2$t1$i;
 return ($retval$0|0);
}
function _count_bit_null($ix,$end,$max,$s) {
 $ix = $ix|0;
 $end = $end|0;
 $max = $max|0;
 $s = $s|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _count_bit_noESC($ix,$end,$mx,$s) {
 $ix = $ix|0;
 $end = $end|0;
 $mx = $mx|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $add = 0, $add2 = 0, $add3 = 0, $add5 = 0, $arrayidx = 0, $cmp = 0, $conv = 0, $incdec$ptr = 0, $incdec$ptr1 = 0, $ix$addr$0 = 0, $sum1$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[(8340)>>2]|0;
 $ix$addr$0 = $ix;$sum1$0 = 0;
 while(1) {
  $incdec$ptr = ((($ix$addr$0)) + 4|0);
  $1 = HEAP32[$ix$addr$0>>2]|0;
  $incdec$ptr1 = ((($ix$addr$0)) + 8|0);
  $2 = HEAP32[$incdec$ptr>>2]|0;
  $add = $1 << 1;
  $add2 = (($add) + ($2))|0;
  $arrayidx = (($0) + ($add2)|0);
  $3 = HEAP8[$arrayidx>>0]|0;
  $conv = $3&255;
  $add3 = (($conv) + ($sum1$0))|0;
  $cmp = ($incdec$ptr1>>>0)<($end>>>0);
  if ($cmp) {
   $ix$addr$0 = $incdec$ptr1;$sum1$0 = $add3;
  } else {
   break;
  }
 }
 $4 = HEAP32[$s>>2]|0;
 $add5 = (($4) + ($add3))|0;
 HEAP32[$s>>2] = $add5;
 return 1;
}
function _count_bit_noESC_from2($ix,$end,$max,$s) {
 $ix = $ix|0;
 $end = $end|0;
 $max = $max|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $add = 0, $add5 = 0, $add8 = 0, $and = 0, $and$shr = 0, $arrayidx = 0, $arrayidx4 = 0, $cmp = 0, $cmp6 = 0, $cmp7 = 0, $cond = 0, $inc = 0, $inc$ = 0, $incdec$ptr = 0;
 var $incdec$ptr3 = 0, $ix$addr$0 = 0, $mul = 0, $shr = 0, $sub = 0, $sum$0 = 0, $xlen2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $sub = (($max) + -1)|0;
 $arrayidx = (11048 + ($sub<<2)|0);
 $0 = HEAP32[$arrayidx>>2]|0;
 $xlen2 = (8312 + ($0<<4)|0);
 $1 = HEAP32[$xlen2>>2]|0;
 $cmp = ($sub|0)==(1);
 $cond = $cmp ? 9880 : 9916;
 $ix$addr$0 = $ix;$sum$0 = 0;
 while(1) {
  $incdec$ptr = ((($ix$addr$0)) + 4|0);
  $2 = HEAP32[$ix$addr$0>>2]|0;
  $incdec$ptr3 = ((($ix$addr$0)) + 8|0);
  $3 = HEAP32[$incdec$ptr>>2]|0;
  $mul = Math_imul($2, $1)|0;
  $add = (($mul) + ($3))|0;
  $arrayidx4 = (($cond) + ($add<<2)|0);
  $4 = HEAP32[$arrayidx4>>2]|0;
  $add5 = (($4) + ($sum$0))|0;
  $cmp6 = ($incdec$ptr3>>>0)<($end>>>0);
  if ($cmp6) {
   $ix$addr$0 = $incdec$ptr3;$sum$0 = $add5;
  } else {
   break;
  }
 }
 $and = $add5 & 65535;
 $shr = $add5 >>> 16;
 $cmp7 = ($shr>>>0)>($and>>>0);
 $and$shr = $cmp7 ? $and : $shr;
 $inc = $cmp7&1;
 $inc$ = (($inc) + ($0))|0;
 $5 = HEAP32[$s>>2]|0;
 $add8 = (($5) + ($and$shr))|0;
 HEAP32[$s>>2] = $add8;
 return ($inc$|0);
}
function _count_bit_noESC_from3($ix,$end,$max,$s) {
 $ix = $ix|0;
 $end = $end|0;
 $max = $max|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $add = 0, $add$ = 0, $add10 = 0, $add12 = 0, $add15 = 0, $add15$add12 = 0, $add18 = 0, $add27 = 0, $add6 = 0;
 var $arrayidx = 0, $arrayidx11 = 0, $arrayidx13 = 0, $arrayidx16 = 0, $cmp = 0, $cmp20 = 0, $cmp22 = 0, $conv = 0, $conv14 = 0, $conv17 = 0, $hlen = 0, $hlen5 = 0, $hlen8 = 0, $incdec$ptr = 0, $incdec$ptr9 = 0, $ix$addr$0 = 0, $mul = 0, $sub = 0, $sum1$0 = 0, $sum1$2 = 0;
 var $sum2$0 = 0, $sum3$0 = 0, $t$1 = 0, $xlen2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $sub = (($max) + -1)|0;
 $arrayidx = (11048 + ($sub<<2)|0);
 $0 = HEAP32[$arrayidx>>2]|0;
 $xlen2 = (8312 + ($0<<4)|0);
 $1 = HEAP32[$xlen2>>2]|0;
 $hlen = (((8312 + ($0<<4)|0)) + 12|0);
 $2 = HEAP32[$hlen>>2]|0;
 $add = (($0) + 1)|0;
 $hlen5 = (((8312 + ($add<<4)|0)) + 12|0);
 $3 = HEAP32[$hlen5>>2]|0;
 $add6 = (($0) + 2)|0;
 $hlen8 = (((8312 + ($add6<<4)|0)) + 12|0);
 $4 = HEAP32[$hlen8>>2]|0;
 $ix$addr$0 = $ix;$sum1$0 = 0;$sum2$0 = 0;$sum3$0 = 0;
 while(1) {
  $incdec$ptr = ((($ix$addr$0)) + 4|0);
  $5 = HEAP32[$ix$addr$0>>2]|0;
  $incdec$ptr9 = ((($ix$addr$0)) + 8|0);
  $6 = HEAP32[$incdec$ptr>>2]|0;
  $mul = Math_imul($5, $1)|0;
  $add10 = (($mul) + ($6))|0;
  $arrayidx11 = (($2) + ($add10)|0);
  $7 = HEAP8[$arrayidx11>>0]|0;
  $conv = $7&255;
  $add12 = (($conv) + ($sum1$0))|0;
  $arrayidx13 = (($3) + ($add10)|0);
  $8 = HEAP8[$arrayidx13>>0]|0;
  $conv14 = $8&255;
  $add15 = (($conv14) + ($sum2$0))|0;
  $arrayidx16 = (($4) + ($add10)|0);
  $9 = HEAP8[$arrayidx16>>0]|0;
  $conv17 = $9&255;
  $add18 = (($conv17) + ($sum3$0))|0;
  $cmp = ($incdec$ptr9>>>0)<($end>>>0);
  if ($cmp) {
   $ix$addr$0 = $incdec$ptr9;$sum1$0 = $add12;$sum2$0 = $add15;$sum3$0 = $add18;
  } else {
   break;
  }
 }
 $cmp20 = ($add12>>>0)>($add15>>>0);
 $add$ = $cmp20 ? $add : $0;
 $add15$add12 = $cmp20 ? $add15 : $add12;
 $cmp22 = ($add15$add12>>>0)>($add18>>>0);
 $t$1 = $cmp22 ? $add6 : $add$;
 $sum1$2 = $cmp22 ? $add18 : $add15$add12;
 $10 = HEAP32[$s>>2]|0;
 $add27 = (($10) + ($sum1$2))|0;
 HEAP32[$s>>2] = $add27;
 return ($t$1|0);
}
function _free_id3tag($gfc) {
 $gfc = $gfc|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $album = 0, $albumart = 0, $albumart_mimetype = 0, $albumart_size = 0, $artist = 0, $b = 0, $b45 = 0, $cmp = 0, $cmp14 = 0, $cmp22 = 0, $cmp30 = 0;
 var $cmp40 = 0, $cmp46 = 0, $cmp6 = 0, $comment = 0, $node$0 = 0, $title = 0, $v2_head = 0, $v2_tail = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $title = ((($gfc)) + 85704|0);
 $0 = HEAP32[$title>>2]|0;
 $cmp = ($0|0)==(0|0);
 if (!($cmp)) {
  _free($0);
  HEAP32[$title>>2] = 0;
 }
 $artist = ((($gfc)) + 85708|0);
 $1 = HEAP32[$artist>>2]|0;
 $cmp6 = ($1|0)==(0|0);
 if (!($cmp6)) {
  _free($1);
  HEAP32[$artist>>2] = 0;
 }
 $album = ((($gfc)) + 85712|0);
 $2 = HEAP32[$album>>2]|0;
 $cmp14 = ($2|0)==(0|0);
 if (!($cmp14)) {
  _free($2);
  HEAP32[$album>>2] = 0;
 }
 $comment = ((($gfc)) + 85716|0);
 $3 = HEAP32[$comment>>2]|0;
 $cmp22 = ($3|0)==(0|0);
 if (!($cmp22)) {
  _free($3);
  HEAP32[$comment>>2] = 0;
 }
 $albumart = ((($gfc)) + 85728|0);
 $4 = HEAP32[$albumart>>2]|0;
 $cmp30 = ($4|0)==(0|0);
 if (!($cmp30)) {
  $albumart_mimetype = ((($gfc)) + 85740|0);
  $albumart_size = ((($gfc)) + 85732|0);
  _free($4);
  HEAP32[$albumart>>2] = 0;
  HEAP32[$albumart_size>>2] = 0;
  HEAP32[$albumart_mimetype>>2] = 0;
 }
 $v2_head = ((($gfc)) + 85744|0);
 $5 = HEAP32[$v2_head>>2]|0;
 $cmp40 = ($5|0)==(0|0);
 if ($cmp40) {
  return;
 } else {
  $node$0 = $5;
 }
 while(1) {
  $b = ((($node$0)) + 12|0);
  $6 = HEAP32[$b>>2]|0;
  $b45 = ((($node$0)) + 24|0);
  $7 = HEAP32[$b45>>2]|0;
  $8 = HEAP32[$node$0>>2]|0;
  _free($6);
  _free($7);
  _free($node$0);
  $cmp46 = ($8|0)==(0|0);
  if ($cmp46) {
   break;
  } else {
   $node$0 = $8;
  }
 }
 HEAP32[$v2_head>>2] = 0;
 $v2_tail = ((($gfc)) + 85748|0);
 HEAP32[$v2_tail>>2] = 0;
 return;
}
function _freegfc($gfc) {
 $gfc = $gfc|0;
 var $$in$i = 0, $$pre$i = 0, $$pre8$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ATH = 0, $arrayidx = 0, $arrayidx20 = 0;
 var $arrayidx9 = 0, $bag = 0, $buf = 0, $cd_psy$i = 0, $cmp1 = 0, $cmp30 = 0, $exitcond = 0, $hip = 0, $i$034 = 0, $in_buffer_0 = 0, $in_buffer_1 = 0, $inc = 0, $rgdata = 0, $s3$i = 0, $s39$i = 0, $size = 0, $tobool = 0, $tobool1$i = 0, $tobool10$i = 0, $tobool21 = 0;
 var $tobool3$i = 0, $tobool37 = 0, $tobool45 = 0, $tobool49 = 0, $tobool55 = 0, $tobool61 = 0, $tobool66 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $i$034 = 0;
 while(1) {
  $arrayidx = (((($gfc)) + 37192|0) + ($i$034<<2)|0);
  $0 = HEAP32[$arrayidx>>2]|0;
  $cmp1 = ($0|0)==(0|0);
  if (!($cmp1)) {
   _free($0);
   HEAP32[$arrayidx>>2] = 0;
  }
  $inc = (($i$034) + 1)|0;
  $exitcond = ($inc|0)==(641);
  if ($exitcond) {
   break;
  } else {
   $i$034 = $inc;
  }
 }
 $arrayidx9 = ((($gfc)) + 37184|0);
 $1 = HEAP32[$arrayidx9>>2]|0;
 $tobool = ($1|0)==(0|0);
 if (!($tobool)) {
  _free($1);
  HEAP32[$arrayidx9>>2] = 0;
 }
 $arrayidx20 = ((($gfc)) + 37188|0);
 $2 = HEAP32[$arrayidx20>>2]|0;
 $tobool21 = ($2|0)==(0|0);
 if (!($tobool21)) {
  _free($2);
  HEAP32[$arrayidx20>>2] = 0;
 }
 $buf = ((($gfc)) + 284|0);
 $3 = HEAP32[$buf>>2]|0;
 $cmp30 = ($3|0)==(0|0);
 if (!($cmp30)) {
  _free($3);
  HEAP32[$buf>>2] = 0;
 }
 $bag = ((($gfc)) + 85780|0);
 $4 = HEAP32[$bag>>2]|0;
 $tobool37 = ($4|0)==(0|0);
 if (!($tobool37)) {
  $size = ((($gfc)) + 85776|0);
  _free($4);
  HEAP32[$bag>>2] = 0;
  HEAP32[$size>>2] = 0;
 }
 $ATH = ((($gfc)) + 85796|0);
 $5 = HEAP32[$ATH>>2]|0;
 $tobool45 = ($5|0)==(0|0);
 if (!($tobool45)) {
  _free($5);
 }
 $rgdata = ((($gfc)) + 85676|0);
 $6 = HEAP32[$rgdata>>2]|0;
 $tobool49 = ($6|0)==(0|0);
 if (!($tobool49)) {
  _free($6);
 }
 $in_buffer_0 = ((($gfc)) + 52152|0);
 $7 = HEAP32[$in_buffer_0>>2]|0;
 $tobool55 = ($7|0)==(0|0);
 if (!($tobool55)) {
  _free($7);
 }
 $in_buffer_1 = ((($gfc)) + 52156|0);
 $8 = HEAP32[$in_buffer_1>>2]|0;
 $tobool61 = ($8|0)==(0|0);
 if (!($tobool61)) {
  _free($8);
 }
 _free_id3tag($gfc);
 $hip = ((($gfc)) + 85808|0);
 $9 = HEAP32[$hip>>2]|0;
 $tobool66 = ($9|0)==(0|0);
 if (!($tobool66)) {
  (_hip_decode_exit(($9|0))|0);
  HEAP32[$hip>>2] = 0;
 }
 $cd_psy$i = ((($gfc)) + 85800|0);
 $10 = HEAP32[$cd_psy$i>>2]|0;
 $tobool1$i = ($10|0)==(0|0);
 if ($tobool1$i) {
  _free($gfc);
  return;
 }
 $s3$i = ((($10)) + 2156|0);
 $11 = HEAP32[$s3$i>>2]|0;
 $tobool3$i = ($11|0)==(0|0);
 if ($tobool3$i) {
  $$in$i = $10;
 } else {
  _free($11);
  $$pre$i = HEAP32[$cd_psy$i>>2]|0;
  $$in$i = $$pre$i;
 }
 $s39$i = ((($$in$i)) + 4316|0);
 $12 = HEAP32[$s39$i>>2]|0;
 $tobool10$i = ($12|0)==(0|0);
 if ($tobool10$i) {
  $13 = $$in$i;
 } else {
  _free($12);
  $$pre8$i = HEAP32[$cd_psy$i>>2]|0;
  $13 = $$pre8$i;
 }
 _free($13);
 _free($gfc);
 return;
}
function _ATHformula($cfg,$f) {
 $cfg = $cfg|0;
 $f = +$f;
 var $0 = 0, $1 = 0.0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $3 = 0.0;
 var $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, $ATHcurve = 0, $ATHcurve10 = 0, $ATHtype = 0, $add = 0.0, $add$i107163 = 0.0, $add$i134162 = 0.0, $add$i159168 = 0.0, $add$i167 = 0.0, $add$i32166 = 0.0, $add$i57165 = 0.0, $add$i82164 = 0.0, $add26$i = 0.0, $add26$i108 = 0.0, $add26$i135 = 0.0;
 var $add26$i160 = 0.0, $add26$i33 = 0.0, $add26$i58 = 0.0, $add26$i83 = 0.0, $ath$0 = 0.0, $call$i = 0.0, $call$i123 = 0.0, $call$i150 = 0.0, $call$i23 = 0.0, $call$i48 = 0.0, $call$i73 = 0.0, $call$i98 = 0.0, $call18$i = 0.0, $call18$i103 = 0.0, $call18$i128 = 0.0, $call18$i155 = 0.0, $call18$i28 = 0.0, $call18$i53 = 0.0, $call18$i78 = 0.0, $cmp$i = 0;
 var $cmp$i11 = 0, $cmp$i111 = 0, $cmp$i138 = 0, $cmp$i36 = 0, $cmp$i61 = 0, $cmp$i86 = 0, $cmp2$i = 0, $cmp2$i114 = 0, $cmp2$i14 = 0, $cmp2$i141 = 0, $cmp2$i39 = 0, $cmp2$i64 = 0, $cmp2$i89 = 0, $cmp4$i = 0, $cmp4$i116 = 0, $cmp4$i143 = 0, $cmp4$i16 = 0, $cmp4$i41 = 0, $cmp4$i66 = 0, $cmp4$i91 = 0;
 var $cond$i = 0.0, $cond$i115 = 0.0, $cond$i142 = 0.0, $cond$i15 = 0.0, $cond$i40 = 0.0, $cond$i65 = 0.0, $cond$i90 = 0.0, $cond9$i = 0.0, $cond9$i117 = 0.0, $cond9$i144 = 0.0, $cond9$i17 = 0.0, $cond9$i42 = 0.0, $cond9$i67 = 0.0, $cond9$i92 = 0.0, $conv$i = 0.0, $conv$i10 = 0.0, $conv$i110 = 0.0, $conv$i137 = 0.0, $conv$i35 = 0.0, $conv$i60 = 0.0;
 var $conv$i85 = 0.0, $conv10$i = 0.0, $conv10$i118 = 0.0, $conv10$i145 = 0.0, $conv10$i18 = 0.0, $conv10$i43 = 0.0, $conv10$i68 = 0.0, $conv10$i93 = 0.0, $conv20$i = 0.0, $conv20$i130 = 0.0, $conv27$i = 0.0, $conv27$i109 = 0.0, $conv27$i136 = 0.0, $conv27$i161 = 0.0, $conv27$i34 = 0.0, $conv27$i59 = 0.0, $conv27$i84 = 0.0, $div$i = 0.0, $div$i113 = 0.0, $div$i13 = 0.0;
 var $div$i140 = 0.0, $div$i38 = 0.0, $div$i63 = 0.0, $div$i88 = 0.0, $f$op$i = 0.0, $f$op$i112 = 0.0, $f$op$i12 = 0.0, $f$op$i139 = 0.0, $f$op$i37 = 0.0, $f$op$i62 = 0.0, $f$op$i87 = 0.0, $mul$i = 0.0, $mul$i119 = 0.0, $mul$i146 = 0.0, $mul$i19 = 0.0, $mul$i44 = 0.0, $mul$i69 = 0.0, $mul$i94 = 0.0, $mul12$i = 0.0, $mul12$i122 = 0.0;
 var $mul12$i149 = 0.0, $mul12$i22 = 0.0, $mul12$i47 = 0.0, $mul12$i72 = 0.0, $mul12$i97 = 0.0, $mul13$neg$i$neg = 0.0, $mul13$neg$i124$neg = 0.0, $mul13$neg$i151$neg = 0.0, $mul13$neg$i24$neg = 0.0, $mul13$neg$i49$neg = 0.0, $mul13$neg$i74$neg = 0.0, $mul13$neg$i99$neg = 0.0, $mul17$i = 0.0, $mul17$i102 = 0.0, $mul17$i127 = 0.0, $mul17$i154 = 0.0, $mul17$i27 = 0.0, $mul17$i52 = 0.0, $mul17$i77 = 0.0, $mul19$i = 0.0;
 var $mul19$i104 = 0.0, $mul19$i129 = 0.0, $mul19$i156 = 0.0, $mul19$i29 = 0.0, $mul19$i54 = 0.0, $mul19$i79 = 0.0, $mul23$i = 0.0, $mul23$i131 = 0.0, $mul25$i = 0.0, $mul25$i105 = 0.0, $mul25$i132 = 0.0, $mul25$i157 = 0.0, $mul25$i30 = 0.0, $mul25$i55 = 0.0, $mul25$i80 = 0.0, $pow2$i = 0.0, $pow2$i121 = 0.0, $pow2$i148 = 0.0, $pow2$i21 = 0.0, $pow2$i46 = 0.0;
 var $pow2$i71 = 0.0, $pow2$i96 = 0.0, $pow213$i = 0.0, $pow213$i101 = 0.0, $pow213$i126 = 0.0, $pow213$i153 = 0.0, $pow213$i26 = 0.0, $pow213$i51 = 0.0, $pow213$i76 = 0.0, $sub$i = 0.0, $sub$i120 = 0.0, $sub$i147 = 0.0, $sub$i20 = 0.0, $sub$i45 = 0.0, $sub$i70 = 0.0, $sub$i95 = 0.0, $sub14$i = 0.0, $sub14$i106 = 0.0, $sub14$i133 = 0.0, $sub14$i158 = 0.0;
 var $sub14$i31 = 0.0, $sub14$i56 = 0.0, $sub14$i81 = 0.0, $sub16$i = 0.0, $sub16$i100 = 0.0, $sub16$i125 = 0.0, $sub16$i152 = 0.0, $sub16$i25 = 0.0, $sub16$i50 = 0.0, $sub16$i75 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $ATHtype = ((($cfg)) + 192|0);
 $0 = HEAP32[$ATHtype>>2]|0;
 switch ($0|0) {
 case 0:  {
  $conv$i = $f;
  $cmp$i = $conv$i < -0.29999999999999999;
  $f$op$i = $f * 0.0010000000474974513;
  $div$i = $cmp$i ? 3.4100000858306885 : $f$op$i;
  $cmp2$i = $div$i < 0.10000000149011612;
  $cond$i = $cmp2$i ? 0.10000000149011612 : $div$i;
  $cmp4$i = $cond$i > 24.0;
  $cond9$i = $cmp4$i ? 24.0 : $cond$i;
  $conv10$i = $cond9$i;
  $1 = (+Math_pow((+$conv10$i),-0.80000000000000004));
  $mul$i = $1 * 3.6400000000000001;
  $sub$i = $conv10$i + -3.3999999999999999;
  $pow2$i = $sub$i * $sub$i;
  $mul12$i = $pow2$i * -0.59999999999999998;
  $call$i = (+Math_exp((+$mul12$i)));
  $sub16$i = $conv10$i + -8.6999999999999993;
  $pow213$i = $sub16$i * $sub16$i;
  $mul17$i = $pow213$i * -0.14999999999999999;
  $call18$i = (+Math_exp((+$mul17$i)));
  $mul19$i = $call18$i * 6.0;
  $2 = $conv10$i * $conv10$i;
  $3 = $2 * $2;
  $mul25$i = $3 * 9.5999999999999991E-4;
  $sub14$i = $mul$i + $mul25$i;
  $mul13$neg$i$neg = $call$i * -6.7999999999999998;
  $add$i167 = $sub14$i + $mul13$neg$i$neg;
  $add26$i = $add$i167 + $mul19$i;
  $conv27$i = $add26$i;
  $ath$0 = $conv27$i;
  return (+$ath$0);
  break;
 }
 case 1:  {
  $conv$i10 = $f;
  $cmp$i11 = $conv$i10 < -0.29999999999999999;
  $f$op$i12 = $f * 0.0010000000474974513;
  $div$i13 = $cmp$i11 ? 3.4100000858306885 : $f$op$i12;
  $cmp2$i14 = $div$i13 < 0.10000000149011612;
  $cond$i15 = $cmp2$i14 ? 0.10000000149011612 : $div$i13;
  $cmp4$i16 = $cond$i15 > 24.0;
  $cond9$i17 = $cmp4$i16 ? 24.0 : $cond$i15;
  $conv10$i18 = $cond9$i17;
  $4 = (+Math_pow((+$conv10$i18),-0.80000000000000004));
  $mul$i19 = $4 * 3.6400000000000001;
  $sub$i20 = $conv10$i18 + -3.3999999999999999;
  $pow2$i21 = $sub$i20 * $sub$i20;
  $mul12$i22 = $pow2$i21 * -0.59999999999999998;
  $call$i23 = (+Math_exp((+$mul12$i22)));
  $sub16$i25 = $conv10$i18 + -8.6999999999999993;
  $pow213$i26 = $sub16$i25 * $sub16$i25;
  $mul17$i27 = $pow213$i26 * -0.14999999999999999;
  $call18$i28 = (+Math_exp((+$mul17$i27)));
  $mul19$i29 = $call18$i28 * 6.0;
  $5 = $conv10$i18 * $conv10$i18;
  $6 = $5 * $5;
  $mul25$i30 = $6 * 5.5999999999999995E-4;
  $sub14$i31 = $mul$i19 + $mul25$i30;
  $mul13$neg$i24$neg = $call$i23 * -6.7999999999999998;
  $add$i32166 = $sub14$i31 + $mul13$neg$i24$neg;
  $add26$i33 = $add$i32166 + $mul19$i29;
  $conv27$i34 = $add26$i33;
  $ath$0 = $conv27$i34;
  return (+$ath$0);
  break;
 }
 case 2:  {
  $conv$i35 = $f;
  $cmp$i36 = $conv$i35 < -0.29999999999999999;
  $f$op$i37 = $f * 0.0010000000474974513;
  $div$i38 = $cmp$i36 ? 3.4100000858306885 : $f$op$i37;
  $cmp2$i39 = $div$i38 < 0.10000000149011612;
  $cond$i40 = $cmp2$i39 ? 0.10000000149011612 : $div$i38;
  $cmp4$i41 = $cond$i40 > 24.0;
  $cond9$i42 = $cmp4$i41 ? 24.0 : $cond$i40;
  $conv10$i43 = $cond9$i42;
  $7 = (+Math_pow((+$conv10$i43),-0.80000000000000004));
  $mul$i44 = $7 * 3.6400000000000001;
  $sub$i45 = $conv10$i43 + -3.3999999999999999;
  $pow2$i46 = $sub$i45 * $sub$i45;
  $mul12$i47 = $pow2$i46 * -0.59999999999999998;
  $call$i48 = (+Math_exp((+$mul12$i47)));
  $sub16$i50 = $conv10$i43 + -8.6999999999999993;
  $pow213$i51 = $sub16$i50 * $sub16$i50;
  $mul17$i52 = $pow213$i51 * -0.14999999999999999;
  $call18$i53 = (+Math_exp((+$mul17$i52)));
  $mul19$i54 = $call18$i53 * 6.0;
  $8 = $conv10$i43 * $conv10$i43;
  $9 = $8 * $8;
  $mul25$i55 = $9 * 5.9999999999999995E-4;
  $sub14$i56 = $mul$i44 + $mul25$i55;
  $mul13$neg$i49$neg = $call$i48 * -6.7999999999999998;
  $add$i57165 = $sub14$i56 + $mul13$neg$i49$neg;
  $add26$i58 = $add$i57165 + $mul19$i54;
  $conv27$i59 = $add26$i58;
  $ath$0 = $conv27$i59;
  return (+$ath$0);
  break;
 }
 case 3:  {
  $conv$i60 = $f;
  $cmp$i61 = $conv$i60 < -0.29999999999999999;
  $f$op$i62 = $f * 0.0010000000474974513;
  $div$i63 = $cmp$i61 ? 3.4100000858306885 : $f$op$i62;
  $cmp2$i64 = $div$i63 < 0.10000000149011612;
  $cond$i65 = $cmp2$i64 ? 0.10000000149011612 : $div$i63;
  $cmp4$i66 = $cond$i65 > 24.0;
  $cond9$i67 = $cmp4$i66 ? 24.0 : $cond$i65;
  $conv10$i68 = $cond9$i67;
  $10 = (+Math_pow((+$conv10$i68),-0.80000000000000004));
  $mul$i69 = $10 * 3.6400000000000001;
  $sub$i70 = $conv10$i68 + -3.3999999999999999;
  $pow2$i71 = $sub$i70 * $sub$i70;
  $mul12$i72 = $pow2$i71 * -0.59999999999999998;
  $call$i73 = (+Math_exp((+$mul12$i72)));
  $sub16$i75 = $conv10$i68 + -8.6999999999999993;
  $pow213$i76 = $sub16$i75 * $sub16$i75;
  $mul17$i77 = $pow213$i76 * -0.14999999999999999;
  $call18$i78 = (+Math_exp((+$mul17$i77)));
  $mul19$i79 = $call18$i78 * 6.0;
  $11 = $conv10$i68 * $conv10$i68;
  $12 = $11 * $11;
  $mul25$i80 = $12 * 6.3999999999999994E-4;
  $sub14$i81 = $mul$i69 + $mul25$i80;
  $mul13$neg$i74$neg = $call$i73 * -6.7999999999999998;
  $add$i82164 = $sub14$i81 + $mul13$neg$i74$neg;
  $add26$i83 = $add$i82164 + $mul19$i79;
  $conv27$i84 = $add26$i83;
  $add = $conv27$i84 + 6.0;
  $ath$0 = $add;
  return (+$ath$0);
  break;
 }
 case 4:  {
  $ATHcurve = ((($cfg)) + 188|0);
  $13 = +HEAPF32[$ATHcurve>>2];
  $conv$i85 = $f;
  $cmp$i86 = $conv$i85 < -0.29999999999999999;
  $f$op$i87 = $f * 0.0010000000474974513;
  $div$i88 = $cmp$i86 ? 3.4100000858306885 : $f$op$i87;
  $cmp2$i89 = $div$i88 < 0.10000000149011612;
  $cond$i90 = $cmp2$i89 ? 0.10000000149011612 : $div$i88;
  $cmp4$i91 = $cond$i90 > 24.0;
  $cond9$i92 = $cmp4$i91 ? 24.0 : $cond$i90;
  $conv10$i93 = $cond9$i92;
  $14 = (+Math_pow((+$conv10$i93),-0.80000000000000004));
  $mul$i94 = $14 * 3.6400000000000001;
  $sub$i95 = $conv10$i93 + -3.3999999999999999;
  $pow2$i96 = $sub$i95 * $sub$i95;
  $mul12$i97 = $pow2$i96 * -0.59999999999999998;
  $call$i98 = (+Math_exp((+$mul12$i97)));
  $sub16$i100 = $conv10$i93 + -8.6999999999999993;
  $pow213$i101 = $sub16$i100 * $sub16$i100;
  $mul17$i102 = $pow213$i101 * -0.14999999999999999;
  $call18$i103 = (+Math_exp((+$mul17$i102)));
  $mul19$i104 = $call18$i103 * 6.0;
  $conv20$i = $13;
  $15 = $conv20$i * 4.0000000000000003E-5;
  $mul23$i = $15 + 5.9999999999999995E-4;
  $16 = $conv10$i93 * $conv10$i93;
  $17 = $16 * $16;
  $mul25$i105 = $17 * $mul23$i;
  $mul13$neg$i99$neg = $call$i98 * -6.7999999999999998;
  $sub14$i106 = $mul13$neg$i99$neg + $mul$i94;
  $add$i107163 = $sub14$i106 + $mul25$i105;
  $add26$i108 = $add$i107163 + $mul19$i104;
  $conv27$i109 = $add26$i108;
  $ath$0 = $conv27$i109;
  return (+$ath$0);
  break;
 }
 case 5:  {
  $ATHcurve10 = ((($cfg)) + 188|0);
  $18 = +HEAPF32[$ATHcurve10>>2];
  $conv$i110 = $f;
  $cmp$i111 = $conv$i110 < -0.29999999999999999;
  $f$op$i112 = $f * 0.0010000000474974513;
  $div$i113 = $cmp$i111 ? 3.4100000858306885 : $f$op$i112;
  $cmp2$i114 = $div$i113 < 3.4100000858306885;
  $cond$i115 = $cmp2$i114 ? 3.4100000858306885 : $div$i113;
  $cmp4$i116 = $cond$i115 > 16.100000381469727;
  $cond9$i117 = $cmp4$i116 ? 16.100000381469727 : $cond$i115;
  $conv10$i118 = $cond9$i117;
  $19 = (+Math_pow((+$conv10$i118),-0.80000000000000004));
  $mul$i119 = $19 * 3.6400000000000001;
  $sub$i120 = $conv10$i118 + -3.3999999999999999;
  $pow2$i121 = $sub$i120 * $sub$i120;
  $mul12$i122 = $pow2$i121 * -0.59999999999999998;
  $call$i123 = (+Math_exp((+$mul12$i122)));
  $sub16$i125 = $conv10$i118 + -8.6999999999999993;
  $pow213$i126 = $sub16$i125 * $sub16$i125;
  $mul17$i127 = $pow213$i126 * -0.14999999999999999;
  $call18$i128 = (+Math_exp((+$mul17$i127)));
  $mul19$i129 = $call18$i128 * 6.0;
  $conv20$i130 = $18;
  $20 = $conv20$i130 * 4.0000000000000003E-5;
  $mul23$i131 = $20 + 5.9999999999999995E-4;
  $21 = $conv10$i118 * $conv10$i118;
  $22 = $21 * $21;
  $mul25$i132 = $22 * $mul23$i131;
  $mul13$neg$i124$neg = $call$i123 * -6.7999999999999998;
  $sub14$i133 = $mul13$neg$i124$neg + $mul$i119;
  $add$i134162 = $sub14$i133 + $mul25$i132;
  $add26$i135 = $add$i134162 + $mul19$i129;
  $conv27$i136 = $add26$i135;
  $ath$0 = $conv27$i136;
  return (+$ath$0);
  break;
 }
 default: {
  $conv$i137 = $f;
  $cmp$i138 = $conv$i137 < -0.29999999999999999;
  $f$op$i139 = $f * 0.0010000000474974513;
  $div$i140 = $cmp$i138 ? 3.4100000858306885 : $f$op$i139;
  $cmp2$i141 = $div$i140 < 0.10000000149011612;
  $cond$i142 = $cmp2$i141 ? 0.10000000149011612 : $div$i140;
  $cmp4$i143 = $cond$i142 > 24.0;
  $cond9$i144 = $cmp4$i143 ? 24.0 : $cond$i142;
  $conv10$i145 = $cond9$i144;
  $23 = (+Math_pow((+$conv10$i145),-0.80000000000000004));
  $mul$i146 = $23 * 3.6400000000000001;
  $sub$i147 = $conv10$i145 + -3.3999999999999999;
  $pow2$i148 = $sub$i147 * $sub$i147;
  $mul12$i149 = $pow2$i148 * -0.59999999999999998;
  $call$i150 = (+Math_exp((+$mul12$i149)));
  $sub16$i152 = $conv10$i145 + -8.6999999999999993;
  $pow213$i153 = $sub16$i152 * $sub16$i152;
  $mul17$i154 = $pow213$i153 * -0.14999999999999999;
  $call18$i155 = (+Math_exp((+$mul17$i154)));
  $mul19$i156 = $call18$i155 * 6.0;
  $24 = $conv10$i145 * $conv10$i145;
  $25 = $24 * $24;
  $mul25$i157 = $25 * 5.9999999999999995E-4;
  $sub14$i158 = $mul$i146 + $mul25$i157;
  $mul13$neg$i151$neg = $call$i150 * -6.7999999999999998;
  $add$i159168 = $sub14$i158 + $mul13$neg$i151$neg;
  $add26$i160 = $add$i159168 + $mul19$i156;
  $conv27$i161 = $add26$i160;
  $ath$0 = $conv27$i161;
  return (+$ath$0);
 }
 }
 return +(0.0);
}
function _freq2bark($freq) {
 $freq = +$freq;
 var $add = 0.0, $call = 0.0, $call7 = 0.0, $cmp = 0, $conv = 0.0, $conv1 = 0.0, $conv2 = 0.0, $conv6 = 0.0, $conv9 = 0.0, $div = 0.0, $freq$addr$0 = 0.0, $mul = 0.0, $mul3 = 0.0, $mul4 = 0.0, $mul5 = 0.0, $mul8 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = $freq < 0.0;
 $freq$addr$0 = $cmp ? 0.0 : $freq;
 $conv = $freq$addr$0;
 $mul = $conv * 0.001;
 $conv1 = $mul;
 $conv2 = $conv1;
 $mul3 = $conv2 * 0.76000000000000001;
 $call = (+Math_atan((+$mul3)));
 $mul4 = $call * 13.0;
 $mul5 = $conv1 * $conv1;
 $conv6 = $mul5;
 $div = $conv6 * 0.017777777777777778;
 $call7 = (+Math_atan((+$div)));
 $mul8 = $call7 * 3.5;
 $add = $mul8 + $mul4;
 $conv9 = $add;
 return (+$conv9);
}
function _FindNearestBitrate($bRate,$version,$samplerate) {
 $bRate = $bRate|0;
 $version = $version|0;
 $samplerate = $samplerate|0;
 var $$bitrate$0 = 0, $$version = 0, $0 = 0, $1 = 0, $arrayidx1 = 0, $arrayidx4 = 0, $bitrate$017 = 0, $bitrate$1 = 0, $cmp = 0, $cmp18 = 0, $cmp26 = 0, $cmp5 = 0, $cmp9 = 0, $cond = 0, $cond25 = 0, $exitcond = 0, $i$018 = 0, $inc = 0, $sub = 0, $sub16 = 0;
 var $sub17 = 0, $sub23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($samplerate|0)<(16000);
 $$version = $cmp ? 2 : $version;
 $arrayidx1 = (((9980 + ($$version<<6)|0)) + 4|0);
 $0 = HEAP32[$arrayidx1>>2]|0;
 $bitrate$017 = $0;$i$018 = 2;
 while(1) {
  $arrayidx4 = ((9980 + ($$version<<6)|0) + ($i$018<<2)|0);
  $1 = HEAP32[$arrayidx4>>2]|0;
  $cmp5 = ($1|0)>(0);
  if ($cmp5) {
   $sub = (($1) - ($bRate))|0;
   $cmp9 = ($sub|0)>(0);
   $sub16 = (0 - ($sub))|0;
   $cond = $cmp9 ? $sub : $sub16;
   $sub17 = (($bitrate$017) - ($bRate))|0;
   $cmp18 = ($sub17|0)>(0);
   $sub23 = (0 - ($sub17))|0;
   $cond25 = $cmp18 ? $sub17 : $sub23;
   $cmp26 = ($cond|0)<($cond25|0);
   $$bitrate$0 = $cmp26 ? $1 : $bitrate$017;
   $bitrate$1 = $$bitrate$0;
  } else {
   $bitrate$1 = $bitrate$017;
  }
  $inc = (($i$018) + 1)|0;
  $exitcond = ($inc|0)==(15);
  if ($exitcond) {
   break;
  } else {
   $bitrate$017 = $bitrate$1;$i$018 = $inc;
  }
 }
 return ($bitrate$1|0);
}
function _nearestBitrateFullIndex($bitrate) {
 $bitrate = $bitrate|0;
 var $0 = 0, $1 = 0, $add = 0, $arrayidx = 0, $arrayidx12 = 0, $b$0 = 0, $cmp = 0, $cmp16 = 0, $cmp7 = 0, $conv = 0, $lower_range$0 = 0, $lower_range$0$upper_range$0 = 0, $lower_range_kbps$0 = 0, $sub = 0, $sub15 = 0, $upper_range$0 = 0, $upper_range_kbps$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $conv = $bitrate&65535;
 $b$0 = 0;
 while(1) {
  $cmp = ($b$0|0)<(16);
  if (!($cmp)) {
   $lower_range$0 = 16;$lower_range_kbps$0 = 320;$upper_range$0 = 16;$upper_range_kbps$0 = 320;
   break;
  }
  $add = (($b$0) + 1)|0;
  $arrayidx = (11108 + ($add<<2)|0);
  $0 = HEAP32[$arrayidx>>2]|0;
  $cmp7 = ($conv|0)<($0|0);
  if ($cmp7) {
   label = 4;
   break;
  } else {
   $b$0 = $add;
  }
 }
 if ((label|0) == 4) {
  $arrayidx12 = (11108 + ($b$0<<2)|0);
  $1 = HEAP32[$arrayidx12>>2]|0;
  $lower_range$0 = $b$0;$lower_range_kbps$0 = $1;$upper_range$0 = $add;$upper_range_kbps$0 = $0;
 }
 $sub = (($upper_range_kbps$0) - ($conv))|0;
 $sub15 = (($conv) - ($lower_range_kbps$0))|0;
 $cmp16 = ($sub|0)>($sub15|0);
 $lower_range$0$upper_range$0 = $cmp16 ? $lower_range$0 : $upper_range$0;
 return ($lower_range$0$upper_range$0|0);
}
function _map2MP3Frequency($freq) {
 $freq = $freq|0;
 var $$ = 0, $$$ = 0, $cmp = 0, $cmp1 = 0, $cmp10 = 0, $cmp13 = 0, $cmp16 = 0, $cmp19 = 0, $cmp4 = 0, $cmp7 = 0, $retval$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($freq|0)<(8001);
 if ($cmp) {
  $retval$0 = 8000;
 } else {
  $cmp1 = ($freq|0)<(11026);
  if ($cmp1) {
   $retval$0 = 11025;
  } else {
   $cmp4 = ($freq|0)<(12001);
   if ($cmp4) {
    $retval$0 = 12000;
   } else {
    $cmp7 = ($freq|0)<(16001);
    if ($cmp7) {
     $retval$0 = 16000;
    } else {
     $cmp10 = ($freq|0)<(22051);
     if ($cmp10) {
      $retval$0 = 22050;
     } else {
      $cmp13 = ($freq|0)<(24001);
      if ($cmp13) {
       $retval$0 = 24000;
      } else {
       $cmp16 = ($freq|0)<(32001);
       $cmp19 = ($freq|0)<(44101);
       $$ = $cmp19 ? 44100 : 48000;
       $$$ = $cmp16 ? 32000 : $$;
       return ($$$|0);
      }
     }
    }
   }
  }
 }
 return ($retval$0|0);
}
function _BitrateIndex($bRate,$version,$samplerate) {
 $bRate = $bRate|0;
 $version = $version|0;
 $samplerate = $samplerate|0;
 var $$ = 0, $$version = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $arrayidx2 = 0, $arrayidx2$1 = 0, $arrayidx2$10 = 0;
 var $arrayidx2$11 = 0, $arrayidx2$12 = 0, $arrayidx2$13 = 0, $arrayidx2$14 = 0, $arrayidx2$2 = 0, $arrayidx2$3 = 0, $arrayidx2$4 = 0, $arrayidx2$5 = 0, $arrayidx2$6 = 0, $arrayidx2$7 = 0, $arrayidx2$8 = 0, $arrayidx2$9 = 0, $cmp = 0, $cmp3 = 0, $cmp3$1 = 0, $cmp3$10 = 0, $cmp3$11 = 0, $cmp3$12 = 0, $cmp3$13 = 0, $cmp3$14 = 0;
 var $cmp3$2 = 0, $cmp3$3 = 0, $cmp3$4 = 0, $cmp3$5 = 0, $cmp3$6 = 0, $cmp3$7 = 0, $cmp3$8 = 0, $cmp3$9 = 0, $cmp7 = 0, $cmp7$1 = 0, $cmp7$10 = 0, $cmp7$11 = 0, $cmp7$12 = 0, $cmp7$13 = 0, $cmp7$14 = 0, $cmp7$2 = 0, $cmp7$3 = 0, $cmp7$4 = 0, $cmp7$5 = 0, $cmp7$6 = 0;
 var $cmp7$7 = 0, $cmp7$8 = 0, $cmp7$9 = 0, $or$cond = 0, $or$cond$1 = 0, $or$cond$10 = 0, $or$cond$11 = 0, $or$cond$12 = 0, $or$cond$13 = 0, $or$cond$14 = 0, $or$cond$2 = 0, $or$cond$3 = 0, $or$cond$4 = 0, $or$cond$5 = 0, $or$cond$6 = 0, $or$cond$7 = 0, $or$cond$8 = 0, $or$cond$9 = 0, $retval$0 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $cmp = ($samplerate|0)<(16000);
 $$version = $cmp ? 2 : $version;
 $arrayidx2 = (9980 + ($$version<<6)|0);
 $0 = HEAP32[$arrayidx2>>2]|0;
 $cmp3 = ($0|0)>(0);
 $cmp7 = ($0|0)==($bRate|0);
 $or$cond = $cmp3 & $cmp7;
 if ($or$cond) {
  $retval$0 = 0;
  return ($retval$0|0);
 }
 $arrayidx2$1 = (((9980 + ($$version<<6)|0)) + 4|0);
 $1 = HEAP32[$arrayidx2$1>>2]|0;
 $cmp3$1 = ($1|0)>(0);
 $cmp7$1 = ($1|0)==($bRate|0);
 $or$cond$1 = $cmp3$1 & $cmp7$1;
 if ($or$cond$1) {
  $retval$0 = 1;
  return ($retval$0|0);
 }
 $arrayidx2$2 = (((9980 + ($$version<<6)|0)) + 8|0);
 $2 = HEAP32[$arrayidx2$2>>2]|0;
 $cmp3$2 = ($2|0)>(0);
 $cmp7$2 = ($2|0)==($bRate|0);
 $or$cond$2 = $cmp3$2 & $cmp7$2;
 if ($or$cond$2) {
  $retval$0 = 2;
  return ($retval$0|0);
 }
 $arrayidx2$3 = (((9980 + ($$version<<6)|0)) + 12|0);
 $3 = HEAP32[$arrayidx2$3>>2]|0;
 $cmp3$3 = ($3|0)>(0);
 $cmp7$3 = ($3|0)==($bRate|0);
 $or$cond$3 = $cmp3$3 & $cmp7$3;
 if ($or$cond$3) {
  $retval$0 = 3;
  return ($retval$0|0);
 }
 $arrayidx2$4 = (((9980 + ($$version<<6)|0)) + 16|0);
 $4 = HEAP32[$arrayidx2$4>>2]|0;
 $cmp3$4 = ($4|0)>(0);
 $cmp7$4 = ($4|0)==($bRate|0);
 $or$cond$4 = $cmp3$4 & $cmp7$4;
 if ($or$cond$4) {
  $retval$0 = 4;
  return ($retval$0|0);
 }
 $arrayidx2$5 = (((9980 + ($$version<<6)|0)) + 20|0);
 $5 = HEAP32[$arrayidx2$5>>2]|0;
 $cmp3$5 = ($5|0)>(0);
 $cmp7$5 = ($5|0)==($bRate|0);
 $or$cond$5 = $cmp3$5 & $cmp7$5;
 if ($or$cond$5) {
  $retval$0 = 5;
  return ($retval$0|0);
 }
 $arrayidx2$6 = (((9980 + ($$version<<6)|0)) + 24|0);
 $6 = HEAP32[$arrayidx2$6>>2]|0;
 $cmp3$6 = ($6|0)>(0);
 $cmp7$6 = ($6|0)==($bRate|0);
 $or$cond$6 = $cmp3$6 & $cmp7$6;
 if ($or$cond$6) {
  $retval$0 = 6;
  return ($retval$0|0);
 }
 $arrayidx2$7 = (((9980 + ($$version<<6)|0)) + 28|0);
 $7 = HEAP32[$arrayidx2$7>>2]|0;
 $cmp3$7 = ($7|0)>(0);
 $cmp7$7 = ($7|0)==($bRate|0);
 $or$cond$7 = $cmp3$7 & $cmp7$7;
 if ($or$cond$7) {
  $retval$0 = 7;
  return ($retval$0|0);
 }
 $arrayidx2$8 = (((9980 + ($$version<<6)|0)) + 32|0);
 $8 = HEAP32[$arrayidx2$8>>2]|0;
 $cmp3$8 = ($8|0)>(0);
 $cmp7$8 = ($8|0)==($bRate|0);
 $or$cond$8 = $cmp3$8 & $cmp7$8;
 if ($or$cond$8) {
  $retval$0 = 8;
  return ($retval$0|0);
 }
 $arrayidx2$9 = (((9980 + ($$version<<6)|0)) + 36|0);
 $9 = HEAP32[$arrayidx2$9>>2]|0;
 $cmp3$9 = ($9|0)>(0);
 $cmp7$9 = ($9|0)==($bRate|0);
 $or$cond$9 = $cmp3$9 & $cmp7$9;
 if ($or$cond$9) {
  $retval$0 = 9;
  return ($retval$0|0);
 }
 $arrayidx2$10 = (((9980 + ($$version<<6)|0)) + 40|0);
 $10 = HEAP32[$arrayidx2$10>>2]|0;
 $cmp3$10 = ($10|0)>(0);
 $cmp7$10 = ($10|0)==($bRate|0);
 $or$cond$10 = $cmp3$10 & $cmp7$10;
 if ($or$cond$10) {
  $retval$0 = 10;
  return ($retval$0|0);
 }
 $arrayidx2$11 = (((9980 + ($$version<<6)|0)) + 44|0);
 $11 = HEAP32[$arrayidx2$11>>2]|0;
 $cmp3$11 = ($11|0)>(0);
 $cmp7$11 = ($11|0)==($bRate|0);
 $or$cond$11 = $cmp3$11 & $cmp7$11;
 if ($or$cond$11) {
  $retval$0 = 11;
  return ($retval$0|0);
 }
 $arrayidx2$12 = (((9980 + ($$version<<6)|0)) + 48|0);
 $12 = HEAP32[$arrayidx2$12>>2]|0;
 $cmp3$12 = ($12|0)>(0);
 $cmp7$12 = ($12|0)==($bRate|0);
 $or$cond$12 = $cmp3$12 & $cmp7$12;
 if ($or$cond$12) {
  $retval$0 = 12;
  return ($retval$0|0);
 }
 $arrayidx2$13 = (((9980 + ($$version<<6)|0)) + 52|0);
 $13 = HEAP32[$arrayidx2$13>>2]|0;
 $cmp3$13 = ($13|0)>(0);
 $cmp7$13 = ($13|0)==($bRate|0);
 $or$cond$13 = $cmp3$13 & $cmp7$13;
 if ($or$cond$13) {
  $retval$0 = 13;
  return ($retval$0|0);
 } else {
  $arrayidx2$14 = (((9980 + ($$version<<6)|0)) + 56|0);
  $14 = HEAP32[$arrayidx2$14>>2]|0;
  $cmp3$14 = ($14|0)>(0);
  $cmp7$14 = ($14|0)==($bRate|0);
  $or$cond$14 = $cmp3$14 & $cmp7$14;
  $$ = $or$cond$14 ? 14 : -1;
  return ($$|0);
 }
 return (0)|0;
}
function _SmpFrqIndex($sample_freq,$version) {
 $sample_freq = $sample_freq|0;
 $version = $version|0;
 var $$sink = 0, $retval$0 = 0, $switch$split102D = 0, $switch$split12D = 0, $switch$split132D = 0, $switch$split162D = 0, $switch$split2D = 0, $switch$split42D = 0, $switch$split72D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $switch$split2D = ($sample_freq|0)<(22050);
 L1: do {
  if ($switch$split2D) {
   $switch$split12D = ($sample_freq|0)<(12000);
   if ($switch$split12D) {
    $switch$split72D = ($sample_freq|0)<(11025);
    if ($switch$split72D) {
     switch ($sample_freq|0) {
     case 8000:  {
      break;
     }
     default: {
      label = 10;
      break L1;
     }
     }
     $$sink = 0;$retval$0 = 2;
     break;
    } else {
     switch ($sample_freq|0) {
     case 11025:  {
      break;
     }
     default: {
      label = 10;
      break L1;
     }
     }
     $$sink = 0;$retval$0 = 0;
     break;
    }
   } else {
    $switch$split102D = ($sample_freq|0)<(16000);
    if ($switch$split102D) {
     switch ($sample_freq|0) {
     case 12000:  {
      break;
     }
     default: {
      label = 10;
      break L1;
     }
     }
     $$sink = 0;$retval$0 = 1;
     break;
    } else {
     switch ($sample_freq|0) {
     case 16000:  {
      break;
     }
     default: {
      label = 10;
      break L1;
     }
     }
     $$sink = 0;$retval$0 = 2;
     break;
    }
   }
  } else {
   $switch$split42D = ($sample_freq|0)<(32000);
   if ($switch$split42D) {
    switch ($sample_freq|0) {
    case 22050:  {
     $$sink = 0;$retval$0 = 0;
     break L1;
     break;
    }
    case 24000:  {
     $$sink = 0;$retval$0 = 1;
     break L1;
     break;
    }
    default: {
     label = 10;
     break L1;
    }
    }
   }
   $switch$split132D = ($sample_freq|0)<(44100);
   if ($switch$split132D) {
    switch ($sample_freq|0) {
    case 32000:  {
     break;
    }
    default: {
     label = 10;
     break L1;
    }
    }
    $$sink = 1;$retval$0 = 2;
    break;
   }
   $switch$split162D = ($sample_freq|0)<(48000);
   if (!($switch$split162D)) {
    switch ($sample_freq|0) {
    case 48000:  {
     $$sink = 1;$retval$0 = 1;
     break L1;
     break;
    }
    default: {
     label = 10;
     break L1;
    }
    }
   }
   switch ($sample_freq|0) {
   case 44100:  {
    break;
   }
   default: {
    label = 10;
    break L1;
   }
   }
   $$sink = 1;$retval$0 = 0;
  }
 } while(0);
 if ((label|0) == 10) {
  $$sink = 0;$retval$0 = -1;
 }
 HEAP32[$version>>2] = $$sink;
 return ($retval$0|0);
}
function _isResamplingNecessary($cfg) {
 $cfg = $cfg|0;
 var $$cmp8 = 0, $0 = 0, $1 = 0, $cmp = 0, $cmp8 = 0, $cond = 0, $conv = 0.0, $conv1 = 0, $conv5 = 0, $mul = 0.0, $mul4 = 0.0, $samplerate_in = 0, $samplerate_out = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $samplerate_out = ((($cfg)) + 48|0);
 $0 = HEAP32[$samplerate_out>>2]|0;
 $conv = (+($0|0));
 $mul = $conv * 0.99949997663497925;
 $conv1 = (~~(($mul)));
 $samplerate_in = ((($cfg)) + 44|0);
 $1 = HEAP32[$samplerate_in>>2]|0;
 $cmp = ($1|0)<($conv1|0);
 $mul4 = $conv * 1.000499963760376;
 $conv5 = (~~(($mul4)));
 $cmp8 = ($conv5|0)<($1|0);
 $$cmp8 = $cmp | $cmp8;
 $cond = $$cmp8&1;
 return ($cond|0);
}
function _fill_buffer($gfc,$mfbuf,$in_buffer,$nsamples,$n_in,$n_out) {
 $gfc = $gfc|0;
 $mfbuf = $mfbuf|0;
 $in_buffer = $in_buffer|0;
 $nsamples = $nsamples|0;
 $n_in = $n_in|0;
 $n_out = $n_out|0;
 var $$div6$i = 0, $$pre = 0, $$pre45 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0.0, $13 = 0.0, $14 = 0, $15 = 0.0, $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $add$i = 0.0, $add$i$i = 0.0, $add106$neg$i35 = 0.0, $add113$i = 0.0, $add115$i = 0.0, $add122$i = 0, $add127$i = 0, $add134$i = 0.0, $add161$i = 0.0, $add169$i = 0, $add181$i = 0, $add21$i50 = 0, $add23$i = 0;
 var $add23$neg$i = 0, $add60$i = 0.0, $add93$i = 0, $arrayidx = 0, $arrayidx10 = 0, $arrayidx128$i = 0, $arrayidx129$i = 0, $arrayidx129$sink$i = 0, $arrayidx131$i = 0, $arrayidx132$i = 0, $arrayidx138$i = 0, $arrayidx171$i = 0, $arrayidx172$i = 0, $arrayidx182$i = 0, $arrayidx183$i = 0, $arrayidx191$i = 0, $arrayidx192$i = 0, $arrayidx3 = 0, $arrayidx31$i = 0, $arrayidx35$i = 0;
 var $arrayidx36176$i = 0, $arrayidx4 = 0, $arrayidx58$i = 0, $arrayidx59$i = 0, $arrayidx70$i = 0, $arrayidx8 = 0, $arrayidx81$i = 0, $arrayidx89$i = 0, $arrayidx9 = 0, $call$i$i = 0.0, $call116$i = 0.0, $call18$i$i = 0.0, $call27$i = 0, $call29$i = 0, $call34$i = 0, $call34$i$i = 0.0, $call8$i = 0.0, $call9$i = 0.0, $call91$i = 0.0, $ch$0 = 0;
 var $ch$1 = 0, $channels_out = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i = 0, $cmp10$i = 0, $cmp125$i = 0, $cmp146$i = 0, $cmp15 = 0, $cmp16$i = 0, $cmp162$i = 0, $cmp178140$i = 0, $cmp188$i = 0, $cmp188137$i = 0, $cmp23$i$i = 0, $cmp24$i = 0, $cmp32$i = 0, $cmp32161$i = 0, $cmp4$i$i = 0, $cmp41$i = 0;
 var $cmp6 = 0, $cmp8$i = 0, $cmp83$i = 0, $cmp83146$i = 0, $cmp96$i = 0, $cond = 0, $conv$i = 0.0, $conv$i$i = 0.0, $conv$i31 = 0.0, $conv1$i = 0, $conv1$i$i = 0.0, $conv103$i = 0.0, $conv104$i = 0.0, $conv108$i = 0.0, $conv11$i$i = 0.0, $conv110$i = 0.0, $conv114$i = 0.0, $conv117$i = 0, $conv14$i = 0.0, $conv155$i = 0.0;
 var $conv156$i = 0.0, $conv16$i$i = 0.0, $conv2$i = 0.0, $conv2$i$i = 0.0, $conv20$i$i = 0.0, $conv21$i$i = 0.0, $conv26$i$i = 0.0, $conv29$i$i = 0.0, $conv33$i$i = 0.0, $conv36$i$i = 0.0, $conv45$i = 0.0, $conv46$i = 0.0, $conv49$i = 0.0, $conv5$i = 0, $conv54$i = 0.0, $conv86$i = 0.0, $conv9$i$i = 0.0, $conv92$i = 0, $div$i = 0.0, $div$i$i = 0.0;
 var $div13$i = 0.0, $div27$i$i = 0.0, $div40$i$i = 0.0, $div48$i = 0.0, $div6$i = 0, $div71$i = 0.0, $div94$neg$i = 0, $exitcond$i = 0, $exitcond169$i = 0, $exitcond170$i = 0, $exitcond172$i = 0, $exitcond173$i = 0, $fabsf$i$i = 0.0, $fcn$0$i = 0.0, $fill_buffer_resample_init$i = 0, $i$0162$i = 0, $i$1154$i = 0, $i$2157$i = 0, $i$3143$i = 0, $i$4136$i = 0;
 var $i$5$lcssa$i = 0, $i$5141$i = 0, $i$6139$i = 0, $i$tr$lcssa$i$i = 0, $i$tr5$i$i = 0, $i$tr5$i$i$phi = 0, $inbuf_old28$i = 0, $inc = 0, $inc$i = 0, $inc136$i = 0, $inc14 = 0, $inc141$i = 0, $inc174$i = 0, $inc185$i = 0, $inc194$i = 0, $inc195$i = 0, $inc62$i = 0, $inc73$i = 0, $inc76$i = 0, $j$0$lcssa$i = 0;
 var $j$0159$i = 0, $j$1$i = 0, $j$3$i = 0, $j$4138$i = 0, $j$tr6$i$i = 0, $k$0$lcssa$i = 0, $k$0147$i = 0, $len$sub145$i = 0, $mf_size2 = 0, $mode_gr = 0, $mul = 0, $mul$i = 0.0, $mul$i$i = 0.0, $mul$i33 = 0, $mul10$i$i = 0.0, $mul105$neg$i = 0.0, $mul109$i = 0.0, $mul111$i = 0.0, $mul12 = 0, $mul12$i$i = 0.0;
 var $mul13$neg$i$neg$i$neg = 0.0, $mul133$i = 0.0, $mul15$i$i = 0.0, $mul157$i = 0.0, $mul17$i$i = 0.0, $mul19$i$i = 0.0, $mul31$i$i = 0.0, $mul32$i$i = 0.0, $mul35$i$i = 0.0, $mul37$i$i = 0.0, $mul39$i$i = 0.0, $mul4$i = 0.0, $mul47$i = 0.0, $mul87$i = 0.0, $rem$i$i = 0, $rem$i46 = 0, $retval$0$i$i = 0.0, $retval$0$in$i$i = 0.0, $samplerate_in$i = 0, $samplerate_out$i = 0;
 var $sub$i = 0.0, $sub107$i = 0.0, $sub124$i = 0, $sub14$i133$i34 = 0.0, $sub145$i = 0, $sub158$i = 0.0, $sub170$i = 0, $sub176$i = 0, $sub44$i = 0, $sub55$i = 0.0, $sub90$i = 0.0, $sub95$i = 0, $sum$0153$i = 0.0, $tobool$demorgan = 0, $tobool$i$i = 0, $tobool4$i$i = 0, $x$addr$0$i$i = 0.0, $x$addr$1$i$i = 0.0, $xvalue$0144$i = 0.0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $mf_size2 = ((($gfc)) + 84036|0);
 $0 = HEAP32[$mf_size2>>2]|0;
 $mode_gr = ((($gfc)) + 76|0);
 $1 = HEAP32[$mode_gr>>2]|0;
 $mul = ($1*576)|0;
 $channels_out = ((($gfc)) + 72|0);
 $2 = HEAP32[$channels_out>>2]|0;
 $samplerate_out$i = ((($gfc)) + 64|0);
 $3 = HEAP32[$samplerate_out$i>>2]|0;
 $conv$i = (+($3|0));
 $mul$i = $conv$i * 0.99949997663497925;
 $conv1$i = (~~(($mul$i)));
 $samplerate_in$i = ((($gfc)) + 60|0);
 $4 = HEAP32[$samplerate_in$i>>2]|0;
 $cmp$i = ($4|0)<($conv1$i|0);
 $mul4$i = $conv$i * 1.000499963760376;
 $conv5$i = (~~(($mul4$i)));
 $cmp8$i = ($conv5$i|0)<($4|0);
 $tobool$demorgan = $cmp$i | $cmp8$i;
 if (!($tobool$demorgan)) {
  $cmp6 = ($mul|0)<($nsamples|0);
  $cond = $cmp6 ? $mul : $nsamples;
  $mul12 = $cond << 2;
  $ch$1 = 0;
  while(1) {
   $arrayidx8 = (($mfbuf) + ($ch$1<<2)|0);
   $22 = HEAP32[$arrayidx8>>2]|0;
   $arrayidx9 = (($22) + ($0<<2)|0);
   $arrayidx10 = (($in_buffer) + ($ch$1<<2)|0);
   $23 = HEAP32[$arrayidx10>>2]|0;
   _memcpy(($arrayidx9|0),($23|0),($mul12|0))|0;
   $inc14 = (($ch$1) + 1)|0;
   $cmp15 = ($inc14|0)<($2|0);
   if ($cmp15) {
    $ch$1 = $inc14;
   } else {
    break;
   }
  }
  HEAP32[$n_out>>2] = $cond;
  HEAP32[$n_in>>2] = $cond;
  return;
 }
 $fill_buffer_resample_init$i = ((($gfc)) + 12|0);
 $inbuf_old28$i = ((($gfc)) + 37184|0);
 $arrayidx31$i = ((($gfc)) + 37188|0);
 $arrayidx36176$i = ((($gfc)) + 37168|0);
 $cmp83146$i = ($1|0)>(0);
 $7 = $4;$8 = $3;$ch$0 = 0;
 while(1) {
  $arrayidx = (($mfbuf) + ($ch$0<<2)|0);
  $5 = HEAP32[$arrayidx>>2]|0;
  $arrayidx3 = (($5) + ($0<<2)|0);
  $arrayidx4 = (($in_buffer) + ($ch$0<<2)|0);
  $6 = HEAP32[$arrayidx4>>2]|0;
  $conv$i31 = (+($7|0));
  $conv2$i = (+($8|0));
  $div$i = $conv$i31 / $conv2$i;
  $tobool4$i$i = ($7|0)==(0);
  if ($tobool4$i$i) {
   $i$tr$lcssa$i$i = $8;
  } else {
   $i$tr5$i$i = $8;$j$tr6$i$i = $7;
   while(1) {
    $rem$i$i = (($i$tr5$i$i|0) % ($j$tr6$i$i|0))&-1;
    $tobool$i$i = ($rem$i$i|0)==(0);
    if ($tobool$i$i) {
     $i$tr$lcssa$i$i = $j$tr6$i$i;
     break;
    } else {
     $i$tr5$i$i$phi = $j$tr6$i$i;$j$tr6$i$i = $rem$i$i;$i$tr5$i$i = $i$tr5$i$i$phi;
    }
   }
  }
  $div6$i = (($8|0) / ($i$tr$lcssa$i$i|0))&-1;
  $9 = ($div6$i|0)<(320);
  $$div6$i = $9 ? $div6$i : 320;
  $add$i = $div$i + 0.5;
  $call8$i = (+Math_floor((+$add$i)));
  $sub$i = $div$i - $call8$i;
  $call9$i = (+Math_abs((+$sub$i)));
  $cmp10$i = $call9$i < 1.0E-4;
  $div13$i = 1.0 / $div$i;
  $conv14$i = $div13$i;
  $cmp16$i = $conv14$i > 1.0;
  $fcn$0$i = $cmp16$i ? 1.0 : $conv14$i;
  $add21$i50 = $cmp10$i ? 32 : 31;
  $add23$i = (($add21$i50) + 1)|0;
  $10 = HEAP32[$fill_buffer_resample_init$i>>2]|0;
  $cmp24$i = ($10|0)==(0);
  if ($cmp24$i) {
   $call27$i = (_calloc($add23$i,4)|0);
   HEAP32[$inbuf_old28$i>>2] = $call27$i;
   $call29$i = (_calloc($add23$i,4)|0);
   HEAP32[$arrayidx31$i>>2] = $call29$i;
   $mul$i33 = $$div6$i << 1;
   $cmp32161$i = ($$div6$i|0)<(0);
   if ($cmp32161$i) {
    ;HEAP32[$arrayidx36176$i>>2]=0|0;HEAP32[$arrayidx36176$i+4>>2]=0|0;HEAP32[$arrayidx36176$i+8>>2]=0|0;HEAP32[$arrayidx36176$i+12>>2]=0|0;
    $j$0$lcssa$i = 0;
   } else {
    $i$0162$i = 0;
    while(1) {
     $call34$i = (_calloc($add23$i,4)|0);
     $arrayidx35$i = (((($gfc)) + 37192|0) + ($i$0162$i<<2)|0);
     HEAP32[$arrayidx35$i>>2] = $call34$i;
     $inc$i = (($i$0162$i) + 1)|0;
     $cmp32$i = ($i$0162$i|0)<($mul$i33|0);
     if ($cmp32$i) {
      $i$0162$i = $inc$i;
     } else {
      break;
     }
    }
    ;HEAP32[$arrayidx36176$i>>2]=0|0;HEAP32[$arrayidx36176$i+4>>2]=0|0;HEAP32[$arrayidx36176$i+8>>2]=0|0;HEAP32[$arrayidx36176$i+12>>2]=0|0;
    $conv46$i = (+($$div6$i|0));
    $mul47$i = $conv46$i * 2.0;
    $conv$i$i = $fcn$0$i;
    $mul$i$i = $conv$i$i * 3.1415926535897931;
    $conv1$i$i = $mul$i$i;
    $conv2$i$i = (+($add21$i50|0));
    $conv26$i$i = $conv1$i$i;
    $div27$i$i = $conv26$i$i * 0.31830988618379069;
    $mul31$i$i = $conv2$i$i * $conv1$i$i;
    $conv36$i$i = (+($add21$i50|0));
    $mul37$i$i = $conv36$i$i * 3.1415926535897931;
    $j$0159$i = 0;
    while(1) {
     $sub44$i = (($j$0159$i) - ($$div6$i))|0;
     $conv45$i = (+($sub44$i|0));
     $div48$i = $conv45$i / $mul47$i;
     $conv49$i = $div48$i;
     $arrayidx58$i = (((($gfc)) + 37192|0) + ($j$0159$i<<2)|0);
     $11 = HEAP32[$arrayidx58$i>>2]|0;
     $i$1154$i = 0;$sum$0153$i = 0.0;
     while(1) {
      $conv54$i = (+($i$1154$i|0));
      $sub55$i = $conv54$i - $conv49$i;
      $div$i$i = $sub55$i / $conv2$i$i;
      $cmp$i$i = $div$i$i < 0.0;
      $x$addr$0$i$i = $cmp$i$i ? 0.0 : $div$i$i;
      $cmp4$i$i = $x$addr$0$i$i > 1.0;
      $x$addr$1$i$i = $cmp4$i$i ? 1.0 : $x$addr$0$i$i;
      $conv9$i$i = $x$addr$1$i$i + -0.5;
      $fabsf$i$i = (+Math_abs((+$conv9$i$i)));
      $12 = $fabsf$i$i;
      $cmp23$i$i = $12 < 1.0000000000000001E-9;
      if ($cmp23$i$i) {
       $retval$0$in$i$i = $div27$i$i;
      } else {
       $conv21$i$i = $conv9$i$i;
       $mul10$i$i = $x$addr$1$i$i * 2.0;
       $conv11$i$i = $mul10$i$i;
       $mul12$i$i = $conv11$i$i * 3.1415926535897931;
       $call$i$i = (+Math_cos((+$mul12$i$i)));
       $mul13$neg$i$neg$i$neg = $call$i$i * -0.5;
       $sub14$i133$i34 = $mul13$neg$i$neg$i$neg + 0.41999999999999998;
       $mul15$i$i = $x$addr$1$i$i * 4.0;
       $conv16$i$i = $mul15$i$i;
       $mul17$i$i = $conv16$i$i * 3.1415926535897931;
       $call18$i$i = (+Math_cos((+$mul17$i$i)));
       $mul19$i$i = $call18$i$i * 0.080000000000000002;
       $add$i$i = $sub14$i133$i34 + $mul19$i$i;
       $conv20$i$i = $add$i$i;
       $conv29$i$i = $conv20$i$i;
       $mul32$i$i = $mul31$i$i * $conv9$i$i;
       $conv33$i$i = $mul32$i$i;
       $call34$i$i = (+Math_sin((+$conv33$i$i)));
       $mul35$i$i = $conv29$i$i * $call34$i$i;
       $mul39$i$i = $mul37$i$i * $conv21$i$i;
       $div40$i$i = $mul35$i$i / $mul39$i$i;
       $retval$0$in$i$i = $div40$i$i;
      }
      $retval$0$i$i = $retval$0$in$i$i;
      $arrayidx59$i = (($11) + ($i$1154$i<<2)|0);
      HEAPF32[$arrayidx59$i>>2] = $retval$0$i$i;
      $add60$i = $retval$0$i$i + $sum$0153$i;
      $inc62$i = (($i$1154$i) + 1)|0;
      $exitcond172$i = ($inc62$i|0)==($add23$i|0);
      if ($exitcond172$i) {
       $i$2157$i = 0;
       break;
      } else {
       $i$1154$i = $inc62$i;$sum$0153$i = $add60$i;
      }
     }
     while(1) {
      $arrayidx70$i = (($11) + ($i$2157$i<<2)|0);
      $13 = +HEAPF32[$arrayidx70$i>>2];
      $div71$i = $13 / $add60$i;
      HEAPF32[$arrayidx70$i>>2] = $div71$i;
      $inc73$i = (($i$2157$i) + 1)|0;
      $exitcond173$i = ($inc73$i|0)==($add23$i|0);
      if ($exitcond173$i) {
       break;
      } else {
       $i$2157$i = $inc73$i;
      }
     }
     $inc76$i = (($j$0159$i) + 1)|0;
     $cmp41$i = ($j$0159$i|0)<($mul$i33|0);
     if ($cmp41$i) {
      $j$0159$i = $inc76$i;
     } else {
      $j$0$lcssa$i = $inc76$i;
      break;
     }
    }
   }
   HEAP32[$fill_buffer_resample_init$i>>2] = 1;
   $j$1$i = $j$0$lcssa$i;
  } else {
   $j$1$i = 0;
  }
  $arrayidx81$i = (((($gfc)) + 37184|0) + ($ch$0<<2)|0);
  $14 = HEAP32[$arrayidx81$i>>2]|0;
  $arrayidx89$i = (((($gfc)) + 37168|0) + ($ch$0<<3)|0);
  $15 = +HEAPF64[$arrayidx89$i>>3];
  $div94$neg$i = (($add21$i50|0) / -2)&-1;
  $add93$i = (($div94$neg$i) + ($add21$i50))|0;
  L33: do {
   if ($cmp83146$i) {
    $conv110$i = (+($$div6$i|0));
    $mul109$i = $conv110$i * 2.0;
    $rem$i46 = $add21$i50 & 1;
    $conv104$i = (+($rem$i46|0));
    $mul105$neg$i = $conv104$i * 0.5;
    $k$0147$i = 0;
    while(1) {
     $conv86$i = (+($k$0147$i|0));
     $mul87$i = $conv86$i * $div$i;
     $sub90$i = $mul87$i - $15;
     $call91$i = (+Math_floor((+$sub90$i)));
     $conv92$i = (~~(($call91$i)));
     $sub95$i = (($conv92$i) + ($add93$i))|0;
     $cmp96$i = ($sub95$i|0)<($nsamples|0);
     if (!($cmp96$i)) {
      $j$3$i = $conv92$i;$k$0$lcssa$i = $k$0147$i;
      break L33;
     }
     $conv103$i = (+($conv92$i|0));
     $add106$neg$i35 = $sub90$i - $mul105$neg$i;
     $sub107$i = $add106$neg$i35 - $conv103$i;
     $conv108$i = $sub107$i;
     $mul111$i = $mul109$i * $conv108$i;
     $add113$i = $mul111$i + $conv110$i;
     $conv114$i = $add113$i;
     $add115$i = $conv114$i + 0.5;
     $call116$i = (+Math_floor((+$add115$i)));
     $conv117$i = (~~(($call116$i)));
     $add122$i = (($conv92$i) + ($div94$neg$i))|0;
     $arrayidx131$i = (((($gfc)) + 37192|0) + ($conv117$i<<2)|0);
     $16 = HEAP32[$arrayidx131$i>>2]|0;
     $i$3143$i = 0;$xvalue$0144$i = 0.0;
     while(1) {
      $sub124$i = (($add122$i) + ($i$3143$i))|0;
      $cmp125$i = ($sub124$i|0)<(0);
      $arrayidx129$i = (($6) + ($sub124$i<<2)|0);
      $add127$i = (($sub124$i) + ($add23$i))|0;
      $arrayidx128$i = (($14) + ($add127$i<<2)|0);
      $arrayidx129$sink$i = $cmp125$i ? $arrayidx128$i : $arrayidx129$i;
      $17 = +HEAPF32[$arrayidx129$sink$i>>2];
      $arrayidx132$i = (($16) + ($i$3143$i<<2)|0);
      $18 = +HEAPF32[$arrayidx132$i>>2];
      $mul133$i = $18 * $17;
      $add134$i = $mul133$i + $xvalue$0144$i;
      $inc136$i = (($i$3143$i) + 1)|0;
      $exitcond170$i = ($inc136$i|0)==($add23$i|0);
      if ($exitcond170$i) {
       break;
      } else {
       $i$3143$i = $inc136$i;$xvalue$0144$i = $add134$i;
      }
     }
     $arrayidx138$i = (($arrayidx3) + ($k$0147$i<<2)|0);
     HEAPF32[$arrayidx138$i>>2] = $add134$i;
     $inc141$i = (($k$0147$i) + 1)|0;
     $cmp83$i = ($inc141$i|0)<($mul|0);
     if ($cmp83$i) {
      $k$0147$i = $inc141$i;
     } else {
      $j$3$i = $conv92$i;$k$0$lcssa$i = $inc141$i;
      break;
     }
    }
   } else {
    $j$3$i = $j$1$i;$k$0$lcssa$i = 0;
   }
  } while(0);
  $sub145$i = (($j$3$i) + ($add93$i))|0;
  $cmp146$i = ($sub145$i|0)>($nsamples|0);
  $len$sub145$i = $cmp146$i ? $nsamples : $sub145$i;
  HEAP32[$n_in>>2] = $len$sub145$i;
  $conv155$i = (+($len$sub145$i|0));
  $conv156$i = (+($k$0$lcssa$i|0));
  $mul157$i = $conv156$i * $div$i;
  $sub158$i = $15 - $mul157$i;
  $add161$i = $sub158$i + $conv155$i;
  HEAPF64[$arrayidx89$i>>3] = $add161$i;
  $cmp162$i = ($add21$i50|0)<($len$sub145$i|0);
  if ($cmp162$i) {
   $add23$neg$i = $add21$i50 ^ -1;
   $add169$i = (($len$sub145$i) + ($add23$neg$i))|0;
   $i$4136$i = 0;
   while(1) {
    $sub170$i = (($add169$i) + ($i$4136$i))|0;
    $arrayidx171$i = (($6) + ($sub170$i<<2)|0);
    $19 = HEAP32[$arrayidx171$i>>2]|0;
    $arrayidx172$i = (($14) + ($i$4136$i<<2)|0);
    HEAP32[$arrayidx172$i>>2] = $19;
    $inc174$i = (($i$4136$i) + 1)|0;
    $exitcond$i = ($inc174$i|0)==($add23$i|0);
    if ($exitcond$i) {
     break;
    } else {
     $i$4136$i = $inc174$i;
    }
   }
  } else {
   $sub176$i = (($add23$i) - ($len$sub145$i))|0;
   $cmp178140$i = ($sub176$i|0)>(0);
   if ($cmp178140$i) {
    $i$5141$i = 0;
    while(1) {
     $add181$i = (($i$5141$i) + ($len$sub145$i))|0;
     $arrayidx182$i = (($14) + ($add181$i<<2)|0);
     $20 = HEAP32[$arrayidx182$i>>2]|0;
     $arrayidx183$i = (($14) + ($i$5141$i<<2)|0);
     HEAP32[$arrayidx183$i>>2] = $20;
     $inc185$i = (($i$5141$i) + 1)|0;
     $exitcond169$i = ($inc185$i|0)==($sub176$i|0);
     if ($exitcond169$i) {
      $i$5$lcssa$i = $sub176$i;
      break;
     } else {
      $i$5141$i = $inc185$i;
     }
    }
   } else {
    $i$5$lcssa$i = 0;
   }
   $cmp188137$i = ($i$5$lcssa$i|0)>($add21$i50|0);
   if (!($cmp188137$i)) {
    $i$6139$i = $i$5$lcssa$i;$j$4138$i = 0;
    while(1) {
     $arrayidx191$i = (($6) + ($j$4138$i<<2)|0);
     $21 = HEAP32[$arrayidx191$i>>2]|0;
     $arrayidx192$i = (($14) + ($i$6139$i<<2)|0);
     HEAP32[$arrayidx192$i>>2] = $21;
     $inc194$i = (($i$6139$i) + 1)|0;
     $inc195$i = (($j$4138$i) + 1)|0;
     $cmp188$i = ($i$6139$i|0)<($add21$i50|0);
     if ($cmp188$i) {
      $i$6139$i = $inc194$i;$j$4138$i = $inc195$i;
     } else {
      break;
     }
    }
   }
  }
  $inc = (($ch$0) + 1)|0;
  $cmp = ($inc|0)<($2|0);
  if (!($cmp)) {
   break;
  }
  $$pre = HEAP32[$samplerate_in$i>>2]|0;
  $$pre45 = HEAP32[$samplerate_out$i>>2]|0;
  $7 = $$pre;$8 = $$pre45;$ch$0 = $inc;
 }
 HEAP32[$n_out>>2] = $k$0$lcssa$i;
 return;
}
function _lame_report_def($format,$args) {
 $format = $format|0;
 $args = $args|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[2794]|0;
 (_vfprintf($0,$format,$args)|0);
 (_fflush($0)|0);
 return;
}
function _lame_msgf($gfc,$format,$varargs) {
 $gfc = $gfc|0;
 $format = $format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $args = 0, $report_msg = 0, $tobool = 0, $tobool1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $args = sp;
 $tobool = ($gfc|0)==(0|0);
 if ($tobool) {
  STACKTOP = sp;return;
 }
 $report_msg = ((($gfc)) + 85828|0);
 $0 = HEAP32[$report_msg>>2]|0;
 $tobool1 = ($0|0)==(0|0);
 if ($tobool1) {
  STACKTOP = sp;return;
 }
 HEAP32[$args>>2] = $varargs;
 $1 = HEAP32[$report_msg>>2]|0;
 FUNCTION_TABLE_vii[$1 & 3]($format,$args);
 STACKTOP = sp;return;
}
function _lame_errorf($gfc,$format,$varargs) {
 $gfc = $gfc|0;
 $format = $format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $args = 0, $report_err = 0, $tobool = 0, $tobool1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $args = sp;
 $tobool = ($gfc|0)==(0|0);
 if ($tobool) {
  STACKTOP = sp;return;
 }
 $report_err = ((($gfc)) + 85836|0);
 $0 = HEAP32[$report_err>>2]|0;
 $tobool1 = ($0|0)==(0|0);
 if ($tobool1) {
  STACKTOP = sp;return;
 }
 HEAP32[$args>>2] = $varargs;
 $1 = HEAP32[$report_err>>2]|0;
 FUNCTION_TABLE_vii[$1 & 3]($format,$args);
 STACKTOP = sp;return;
}
function _has_MMX() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _has_3DNow() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _has_SSE() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _has_SSE2() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _disable_FPE() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _init_log_table() {
 var $0 = 0, $add = 0.0, $arrayidx = 0, $call = 0.0, $conv = 0.0, $conv1 = 0.0, $conv4 = 0.0, $div = 0.0, $div3 = 0.0, $exitcond = 0, $inc = 0, $j$05 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[23128]|0;
 $tobool = ($0|0)==(0);
 if ($tobool) {
  $j$05 = 0;
 } else {
  HEAP32[23128] = 1;
  return;
 }
 while(1) {
  $conv = (+($j$05|0));
  $div = $conv * 0.001953125;
  $add = $div + 1.0;
  $conv1 = $add;
  $call = (+Math_log((+$conv1)));
  $div3 = $call * 1.4426950408889634;
  $conv4 = $div3;
  $arrayidx = (92516 + ($j$05<<2)|0);
  HEAPF32[$arrayidx>>2] = $conv4;
  $inc = (($j$05) + 1)|0;
  $exitcond = ($inc|0)==(513);
  if ($exitcond) {
   break;
  } else {
   $j$05 = $inc;
  }
 }
 HEAP32[23128] = 1;
 return;
}
function _fast_log2($x) {
 $x = +$x;
 var $0 = 0, $1 = 0.0, $2 = 0.0, $add = 0, $add10 = 0.0, $add11 = 0.0, $and = 0, $and2 = 0, $and3 = 0, $arrayidx = 0, $arrayidx8 = 0, $conv = 0.0, $conv4 = 0.0, $mul = 0.0, $mul7 = 0.0, $mul9 = 0.0, $shr12 = 0, $shr513 = 0, $sub = 0, $sub6 = 0.0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (HEAPF32[tempDoublePtr>>2]=$x,HEAP32[tempDoublePtr>>2]|0);
 $shr12 = $0 >>> 23;
 $and2 = $shr12 & 255;
 $sub = (($and2) + -127)|0;
 $conv = (+($sub|0));
 $and3 = $0 & 16383;
 $conv4 = (+($and3|0));
 $mul = $conv4 * 6.103515625E-5;
 $and = $0 >>> 14;
 $shr513 = $and & 511;
 $arrayidx = (92516 + ($shr513<<2)|0);
 $1 = +HEAPF32[$arrayidx>>2];
 $sub6 = 1.0 - $mul;
 $mul7 = $1 * $sub6;
 $add = (($shr513) + 1)|0;
 $arrayidx8 = (92516 + ($add<<2)|0);
 $2 = +HEAPF32[$arrayidx8>>2];
 $mul9 = $2 * $mul;
 $add10 = $mul7 + $conv;
 $add11 = $add10 + $mul9;
 return (+$add11);
}
function _get_lame_short_version() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (17274|0);
}
function _malloc($bytes) {
 $bytes = $bytes|0;
 var $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i133 = 0, $$pre$i186 = 0, $$pre$i27$i = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i187Z2D = 0, $$pre$phi$i28$iZ2D = 0, $$pre$phi$iZ2D = 0, $$pre$phiZ2D = 0, $$sink$i = 0, $$sink$i$i = 0, $$sink$i166 = 0, $$sink2$i = 0, $$sink2$i183 = 0, $$sink4$i = 0, $$v$0$i = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F$0$i$i = 0, $F104$0 = 0, $F197$0$i = 0, $F224$0$i$i = 0, $F290$0$i = 0, $I252$0$i$i = 0, $I316$0$i = 0, $I57$0$i$i = 0, $K105$0$i$i = 0, $K305$0$i$i = 0, $K373$0$i = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i175 = 0;
 var $R$3$i = 0, $R$3$i$i = 0, $R$3$i179 = 0, $RP$1$i = 0, $RP$1$i$i = 0, $RP$1$i174 = 0, $T$0$i = 0, $T$0$i$i = 0, $T$0$i29$i = 0, $add$i = 0, $add$i$i = 0, $add$i134 = 0, $add$i152 = 0, $add$ptr = 0, $add$ptr$i = 0, $add$ptr$i$i = 0, $add$ptr$i$i$i = 0, $add$ptr$i140 = 0, $add$ptr$i169 = 0, $add$ptr$i2$i$i = 0;
 var $add$ptr$i31$i = 0, $add$ptr$i38$i = 0, $add$ptr$i54$i = 0, $add$ptr14$i$i = 0, $add$ptr15$i$i = 0, $add$ptr16$i$i = 0, $add$ptr166 = 0, $add$ptr169 = 0, $add$ptr17$i$i = 0, $add$ptr178 = 0, $add$ptr181$i = 0, $add$ptr182 = 0, $add$ptr189$i = 0, $add$ptr190$i = 0, $add$ptr193 = 0, $add$ptr199 = 0, $add$ptr2$i$i = 0, $add$ptr205$i$i = 0, $add$ptr212$i$i = 0, $add$ptr225$i = 0;
 var $add$ptr227$i = 0, $add$ptr24$i$i = 0, $add$ptr262$i = 0, $add$ptr269$i = 0, $add$ptr273$i = 0, $add$ptr282$i = 0, $add$ptr3$i$i = 0, $add$ptr30$i$i = 0, $add$ptr369$i$i = 0, $add$ptr4$i$i = 0, $add$ptr4$i$i$i = 0, $add$ptr4$i36$i = 0, $add$ptr4$i43$i = 0, $add$ptr441$i = 0, $add$ptr5$i$i = 0, $add$ptr6$i$i = 0, $add$ptr6$i$i$i = 0, $add$ptr6$i47$i = 0, $add$ptr7$i$i = 0, $add$ptr81$i$i = 0;
 var $add$ptr95 = 0, $add$ptr98 = 0, $add10$i = 0, $add101$i = 0, $add110$i = 0, $add13$i = 0, $add14$i = 0, $add140$i = 0, $add144 = 0, $add150$i = 0, $add17$i = 0, $add17$i155 = 0, $add177$i = 0, $add18$i = 0, $add19$i = 0, $add2 = 0, $add20$i = 0, $add206$i$i = 0, $add212$i = 0, $add215$i = 0;
 var $add22$i = 0, $add246$i = 0, $add26$i$i = 0, $add268$i = 0, $add269$i$i = 0, $add274$i$i = 0, $add278$i$i = 0, $add280$i$i = 0, $add283$i$i = 0, $add337$i = 0, $add342$i = 0, $add346$i = 0, $add348$i = 0, $add351$i = 0, $add46$i = 0, $add50 = 0, $add51$i = 0, $add54 = 0, $add54$i = 0, $add58 = 0;
 var $add62 = 0, $add64 = 0, $add74$i$i = 0, $add77$i = 0, $add78$i = 0, $add79$i$i = 0, $add8 = 0, $add82$i = 0, $add83$i$i = 0, $add85$i$i = 0, $add86$i = 0, $add88$i$i = 0, $add9$i = 0, $add90$i = 0, $add92$i = 0, $and = 0, $and$i = 0, $and$i$i = 0, $and$i$i$i = 0, $and$i11$i = 0;
 var $and$i149 = 0, $and$i32$i = 0, $and$i39$i = 0, $and100$i = 0, $and103$i = 0, $and104$i = 0, $and106 = 0, $and11$add51$i = 0, $and11$i = 0, $and119$i$i = 0, $and12$i = 0, $and13$i = 0, $and13$i$i = 0, $and133$i$i = 0, $and14 = 0, $and145 = 0, $and17$i = 0, $and194$i = 0, $and194$i182 = 0, $and199$i = 0;
 var $and209$i$i = 0, $and21$i = 0, $and21$i156 = 0, $and227$i$i = 0, $and236$i = 0, $and264$i$i = 0, $and268$i$i = 0, $and273$i$i = 0, $and282$i$i = 0, $and29$i = 0, $and292$i = 0, $and295$i$i = 0, $and3$i = 0, $and3$i$i = 0, $and3$i$i$i = 0, $and3$i34$i = 0, $and3$i41$i = 0, $and30$i = 0, $and318$i$i = 0, $and32$i = 0;
 var $and32$i$i = 0, $and33$i$i = 0, $and331$i = 0, $and336$i = 0, $and341$i = 0, $and350$i = 0, $and363$i = 0, $and37$i$i = 0, $and387$i = 0, $and4 = 0, $and40$i$i = 0, $and41 = 0, $and42$i = 0, $and43 = 0, $and46 = 0, $and49 = 0, $and49$i = 0, $and49$i$i = 0, $and53 = 0, $and57 = 0;
 var $and6$i = 0, $and6$i$i = 0, $and6$i10$i = 0, $and6$i14$i = 0, $and61 = 0, $and64$i = 0, $and68$i = 0, $and69$i$i = 0, $and7 = 0, $and73$i = 0, $and73$i$i = 0, $and74 = 0, $and77$i = 0, $and78$i$i = 0, $and8$i = 0, $and80$i = 0, $and81$i = 0, $and85$i = 0, $and87$i$i = 0, $and89$i = 0;
 var $and9$i = 0, $and96$i$i = 0, $arrayidx = 0, $arrayidx$i = 0, $arrayidx$i$i = 0, $arrayidx$i157 = 0, $arrayidx$i50$i = 0, $arrayidx103 = 0, $arrayidx103$i$i = 0, $arrayidx106$i = 0, $arrayidx107$i$i = 0, $arrayidx113$i = 0, $arrayidx113$i167 = 0, $arrayidx121$i = 0, $arrayidx123$i$i = 0, $arrayidx126$i$i = 0, $arrayidx137$i = 0, $arrayidx143$i$i = 0, $arrayidx148$i = 0, $arrayidx151$i = 0;
 var $arrayidx151$i$i = 0, $arrayidx154$i = 0, $arrayidx155$i = 0, $arrayidx161$i = 0, $arrayidx165$i = 0, $arrayidx165$i177 = 0, $arrayidx178$i$i = 0, $arrayidx184$i = 0, $arrayidx184$i$i = 0, $arrayidx195$i$i = 0, $arrayidx196$i = 0, $arrayidx204$i = 0, $arrayidx212$i = 0, $arrayidx223$i$i = 0, $arrayidx228$i = 0, $arrayidx23$i = 0, $arrayidx232$i = 0, $arrayidx239$i = 0, $arrayidx245$i = 0, $arrayidx256$i = 0;
 var $arrayidx27$i = 0, $arrayidx275$i = 0, $arrayidx287$i$i = 0, $arrayidx289$i = 0, $arrayidx290$i$i = 0, $arrayidx325$i$i = 0, $arrayidx355$i = 0, $arrayidx358$i = 0, $arrayidx394$i = 0, $arrayidx40$i = 0, $arrayidx44$i = 0, $arrayidx61$i = 0, $arrayidx65$i = 0, $arrayidx66 = 0, $arrayidx71$i = 0, $arrayidx75$i = 0, $arrayidx91$i$i = 0, $arrayidx92$i$i = 0, $arrayidx94$i = 0, $arrayidx94$i165 = 0;
 var $arrayidx96$i$i = 0, $bk$i = 0, $bk$i$i = 0, $bk$i171 = 0, $bk$i22$i = 0, $bk102$i$i = 0, $bk122 = 0, $bk124 = 0, $bk139$i$i = 0, $bk145$i = 0, $bk158$i$i = 0, $bk161$i$i = 0, $bk18 = 0, $bk218$i = 0, $bk220$i = 0, $bk246$i$i = 0, $bk248$i$i = 0, $bk302$i$i = 0, $bk311$i = 0, $bk313$i = 0;
 var $bk338$i$i = 0, $bk357$i$i = 0, $bk360$i$i = 0, $bk370$i = 0, $bk407$i = 0, $bk429$i = 0, $bk432$i = 0, $bk55$i$i = 0, $bk56$i = 0, $bk67$i$i = 0, $bk74$i$i = 0, $bk85 = 0, $bk91$i$i = 0, $br$2$ph$i = 0, $call107$i = 0, $call131$i = 0, $call132$i = 0, $call275$i = 0, $call37$i = 0, $call68$i = 0;
 var $call83$i = 0, $child$i$i = 0, $child166$i$i = 0, $child289$i$i = 0, $child357$i = 0, $cmp = 0, $cmp$i = 0, $cmp$i$i$i = 0, $cmp$i12$i = 0, $cmp$i146 = 0, $cmp$i3$i$i = 0, $cmp$i33$i = 0, $cmp$i40$i = 0, $cmp$i52$i = 0, $cmp$i9$i = 0, $cmp1 = 0, $cmp1$i = 0, $cmp10 = 0, $cmp100$i$i = 0, $cmp102$i = 0;
 var $cmp104$i$i = 0, $cmp105$i = 0, $cmp106$i$i = 0, $cmp108$i = 0, $cmp108$i$i = 0, $cmp116$i = 0, $cmp118$i = 0, $cmp119$i = 0, $cmp12$i = 0, $cmp120$i$i = 0, $cmp120$i24$i = 0, $cmp123$i = 0, $cmp124$i$i = 0, $cmp126$i = 0, $cmp127$i = 0, $cmp128 = 0, $cmp128$i = 0, $cmp128$i$i = 0, $cmp133$i = 0, $cmp135$i = 0;
 var $cmp137$i = 0, $cmp138$i = 0, $cmp139 = 0, $cmp141$i = 0, $cmp146 = 0, $cmp147$i = 0, $cmp14795$i = 0, $cmp15$i = 0, $cmp151$i = 0, $cmp152$i = 0, $cmp155$i = 0, $cmp156 = 0, $cmp156$i = 0, $cmp156$i$i = 0, $cmp157$i = 0, $cmp159$i = 0, $cmp162 = 0, $cmp162$i = 0, $cmp162$i176 = 0, $cmp166$i = 0;
 var $cmp168$i$i = 0, $cmp174$i = 0, $cmp180$i = 0, $cmp185$i = 0, $cmp185$i$i = 0, $cmp186 = 0, $cmp186$i = 0, $cmp19$i = 0, $cmp190$i = 0, $cmp191$i = 0, $cmp2$i$i = 0, $cmp2$i$i$i = 0, $cmp20$i$i = 0, $cmp203$i = 0, $cmp209$i = 0, $cmp21$i = 0, $cmp215$i$i = 0, $cmp217$i = 0, $cmp218$i = 0, $cmp224$i = 0;
 var $cmp228$i = 0, $cmp229$i = 0, $cmp24$i = 0, $cmp24$i$i = 0, $cmp246$i = 0, $cmp254$i$i = 0, $cmp257$i = 0, $cmp258$i$i = 0, $cmp26$i = 0, $cmp265$i = 0, $cmp27$i$i = 0, $cmp28$i = 0, $cmp28$i$i = 0, $cmp284$i = 0, $cmp286$i = 0, $cmp29 = 0, $cmp3$i$i = 0, $cmp306$i$i = 0, $cmp31 = 0, $cmp319$i = 0;
 var $cmp319$i$i = 0, $cmp32$i = 0, $cmp32$i137 = 0, $cmp323$i = 0, $cmp327$i$i = 0, $cmp34$i = 0, $cmp34$i$i = 0, $cmp35$i = 0, $cmp36$i = 0, $cmp36$i$i = 0, $cmp374$i = 0, $cmp38$i = 0, $cmp38$i$i = 0, $cmp388$i = 0, $cmp396$i = 0, $cmp40$i = 0, $cmp43$i = 0, $cmp45$i = 0, $cmp46$i = 0, $cmp46$i$i = 0;
 var $cmp49$i = 0, $cmp5 = 0, $cmp55$i = 0, $cmp55$i161 = 0, $cmp57$i = 0, $cmp57$i162 = 0, $cmp59$i$i = 0, $cmp60$i = 0, $cmp62$i = 0, $cmp63$i = 0, $cmp63$i$i = 0, $cmp65$i = 0, $cmp66$i = 0, $cmp66$i139 = 0, $cmp69$i = 0, $cmp7$i$i = 0, $cmp70 = 0, $cmp72$i = 0, $cmp75$i$i = 0, $cmp76$i = 0;
 var $cmp81$i = 0, $cmp85$i = 0, $cmp89$i = 0, $cmp9$i$i = 0, $cmp90$i = 0, $cmp91$i = 0, $cmp93$i = 0, $cmp95$i = 0, $cmp96$i = 0, $cmp97$i = 0, $cmp97$i$i = 0, $cmp976$i = 0, $cmp99 = 0, $cond = 0, $cond$i = 0, $cond$i$i = 0, $cond$i$i$i = 0, $cond$i13$i = 0, $cond$i158 = 0, $cond$i35$i = 0;
 var $cond$i42$i = 0, $cond1$i$i = 0, $cond115$i$i = 0, $cond13$i$i = 0, $cond15$i$i = 0, $cond2$i = 0, $cond315$i$i = 0, $cond383$i = 0, $exitcond$i$i = 0, $fd$i = 0, $fd$i$i = 0, $fd$i172 = 0, $fd103$i$i = 0, $fd123 = 0, $fd140$i$i = 0, $fd146$i = 0, $fd148$i$i = 0, $fd160$i$i = 0, $fd219$i = 0, $fd247$i$i = 0;
 var $fd303$i$i = 0, $fd312$i = 0, $fd339$i$i = 0, $fd344$i$i = 0, $fd359$i$i = 0, $fd371$i = 0, $fd408$i = 0, $fd416$i = 0, $fd431$i = 0, $fd54$i$i = 0, $fd57$i = 0, $fd68$i$i = 0, $fd69 = 0, $fd78$i$i = 0, $fd9 = 0, $fd92$i$i = 0, $head = 0, $head$i = 0, $head$i$i = 0, $head$i$i$i = 0;
 var $head$i159 = 0, $head$i18$i = 0, $head$i37$i = 0, $head$i46$i = 0, $head118$i$i = 0, $head168 = 0, $head173 = 0, $head177 = 0, $head179 = 0, $head179$i = 0, $head182$i = 0, $head187$i = 0, $head189$i = 0, $head195 = 0, $head198 = 0, $head208$i$i = 0, $head211$i$i = 0, $head23$i$i = 0, $head25 = 0, $head26$i$i = 0;
 var $head265$i = 0, $head268$i = 0, $head271$i = 0, $head274$i = 0, $head279$i = 0, $head281$i = 0, $head29$i = 0, $head29$i$i = 0, $head317$i$i = 0, $head32$i$i = 0, $head34$i$i = 0, $head386$i = 0, $head7$i$i = 0, $head7$i$i$i = 0, $head7$i48$i = 0, $head94 = 0, $head97 = 0, $head99$i = 0, $i$01$i$i = 0, $idx$0$i = 0;
 var $inc$i$i = 0, $index$i = 0, $index$i$i = 0, $index$i180 = 0, $index$i25$i = 0, $index288$i$i = 0, $index356$i = 0, $magic$i$i = 0, $nb$0 = 0, $neg = 0, $neg$i = 0, $neg$i$i = 0, $neg$i136 = 0, $neg$i181 = 0, $neg103$i = 0, $neg13 = 0, $neg132$i$i = 0, $neg48$i = 0, $neg73 = 0, $next$i = 0;
 var $next$i$i = 0, $next$i$i$i = 0, $next231$i = 0, $not$cmp$i = 0, $not$cmp107$i = 0, $not$cmp114$i = 0, $not$cmp141$i = 0, $not$cmp144$i$i = 0, $not$cmp205$i = 0, $not$cmp3$i = 0, $not$cmp493$i = 0, $oldfirst$0$i$i = 0, $or$cond$i = 0, $or$cond$i163 = 0, $or$cond1$i = 0, $or$cond1$i160 = 0, $or$cond2$i = 0, $or$cond3$i = 0, $or$cond4$i = 0, $or$cond5$i = 0;
 var $or$cond7$i = 0, $or$cond7$not$i = 0, $or$cond8$i = 0, $or$cond93$i = 0, $or$cond94$i = 0, $or$i = 0, $or$i$i = 0, $or$i$i$i = 0, $or$i164 = 0, $or$i45$i = 0, $or101$i$i = 0, $or110 = 0, $or167 = 0, $or172 = 0, $or176 = 0, $or178$i = 0, $or180 = 0, $or183$i = 0, $or186$i = 0, $or188$i = 0;
 var $or19$i$i = 0, $or194 = 0, $or197 = 0, $or204$i = 0, $or210$i$i = 0, $or22$i$i = 0, $or23 = 0, $or232$i$i = 0, $or26 = 0, $or264$i = 0, $or267$i = 0, $or270$i = 0, $or275$i = 0, $or278$i = 0, $or28$i$i = 0, $or280$i = 0, $or297$i = 0, $or300$i$i = 0, $or33$i$i = 0, $or368$i = 0;
 var $or40 = 0, $or44$i$i = 0, $or93 = 0, $or96 = 0, $parent$i = 0, $parent$i$i = 0, $parent$i170 = 0, $parent$i23$i = 0, $parent135$i = 0, $parent138$i$i = 0, $parent149$i = 0, $parent162$i$i = 0, $parent165$i$i = 0, $parent166$i = 0, $parent179$i$i = 0, $parent196$i$i = 0, $parent226$i = 0, $parent240$i = 0, $parent257$i = 0, $parent301$i$i = 0;
 var $parent337$i$i = 0, $parent361$i$i = 0, $parent369$i = 0, $parent406$i = 0, $parent433$i = 0, $qsize$0$i$i = 0, $retval$0 = 0, $rsize$0$i = 0, $rsize$0$lcssa$i = 0, $rsize$07$i = 0, $rsize$1$i = 0, $rsize$3$i = 0, $rsize$4$lcssa$i = 0, $rsize$48$i = 0, $rst$0$i = 0, $rst$1$i = 0, $sflags193$i = 0, $sflags235$i = 0, $shl = 0, $shl$i = 0;
 var $shl$i$i = 0, $shl$i150 = 0, $shl$i49$i = 0, $shl102 = 0, $shl105 = 0, $shl116$i$i = 0, $shl12 = 0, $shl127$i$i = 0, $shl131$i$i = 0, $shl15$i = 0, $shl18$i = 0, $shl192$i = 0, $shl195$i = 0, $shl198$i = 0, $shl22 = 0, $shl222$i$i = 0, $shl226$i$i = 0, $shl265$i$i = 0, $shl270$i$i = 0, $shl276$i$i = 0;
 var $shl279$i$i = 0, $shl288$i = 0, $shl291$i = 0, $shl294$i$i = 0, $shl31$i = 0, $shl316$i$i = 0, $shl326$i$i = 0, $shl333$i = 0, $shl338$i = 0, $shl344$i = 0, $shl347$i = 0, $shl35 = 0, $shl362$i = 0, $shl37 = 0, $shl384$i = 0, $shl39$i$i = 0, $shl395$i = 0, $shl48$i$i = 0, $shl52$i = 0, $shl60$i = 0;
 var $shl65 = 0, $shl70$i$i = 0, $shl72 = 0, $shl75$i$i = 0, $shl81$i$i = 0, $shl84$i$i = 0, $shl9$i = 0, $shl90 = 0, $shl95$i$i = 0, $shr = 0, $shr$i = 0, $shr$i$i = 0, $shr$i145 = 0, $shr$i21$i = 0, $shr101 = 0, $shr11$i = 0, $shr11$i153 = 0, $shr110$i$i = 0, $shr12$i = 0, $shr124$i$i = 0;
 var $shr15$i = 0, $shr16$i = 0, $shr16$i154 = 0, $shr19$i = 0, $shr194$i = 0, $shr20$i = 0, $shr214$i$i = 0, $shr253$i$i = 0, $shr263$i$i = 0, $shr267$i$i = 0, $shr27$i = 0, $shr272$i$i = 0, $shr277$i$i = 0, $shr281$i$i = 0, $shr283$i = 0, $shr3 = 0, $shr310$i$i = 0, $shr318$i = 0, $shr323$i$i = 0, $shr330$i = 0;
 var $shr335$i = 0, $shr340$i = 0, $shr345$i = 0, $shr349$i = 0, $shr378$i = 0, $shr392$i = 0, $shr4$i = 0, $shr42$i = 0, $shr45 = 0, $shr47 = 0, $shr48 = 0, $shr5$i = 0, $shr5$i148 = 0, $shr51 = 0, $shr52 = 0, $shr55 = 0, $shr56 = 0, $shr58$i$i = 0, $shr59 = 0, $shr60 = 0;
 var $shr63 = 0, $shr68$i$i = 0, $shr7$i = 0, $shr7$i151 = 0, $shr72$i = 0, $shr72$i$i = 0, $shr75$i = 0, $shr76$i = 0, $shr77$i$i = 0, $shr79$i = 0, $shr8$i = 0, $shr80$i = 0, $shr82$i$i = 0, $shr83$i = 0, $shr84$i = 0, $shr86$i$i = 0, $shr87$i = 0, $shr88$i = 0, $shr91$i = 0, $size$i$i = 0;
 var $size$i$i$i = 0, $size188$i = 0, $size245$i = 0, $sizebits$0$i = 0, $sizebits$0$shl52$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0, $sp$0104$i = 0, $sp$1103$i = 0, $ssize$2$ph$i = 0, $sub = 0, $sub$i = 0, $sub$i135 = 0, $sub$i144 = 0, $sub$ptr$lhs$cast$i = 0, $sub$ptr$lhs$cast$i$i = 0, $sub$ptr$lhs$cast$i15$i = 0, $sub$ptr$rhs$cast$i = 0, $sub$ptr$rhs$cast$i$i = 0, $sub$ptr$rhs$cast$i16$i = 0;
 var $sub$ptr$sub$i = 0, $sub$ptr$sub$i$i = 0, $sub$ptr$sub$i17$i = 0, $sub$ptr$sub$tsize$4$i = 0, $sub10$i = 0, $sub101$i = 0, $sub101$rsize$4$i = 0, $sub112$i = 0, $sub113$i$i = 0, $sub118$i = 0, $sub14$i = 0, $sub16$i$i = 0, $sub160 = 0, $sub172$i = 0, $sub18$i$i = 0, $sub190 = 0, $sub2$i = 0, $sub22$i = 0, $sub260$i = 0, $sub262$i$i = 0;
 var $sub266$i$i = 0, $sub271$i$i = 0, $sub275$i$i = 0, $sub30$i = 0, $sub31$i = 0, $sub31$rsize$0$i = 0, $sub313$i$i = 0, $sub329$i = 0, $sub33$i = 0, $sub334$i = 0, $sub339$i = 0, $sub343$i = 0, $sub381$i = 0, $sub4$i = 0, $sub41$i = 0, $sub42 = 0, $sub44 = 0, $sub5$i$i = 0, $sub5$i$i$i = 0, $sub5$i44$i = 0;
 var $sub50$i = 0, $sub6$i = 0, $sub63$i = 0, $sub67$i = 0, $sub67$i$i = 0, $sub70$i = 0, $sub71$i$i = 0, $sub76$i$i = 0, $sub80$i$i = 0, $sub91 = 0, $sub99$i = 0, $t$0$i = 0, $t$2$i = 0, $t$4$ph$i = 0, $t$4$v$4$i = 0, $t$47$i = 0, $tbase$792$i = 0, $tobool$i$i = 0, $tobool107 = 0, $tobool195$i = 0;
 var $tobool200$i = 0, $tobool228$i$i = 0, $tobool237$i = 0, $tobool293$i = 0, $tobool296$i$i = 0, $tobool30$i = 0, $tobool364$i = 0, $tobool97$i$i = 0, $tsize$2617179$i = 0, $tsize$4$i = 0, $tsize$791$i = 0, $v$0$i = 0, $v$0$lcssa$i = 0, $v$08$i = 0, $v$1$i = 0, $v$3$i = 0, $v$4$lcssa$i = 0, $v$4$ph$i = 0, $v$49$i = 0, $xor$i$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $magic$i$i = sp;
 $cmp = ($bytes>>>0)<(245);
 do {
  if ($cmp) {
   $cmp1 = ($bytes>>>0)<(11);
   $add2 = (($bytes) + 11)|0;
   $and = $add2 & -8;
   $cond = $cmp1 ? 16 : $and;
   $shr = $cond >>> 3;
   $0 = HEAP32[23642]|0;
   $shr3 = $0 >>> $shr;
   $and4 = $shr3 & 3;
   $cmp5 = ($and4|0)==(0);
   if (!($cmp5)) {
    $neg = $shr3 & 1;
    $and7 = $neg ^ 1;
    $add8 = (($and7) + ($shr))|0;
    $shl = $add8 << 1;
    $arrayidx = (94608 + ($shl<<2)|0);
    $1 = ((($arrayidx)) + 8|0);
    $2 = HEAP32[$1>>2]|0;
    $fd9 = ((($2)) + 8|0);
    $3 = HEAP32[$fd9>>2]|0;
    $cmp10 = ($arrayidx|0)==($3|0);
    if ($cmp10) {
     $shl12 = 1 << $add8;
     $neg13 = $shl12 ^ -1;
     $and14 = $0 & $neg13;
     HEAP32[23642] = $and14;
    } else {
     $bk18 = ((($3)) + 12|0);
     HEAP32[$bk18>>2] = $arrayidx;
     HEAP32[$1>>2] = $3;
    }
    $shl22 = $add8 << 3;
    $or23 = $shl22 | 3;
    $head = ((($2)) + 4|0);
    HEAP32[$head>>2] = $or23;
    $add$ptr = (($2) + ($shl22)|0);
    $head25 = ((($add$ptr)) + 4|0);
    $4 = HEAP32[$head25>>2]|0;
    $or26 = $4 | 1;
    HEAP32[$head25>>2] = $or26;
    $retval$0 = $fd9;
    STACKTOP = sp;return ($retval$0|0);
   }
   $5 = HEAP32[(94576)>>2]|0;
   $cmp29 = ($cond>>>0)>($5>>>0);
   if ($cmp29) {
    $cmp31 = ($shr3|0)==(0);
    if (!($cmp31)) {
     $shl35 = $shr3 << $shr;
     $shl37 = 2 << $shr;
     $sub = (0 - ($shl37))|0;
     $or40 = $shl37 | $sub;
     $and41 = $shl35 & $or40;
     $sub42 = (0 - ($and41))|0;
     $and43 = $and41 & $sub42;
     $sub44 = (($and43) + -1)|0;
     $shr45 = $sub44 >>> 12;
     $and46 = $shr45 & 16;
     $shr47 = $sub44 >>> $and46;
     $shr48 = $shr47 >>> 5;
     $and49 = $shr48 & 8;
     $add50 = $and49 | $and46;
     $shr51 = $shr47 >>> $and49;
     $shr52 = $shr51 >>> 2;
     $and53 = $shr52 & 4;
     $add54 = $add50 | $and53;
     $shr55 = $shr51 >>> $and53;
     $shr56 = $shr55 >>> 1;
     $and57 = $shr56 & 2;
     $add58 = $add54 | $and57;
     $shr59 = $shr55 >>> $and57;
     $shr60 = $shr59 >>> 1;
     $and61 = $shr60 & 1;
     $add62 = $add58 | $and61;
     $shr63 = $shr59 >>> $and61;
     $add64 = (($add62) + ($shr63))|0;
     $shl65 = $add64 << 1;
     $arrayidx66 = (94608 + ($shl65<<2)|0);
     $6 = ((($arrayidx66)) + 8|0);
     $7 = HEAP32[$6>>2]|0;
     $fd69 = ((($7)) + 8|0);
     $8 = HEAP32[$fd69>>2]|0;
     $cmp70 = ($arrayidx66|0)==($8|0);
     if ($cmp70) {
      $shl72 = 1 << $add64;
      $neg73 = $shl72 ^ -1;
      $and74 = $0 & $neg73;
      HEAP32[23642] = $and74;
      $10 = $and74;
     } else {
      $bk85 = ((($8)) + 12|0);
      HEAP32[$bk85>>2] = $arrayidx66;
      HEAP32[$6>>2] = $8;
      $10 = $0;
     }
     $shl90 = $add64 << 3;
     $sub91 = (($shl90) - ($cond))|0;
     $or93 = $cond | 3;
     $head94 = ((($7)) + 4|0);
     HEAP32[$head94>>2] = $or93;
     $add$ptr95 = (($7) + ($cond)|0);
     $or96 = $sub91 | 1;
     $head97 = ((($add$ptr95)) + 4|0);
     HEAP32[$head97>>2] = $or96;
     $add$ptr98 = (($add$ptr95) + ($sub91)|0);
     HEAP32[$add$ptr98>>2] = $sub91;
     $cmp99 = ($5|0)==(0);
     if (!($cmp99)) {
      $9 = HEAP32[(94588)>>2]|0;
      $shr101 = $5 >>> 3;
      $shl102 = $shr101 << 1;
      $arrayidx103 = (94608 + ($shl102<<2)|0);
      $shl105 = 1 << $shr101;
      $and106 = $10 & $shl105;
      $tobool107 = ($and106|0)==(0);
      if ($tobool107) {
       $or110 = $10 | $shl105;
       HEAP32[23642] = $or110;
       $$pre = ((($arrayidx103)) + 8|0);
       $$pre$phiZ2D = $$pre;$F104$0 = $arrayidx103;
      } else {
       $11 = ((($arrayidx103)) + 8|0);
       $12 = HEAP32[$11>>2]|0;
       $$pre$phiZ2D = $11;$F104$0 = $12;
      }
      HEAP32[$$pre$phiZ2D>>2] = $9;
      $bk122 = ((($F104$0)) + 12|0);
      HEAP32[$bk122>>2] = $9;
      $fd123 = ((($9)) + 8|0);
      HEAP32[$fd123>>2] = $F104$0;
      $bk124 = ((($9)) + 12|0);
      HEAP32[$bk124>>2] = $arrayidx103;
     }
     HEAP32[(94576)>>2] = $sub91;
     HEAP32[(94588)>>2] = $add$ptr95;
     $retval$0 = $fd69;
     STACKTOP = sp;return ($retval$0|0);
    }
    $13 = HEAP32[(94572)>>2]|0;
    $cmp128 = ($13|0)==(0);
    if ($cmp128) {
     $nb$0 = $cond;
    } else {
     $sub$i = (0 - ($13))|0;
     $and$i = $13 & $sub$i;
     $sub2$i = (($and$i) + -1)|0;
     $shr$i = $sub2$i >>> 12;
     $and3$i = $shr$i & 16;
     $shr4$i = $sub2$i >>> $and3$i;
     $shr5$i = $shr4$i >>> 5;
     $and6$i = $shr5$i & 8;
     $add$i = $and6$i | $and3$i;
     $shr7$i = $shr4$i >>> $and6$i;
     $shr8$i = $shr7$i >>> 2;
     $and9$i = $shr8$i & 4;
     $add10$i = $add$i | $and9$i;
     $shr11$i = $shr7$i >>> $and9$i;
     $shr12$i = $shr11$i >>> 1;
     $and13$i = $shr12$i & 2;
     $add14$i = $add10$i | $and13$i;
     $shr15$i = $shr11$i >>> $and13$i;
     $shr16$i = $shr15$i >>> 1;
     $and17$i = $shr16$i & 1;
     $add18$i = $add14$i | $and17$i;
     $shr19$i = $shr15$i >>> $and17$i;
     $add20$i = (($add18$i) + ($shr19$i))|0;
     $arrayidx$i = (94872 + ($add20$i<<2)|0);
     $14 = HEAP32[$arrayidx$i>>2]|0;
     $head$i = ((($14)) + 4|0);
     $15 = HEAP32[$head$i>>2]|0;
     $and21$i = $15 & -8;
     $sub22$i = (($and21$i) - ($cond))|0;
     $arrayidx232$i = ((($14)) + 16|0);
     $16 = HEAP32[$arrayidx232$i>>2]|0;
     $not$cmp3$i = ($16|0)==(0|0);
     $$sink4$i = $not$cmp3$i&1;
     $arrayidx275$i = (((($14)) + 16|0) + ($$sink4$i<<2)|0);
     $17 = HEAP32[$arrayidx275$i>>2]|0;
     $cmp286$i = ($17|0)==(0|0);
     if ($cmp286$i) {
      $rsize$0$lcssa$i = $sub22$i;$v$0$lcssa$i = $14;
     } else {
      $18 = $17;$rsize$07$i = $sub22$i;$v$08$i = $14;
      while(1) {
       $head29$i = ((($18)) + 4|0);
       $19 = HEAP32[$head29$i>>2]|0;
       $and30$i = $19 & -8;
       $sub31$i = (($and30$i) - ($cond))|0;
       $cmp32$i = ($sub31$i>>>0)<($rsize$07$i>>>0);
       $sub31$rsize$0$i = $cmp32$i ? $sub31$i : $rsize$07$i;
       $$v$0$i = $cmp32$i ? $18 : $v$08$i;
       $arrayidx23$i = ((($18)) + 16|0);
       $20 = HEAP32[$arrayidx23$i>>2]|0;
       $not$cmp$i = ($20|0)==(0|0);
       $$sink$i = $not$cmp$i&1;
       $arrayidx27$i = (((($18)) + 16|0) + ($$sink$i<<2)|0);
       $21 = HEAP32[$arrayidx27$i>>2]|0;
       $cmp28$i = ($21|0)==(0|0);
       if ($cmp28$i) {
        $rsize$0$lcssa$i = $sub31$rsize$0$i;$v$0$lcssa$i = $$v$0$i;
        break;
       } else {
        $18 = $21;$rsize$07$i = $sub31$rsize$0$i;$v$08$i = $$v$0$i;
       }
      }
     }
     $add$ptr$i = (($v$0$lcssa$i) + ($cond)|0);
     $cmp35$i = ($v$0$lcssa$i>>>0)<($add$ptr$i>>>0);
     if ($cmp35$i) {
      $parent$i = ((($v$0$lcssa$i)) + 24|0);
      $22 = HEAP32[$parent$i>>2]|0;
      $bk$i = ((($v$0$lcssa$i)) + 12|0);
      $23 = HEAP32[$bk$i>>2]|0;
      $cmp40$i = ($23|0)==($v$0$lcssa$i|0);
      do {
       if ($cmp40$i) {
        $arrayidx61$i = ((($v$0$lcssa$i)) + 20|0);
        $25 = HEAP32[$arrayidx61$i>>2]|0;
        $cmp62$i = ($25|0)==(0|0);
        if ($cmp62$i) {
         $arrayidx65$i = ((($v$0$lcssa$i)) + 16|0);
         $26 = HEAP32[$arrayidx65$i>>2]|0;
         $cmp66$i = ($26|0)==(0|0);
         if ($cmp66$i) {
          $R$3$i = 0;
          break;
         } else {
          $R$1$i = $26;$RP$1$i = $arrayidx65$i;
         }
        } else {
         $R$1$i = $25;$RP$1$i = $arrayidx61$i;
        }
        while(1) {
         $arrayidx71$i = ((($R$1$i)) + 20|0);
         $27 = HEAP32[$arrayidx71$i>>2]|0;
         $cmp72$i = ($27|0)==(0|0);
         if (!($cmp72$i)) {
          $R$1$i = $27;$RP$1$i = $arrayidx71$i;
          continue;
         }
         $arrayidx75$i = ((($R$1$i)) + 16|0);
         $28 = HEAP32[$arrayidx75$i>>2]|0;
         $cmp76$i = ($28|0)==(0|0);
         if ($cmp76$i) {
          break;
         } else {
          $R$1$i = $28;$RP$1$i = $arrayidx75$i;
         }
        }
        HEAP32[$RP$1$i>>2] = 0;
        $R$3$i = $R$1$i;
       } else {
        $fd$i = ((($v$0$lcssa$i)) + 8|0);
        $24 = HEAP32[$fd$i>>2]|0;
        $bk56$i = ((($24)) + 12|0);
        HEAP32[$bk56$i>>2] = $23;
        $fd57$i = ((($23)) + 8|0);
        HEAP32[$fd57$i>>2] = $24;
        $R$3$i = $23;
       }
      } while(0);
      $cmp90$i = ($22|0)==(0|0);
      do {
       if (!($cmp90$i)) {
        $index$i = ((($v$0$lcssa$i)) + 28|0);
        $29 = HEAP32[$index$i>>2]|0;
        $arrayidx94$i = (94872 + ($29<<2)|0);
        $30 = HEAP32[$arrayidx94$i>>2]|0;
        $cmp95$i = ($v$0$lcssa$i|0)==($30|0);
        if ($cmp95$i) {
         HEAP32[$arrayidx94$i>>2] = $R$3$i;
         $cond$i = ($R$3$i|0)==(0|0);
         if ($cond$i) {
          $shl$i = 1 << $29;
          $neg$i = $shl$i ^ -1;
          $and103$i = $13 & $neg$i;
          HEAP32[(94572)>>2] = $and103$i;
          break;
         }
        } else {
         $arrayidx113$i = ((($22)) + 16|0);
         $31 = HEAP32[$arrayidx113$i>>2]|0;
         $not$cmp114$i = ($31|0)!=($v$0$lcssa$i|0);
         $$sink2$i = $not$cmp114$i&1;
         $arrayidx121$i = (((($22)) + 16|0) + ($$sink2$i<<2)|0);
         HEAP32[$arrayidx121$i>>2] = $R$3$i;
         $cmp126$i = ($R$3$i|0)==(0|0);
         if ($cmp126$i) {
          break;
         }
        }
        $parent135$i = ((($R$3$i)) + 24|0);
        HEAP32[$parent135$i>>2] = $22;
        $arrayidx137$i = ((($v$0$lcssa$i)) + 16|0);
        $32 = HEAP32[$arrayidx137$i>>2]|0;
        $cmp138$i = ($32|0)==(0|0);
        if (!($cmp138$i)) {
         $arrayidx148$i = ((($R$3$i)) + 16|0);
         HEAP32[$arrayidx148$i>>2] = $32;
         $parent149$i = ((($32)) + 24|0);
         HEAP32[$parent149$i>>2] = $R$3$i;
        }
        $arrayidx154$i = ((($v$0$lcssa$i)) + 20|0);
        $33 = HEAP32[$arrayidx154$i>>2]|0;
        $cmp155$i = ($33|0)==(0|0);
        if (!($cmp155$i)) {
         $arrayidx165$i = ((($R$3$i)) + 20|0);
         HEAP32[$arrayidx165$i>>2] = $33;
         $parent166$i = ((($33)) + 24|0);
         HEAP32[$parent166$i>>2] = $R$3$i;
        }
       }
      } while(0);
      $cmp174$i = ($rsize$0$lcssa$i>>>0)<(16);
      if ($cmp174$i) {
       $add177$i = (($rsize$0$lcssa$i) + ($cond))|0;
       $or178$i = $add177$i | 3;
       $head179$i = ((($v$0$lcssa$i)) + 4|0);
       HEAP32[$head179$i>>2] = $or178$i;
       $add$ptr181$i = (($v$0$lcssa$i) + ($add177$i)|0);
       $head182$i = ((($add$ptr181$i)) + 4|0);
       $34 = HEAP32[$head182$i>>2]|0;
       $or183$i = $34 | 1;
       HEAP32[$head182$i>>2] = $or183$i;
      } else {
       $or186$i = $cond | 3;
       $head187$i = ((($v$0$lcssa$i)) + 4|0);
       HEAP32[$head187$i>>2] = $or186$i;
       $or188$i = $rsize$0$lcssa$i | 1;
       $head189$i = ((($add$ptr$i)) + 4|0);
       HEAP32[$head189$i>>2] = $or188$i;
       $add$ptr190$i = (($add$ptr$i) + ($rsize$0$lcssa$i)|0);
       HEAP32[$add$ptr190$i>>2] = $rsize$0$lcssa$i;
       $cmp191$i = ($5|0)==(0);
       if (!($cmp191$i)) {
        $35 = HEAP32[(94588)>>2]|0;
        $shr194$i = $5 >>> 3;
        $shl195$i = $shr194$i << 1;
        $arrayidx196$i = (94608 + ($shl195$i<<2)|0);
        $shl198$i = 1 << $shr194$i;
        $and199$i = $0 & $shl198$i;
        $tobool200$i = ($and199$i|0)==(0);
        if ($tobool200$i) {
         $or204$i = $0 | $shl198$i;
         HEAP32[23642] = $or204$i;
         $$pre$i = ((($arrayidx196$i)) + 8|0);
         $$pre$phi$iZ2D = $$pre$i;$F197$0$i = $arrayidx196$i;
        } else {
         $36 = ((($arrayidx196$i)) + 8|0);
         $37 = HEAP32[$36>>2]|0;
         $$pre$phi$iZ2D = $36;$F197$0$i = $37;
        }
        HEAP32[$$pre$phi$iZ2D>>2] = $35;
        $bk218$i = ((($F197$0$i)) + 12|0);
        HEAP32[$bk218$i>>2] = $35;
        $fd219$i = ((($35)) + 8|0);
        HEAP32[$fd219$i>>2] = $F197$0$i;
        $bk220$i = ((($35)) + 12|0);
        HEAP32[$bk220$i>>2] = $arrayidx196$i;
       }
       HEAP32[(94576)>>2] = $rsize$0$lcssa$i;
       HEAP32[(94588)>>2] = $add$ptr$i;
      }
      $add$ptr225$i = ((($v$0$lcssa$i)) + 8|0);
      $retval$0 = $add$ptr225$i;
      STACKTOP = sp;return ($retval$0|0);
     } else {
      $nb$0 = $cond;
     }
    }
   } else {
    $nb$0 = $cond;
   }
  } else {
   $cmp139 = ($bytes>>>0)>(4294967231);
   if ($cmp139) {
    $nb$0 = -1;
   } else {
    $add144 = (($bytes) + 11)|0;
    $and145 = $add144 & -8;
    $38 = HEAP32[(94572)>>2]|0;
    $cmp146 = ($38|0)==(0);
    if ($cmp146) {
     $nb$0 = $and145;
    } else {
     $sub$i144 = (0 - ($and145))|0;
     $shr$i145 = $add144 >>> 8;
     $cmp$i146 = ($shr$i145|0)==(0);
     if ($cmp$i146) {
      $idx$0$i = 0;
     } else {
      $cmp1$i = ($and145>>>0)>(16777215);
      if ($cmp1$i) {
       $idx$0$i = 31;
      } else {
       $sub4$i = (($shr$i145) + 1048320)|0;
       $shr5$i148 = $sub4$i >>> 16;
       $and$i149 = $shr5$i148 & 8;
       $shl$i150 = $shr$i145 << $and$i149;
       $sub6$i = (($shl$i150) + 520192)|0;
       $shr7$i151 = $sub6$i >>> 16;
       $and8$i = $shr7$i151 & 4;
       $add$i152 = $and8$i | $and$i149;
       $shl9$i = $shl$i150 << $and8$i;
       $sub10$i = (($shl9$i) + 245760)|0;
       $shr11$i153 = $sub10$i >>> 16;
       $and12$i = $shr11$i153 & 2;
       $add13$i = $add$i152 | $and12$i;
       $sub14$i = (14 - ($add13$i))|0;
       $shl15$i = $shl9$i << $and12$i;
       $shr16$i154 = $shl15$i >>> 15;
       $add17$i155 = (($sub14$i) + ($shr16$i154))|0;
       $shl18$i = $add17$i155 << 1;
       $add19$i = (($add17$i155) + 7)|0;
       $shr20$i = $and145 >>> $add19$i;
       $and21$i156 = $shr20$i & 1;
       $add22$i = $and21$i156 | $shl18$i;
       $idx$0$i = $add22$i;
      }
     }
     $arrayidx$i157 = (94872 + ($idx$0$i<<2)|0);
     $39 = HEAP32[$arrayidx$i157>>2]|0;
     $cmp24$i = ($39|0)==(0|0);
     L74: do {
      if ($cmp24$i) {
       $rsize$3$i = $sub$i144;$t$2$i = 0;$v$3$i = 0;
       label = 57;
      } else {
       $cmp26$i = ($idx$0$i|0)==(31);
       $shr27$i = $idx$0$i >>> 1;
       $sub30$i = (25 - ($shr27$i))|0;
       $cond$i158 = $cmp26$i ? 0 : $sub30$i;
       $shl31$i = $and145 << $cond$i158;
       $rsize$0$i = $sub$i144;$rst$0$i = 0;$sizebits$0$i = $shl31$i;$t$0$i = $39;$v$0$i = 0;
       while(1) {
        $head$i159 = ((($t$0$i)) + 4|0);
        $40 = HEAP32[$head$i159>>2]|0;
        $and32$i = $40 & -8;
        $sub33$i = (($and32$i) - ($and145))|0;
        $cmp34$i = ($sub33$i>>>0)<($rsize$0$i>>>0);
        if ($cmp34$i) {
         $cmp36$i = ($sub33$i|0)==(0);
         if ($cmp36$i) {
          $rsize$48$i = 0;$t$47$i = $t$0$i;$v$49$i = $t$0$i;
          label = 61;
          break L74;
         } else {
          $rsize$1$i = $sub33$i;$v$1$i = $t$0$i;
         }
        } else {
         $rsize$1$i = $rsize$0$i;$v$1$i = $v$0$i;
        }
        $arrayidx40$i = ((($t$0$i)) + 20|0);
        $41 = HEAP32[$arrayidx40$i>>2]|0;
        $shr42$i = $sizebits$0$i >>> 31;
        $arrayidx44$i = (((($t$0$i)) + 16|0) + ($shr42$i<<2)|0);
        $42 = HEAP32[$arrayidx44$i>>2]|0;
        $cmp45$i = ($41|0)==(0|0);
        $cmp46$i = ($41|0)==($42|0);
        $or$cond1$i160 = $cmp45$i | $cmp46$i;
        $rst$1$i = $or$cond1$i160 ? $rst$0$i : $41;
        $cmp49$i = ($42|0)==(0|0);
        $not$cmp493$i = $cmp49$i ^ 1;
        $shl52$i = $not$cmp493$i&1;
        $sizebits$0$shl52$i = $sizebits$0$i << $shl52$i;
        if ($cmp49$i) {
         $rsize$3$i = $rsize$1$i;$t$2$i = $rst$1$i;$v$3$i = $v$1$i;
         label = 57;
         break;
        } else {
         $rsize$0$i = $rsize$1$i;$rst$0$i = $rst$1$i;$sizebits$0$i = $sizebits$0$shl52$i;$t$0$i = $42;$v$0$i = $v$1$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 57) {
      $cmp55$i161 = ($t$2$i|0)==(0|0);
      $cmp57$i162 = ($v$3$i|0)==(0|0);
      $or$cond$i163 = $cmp55$i161 & $cmp57$i162;
      if ($or$cond$i163) {
       $shl60$i = 2 << $idx$0$i;
       $sub63$i = (0 - ($shl60$i))|0;
       $or$i164 = $shl60$i | $sub63$i;
       $and64$i = $38 & $or$i164;
       $cmp65$i = ($and64$i|0)==(0);
       if ($cmp65$i) {
        $nb$0 = $and145;
        break;
       }
       $sub67$i = (0 - ($and64$i))|0;
       $and68$i = $and64$i & $sub67$i;
       $sub70$i = (($and68$i) + -1)|0;
       $shr72$i = $sub70$i >>> 12;
       $and73$i = $shr72$i & 16;
       $shr75$i = $sub70$i >>> $and73$i;
       $shr76$i = $shr75$i >>> 5;
       $and77$i = $shr76$i & 8;
       $add78$i = $and77$i | $and73$i;
       $shr79$i = $shr75$i >>> $and77$i;
       $shr80$i = $shr79$i >>> 2;
       $and81$i = $shr80$i & 4;
       $add82$i = $add78$i | $and81$i;
       $shr83$i = $shr79$i >>> $and81$i;
       $shr84$i = $shr83$i >>> 1;
       $and85$i = $shr84$i & 2;
       $add86$i = $add82$i | $and85$i;
       $shr87$i = $shr83$i >>> $and85$i;
       $shr88$i = $shr87$i >>> 1;
       $and89$i = $shr88$i & 1;
       $add90$i = $add86$i | $and89$i;
       $shr91$i = $shr87$i >>> $and89$i;
       $add92$i = (($add90$i) + ($shr91$i))|0;
       $arrayidx94$i165 = (94872 + ($add92$i<<2)|0);
       $43 = HEAP32[$arrayidx94$i165>>2]|0;
       $t$4$ph$i = $43;$v$4$ph$i = 0;
      } else {
       $t$4$ph$i = $t$2$i;$v$4$ph$i = $v$3$i;
      }
      $cmp976$i = ($t$4$ph$i|0)==(0|0);
      if ($cmp976$i) {
       $rsize$4$lcssa$i = $rsize$3$i;$v$4$lcssa$i = $v$4$ph$i;
      } else {
       $rsize$48$i = $rsize$3$i;$t$47$i = $t$4$ph$i;$v$49$i = $v$4$ph$i;
       label = 61;
      }
     }
     if ((label|0) == 61) {
      while(1) {
       label = 0;
       $head99$i = ((($t$47$i)) + 4|0);
       $44 = HEAP32[$head99$i>>2]|0;
       $and100$i = $44 & -8;
       $sub101$i = (($and100$i) - ($and145))|0;
       $cmp102$i = ($sub101$i>>>0)<($rsize$48$i>>>0);
       $sub101$rsize$4$i = $cmp102$i ? $sub101$i : $rsize$48$i;
       $t$4$v$4$i = $cmp102$i ? $t$47$i : $v$49$i;
       $arrayidx106$i = ((($t$47$i)) + 16|0);
       $45 = HEAP32[$arrayidx106$i>>2]|0;
       $not$cmp107$i = ($45|0)==(0|0);
       $$sink$i166 = $not$cmp107$i&1;
       $arrayidx113$i167 = (((($t$47$i)) + 16|0) + ($$sink$i166<<2)|0);
       $46 = HEAP32[$arrayidx113$i167>>2]|0;
       $cmp97$i = ($46|0)==(0|0);
       if ($cmp97$i) {
        $rsize$4$lcssa$i = $sub101$rsize$4$i;$v$4$lcssa$i = $t$4$v$4$i;
        break;
       } else {
        $rsize$48$i = $sub101$rsize$4$i;$t$47$i = $46;$v$49$i = $t$4$v$4$i;
        label = 61;
       }
      }
     }
     $cmp116$i = ($v$4$lcssa$i|0)==(0|0);
     if ($cmp116$i) {
      $nb$0 = $and145;
     } else {
      $47 = HEAP32[(94576)>>2]|0;
      $sub118$i = (($47) - ($and145))|0;
      $cmp119$i = ($rsize$4$lcssa$i>>>0)<($sub118$i>>>0);
      if ($cmp119$i) {
       $add$ptr$i169 = (($v$4$lcssa$i) + ($and145)|0);
       $cmp123$i = ($v$4$lcssa$i>>>0)<($add$ptr$i169>>>0);
       if (!($cmp123$i)) {
        $retval$0 = 0;
        STACKTOP = sp;return ($retval$0|0);
       }
       $parent$i170 = ((($v$4$lcssa$i)) + 24|0);
       $48 = HEAP32[$parent$i170>>2]|0;
       $bk$i171 = ((($v$4$lcssa$i)) + 12|0);
       $49 = HEAP32[$bk$i171>>2]|0;
       $cmp128$i = ($49|0)==($v$4$lcssa$i|0);
       do {
        if ($cmp128$i) {
         $arrayidx151$i = ((($v$4$lcssa$i)) + 20|0);
         $51 = HEAP32[$arrayidx151$i>>2]|0;
         $cmp152$i = ($51|0)==(0|0);
         if ($cmp152$i) {
          $arrayidx155$i = ((($v$4$lcssa$i)) + 16|0);
          $52 = HEAP32[$arrayidx155$i>>2]|0;
          $cmp156$i = ($52|0)==(0|0);
          if ($cmp156$i) {
           $R$3$i179 = 0;
           break;
          } else {
           $R$1$i175 = $52;$RP$1$i174 = $arrayidx155$i;
          }
         } else {
          $R$1$i175 = $51;$RP$1$i174 = $arrayidx151$i;
         }
         while(1) {
          $arrayidx161$i = ((($R$1$i175)) + 20|0);
          $53 = HEAP32[$arrayidx161$i>>2]|0;
          $cmp162$i176 = ($53|0)==(0|0);
          if (!($cmp162$i176)) {
           $R$1$i175 = $53;$RP$1$i174 = $arrayidx161$i;
           continue;
          }
          $arrayidx165$i177 = ((($R$1$i175)) + 16|0);
          $54 = HEAP32[$arrayidx165$i177>>2]|0;
          $cmp166$i = ($54|0)==(0|0);
          if ($cmp166$i) {
           break;
          } else {
           $R$1$i175 = $54;$RP$1$i174 = $arrayidx165$i177;
          }
         }
         HEAP32[$RP$1$i174>>2] = 0;
         $R$3$i179 = $R$1$i175;
        } else {
         $fd$i172 = ((($v$4$lcssa$i)) + 8|0);
         $50 = HEAP32[$fd$i172>>2]|0;
         $bk145$i = ((($50)) + 12|0);
         HEAP32[$bk145$i>>2] = $49;
         $fd146$i = ((($49)) + 8|0);
         HEAP32[$fd146$i>>2] = $50;
         $R$3$i179 = $49;
        }
       } while(0);
       $cmp180$i = ($48|0)==(0|0);
       do {
        if ($cmp180$i) {
         $64 = $38;
        } else {
         $index$i180 = ((($v$4$lcssa$i)) + 28|0);
         $55 = HEAP32[$index$i180>>2]|0;
         $arrayidx184$i = (94872 + ($55<<2)|0);
         $56 = HEAP32[$arrayidx184$i>>2]|0;
         $cmp185$i = ($v$4$lcssa$i|0)==($56|0);
         if ($cmp185$i) {
          HEAP32[$arrayidx184$i>>2] = $R$3$i179;
          $cond2$i = ($R$3$i179|0)==(0|0);
          if ($cond2$i) {
           $shl192$i = 1 << $55;
           $neg$i181 = $shl192$i ^ -1;
           $and194$i182 = $38 & $neg$i181;
           HEAP32[(94572)>>2] = $and194$i182;
           $64 = $and194$i182;
           break;
          }
         } else {
          $arrayidx204$i = ((($48)) + 16|0);
          $57 = HEAP32[$arrayidx204$i>>2]|0;
          $not$cmp205$i = ($57|0)!=($v$4$lcssa$i|0);
          $$sink2$i183 = $not$cmp205$i&1;
          $arrayidx212$i = (((($48)) + 16|0) + ($$sink2$i183<<2)|0);
          HEAP32[$arrayidx212$i>>2] = $R$3$i179;
          $cmp217$i = ($R$3$i179|0)==(0|0);
          if ($cmp217$i) {
           $64 = $38;
           break;
          }
         }
         $parent226$i = ((($R$3$i179)) + 24|0);
         HEAP32[$parent226$i>>2] = $48;
         $arrayidx228$i = ((($v$4$lcssa$i)) + 16|0);
         $58 = HEAP32[$arrayidx228$i>>2]|0;
         $cmp229$i = ($58|0)==(0|0);
         if (!($cmp229$i)) {
          $arrayidx239$i = ((($R$3$i179)) + 16|0);
          HEAP32[$arrayidx239$i>>2] = $58;
          $parent240$i = ((($58)) + 24|0);
          HEAP32[$parent240$i>>2] = $R$3$i179;
         }
         $arrayidx245$i = ((($v$4$lcssa$i)) + 20|0);
         $59 = HEAP32[$arrayidx245$i>>2]|0;
         $cmp246$i = ($59|0)==(0|0);
         if ($cmp246$i) {
          $64 = $38;
         } else {
          $arrayidx256$i = ((($R$3$i179)) + 20|0);
          HEAP32[$arrayidx256$i>>2] = $59;
          $parent257$i = ((($59)) + 24|0);
          HEAP32[$parent257$i>>2] = $R$3$i179;
          $64 = $38;
         }
        }
       } while(0);
       $cmp265$i = ($rsize$4$lcssa$i>>>0)<(16);
       do {
        if ($cmp265$i) {
         $add268$i = (($rsize$4$lcssa$i) + ($and145))|0;
         $or270$i = $add268$i | 3;
         $head271$i = ((($v$4$lcssa$i)) + 4|0);
         HEAP32[$head271$i>>2] = $or270$i;
         $add$ptr273$i = (($v$4$lcssa$i) + ($add268$i)|0);
         $head274$i = ((($add$ptr273$i)) + 4|0);
         $60 = HEAP32[$head274$i>>2]|0;
         $or275$i = $60 | 1;
         HEAP32[$head274$i>>2] = $or275$i;
        } else {
         $or278$i = $and145 | 3;
         $head279$i = ((($v$4$lcssa$i)) + 4|0);
         HEAP32[$head279$i>>2] = $or278$i;
         $or280$i = $rsize$4$lcssa$i | 1;
         $head281$i = ((($add$ptr$i169)) + 4|0);
         HEAP32[$head281$i>>2] = $or280$i;
         $add$ptr282$i = (($add$ptr$i169) + ($rsize$4$lcssa$i)|0);
         HEAP32[$add$ptr282$i>>2] = $rsize$4$lcssa$i;
         $shr283$i = $rsize$4$lcssa$i >>> 3;
         $cmp284$i = ($rsize$4$lcssa$i>>>0)<(256);
         if ($cmp284$i) {
          $shl288$i = $shr283$i << 1;
          $arrayidx289$i = (94608 + ($shl288$i<<2)|0);
          $61 = HEAP32[23642]|0;
          $shl291$i = 1 << $shr283$i;
          $and292$i = $61 & $shl291$i;
          $tobool293$i = ($and292$i|0)==(0);
          if ($tobool293$i) {
           $or297$i = $61 | $shl291$i;
           HEAP32[23642] = $or297$i;
           $$pre$i186 = ((($arrayidx289$i)) + 8|0);
           $$pre$phi$i187Z2D = $$pre$i186;$F290$0$i = $arrayidx289$i;
          } else {
           $62 = ((($arrayidx289$i)) + 8|0);
           $63 = HEAP32[$62>>2]|0;
           $$pre$phi$i187Z2D = $62;$F290$0$i = $63;
          }
          HEAP32[$$pre$phi$i187Z2D>>2] = $add$ptr$i169;
          $bk311$i = ((($F290$0$i)) + 12|0);
          HEAP32[$bk311$i>>2] = $add$ptr$i169;
          $fd312$i = ((($add$ptr$i169)) + 8|0);
          HEAP32[$fd312$i>>2] = $F290$0$i;
          $bk313$i = ((($add$ptr$i169)) + 12|0);
          HEAP32[$bk313$i>>2] = $arrayidx289$i;
          break;
         }
         $shr318$i = $rsize$4$lcssa$i >>> 8;
         $cmp319$i = ($shr318$i|0)==(0);
         if ($cmp319$i) {
          $I316$0$i = 0;
         } else {
          $cmp323$i = ($rsize$4$lcssa$i>>>0)>(16777215);
          if ($cmp323$i) {
           $I316$0$i = 31;
          } else {
           $sub329$i = (($shr318$i) + 1048320)|0;
           $shr330$i = $sub329$i >>> 16;
           $and331$i = $shr330$i & 8;
           $shl333$i = $shr318$i << $and331$i;
           $sub334$i = (($shl333$i) + 520192)|0;
           $shr335$i = $sub334$i >>> 16;
           $and336$i = $shr335$i & 4;
           $add337$i = $and336$i | $and331$i;
           $shl338$i = $shl333$i << $and336$i;
           $sub339$i = (($shl338$i) + 245760)|0;
           $shr340$i = $sub339$i >>> 16;
           $and341$i = $shr340$i & 2;
           $add342$i = $add337$i | $and341$i;
           $sub343$i = (14 - ($add342$i))|0;
           $shl344$i = $shl338$i << $and341$i;
           $shr345$i = $shl344$i >>> 15;
           $add346$i = (($sub343$i) + ($shr345$i))|0;
           $shl347$i = $add346$i << 1;
           $add348$i = (($add346$i) + 7)|0;
           $shr349$i = $rsize$4$lcssa$i >>> $add348$i;
           $and350$i = $shr349$i & 1;
           $add351$i = $and350$i | $shl347$i;
           $I316$0$i = $add351$i;
          }
         }
         $arrayidx355$i = (94872 + ($I316$0$i<<2)|0);
         $index356$i = ((($add$ptr$i169)) + 28|0);
         HEAP32[$index356$i>>2] = $I316$0$i;
         $child357$i = ((($add$ptr$i169)) + 16|0);
         $arrayidx358$i = ((($child357$i)) + 4|0);
         HEAP32[$arrayidx358$i>>2] = 0;
         HEAP32[$child357$i>>2] = 0;
         $shl362$i = 1 << $I316$0$i;
         $and363$i = $64 & $shl362$i;
         $tobool364$i = ($and363$i|0)==(0);
         if ($tobool364$i) {
          $or368$i = $64 | $shl362$i;
          HEAP32[(94572)>>2] = $or368$i;
          HEAP32[$arrayidx355$i>>2] = $add$ptr$i169;
          $parent369$i = ((($add$ptr$i169)) + 24|0);
          HEAP32[$parent369$i>>2] = $arrayidx355$i;
          $bk370$i = ((($add$ptr$i169)) + 12|0);
          HEAP32[$bk370$i>>2] = $add$ptr$i169;
          $fd371$i = ((($add$ptr$i169)) + 8|0);
          HEAP32[$fd371$i>>2] = $add$ptr$i169;
          break;
         }
         $65 = HEAP32[$arrayidx355$i>>2]|0;
         $cmp374$i = ($I316$0$i|0)==(31);
         $shr378$i = $I316$0$i >>> 1;
         $sub381$i = (25 - ($shr378$i))|0;
         $cond383$i = $cmp374$i ? 0 : $sub381$i;
         $shl384$i = $rsize$4$lcssa$i << $cond383$i;
         $K373$0$i = $shl384$i;$T$0$i = $65;
         while(1) {
          $head386$i = ((($T$0$i)) + 4|0);
          $66 = HEAP32[$head386$i>>2]|0;
          $and387$i = $66 & -8;
          $cmp388$i = ($and387$i|0)==($rsize$4$lcssa$i|0);
          if ($cmp388$i) {
           label = 97;
           break;
          }
          $shr392$i = $K373$0$i >>> 31;
          $arrayidx394$i = (((($T$0$i)) + 16|0) + ($shr392$i<<2)|0);
          $shl395$i = $K373$0$i << 1;
          $67 = HEAP32[$arrayidx394$i>>2]|0;
          $cmp396$i = ($67|0)==(0|0);
          if ($cmp396$i) {
           label = 96;
           break;
          } else {
           $K373$0$i = $shl395$i;$T$0$i = $67;
          }
         }
         if ((label|0) == 96) {
          HEAP32[$arrayidx394$i>>2] = $add$ptr$i169;
          $parent406$i = ((($add$ptr$i169)) + 24|0);
          HEAP32[$parent406$i>>2] = $T$0$i;
          $bk407$i = ((($add$ptr$i169)) + 12|0);
          HEAP32[$bk407$i>>2] = $add$ptr$i169;
          $fd408$i = ((($add$ptr$i169)) + 8|0);
          HEAP32[$fd408$i>>2] = $add$ptr$i169;
          break;
         }
         else if ((label|0) == 97) {
          $fd416$i = ((($T$0$i)) + 8|0);
          $68 = HEAP32[$fd416$i>>2]|0;
          $bk429$i = ((($68)) + 12|0);
          HEAP32[$bk429$i>>2] = $add$ptr$i169;
          HEAP32[$fd416$i>>2] = $add$ptr$i169;
          $fd431$i = ((($add$ptr$i169)) + 8|0);
          HEAP32[$fd431$i>>2] = $68;
          $bk432$i = ((($add$ptr$i169)) + 12|0);
          HEAP32[$bk432$i>>2] = $T$0$i;
          $parent433$i = ((($add$ptr$i169)) + 24|0);
          HEAP32[$parent433$i>>2] = 0;
          break;
         }
        }
       } while(0);
       $add$ptr441$i = ((($v$4$lcssa$i)) + 8|0);
       $retval$0 = $add$ptr441$i;
       STACKTOP = sp;return ($retval$0|0);
      } else {
       $nb$0 = $and145;
      }
     }
    }
   }
  }
 } while(0);
 $69 = HEAP32[(94576)>>2]|0;
 $cmp156 = ($69>>>0)<($nb$0>>>0);
 if (!($cmp156)) {
  $sub160 = (($69) - ($nb$0))|0;
  $70 = HEAP32[(94588)>>2]|0;
  $cmp162 = ($sub160>>>0)>(15);
  if ($cmp162) {
   $add$ptr166 = (($70) + ($nb$0)|0);
   HEAP32[(94588)>>2] = $add$ptr166;
   HEAP32[(94576)>>2] = $sub160;
   $or167 = $sub160 | 1;
   $head168 = ((($add$ptr166)) + 4|0);
   HEAP32[$head168>>2] = $or167;
   $add$ptr169 = (($add$ptr166) + ($sub160)|0);
   HEAP32[$add$ptr169>>2] = $sub160;
   $or172 = $nb$0 | 3;
   $head173 = ((($70)) + 4|0);
   HEAP32[$head173>>2] = $or172;
  } else {
   HEAP32[(94576)>>2] = 0;
   HEAP32[(94588)>>2] = 0;
   $or176 = $69 | 3;
   $head177 = ((($70)) + 4|0);
   HEAP32[$head177>>2] = $or176;
   $add$ptr178 = (($70) + ($69)|0);
   $head179 = ((($add$ptr178)) + 4|0);
   $71 = HEAP32[$head179>>2]|0;
   $or180 = $71 | 1;
   HEAP32[$head179>>2] = $or180;
  }
  $add$ptr182 = ((($70)) + 8|0);
  $retval$0 = $add$ptr182;
  STACKTOP = sp;return ($retval$0|0);
 }
 $72 = HEAP32[(94580)>>2]|0;
 $cmp186 = ($72>>>0)>($nb$0>>>0);
 if ($cmp186) {
  $sub190 = (($72) - ($nb$0))|0;
  HEAP32[(94580)>>2] = $sub190;
  $73 = HEAP32[(94592)>>2]|0;
  $add$ptr193 = (($73) + ($nb$0)|0);
  HEAP32[(94592)>>2] = $add$ptr193;
  $or194 = $sub190 | 1;
  $head195 = ((($add$ptr193)) + 4|0);
  HEAP32[$head195>>2] = $or194;
  $or197 = $nb$0 | 3;
  $head198 = ((($73)) + 4|0);
  HEAP32[$head198>>2] = $or197;
  $add$ptr199 = ((($73)) + 8|0);
  $retval$0 = $add$ptr199;
  STACKTOP = sp;return ($retval$0|0);
 }
 $74 = HEAP32[23760]|0;
 $cmp$i = ($74|0)==(0);
 if ($cmp$i) {
  HEAP32[(95048)>>2] = 4096;
  HEAP32[(95044)>>2] = 4096;
  HEAP32[(95052)>>2] = -1;
  HEAP32[(95056)>>2] = -1;
  HEAP32[(95060)>>2] = 0;
  HEAP32[(95012)>>2] = 0;
  $75 = $magic$i$i;
  $xor$i$i = $75 & -16;
  $and6$i$i = $xor$i$i ^ 1431655768;
  HEAP32[$magic$i$i>>2] = $and6$i$i;
  HEAP32[23760] = $and6$i$i;
  $76 = 4096;
 } else {
  $$pre$i133 = HEAP32[(95048)>>2]|0;
  $76 = $$pre$i133;
 }
 $add$i134 = (($nb$0) + 48)|0;
 $sub$i135 = (($nb$0) + 47)|0;
 $add9$i = (($76) + ($sub$i135))|0;
 $neg$i136 = (0 - ($76))|0;
 $and11$i = $add9$i & $neg$i136;
 $cmp12$i = ($and11$i>>>0)>($nb$0>>>0);
 if (!($cmp12$i)) {
  $retval$0 = 0;
  STACKTOP = sp;return ($retval$0|0);
 }
 $77 = HEAP32[(95008)>>2]|0;
 $cmp15$i = ($77|0)==(0);
 if (!($cmp15$i)) {
  $78 = HEAP32[(95000)>>2]|0;
  $add17$i = (($78) + ($and11$i))|0;
  $cmp19$i = ($add17$i>>>0)<=($78>>>0);
  $cmp21$i = ($add17$i>>>0)>($77>>>0);
  $or$cond1$i = $cmp19$i | $cmp21$i;
  if ($or$cond1$i) {
   $retval$0 = 0;
   STACKTOP = sp;return ($retval$0|0);
  }
 }
 $79 = HEAP32[(95012)>>2]|0;
 $and29$i = $79 & 4;
 $tobool30$i = ($and29$i|0)==(0);
 L167: do {
  if ($tobool30$i) {
   $80 = HEAP32[(94592)>>2]|0;
   $cmp32$i137 = ($80|0)==(0|0);
   L169: do {
    if ($cmp32$i137) {
     label = 118;
    } else {
     $sp$0$i$i = (95016);
     while(1) {
      $81 = HEAP32[$sp$0$i$i>>2]|0;
      $cmp$i52$i = ($81>>>0)>($80>>>0);
      if (!($cmp$i52$i)) {
       $size$i$i = ((($sp$0$i$i)) + 4|0);
       $82 = HEAP32[$size$i$i>>2]|0;
       $add$ptr$i54$i = (($81) + ($82)|0);
       $cmp2$i$i = ($add$ptr$i54$i>>>0)>($80>>>0);
       if ($cmp2$i$i) {
        break;
       }
      }
      $next$i$i = ((($sp$0$i$i)) + 8|0);
      $83 = HEAP32[$next$i$i>>2]|0;
      $cmp3$i$i = ($83|0)==(0|0);
      if ($cmp3$i$i) {
       label = 118;
       break L169;
      } else {
       $sp$0$i$i = $83;
      }
     }
     $add77$i = (($add9$i) - ($72))|0;
     $and80$i = $add77$i & $neg$i136;
     $cmp81$i = ($and80$i>>>0)<(2147483647);
     if ($cmp81$i) {
      $call83$i = (_sbrk(($and80$i|0))|0);
      $88 = HEAP32[$sp$0$i$i>>2]|0;
      $89 = HEAP32[$size$i$i>>2]|0;
      $add$ptr$i140 = (($88) + ($89)|0);
      $cmp85$i = ($call83$i|0)==($add$ptr$i140|0);
      if ($cmp85$i) {
       $cmp89$i = ($call83$i|0)==((-1)|0);
       if ($cmp89$i) {
        $tsize$2617179$i = $and80$i;
       } else {
        $tbase$792$i = $call83$i;$tsize$791$i = $and80$i;
        label = 135;
        break L167;
       }
      } else {
       $br$2$ph$i = $call83$i;$ssize$2$ph$i = $and80$i;
       label = 126;
      }
     } else {
      $tsize$2617179$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 118) {
     $call37$i = (_sbrk(0)|0);
     $cmp38$i = ($call37$i|0)==((-1)|0);
     if ($cmp38$i) {
      $tsize$2617179$i = 0;
     } else {
      $84 = $call37$i;
      $85 = HEAP32[(95044)>>2]|0;
      $sub41$i = (($85) + -1)|0;
      $and42$i = $sub41$i & $84;
      $cmp43$i = ($and42$i|0)==(0);
      $add46$i = (($sub41$i) + ($84))|0;
      $neg48$i = (0 - ($85))|0;
      $and49$i = $add46$i & $neg48$i;
      $sub50$i = (($and49$i) - ($84))|0;
      $add51$i = $cmp43$i ? 0 : $sub50$i;
      $and11$add51$i = (($add51$i) + ($and11$i))|0;
      $86 = HEAP32[(95000)>>2]|0;
      $add54$i = (($and11$add51$i) + ($86))|0;
      $cmp55$i = ($and11$add51$i>>>0)>($nb$0>>>0);
      $cmp57$i = ($and11$add51$i>>>0)<(2147483647);
      $or$cond$i = $cmp55$i & $cmp57$i;
      if ($or$cond$i) {
       $87 = HEAP32[(95008)>>2]|0;
       $cmp60$i = ($87|0)==(0);
       if (!($cmp60$i)) {
        $cmp63$i = ($add54$i>>>0)<=($86>>>0);
        $cmp66$i139 = ($add54$i>>>0)>($87>>>0);
        $or$cond2$i = $cmp63$i | $cmp66$i139;
        if ($or$cond2$i) {
         $tsize$2617179$i = 0;
         break;
        }
       }
       $call68$i = (_sbrk(($and11$add51$i|0))|0);
       $cmp69$i = ($call68$i|0)==($call37$i|0);
       if ($cmp69$i) {
        $tbase$792$i = $call37$i;$tsize$791$i = $and11$add51$i;
        label = 135;
        break L167;
       } else {
        $br$2$ph$i = $call68$i;$ssize$2$ph$i = $and11$add51$i;
        label = 126;
       }
      } else {
       $tsize$2617179$i = 0;
      }
     }
    }
   } while(0);
   do {
    if ((label|0) == 126) {
     $sub112$i = (0 - ($ssize$2$ph$i))|0;
     $cmp91$i = ($br$2$ph$i|0)!=((-1)|0);
     $cmp93$i = ($ssize$2$ph$i>>>0)<(2147483647);
     $or$cond5$i = $cmp93$i & $cmp91$i;
     $cmp96$i = ($add$i134>>>0)>($ssize$2$ph$i>>>0);
     $or$cond3$i = $cmp96$i & $or$cond5$i;
     if (!($or$cond3$i)) {
      $cmp118$i = ($br$2$ph$i|0)==((-1)|0);
      if ($cmp118$i) {
       $tsize$2617179$i = 0;
       break;
      } else {
       $tbase$792$i = $br$2$ph$i;$tsize$791$i = $ssize$2$ph$i;
       label = 135;
       break L167;
      }
     }
     $90 = HEAP32[(95048)>>2]|0;
     $sub99$i = (($sub$i135) - ($ssize$2$ph$i))|0;
     $add101$i = (($sub99$i) + ($90))|0;
     $neg103$i = (0 - ($90))|0;
     $and104$i = $add101$i & $neg103$i;
     $cmp105$i = ($and104$i>>>0)<(2147483647);
     if (!($cmp105$i)) {
      $tbase$792$i = $br$2$ph$i;$tsize$791$i = $ssize$2$ph$i;
      label = 135;
      break L167;
     }
     $call107$i = (_sbrk(($and104$i|0))|0);
     $cmp108$i = ($call107$i|0)==((-1)|0);
     if ($cmp108$i) {
      (_sbrk(($sub112$i|0))|0);
      $tsize$2617179$i = 0;
      break;
     } else {
      $add110$i = (($and104$i) + ($ssize$2$ph$i))|0;
      $tbase$792$i = $br$2$ph$i;$tsize$791$i = $add110$i;
      label = 135;
      break L167;
     }
    }
   } while(0);
   $91 = HEAP32[(95012)>>2]|0;
   $or$i = $91 | 4;
   HEAP32[(95012)>>2] = $or$i;
   $tsize$4$i = $tsize$2617179$i;
   label = 133;
  } else {
   $tsize$4$i = 0;
   label = 133;
  }
 } while(0);
 if ((label|0) == 133) {
  $cmp127$i = ($and11$i>>>0)<(2147483647);
  if ($cmp127$i) {
   $call131$i = (_sbrk(($and11$i|0))|0);
   $call132$i = (_sbrk(0)|0);
   $cmp133$i = ($call131$i|0)!=((-1)|0);
   $cmp135$i = ($call132$i|0)!=((-1)|0);
   $or$cond4$i = $cmp133$i & $cmp135$i;
   $cmp137$i = ($call131$i>>>0)<($call132$i>>>0);
   $or$cond7$i = $cmp137$i & $or$cond4$i;
   $sub$ptr$lhs$cast$i = $call132$i;
   $sub$ptr$rhs$cast$i = $call131$i;
   $sub$ptr$sub$i = (($sub$ptr$lhs$cast$i) - ($sub$ptr$rhs$cast$i))|0;
   $add140$i = (($nb$0) + 40)|0;
   $cmp141$i = ($sub$ptr$sub$i>>>0)>($add140$i>>>0);
   $sub$ptr$sub$tsize$4$i = $cmp141$i ? $sub$ptr$sub$i : $tsize$4$i;
   $or$cond7$not$i = $or$cond7$i ^ 1;
   $cmp14795$i = ($call131$i|0)==((-1)|0);
   $not$cmp141$i = $cmp141$i ^ 1;
   $cmp147$i = $cmp14795$i | $not$cmp141$i;
   $or$cond93$i = $cmp147$i | $or$cond7$not$i;
   if (!($or$cond93$i)) {
    $tbase$792$i = $call131$i;$tsize$791$i = $sub$ptr$sub$tsize$4$i;
    label = 135;
   }
  }
 }
 if ((label|0) == 135) {
  $92 = HEAP32[(95000)>>2]|0;
  $add150$i = (($92) + ($tsize$791$i))|0;
  HEAP32[(95000)>>2] = $add150$i;
  $93 = HEAP32[(95004)>>2]|0;
  $cmp151$i = ($add150$i>>>0)>($93>>>0);
  if ($cmp151$i) {
   HEAP32[(95004)>>2] = $add150$i;
  }
  $94 = HEAP32[(94592)>>2]|0;
  $cmp157$i = ($94|0)==(0|0);
  do {
   if ($cmp157$i) {
    $95 = HEAP32[(94584)>>2]|0;
    $cmp159$i = ($95|0)==(0|0);
    $cmp162$i = ($tbase$792$i>>>0)<($95>>>0);
    $or$cond8$i = $cmp159$i | $cmp162$i;
    if ($or$cond8$i) {
     HEAP32[(94584)>>2] = $tbase$792$i;
    }
    HEAP32[(95016)>>2] = $tbase$792$i;
    HEAP32[(95020)>>2] = $tsize$791$i;
    HEAP32[(95028)>>2] = 0;
    $96 = HEAP32[23760]|0;
    HEAP32[(94604)>>2] = $96;
    HEAP32[(94600)>>2] = -1;
    $i$01$i$i = 0;
    while(1) {
     $shl$i49$i = $i$01$i$i << 1;
     $arrayidx$i50$i = (94608 + ($shl$i49$i<<2)|0);
     $97 = ((($arrayidx$i50$i)) + 12|0);
     HEAP32[$97>>2] = $arrayidx$i50$i;
     $98 = ((($arrayidx$i50$i)) + 8|0);
     HEAP32[$98>>2] = $arrayidx$i50$i;
     $inc$i$i = (($i$01$i$i) + 1)|0;
     $exitcond$i$i = ($inc$i$i|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $i$01$i$i = $inc$i$i;
     }
    }
    $sub172$i = (($tsize$791$i) + -40)|0;
    $add$ptr$i38$i = ((($tbase$792$i)) + 8|0);
    $99 = $add$ptr$i38$i;
    $and$i39$i = $99 & 7;
    $cmp$i40$i = ($and$i39$i|0)==(0);
    $100 = (0 - ($99))|0;
    $and3$i41$i = $100 & 7;
    $cond$i42$i = $cmp$i40$i ? 0 : $and3$i41$i;
    $add$ptr4$i43$i = (($tbase$792$i) + ($cond$i42$i)|0);
    $sub5$i44$i = (($sub172$i) - ($cond$i42$i))|0;
    HEAP32[(94592)>>2] = $add$ptr4$i43$i;
    HEAP32[(94580)>>2] = $sub5$i44$i;
    $or$i45$i = $sub5$i44$i | 1;
    $head$i46$i = ((($add$ptr4$i43$i)) + 4|0);
    HEAP32[$head$i46$i>>2] = $or$i45$i;
    $add$ptr6$i47$i = (($add$ptr4$i43$i) + ($sub5$i44$i)|0);
    $head7$i48$i = ((($add$ptr6$i47$i)) + 4|0);
    HEAP32[$head7$i48$i>>2] = 40;
    $101 = HEAP32[(95056)>>2]|0;
    HEAP32[(94596)>>2] = $101;
   } else {
    $sp$0104$i = (95016);
    while(1) {
     $102 = HEAP32[$sp$0104$i>>2]|0;
     $size188$i = ((($sp$0104$i)) + 4|0);
     $103 = HEAP32[$size188$i>>2]|0;
     $add$ptr189$i = (($102) + ($103)|0);
     $cmp190$i = ($tbase$792$i|0)==($add$ptr189$i|0);
     if ($cmp190$i) {
      label = 145;
      break;
     }
     $next$i = ((($sp$0104$i)) + 8|0);
     $104 = HEAP32[$next$i>>2]|0;
     $cmp186$i = ($104|0)==(0|0);
     if ($cmp186$i) {
      break;
     } else {
      $sp$0104$i = $104;
     }
    }
    if ((label|0) == 145) {
     $sflags193$i = ((($sp$0104$i)) + 12|0);
     $105 = HEAP32[$sflags193$i>>2]|0;
     $and194$i = $105 & 8;
     $tobool195$i = ($and194$i|0)==(0);
     if ($tobool195$i) {
      $cmp203$i = ($94>>>0)>=($102>>>0);
      $cmp209$i = ($94>>>0)<($tbase$792$i>>>0);
      $or$cond94$i = $cmp209$i & $cmp203$i;
      if ($or$cond94$i) {
       $add212$i = (($103) + ($tsize$791$i))|0;
       HEAP32[$size188$i>>2] = $add212$i;
       $106 = HEAP32[(94580)>>2]|0;
       $add$ptr$i31$i = ((($94)) + 8|0);
       $107 = $add$ptr$i31$i;
       $and$i32$i = $107 & 7;
       $cmp$i33$i = ($and$i32$i|0)==(0);
       $108 = (0 - ($107))|0;
       $and3$i34$i = $108 & 7;
       $cond$i35$i = $cmp$i33$i ? 0 : $and3$i34$i;
       $add$ptr4$i36$i = (($94) + ($cond$i35$i)|0);
       $add215$i = (($tsize$791$i) - ($cond$i35$i))|0;
       $sub5$i$i = (($106) + ($add215$i))|0;
       HEAP32[(94592)>>2] = $add$ptr4$i36$i;
       HEAP32[(94580)>>2] = $sub5$i$i;
       $or$i$i = $sub5$i$i | 1;
       $head$i37$i = ((($add$ptr4$i36$i)) + 4|0);
       HEAP32[$head$i37$i>>2] = $or$i$i;
       $add$ptr6$i$i = (($add$ptr4$i36$i) + ($sub5$i$i)|0);
       $head7$i$i = ((($add$ptr6$i$i)) + 4|0);
       HEAP32[$head7$i$i>>2] = 40;
       $109 = HEAP32[(95056)>>2]|0;
       HEAP32[(94596)>>2] = $109;
       break;
      }
     }
    }
    $110 = HEAP32[(94584)>>2]|0;
    $cmp218$i = ($tbase$792$i>>>0)<($110>>>0);
    if ($cmp218$i) {
     HEAP32[(94584)>>2] = $tbase$792$i;
    }
    $add$ptr227$i = (($tbase$792$i) + ($tsize$791$i)|0);
    $sp$1103$i = (95016);
    while(1) {
     $111 = HEAP32[$sp$1103$i>>2]|0;
     $cmp228$i = ($111|0)==($add$ptr227$i|0);
     if ($cmp228$i) {
      label = 153;
      break;
     }
     $next231$i = ((($sp$1103$i)) + 8|0);
     $112 = HEAP32[$next231$i>>2]|0;
     $cmp224$i = ($112|0)==(0|0);
     if ($cmp224$i) {
      break;
     } else {
      $sp$1103$i = $112;
     }
    }
    if ((label|0) == 153) {
     $sflags235$i = ((($sp$1103$i)) + 12|0);
     $113 = HEAP32[$sflags235$i>>2]|0;
     $and236$i = $113 & 8;
     $tobool237$i = ($and236$i|0)==(0);
     if ($tobool237$i) {
      HEAP32[$sp$1103$i>>2] = $tbase$792$i;
      $size245$i = ((($sp$1103$i)) + 4|0);
      $114 = HEAP32[$size245$i>>2]|0;
      $add246$i = (($114) + ($tsize$791$i))|0;
      HEAP32[$size245$i>>2] = $add246$i;
      $add$ptr$i$i = ((($tbase$792$i)) + 8|0);
      $115 = $add$ptr$i$i;
      $and$i11$i = $115 & 7;
      $cmp$i12$i = ($and$i11$i|0)==(0);
      $116 = (0 - ($115))|0;
      $and3$i$i = $116 & 7;
      $cond$i13$i = $cmp$i12$i ? 0 : $and3$i$i;
      $add$ptr4$i$i = (($tbase$792$i) + ($cond$i13$i)|0);
      $add$ptr5$i$i = ((($add$ptr227$i)) + 8|0);
      $117 = $add$ptr5$i$i;
      $and6$i14$i = $117 & 7;
      $cmp7$i$i = ($and6$i14$i|0)==(0);
      $118 = (0 - ($117))|0;
      $and13$i$i = $118 & 7;
      $cond15$i$i = $cmp7$i$i ? 0 : $and13$i$i;
      $add$ptr16$i$i = (($add$ptr227$i) + ($cond15$i$i)|0);
      $sub$ptr$lhs$cast$i15$i = $add$ptr16$i$i;
      $sub$ptr$rhs$cast$i16$i = $add$ptr4$i$i;
      $sub$ptr$sub$i17$i = (($sub$ptr$lhs$cast$i15$i) - ($sub$ptr$rhs$cast$i16$i))|0;
      $add$ptr17$i$i = (($add$ptr4$i$i) + ($nb$0)|0);
      $sub18$i$i = (($sub$ptr$sub$i17$i) - ($nb$0))|0;
      $or19$i$i = $nb$0 | 3;
      $head$i18$i = ((($add$ptr4$i$i)) + 4|0);
      HEAP32[$head$i18$i>>2] = $or19$i$i;
      $cmp20$i$i = ($add$ptr16$i$i|0)==($94|0);
      do {
       if ($cmp20$i$i) {
        $119 = HEAP32[(94580)>>2]|0;
        $add$i$i = (($119) + ($sub18$i$i))|0;
        HEAP32[(94580)>>2] = $add$i$i;
        HEAP32[(94592)>>2] = $add$ptr17$i$i;
        $or22$i$i = $add$i$i | 1;
        $head23$i$i = ((($add$ptr17$i$i)) + 4|0);
        HEAP32[$head23$i$i>>2] = $or22$i$i;
       } else {
        $120 = HEAP32[(94588)>>2]|0;
        $cmp24$i$i = ($add$ptr16$i$i|0)==($120|0);
        if ($cmp24$i$i) {
         $121 = HEAP32[(94576)>>2]|0;
         $add26$i$i = (($121) + ($sub18$i$i))|0;
         HEAP32[(94576)>>2] = $add26$i$i;
         HEAP32[(94588)>>2] = $add$ptr17$i$i;
         $or28$i$i = $add26$i$i | 1;
         $head29$i$i = ((($add$ptr17$i$i)) + 4|0);
         HEAP32[$head29$i$i>>2] = $or28$i$i;
         $add$ptr30$i$i = (($add$ptr17$i$i) + ($add26$i$i)|0);
         HEAP32[$add$ptr30$i$i>>2] = $add26$i$i;
         break;
        }
        $head32$i$i = ((($add$ptr16$i$i)) + 4|0);
        $122 = HEAP32[$head32$i$i>>2]|0;
        $and33$i$i = $122 & 3;
        $cmp34$i$i = ($and33$i$i|0)==(1);
        if ($cmp34$i$i) {
         $and37$i$i = $122 & -8;
         $shr$i21$i = $122 >>> 3;
         $cmp38$i$i = ($122>>>0)<(256);
         L237: do {
          if ($cmp38$i$i) {
           $fd$i$i = ((($add$ptr16$i$i)) + 8|0);
           $123 = HEAP32[$fd$i$i>>2]|0;
           $bk$i22$i = ((($add$ptr16$i$i)) + 12|0);
           $124 = HEAP32[$bk$i22$i>>2]|0;
           $cmp46$i$i = ($124|0)==($123|0);
           if ($cmp46$i$i) {
            $shl48$i$i = 1 << $shr$i21$i;
            $neg$i$i = $shl48$i$i ^ -1;
            $125 = HEAP32[23642]|0;
            $and49$i$i = $125 & $neg$i$i;
            HEAP32[23642] = $and49$i$i;
            break;
           } else {
            $bk67$i$i = ((($123)) + 12|0);
            HEAP32[$bk67$i$i>>2] = $124;
            $fd68$i$i = ((($124)) + 8|0);
            HEAP32[$fd68$i$i>>2] = $123;
            break;
           }
          } else {
           $parent$i23$i = ((($add$ptr16$i$i)) + 24|0);
           $126 = HEAP32[$parent$i23$i>>2]|0;
           $bk74$i$i = ((($add$ptr16$i$i)) + 12|0);
           $127 = HEAP32[$bk74$i$i>>2]|0;
           $cmp75$i$i = ($127|0)==($add$ptr16$i$i|0);
           do {
            if ($cmp75$i$i) {
             $child$i$i = ((($add$ptr16$i$i)) + 16|0);
             $arrayidx96$i$i = ((($child$i$i)) + 4|0);
             $129 = HEAP32[$arrayidx96$i$i>>2]|0;
             $cmp97$i$i = ($129|0)==(0|0);
             if ($cmp97$i$i) {
              $130 = HEAP32[$child$i$i>>2]|0;
              $cmp100$i$i = ($130|0)==(0|0);
              if ($cmp100$i$i) {
               $R$3$i$i = 0;
               break;
              } else {
               $R$1$i$i = $130;$RP$1$i$i = $child$i$i;
              }
             } else {
              $R$1$i$i = $129;$RP$1$i$i = $arrayidx96$i$i;
             }
             while(1) {
              $arrayidx103$i$i = ((($R$1$i$i)) + 20|0);
              $131 = HEAP32[$arrayidx103$i$i>>2]|0;
              $cmp104$i$i = ($131|0)==(0|0);
              if (!($cmp104$i$i)) {
               $R$1$i$i = $131;$RP$1$i$i = $arrayidx103$i$i;
               continue;
              }
              $arrayidx107$i$i = ((($R$1$i$i)) + 16|0);
              $132 = HEAP32[$arrayidx107$i$i>>2]|0;
              $cmp108$i$i = ($132|0)==(0|0);
              if ($cmp108$i$i) {
               break;
              } else {
               $R$1$i$i = $132;$RP$1$i$i = $arrayidx107$i$i;
              }
             }
             HEAP32[$RP$1$i$i>>2] = 0;
             $R$3$i$i = $R$1$i$i;
            } else {
             $fd78$i$i = ((($add$ptr16$i$i)) + 8|0);
             $128 = HEAP32[$fd78$i$i>>2]|0;
             $bk91$i$i = ((($128)) + 12|0);
             HEAP32[$bk91$i$i>>2] = $127;
             $fd92$i$i = ((($127)) + 8|0);
             HEAP32[$fd92$i$i>>2] = $128;
             $R$3$i$i = $127;
            }
           } while(0);
           $cmp120$i24$i = ($126|0)==(0|0);
           if ($cmp120$i24$i) {
            break;
           }
           $index$i25$i = ((($add$ptr16$i$i)) + 28|0);
           $133 = HEAP32[$index$i25$i>>2]|0;
           $arrayidx123$i$i = (94872 + ($133<<2)|0);
           $134 = HEAP32[$arrayidx123$i$i>>2]|0;
           $cmp124$i$i = ($add$ptr16$i$i|0)==($134|0);
           do {
            if ($cmp124$i$i) {
             HEAP32[$arrayidx123$i$i>>2] = $R$3$i$i;
             $cond1$i$i = ($R$3$i$i|0)==(0|0);
             if (!($cond1$i$i)) {
              break;
             }
             $shl131$i$i = 1 << $133;
             $neg132$i$i = $shl131$i$i ^ -1;
             $135 = HEAP32[(94572)>>2]|0;
             $and133$i$i = $135 & $neg132$i$i;
             HEAP32[(94572)>>2] = $and133$i$i;
             break L237;
            } else {
             $arrayidx143$i$i = ((($126)) + 16|0);
             $136 = HEAP32[$arrayidx143$i$i>>2]|0;
             $not$cmp144$i$i = ($136|0)!=($add$ptr16$i$i|0);
             $$sink$i$i = $not$cmp144$i$i&1;
             $arrayidx151$i$i = (((($126)) + 16|0) + ($$sink$i$i<<2)|0);
             HEAP32[$arrayidx151$i$i>>2] = $R$3$i$i;
             $cmp156$i$i = ($R$3$i$i|0)==(0|0);
             if ($cmp156$i$i) {
              break L237;
             }
            }
           } while(0);
           $parent165$i$i = ((($R$3$i$i)) + 24|0);
           HEAP32[$parent165$i$i>>2] = $126;
           $child166$i$i = ((($add$ptr16$i$i)) + 16|0);
           $137 = HEAP32[$child166$i$i>>2]|0;
           $cmp168$i$i = ($137|0)==(0|0);
           if (!($cmp168$i$i)) {
            $arrayidx178$i$i = ((($R$3$i$i)) + 16|0);
            HEAP32[$arrayidx178$i$i>>2] = $137;
            $parent179$i$i = ((($137)) + 24|0);
            HEAP32[$parent179$i$i>>2] = $R$3$i$i;
           }
           $arrayidx184$i$i = ((($child166$i$i)) + 4|0);
           $138 = HEAP32[$arrayidx184$i$i>>2]|0;
           $cmp185$i$i = ($138|0)==(0|0);
           if ($cmp185$i$i) {
            break;
           }
           $arrayidx195$i$i = ((($R$3$i$i)) + 20|0);
           HEAP32[$arrayidx195$i$i>>2] = $138;
           $parent196$i$i = ((($138)) + 24|0);
           HEAP32[$parent196$i$i>>2] = $R$3$i$i;
          }
         } while(0);
         $add$ptr205$i$i = (($add$ptr16$i$i) + ($and37$i$i)|0);
         $add206$i$i = (($and37$i$i) + ($sub18$i$i))|0;
         $oldfirst$0$i$i = $add$ptr205$i$i;$qsize$0$i$i = $add206$i$i;
        } else {
         $oldfirst$0$i$i = $add$ptr16$i$i;$qsize$0$i$i = $sub18$i$i;
        }
        $head208$i$i = ((($oldfirst$0$i$i)) + 4|0);
        $139 = HEAP32[$head208$i$i>>2]|0;
        $and209$i$i = $139 & -2;
        HEAP32[$head208$i$i>>2] = $and209$i$i;
        $or210$i$i = $qsize$0$i$i | 1;
        $head211$i$i = ((($add$ptr17$i$i)) + 4|0);
        HEAP32[$head211$i$i>>2] = $or210$i$i;
        $add$ptr212$i$i = (($add$ptr17$i$i) + ($qsize$0$i$i)|0);
        HEAP32[$add$ptr212$i$i>>2] = $qsize$0$i$i;
        $shr214$i$i = $qsize$0$i$i >>> 3;
        $cmp215$i$i = ($qsize$0$i$i>>>0)<(256);
        if ($cmp215$i$i) {
         $shl222$i$i = $shr214$i$i << 1;
         $arrayidx223$i$i = (94608 + ($shl222$i$i<<2)|0);
         $140 = HEAP32[23642]|0;
         $shl226$i$i = 1 << $shr214$i$i;
         $and227$i$i = $140 & $shl226$i$i;
         $tobool228$i$i = ($and227$i$i|0)==(0);
         if ($tobool228$i$i) {
          $or232$i$i = $140 | $shl226$i$i;
          HEAP32[23642] = $or232$i$i;
          $$pre$i27$i = ((($arrayidx223$i$i)) + 8|0);
          $$pre$phi$i28$iZ2D = $$pre$i27$i;$F224$0$i$i = $arrayidx223$i$i;
         } else {
          $141 = ((($arrayidx223$i$i)) + 8|0);
          $142 = HEAP32[$141>>2]|0;
          $$pre$phi$i28$iZ2D = $141;$F224$0$i$i = $142;
         }
         HEAP32[$$pre$phi$i28$iZ2D>>2] = $add$ptr17$i$i;
         $bk246$i$i = ((($F224$0$i$i)) + 12|0);
         HEAP32[$bk246$i$i>>2] = $add$ptr17$i$i;
         $fd247$i$i = ((($add$ptr17$i$i)) + 8|0);
         HEAP32[$fd247$i$i>>2] = $F224$0$i$i;
         $bk248$i$i = ((($add$ptr17$i$i)) + 12|0);
         HEAP32[$bk248$i$i>>2] = $arrayidx223$i$i;
         break;
        }
        $shr253$i$i = $qsize$0$i$i >>> 8;
        $cmp254$i$i = ($shr253$i$i|0)==(0);
        do {
         if ($cmp254$i$i) {
          $I252$0$i$i = 0;
         } else {
          $cmp258$i$i = ($qsize$0$i$i>>>0)>(16777215);
          if ($cmp258$i$i) {
           $I252$0$i$i = 31;
           break;
          }
          $sub262$i$i = (($shr253$i$i) + 1048320)|0;
          $shr263$i$i = $sub262$i$i >>> 16;
          $and264$i$i = $shr263$i$i & 8;
          $shl265$i$i = $shr253$i$i << $and264$i$i;
          $sub266$i$i = (($shl265$i$i) + 520192)|0;
          $shr267$i$i = $sub266$i$i >>> 16;
          $and268$i$i = $shr267$i$i & 4;
          $add269$i$i = $and268$i$i | $and264$i$i;
          $shl270$i$i = $shl265$i$i << $and268$i$i;
          $sub271$i$i = (($shl270$i$i) + 245760)|0;
          $shr272$i$i = $sub271$i$i >>> 16;
          $and273$i$i = $shr272$i$i & 2;
          $add274$i$i = $add269$i$i | $and273$i$i;
          $sub275$i$i = (14 - ($add274$i$i))|0;
          $shl276$i$i = $shl270$i$i << $and273$i$i;
          $shr277$i$i = $shl276$i$i >>> 15;
          $add278$i$i = (($sub275$i$i) + ($shr277$i$i))|0;
          $shl279$i$i = $add278$i$i << 1;
          $add280$i$i = (($add278$i$i) + 7)|0;
          $shr281$i$i = $qsize$0$i$i >>> $add280$i$i;
          $and282$i$i = $shr281$i$i & 1;
          $add283$i$i = $and282$i$i | $shl279$i$i;
          $I252$0$i$i = $add283$i$i;
         }
        } while(0);
        $arrayidx287$i$i = (94872 + ($I252$0$i$i<<2)|0);
        $index288$i$i = ((($add$ptr17$i$i)) + 28|0);
        HEAP32[$index288$i$i>>2] = $I252$0$i$i;
        $child289$i$i = ((($add$ptr17$i$i)) + 16|0);
        $arrayidx290$i$i = ((($child289$i$i)) + 4|0);
        HEAP32[$arrayidx290$i$i>>2] = 0;
        HEAP32[$child289$i$i>>2] = 0;
        $143 = HEAP32[(94572)>>2]|0;
        $shl294$i$i = 1 << $I252$0$i$i;
        $and295$i$i = $143 & $shl294$i$i;
        $tobool296$i$i = ($and295$i$i|0)==(0);
        if ($tobool296$i$i) {
         $or300$i$i = $143 | $shl294$i$i;
         HEAP32[(94572)>>2] = $or300$i$i;
         HEAP32[$arrayidx287$i$i>>2] = $add$ptr17$i$i;
         $parent301$i$i = ((($add$ptr17$i$i)) + 24|0);
         HEAP32[$parent301$i$i>>2] = $arrayidx287$i$i;
         $bk302$i$i = ((($add$ptr17$i$i)) + 12|0);
         HEAP32[$bk302$i$i>>2] = $add$ptr17$i$i;
         $fd303$i$i = ((($add$ptr17$i$i)) + 8|0);
         HEAP32[$fd303$i$i>>2] = $add$ptr17$i$i;
         break;
        }
        $144 = HEAP32[$arrayidx287$i$i>>2]|0;
        $cmp306$i$i = ($I252$0$i$i|0)==(31);
        $shr310$i$i = $I252$0$i$i >>> 1;
        $sub313$i$i = (25 - ($shr310$i$i))|0;
        $cond315$i$i = $cmp306$i$i ? 0 : $sub313$i$i;
        $shl316$i$i = $qsize$0$i$i << $cond315$i$i;
        $K305$0$i$i = $shl316$i$i;$T$0$i29$i = $144;
        while(1) {
         $head317$i$i = ((($T$0$i29$i)) + 4|0);
         $145 = HEAP32[$head317$i$i>>2]|0;
         $and318$i$i = $145 & -8;
         $cmp319$i$i = ($and318$i$i|0)==($qsize$0$i$i|0);
         if ($cmp319$i$i) {
          label = 194;
          break;
         }
         $shr323$i$i = $K305$0$i$i >>> 31;
         $arrayidx325$i$i = (((($T$0$i29$i)) + 16|0) + ($shr323$i$i<<2)|0);
         $shl326$i$i = $K305$0$i$i << 1;
         $146 = HEAP32[$arrayidx325$i$i>>2]|0;
         $cmp327$i$i = ($146|0)==(0|0);
         if ($cmp327$i$i) {
          label = 193;
          break;
         } else {
          $K305$0$i$i = $shl326$i$i;$T$0$i29$i = $146;
         }
        }
        if ((label|0) == 193) {
         HEAP32[$arrayidx325$i$i>>2] = $add$ptr17$i$i;
         $parent337$i$i = ((($add$ptr17$i$i)) + 24|0);
         HEAP32[$parent337$i$i>>2] = $T$0$i29$i;
         $bk338$i$i = ((($add$ptr17$i$i)) + 12|0);
         HEAP32[$bk338$i$i>>2] = $add$ptr17$i$i;
         $fd339$i$i = ((($add$ptr17$i$i)) + 8|0);
         HEAP32[$fd339$i$i>>2] = $add$ptr17$i$i;
         break;
        }
        else if ((label|0) == 194) {
         $fd344$i$i = ((($T$0$i29$i)) + 8|0);
         $147 = HEAP32[$fd344$i$i>>2]|0;
         $bk357$i$i = ((($147)) + 12|0);
         HEAP32[$bk357$i$i>>2] = $add$ptr17$i$i;
         HEAP32[$fd344$i$i>>2] = $add$ptr17$i$i;
         $fd359$i$i = ((($add$ptr17$i$i)) + 8|0);
         HEAP32[$fd359$i$i>>2] = $147;
         $bk360$i$i = ((($add$ptr17$i$i)) + 12|0);
         HEAP32[$bk360$i$i>>2] = $T$0$i29$i;
         $parent361$i$i = ((($add$ptr17$i$i)) + 24|0);
         HEAP32[$parent361$i$i>>2] = 0;
         break;
        }
       }
      } while(0);
      $add$ptr369$i$i = ((($add$ptr4$i$i)) + 8|0);
      $retval$0 = $add$ptr369$i$i;
      STACKTOP = sp;return ($retval$0|0);
     }
    }
    $sp$0$i$i$i = (95016);
    while(1) {
     $148 = HEAP32[$sp$0$i$i$i>>2]|0;
     $cmp$i$i$i = ($148>>>0)>($94>>>0);
     if (!($cmp$i$i$i)) {
      $size$i$i$i = ((($sp$0$i$i$i)) + 4|0);
      $149 = HEAP32[$size$i$i$i>>2]|0;
      $add$ptr$i$i$i = (($148) + ($149)|0);
      $cmp2$i$i$i = ($add$ptr$i$i$i>>>0)>($94>>>0);
      if ($cmp2$i$i$i) {
       break;
      }
     }
     $next$i$i$i = ((($sp$0$i$i$i)) + 8|0);
     $150 = HEAP32[$next$i$i$i>>2]|0;
     $sp$0$i$i$i = $150;
    }
    $add$ptr2$i$i = ((($add$ptr$i$i$i)) + -47|0);
    $add$ptr3$i$i = ((($add$ptr2$i$i)) + 8|0);
    $151 = $add$ptr3$i$i;
    $and$i$i = $151 & 7;
    $cmp$i9$i = ($and$i$i|0)==(0);
    $152 = (0 - ($151))|0;
    $and6$i10$i = $152 & 7;
    $cond$i$i = $cmp$i9$i ? 0 : $and6$i10$i;
    $add$ptr7$i$i = (($add$ptr2$i$i) + ($cond$i$i)|0);
    $add$ptr81$i$i = ((($94)) + 16|0);
    $cmp9$i$i = ($add$ptr7$i$i>>>0)<($add$ptr81$i$i>>>0);
    $cond13$i$i = $cmp9$i$i ? $94 : $add$ptr7$i$i;
    $add$ptr14$i$i = ((($cond13$i$i)) + 8|0);
    $add$ptr15$i$i = ((($cond13$i$i)) + 24|0);
    $sub16$i$i = (($tsize$791$i) + -40)|0;
    $add$ptr$i2$i$i = ((($tbase$792$i)) + 8|0);
    $153 = $add$ptr$i2$i$i;
    $and$i$i$i = $153 & 7;
    $cmp$i3$i$i = ($and$i$i$i|0)==(0);
    $154 = (0 - ($153))|0;
    $and3$i$i$i = $154 & 7;
    $cond$i$i$i = $cmp$i3$i$i ? 0 : $and3$i$i$i;
    $add$ptr4$i$i$i = (($tbase$792$i) + ($cond$i$i$i)|0);
    $sub5$i$i$i = (($sub16$i$i) - ($cond$i$i$i))|0;
    HEAP32[(94592)>>2] = $add$ptr4$i$i$i;
    HEAP32[(94580)>>2] = $sub5$i$i$i;
    $or$i$i$i = $sub5$i$i$i | 1;
    $head$i$i$i = ((($add$ptr4$i$i$i)) + 4|0);
    HEAP32[$head$i$i$i>>2] = $or$i$i$i;
    $add$ptr6$i$i$i = (($add$ptr4$i$i$i) + ($sub5$i$i$i)|0);
    $head7$i$i$i = ((($add$ptr6$i$i$i)) + 4|0);
    HEAP32[$head7$i$i$i>>2] = 40;
    $155 = HEAP32[(95056)>>2]|0;
    HEAP32[(94596)>>2] = $155;
    $head$i$i = ((($cond13$i$i)) + 4|0);
    HEAP32[$head$i$i>>2] = 27;
    ;HEAP32[$add$ptr14$i$i>>2]=HEAP32[(95016)>>2]|0;HEAP32[$add$ptr14$i$i+4>>2]=HEAP32[(95016)+4>>2]|0;HEAP32[$add$ptr14$i$i+8>>2]=HEAP32[(95016)+8>>2]|0;HEAP32[$add$ptr14$i$i+12>>2]=HEAP32[(95016)+12>>2]|0;
    HEAP32[(95016)>>2] = $tbase$792$i;
    HEAP32[(95020)>>2] = $tsize$791$i;
    HEAP32[(95028)>>2] = 0;
    HEAP32[(95024)>>2] = $add$ptr14$i$i;
    $156 = $add$ptr15$i$i;
    while(1) {
     $add$ptr24$i$i = ((($156)) + 4|0);
     HEAP32[$add$ptr24$i$i>>2] = 7;
     $head26$i$i = ((($156)) + 8|0);
     $cmp27$i$i = ($head26$i$i>>>0)<($add$ptr$i$i$i>>>0);
     if ($cmp27$i$i) {
      $156 = $add$ptr24$i$i;
     } else {
      break;
     }
    }
    $cmp28$i$i = ($cond13$i$i|0)==($94|0);
    if (!($cmp28$i$i)) {
     $sub$ptr$lhs$cast$i$i = $cond13$i$i;
     $sub$ptr$rhs$cast$i$i = $94;
     $sub$ptr$sub$i$i = (($sub$ptr$lhs$cast$i$i) - ($sub$ptr$rhs$cast$i$i))|0;
     $157 = HEAP32[$head$i$i>>2]|0;
     $and32$i$i = $157 & -2;
     HEAP32[$head$i$i>>2] = $and32$i$i;
     $or33$i$i = $sub$ptr$sub$i$i | 1;
     $head34$i$i = ((($94)) + 4|0);
     HEAP32[$head34$i$i>>2] = $or33$i$i;
     HEAP32[$cond13$i$i>>2] = $sub$ptr$sub$i$i;
     $shr$i$i = $sub$ptr$sub$i$i >>> 3;
     $cmp36$i$i = ($sub$ptr$sub$i$i>>>0)<(256);
     if ($cmp36$i$i) {
      $shl$i$i = $shr$i$i << 1;
      $arrayidx$i$i = (94608 + ($shl$i$i<<2)|0);
      $158 = HEAP32[23642]|0;
      $shl39$i$i = 1 << $shr$i$i;
      $and40$i$i = $158 & $shl39$i$i;
      $tobool$i$i = ($and40$i$i|0)==(0);
      if ($tobool$i$i) {
       $or44$i$i = $158 | $shl39$i$i;
       HEAP32[23642] = $or44$i$i;
       $$pre$i$i = ((($arrayidx$i$i)) + 8|0);
       $$pre$phi$i$iZ2D = $$pre$i$i;$F$0$i$i = $arrayidx$i$i;
      } else {
       $159 = ((($arrayidx$i$i)) + 8|0);
       $160 = HEAP32[$159>>2]|0;
       $$pre$phi$i$iZ2D = $159;$F$0$i$i = $160;
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $94;
      $bk$i$i = ((($F$0$i$i)) + 12|0);
      HEAP32[$bk$i$i>>2] = $94;
      $fd54$i$i = ((($94)) + 8|0);
      HEAP32[$fd54$i$i>>2] = $F$0$i$i;
      $bk55$i$i = ((($94)) + 12|0);
      HEAP32[$bk55$i$i>>2] = $arrayidx$i$i;
      break;
     }
     $shr58$i$i = $sub$ptr$sub$i$i >>> 8;
     $cmp59$i$i = ($shr58$i$i|0)==(0);
     if ($cmp59$i$i) {
      $I57$0$i$i = 0;
     } else {
      $cmp63$i$i = ($sub$ptr$sub$i$i>>>0)>(16777215);
      if ($cmp63$i$i) {
       $I57$0$i$i = 31;
      } else {
       $sub67$i$i = (($shr58$i$i) + 1048320)|0;
       $shr68$i$i = $sub67$i$i >>> 16;
       $and69$i$i = $shr68$i$i & 8;
       $shl70$i$i = $shr58$i$i << $and69$i$i;
       $sub71$i$i = (($shl70$i$i) + 520192)|0;
       $shr72$i$i = $sub71$i$i >>> 16;
       $and73$i$i = $shr72$i$i & 4;
       $add74$i$i = $and73$i$i | $and69$i$i;
       $shl75$i$i = $shl70$i$i << $and73$i$i;
       $sub76$i$i = (($shl75$i$i) + 245760)|0;
       $shr77$i$i = $sub76$i$i >>> 16;
       $and78$i$i = $shr77$i$i & 2;
       $add79$i$i = $add74$i$i | $and78$i$i;
       $sub80$i$i = (14 - ($add79$i$i))|0;
       $shl81$i$i = $shl75$i$i << $and78$i$i;
       $shr82$i$i = $shl81$i$i >>> 15;
       $add83$i$i = (($sub80$i$i) + ($shr82$i$i))|0;
       $shl84$i$i = $add83$i$i << 1;
       $add85$i$i = (($add83$i$i) + 7)|0;
       $shr86$i$i = $sub$ptr$sub$i$i >>> $add85$i$i;
       $and87$i$i = $shr86$i$i & 1;
       $add88$i$i = $and87$i$i | $shl84$i$i;
       $I57$0$i$i = $add88$i$i;
      }
     }
     $arrayidx91$i$i = (94872 + ($I57$0$i$i<<2)|0);
     $index$i$i = ((($94)) + 28|0);
     HEAP32[$index$i$i>>2] = $I57$0$i$i;
     $arrayidx92$i$i = ((($94)) + 20|0);
     HEAP32[$arrayidx92$i$i>>2] = 0;
     HEAP32[$add$ptr81$i$i>>2] = 0;
     $161 = HEAP32[(94572)>>2]|0;
     $shl95$i$i = 1 << $I57$0$i$i;
     $and96$i$i = $161 & $shl95$i$i;
     $tobool97$i$i = ($and96$i$i|0)==(0);
     if ($tobool97$i$i) {
      $or101$i$i = $161 | $shl95$i$i;
      HEAP32[(94572)>>2] = $or101$i$i;
      HEAP32[$arrayidx91$i$i>>2] = $94;
      $parent$i$i = ((($94)) + 24|0);
      HEAP32[$parent$i$i>>2] = $arrayidx91$i$i;
      $bk102$i$i = ((($94)) + 12|0);
      HEAP32[$bk102$i$i>>2] = $94;
      $fd103$i$i = ((($94)) + 8|0);
      HEAP32[$fd103$i$i>>2] = $94;
      break;
     }
     $162 = HEAP32[$arrayidx91$i$i>>2]|0;
     $cmp106$i$i = ($I57$0$i$i|0)==(31);
     $shr110$i$i = $I57$0$i$i >>> 1;
     $sub113$i$i = (25 - ($shr110$i$i))|0;
     $cond115$i$i = $cmp106$i$i ? 0 : $sub113$i$i;
     $shl116$i$i = $sub$ptr$sub$i$i << $cond115$i$i;
     $K105$0$i$i = $shl116$i$i;$T$0$i$i = $162;
     while(1) {
      $head118$i$i = ((($T$0$i$i)) + 4|0);
      $163 = HEAP32[$head118$i$i>>2]|0;
      $and119$i$i = $163 & -8;
      $cmp120$i$i = ($and119$i$i|0)==($sub$ptr$sub$i$i|0);
      if ($cmp120$i$i) {
       label = 216;
       break;
      }
      $shr124$i$i = $K105$0$i$i >>> 31;
      $arrayidx126$i$i = (((($T$0$i$i)) + 16|0) + ($shr124$i$i<<2)|0);
      $shl127$i$i = $K105$0$i$i << 1;
      $164 = HEAP32[$arrayidx126$i$i>>2]|0;
      $cmp128$i$i = ($164|0)==(0|0);
      if ($cmp128$i$i) {
       label = 215;
       break;
      } else {
       $K105$0$i$i = $shl127$i$i;$T$0$i$i = $164;
      }
     }
     if ((label|0) == 215) {
      HEAP32[$arrayidx126$i$i>>2] = $94;
      $parent138$i$i = ((($94)) + 24|0);
      HEAP32[$parent138$i$i>>2] = $T$0$i$i;
      $bk139$i$i = ((($94)) + 12|0);
      HEAP32[$bk139$i$i>>2] = $94;
      $fd140$i$i = ((($94)) + 8|0);
      HEAP32[$fd140$i$i>>2] = $94;
      break;
     }
     else if ((label|0) == 216) {
      $fd148$i$i = ((($T$0$i$i)) + 8|0);
      $165 = HEAP32[$fd148$i$i>>2]|0;
      $bk158$i$i = ((($165)) + 12|0);
      HEAP32[$bk158$i$i>>2] = $94;
      HEAP32[$fd148$i$i>>2] = $94;
      $fd160$i$i = ((($94)) + 8|0);
      HEAP32[$fd160$i$i>>2] = $165;
      $bk161$i$i = ((($94)) + 12|0);
      HEAP32[$bk161$i$i>>2] = $T$0$i$i;
      $parent162$i$i = ((($94)) + 24|0);
      HEAP32[$parent162$i$i>>2] = 0;
      break;
     }
    }
   }
  } while(0);
  $166 = HEAP32[(94580)>>2]|0;
  $cmp257$i = ($166>>>0)>($nb$0>>>0);
  if ($cmp257$i) {
   $sub260$i = (($166) - ($nb$0))|0;
   HEAP32[(94580)>>2] = $sub260$i;
   $167 = HEAP32[(94592)>>2]|0;
   $add$ptr262$i = (($167) + ($nb$0)|0);
   HEAP32[(94592)>>2] = $add$ptr262$i;
   $or264$i = $sub260$i | 1;
   $head265$i = ((($add$ptr262$i)) + 4|0);
   HEAP32[$head265$i>>2] = $or264$i;
   $or267$i = $nb$0 | 3;
   $head268$i = ((($167)) + 4|0);
   HEAP32[$head268$i>>2] = $or267$i;
   $add$ptr269$i = ((($167)) + 8|0);
   $retval$0 = $add$ptr269$i;
   STACKTOP = sp;return ($retval$0|0);
  }
 }
 $call275$i = (___errno_location()|0);
 HEAP32[$call275$i>>2] = 12;
 $retval$0 = 0;
 STACKTOP = sp;return ($retval$0|0);
}
function _free($mem) {
 $mem = $mem|0;
 var $$pre = 0, $$pre$phiZ2D = 0, $$sink = 0, $$sink4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $F510$0 = 0, $I534$0 = 0, $K583$0 = 0;
 var $R$1 = 0, $R$3 = 0, $R332$1 = 0, $R332$3 = 0, $RP$1 = 0, $RP360$1 = 0, $T$0 = 0, $add$ptr = 0, $add$ptr16 = 0, $add$ptr217 = 0, $add$ptr261 = 0, $add$ptr482 = 0, $add$ptr498 = 0, $add$ptr6 = 0, $add17 = 0, $add246 = 0, $add258 = 0, $add267 = 0, $add550 = 0, $add555 = 0;
 var $add559 = 0, $add561 = 0, $add564 = 0, $and12 = 0, $and140 = 0, $and210 = 0, $and215 = 0, $and232 = 0, $and240 = 0, $and266 = 0, $and301 = 0, $and410 = 0, $and46 = 0, $and495 = 0, $and5 = 0, $and512 = 0, $and545 = 0, $and549 = 0, $and554 = 0, $and563 = 0;
 var $and574 = 0, $and592 = 0, $and8 = 0, $arrayidx108 = 0, $arrayidx113 = 0, $arrayidx130 = 0, $arrayidx149 = 0, $arrayidx157 = 0, $arrayidx182 = 0, $arrayidx188 = 0, $arrayidx198 = 0, $arrayidx362 = 0, $arrayidx374 = 0, $arrayidx379 = 0, $arrayidx400 = 0, $arrayidx419 = 0, $arrayidx427 = 0, $arrayidx454 = 0, $arrayidx460 = 0, $arrayidx470 = 0;
 var $arrayidx509 = 0, $arrayidx567 = 0, $arrayidx570 = 0, $arrayidx599 = 0, $arrayidx99 = 0, $bk = 0, $bk275 = 0, $bk321 = 0, $bk333 = 0, $bk355 = 0, $bk529 = 0, $bk531 = 0, $bk580 = 0, $bk611 = 0, $bk631 = 0, $bk634 = 0, $bk66 = 0, $bk73 = 0, $bk94 = 0, $child = 0;
 var $child171 = 0, $child361 = 0, $child443 = 0, $child569 = 0, $cmp = 0, $cmp$i = 0, $cmp100 = 0, $cmp104 = 0, $cmp109 = 0, $cmp114 = 0, $cmp127 = 0, $cmp13 = 0, $cmp131 = 0, $cmp162 = 0, $cmp173 = 0, $cmp18 = 0, $cmp189 = 0, $cmp211 = 0, $cmp22 = 0, $cmp228 = 0;
 var $cmp243 = 0, $cmp249 = 0, $cmp25 = 0, $cmp255 = 0, $cmp269 = 0, $cmp296 = 0, $cmp334 = 0, $cmp363 = 0, $cmp368 = 0, $cmp375 = 0, $cmp380 = 0, $cmp395 = 0, $cmp401 = 0, $cmp42 = 0, $cmp432 = 0, $cmp445 = 0, $cmp461 = 0, $cmp484 = 0, $cmp502 = 0, $cmp536 = 0;
 var $cmp540 = 0, $cmp584 = 0, $cmp593 = 0, $cmp601 = 0, $cmp640 = 0, $cmp74 = 0, $cond = 0, $cond255 = 0, $cond256 = 0, $dec = 0, $fd = 0, $fd273 = 0, $fd322 = 0, $fd338 = 0, $fd356 = 0, $fd530 = 0, $fd581 = 0, $fd612 = 0, $fd620 = 0, $fd633 = 0;
 var $fd67 = 0, $fd78 = 0, $fd95 = 0, $head209 = 0, $head216 = 0, $head231 = 0, $head248 = 0, $head260 = 0, $head4 = 0, $head481 = 0, $head497 = 0, $head591 = 0, $idx$neg = 0, $index = 0, $index399 = 0, $index568 = 0, $neg = 0, $neg139 = 0, $neg300 = 0, $neg409 = 0;
 var $next4$i = 0, $not$cmp150 = 0, $not$cmp420 = 0, $or = 0, $or247 = 0, $or259 = 0, $or480 = 0, $or496 = 0, $or516 = 0, $or578 = 0, $p$1 = 0, $parent = 0, $parent170 = 0, $parent183 = 0, $parent199 = 0, $parent331 = 0, $parent442 = 0, $parent455 = 0, $parent471 = 0, $parent579 = 0;
 var $parent610 = 0, $parent635 = 0, $psize$1 = 0, $psize$2 = 0, $shl138 = 0, $shl299 = 0, $shl408 = 0, $shl45 = 0, $shl508 = 0, $shl511 = 0, $shl546 = 0, $shl551 = 0, $shl557 = 0, $shl560 = 0, $shl573 = 0, $shl590 = 0, $shl600 = 0, $shr = 0, $shr268 = 0, $shr501 = 0;
 var $shr535 = 0, $shr544 = 0, $shr548 = 0, $shr553 = 0, $shr558 = 0, $shr562 = 0, $shr586 = 0, $shr597 = 0, $sp$0$i = 0, $sp$0$in$i = 0, $sub = 0, $sub547 = 0, $sub552 = 0, $sub556 = 0, $sub589 = 0, $tobool233 = 0, $tobool241 = 0, $tobool513 = 0, $tobool575 = 0, $tobool9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($mem|0)==(0|0);
 if ($cmp) {
  return;
 }
 $add$ptr = ((($mem)) + -8|0);
 $0 = HEAP32[(94584)>>2]|0;
 $head4 = ((($mem)) + -4|0);
 $1 = HEAP32[$head4>>2]|0;
 $and5 = $1 & -8;
 $add$ptr6 = (($add$ptr) + ($and5)|0);
 $and8 = $1 & 1;
 $tobool9 = ($and8|0)==(0);
 do {
  if ($tobool9) {
   $2 = HEAP32[$add$ptr>>2]|0;
   $and12 = $1 & 3;
   $cmp13 = ($and12|0)==(0);
   if ($cmp13) {
    return;
   }
   $idx$neg = (0 - ($2))|0;
   $add$ptr16 = (($add$ptr) + ($idx$neg)|0);
   $add17 = (($2) + ($and5))|0;
   $cmp18 = ($add$ptr16>>>0)<($0>>>0);
   if ($cmp18) {
    return;
   }
   $3 = HEAP32[(94588)>>2]|0;
   $cmp22 = ($add$ptr16|0)==($3|0);
   if ($cmp22) {
    $head209 = ((($add$ptr6)) + 4|0);
    $20 = HEAP32[$head209>>2]|0;
    $and210 = $20 & 3;
    $cmp211 = ($and210|0)==(3);
    if (!($cmp211)) {
     $21 = $add$ptr16;$p$1 = $add$ptr16;$psize$1 = $add17;
     break;
    }
    $add$ptr217 = (($add$ptr16) + ($add17)|0);
    $head216 = ((($add$ptr16)) + 4|0);
    $or = $add17 | 1;
    $and215 = $20 & -2;
    HEAP32[(94576)>>2] = $add17;
    HEAP32[$head209>>2] = $and215;
    HEAP32[$head216>>2] = $or;
    HEAP32[$add$ptr217>>2] = $add17;
    return;
   }
   $shr = $2 >>> 3;
   $cmp25 = ($2>>>0)<(256);
   if ($cmp25) {
    $fd = ((($add$ptr16)) + 8|0);
    $4 = HEAP32[$fd>>2]|0;
    $bk = ((($add$ptr16)) + 12|0);
    $5 = HEAP32[$bk>>2]|0;
    $cmp42 = ($5|0)==($4|0);
    if ($cmp42) {
     $shl45 = 1 << $shr;
     $neg = $shl45 ^ -1;
     $6 = HEAP32[23642]|0;
     $and46 = $6 & $neg;
     HEAP32[23642] = $and46;
     $21 = $add$ptr16;$p$1 = $add$ptr16;$psize$1 = $add17;
     break;
    } else {
     $bk66 = ((($4)) + 12|0);
     HEAP32[$bk66>>2] = $5;
     $fd67 = ((($5)) + 8|0);
     HEAP32[$fd67>>2] = $4;
     $21 = $add$ptr16;$p$1 = $add$ptr16;$psize$1 = $add17;
     break;
    }
   }
   $parent = ((($add$ptr16)) + 24|0);
   $7 = HEAP32[$parent>>2]|0;
   $bk73 = ((($add$ptr16)) + 12|0);
   $8 = HEAP32[$bk73>>2]|0;
   $cmp74 = ($8|0)==($add$ptr16|0);
   do {
    if ($cmp74) {
     $child = ((($add$ptr16)) + 16|0);
     $arrayidx99 = ((($child)) + 4|0);
     $10 = HEAP32[$arrayidx99>>2]|0;
     $cmp100 = ($10|0)==(0|0);
     if ($cmp100) {
      $11 = HEAP32[$child>>2]|0;
      $cmp104 = ($11|0)==(0|0);
      if ($cmp104) {
       $R$3 = 0;
       break;
      } else {
       $R$1 = $11;$RP$1 = $child;
      }
     } else {
      $R$1 = $10;$RP$1 = $arrayidx99;
     }
     while(1) {
      $arrayidx108 = ((($R$1)) + 20|0);
      $12 = HEAP32[$arrayidx108>>2]|0;
      $cmp109 = ($12|0)==(0|0);
      if (!($cmp109)) {
       $R$1 = $12;$RP$1 = $arrayidx108;
       continue;
      }
      $arrayidx113 = ((($R$1)) + 16|0);
      $13 = HEAP32[$arrayidx113>>2]|0;
      $cmp114 = ($13|0)==(0|0);
      if ($cmp114) {
       break;
      } else {
       $R$1 = $13;$RP$1 = $arrayidx113;
      }
     }
     HEAP32[$RP$1>>2] = 0;
     $R$3 = $R$1;
    } else {
     $fd78 = ((($add$ptr16)) + 8|0);
     $9 = HEAP32[$fd78>>2]|0;
     $bk94 = ((($9)) + 12|0);
     HEAP32[$bk94>>2] = $8;
     $fd95 = ((($8)) + 8|0);
     HEAP32[$fd95>>2] = $9;
     $R$3 = $8;
    }
   } while(0);
   $cmp127 = ($7|0)==(0|0);
   if ($cmp127) {
    $21 = $add$ptr16;$p$1 = $add$ptr16;$psize$1 = $add17;
   } else {
    $index = ((($add$ptr16)) + 28|0);
    $14 = HEAP32[$index>>2]|0;
    $arrayidx130 = (94872 + ($14<<2)|0);
    $15 = HEAP32[$arrayidx130>>2]|0;
    $cmp131 = ($add$ptr16|0)==($15|0);
    if ($cmp131) {
     HEAP32[$arrayidx130>>2] = $R$3;
     $cond255 = ($R$3|0)==(0|0);
     if ($cond255) {
      $shl138 = 1 << $14;
      $neg139 = $shl138 ^ -1;
      $16 = HEAP32[(94572)>>2]|0;
      $and140 = $16 & $neg139;
      HEAP32[(94572)>>2] = $and140;
      $21 = $add$ptr16;$p$1 = $add$ptr16;$psize$1 = $add17;
      break;
     }
    } else {
     $arrayidx149 = ((($7)) + 16|0);
     $17 = HEAP32[$arrayidx149>>2]|0;
     $not$cmp150 = ($17|0)!=($add$ptr16|0);
     $$sink = $not$cmp150&1;
     $arrayidx157 = (((($7)) + 16|0) + ($$sink<<2)|0);
     HEAP32[$arrayidx157>>2] = $R$3;
     $cmp162 = ($R$3|0)==(0|0);
     if ($cmp162) {
      $21 = $add$ptr16;$p$1 = $add$ptr16;$psize$1 = $add17;
      break;
     }
    }
    $parent170 = ((($R$3)) + 24|0);
    HEAP32[$parent170>>2] = $7;
    $child171 = ((($add$ptr16)) + 16|0);
    $18 = HEAP32[$child171>>2]|0;
    $cmp173 = ($18|0)==(0|0);
    if (!($cmp173)) {
     $arrayidx182 = ((($R$3)) + 16|0);
     HEAP32[$arrayidx182>>2] = $18;
     $parent183 = ((($18)) + 24|0);
     HEAP32[$parent183>>2] = $R$3;
    }
    $arrayidx188 = ((($child171)) + 4|0);
    $19 = HEAP32[$arrayidx188>>2]|0;
    $cmp189 = ($19|0)==(0|0);
    if ($cmp189) {
     $21 = $add$ptr16;$p$1 = $add$ptr16;$psize$1 = $add17;
    } else {
     $arrayidx198 = ((($R$3)) + 20|0);
     HEAP32[$arrayidx198>>2] = $19;
     $parent199 = ((($19)) + 24|0);
     HEAP32[$parent199>>2] = $R$3;
     $21 = $add$ptr16;$p$1 = $add$ptr16;$psize$1 = $add17;
    }
   }
  } else {
   $21 = $add$ptr;$p$1 = $add$ptr;$psize$1 = $and5;
  }
 } while(0);
 $cmp228 = ($21>>>0)<($add$ptr6>>>0);
 if (!($cmp228)) {
  return;
 }
 $head231 = ((($add$ptr6)) + 4|0);
 $22 = HEAP32[$head231>>2]|0;
 $and232 = $22 & 1;
 $tobool233 = ($and232|0)==(0);
 if ($tobool233) {
  return;
 }
 $and240 = $22 & 2;
 $tobool241 = ($and240|0)==(0);
 if ($tobool241) {
  $23 = HEAP32[(94592)>>2]|0;
  $cmp243 = ($add$ptr6|0)==($23|0);
  $24 = HEAP32[(94588)>>2]|0;
  if ($cmp243) {
   $25 = HEAP32[(94580)>>2]|0;
   $add246 = (($25) + ($psize$1))|0;
   HEAP32[(94580)>>2] = $add246;
   HEAP32[(94592)>>2] = $p$1;
   $or247 = $add246 | 1;
   $head248 = ((($p$1)) + 4|0);
   HEAP32[$head248>>2] = $or247;
   $cmp249 = ($p$1|0)==($24|0);
   if (!($cmp249)) {
    return;
   }
   HEAP32[(94588)>>2] = 0;
   HEAP32[(94576)>>2] = 0;
   return;
  }
  $cmp255 = ($add$ptr6|0)==($24|0);
  if ($cmp255) {
   $26 = HEAP32[(94576)>>2]|0;
   $add258 = (($26) + ($psize$1))|0;
   HEAP32[(94576)>>2] = $add258;
   HEAP32[(94588)>>2] = $21;
   $or259 = $add258 | 1;
   $head260 = ((($p$1)) + 4|0);
   HEAP32[$head260>>2] = $or259;
   $add$ptr261 = (($21) + ($add258)|0);
   HEAP32[$add$ptr261>>2] = $add258;
   return;
  }
  $and266 = $22 & -8;
  $add267 = (($and266) + ($psize$1))|0;
  $shr268 = $22 >>> 3;
  $cmp269 = ($22>>>0)<(256);
  do {
   if ($cmp269) {
    $fd273 = ((($add$ptr6)) + 8|0);
    $27 = HEAP32[$fd273>>2]|0;
    $bk275 = ((($add$ptr6)) + 12|0);
    $28 = HEAP32[$bk275>>2]|0;
    $cmp296 = ($28|0)==($27|0);
    if ($cmp296) {
     $shl299 = 1 << $shr268;
     $neg300 = $shl299 ^ -1;
     $29 = HEAP32[23642]|0;
     $and301 = $29 & $neg300;
     HEAP32[23642] = $and301;
     break;
    } else {
     $bk321 = ((($27)) + 12|0);
     HEAP32[$bk321>>2] = $28;
     $fd322 = ((($28)) + 8|0);
     HEAP32[$fd322>>2] = $27;
     break;
    }
   } else {
    $parent331 = ((($add$ptr6)) + 24|0);
    $30 = HEAP32[$parent331>>2]|0;
    $bk333 = ((($add$ptr6)) + 12|0);
    $31 = HEAP32[$bk333>>2]|0;
    $cmp334 = ($31|0)==($add$ptr6|0);
    do {
     if ($cmp334) {
      $child361 = ((($add$ptr6)) + 16|0);
      $arrayidx362 = ((($child361)) + 4|0);
      $33 = HEAP32[$arrayidx362>>2]|0;
      $cmp363 = ($33|0)==(0|0);
      if ($cmp363) {
       $34 = HEAP32[$child361>>2]|0;
       $cmp368 = ($34|0)==(0|0);
       if ($cmp368) {
        $R332$3 = 0;
        break;
       } else {
        $R332$1 = $34;$RP360$1 = $child361;
       }
      } else {
       $R332$1 = $33;$RP360$1 = $arrayidx362;
      }
      while(1) {
       $arrayidx374 = ((($R332$1)) + 20|0);
       $35 = HEAP32[$arrayidx374>>2]|0;
       $cmp375 = ($35|0)==(0|0);
       if (!($cmp375)) {
        $R332$1 = $35;$RP360$1 = $arrayidx374;
        continue;
       }
       $arrayidx379 = ((($R332$1)) + 16|0);
       $36 = HEAP32[$arrayidx379>>2]|0;
       $cmp380 = ($36|0)==(0|0);
       if ($cmp380) {
        break;
       } else {
        $R332$1 = $36;$RP360$1 = $arrayidx379;
       }
      }
      HEAP32[$RP360$1>>2] = 0;
      $R332$3 = $R332$1;
     } else {
      $fd338 = ((($add$ptr6)) + 8|0);
      $32 = HEAP32[$fd338>>2]|0;
      $bk355 = ((($32)) + 12|0);
      HEAP32[$bk355>>2] = $31;
      $fd356 = ((($31)) + 8|0);
      HEAP32[$fd356>>2] = $32;
      $R332$3 = $31;
     }
    } while(0);
    $cmp395 = ($30|0)==(0|0);
    if (!($cmp395)) {
     $index399 = ((($add$ptr6)) + 28|0);
     $37 = HEAP32[$index399>>2]|0;
     $arrayidx400 = (94872 + ($37<<2)|0);
     $38 = HEAP32[$arrayidx400>>2]|0;
     $cmp401 = ($add$ptr6|0)==($38|0);
     if ($cmp401) {
      HEAP32[$arrayidx400>>2] = $R332$3;
      $cond256 = ($R332$3|0)==(0|0);
      if ($cond256) {
       $shl408 = 1 << $37;
       $neg409 = $shl408 ^ -1;
       $39 = HEAP32[(94572)>>2]|0;
       $and410 = $39 & $neg409;
       HEAP32[(94572)>>2] = $and410;
       break;
      }
     } else {
      $arrayidx419 = ((($30)) + 16|0);
      $40 = HEAP32[$arrayidx419>>2]|0;
      $not$cmp420 = ($40|0)!=($add$ptr6|0);
      $$sink4 = $not$cmp420&1;
      $arrayidx427 = (((($30)) + 16|0) + ($$sink4<<2)|0);
      HEAP32[$arrayidx427>>2] = $R332$3;
      $cmp432 = ($R332$3|0)==(0|0);
      if ($cmp432) {
       break;
      }
     }
     $parent442 = ((($R332$3)) + 24|0);
     HEAP32[$parent442>>2] = $30;
     $child443 = ((($add$ptr6)) + 16|0);
     $41 = HEAP32[$child443>>2]|0;
     $cmp445 = ($41|0)==(0|0);
     if (!($cmp445)) {
      $arrayidx454 = ((($R332$3)) + 16|0);
      HEAP32[$arrayidx454>>2] = $41;
      $parent455 = ((($41)) + 24|0);
      HEAP32[$parent455>>2] = $R332$3;
     }
     $arrayidx460 = ((($child443)) + 4|0);
     $42 = HEAP32[$arrayidx460>>2]|0;
     $cmp461 = ($42|0)==(0|0);
     if (!($cmp461)) {
      $arrayidx470 = ((($R332$3)) + 20|0);
      HEAP32[$arrayidx470>>2] = $42;
      $parent471 = ((($42)) + 24|0);
      HEAP32[$parent471>>2] = $R332$3;
     }
    }
   }
  } while(0);
  $or480 = $add267 | 1;
  $head481 = ((($p$1)) + 4|0);
  HEAP32[$head481>>2] = $or480;
  $add$ptr482 = (($21) + ($add267)|0);
  HEAP32[$add$ptr482>>2] = $add267;
  $43 = HEAP32[(94588)>>2]|0;
  $cmp484 = ($p$1|0)==($43|0);
  if ($cmp484) {
   HEAP32[(94576)>>2] = $add267;
   return;
  } else {
   $psize$2 = $add267;
  }
 } else {
  $and495 = $22 & -2;
  HEAP32[$head231>>2] = $and495;
  $or496 = $psize$1 | 1;
  $head497 = ((($p$1)) + 4|0);
  HEAP32[$head497>>2] = $or496;
  $add$ptr498 = (($21) + ($psize$1)|0);
  HEAP32[$add$ptr498>>2] = $psize$1;
  $psize$2 = $psize$1;
 }
 $shr501 = $psize$2 >>> 3;
 $cmp502 = ($psize$2>>>0)<(256);
 if ($cmp502) {
  $shl508 = $shr501 << 1;
  $arrayidx509 = (94608 + ($shl508<<2)|0);
  $44 = HEAP32[23642]|0;
  $shl511 = 1 << $shr501;
  $and512 = $44 & $shl511;
  $tobool513 = ($and512|0)==(0);
  if ($tobool513) {
   $or516 = $44 | $shl511;
   HEAP32[23642] = $or516;
   $$pre = ((($arrayidx509)) + 8|0);
   $$pre$phiZ2D = $$pre;$F510$0 = $arrayidx509;
  } else {
   $45 = ((($arrayidx509)) + 8|0);
   $46 = HEAP32[$45>>2]|0;
   $$pre$phiZ2D = $45;$F510$0 = $46;
  }
  HEAP32[$$pre$phiZ2D>>2] = $p$1;
  $bk529 = ((($F510$0)) + 12|0);
  HEAP32[$bk529>>2] = $p$1;
  $fd530 = ((($p$1)) + 8|0);
  HEAP32[$fd530>>2] = $F510$0;
  $bk531 = ((($p$1)) + 12|0);
  HEAP32[$bk531>>2] = $arrayidx509;
  return;
 }
 $shr535 = $psize$2 >>> 8;
 $cmp536 = ($shr535|0)==(0);
 if ($cmp536) {
  $I534$0 = 0;
 } else {
  $cmp540 = ($psize$2>>>0)>(16777215);
  if ($cmp540) {
   $I534$0 = 31;
  } else {
   $sub = (($shr535) + 1048320)|0;
   $shr544 = $sub >>> 16;
   $and545 = $shr544 & 8;
   $shl546 = $shr535 << $and545;
   $sub547 = (($shl546) + 520192)|0;
   $shr548 = $sub547 >>> 16;
   $and549 = $shr548 & 4;
   $add550 = $and549 | $and545;
   $shl551 = $shl546 << $and549;
   $sub552 = (($shl551) + 245760)|0;
   $shr553 = $sub552 >>> 16;
   $and554 = $shr553 & 2;
   $add555 = $add550 | $and554;
   $sub556 = (14 - ($add555))|0;
   $shl557 = $shl551 << $and554;
   $shr558 = $shl557 >>> 15;
   $add559 = (($sub556) + ($shr558))|0;
   $shl560 = $add559 << 1;
   $add561 = (($add559) + 7)|0;
   $shr562 = $psize$2 >>> $add561;
   $and563 = $shr562 & 1;
   $add564 = $and563 | $shl560;
   $I534$0 = $add564;
  }
 }
 $arrayidx567 = (94872 + ($I534$0<<2)|0);
 $index568 = ((($p$1)) + 28|0);
 HEAP32[$index568>>2] = $I534$0;
 $child569 = ((($p$1)) + 16|0);
 $arrayidx570 = ((($p$1)) + 20|0);
 HEAP32[$arrayidx570>>2] = 0;
 HEAP32[$child569>>2] = 0;
 $47 = HEAP32[(94572)>>2]|0;
 $shl573 = 1 << $I534$0;
 $and574 = $47 & $shl573;
 $tobool575 = ($and574|0)==(0);
 do {
  if ($tobool575) {
   $or578 = $47 | $shl573;
   HEAP32[(94572)>>2] = $or578;
   HEAP32[$arrayidx567>>2] = $p$1;
   $parent579 = ((($p$1)) + 24|0);
   HEAP32[$parent579>>2] = $arrayidx567;
   $bk580 = ((($p$1)) + 12|0);
   HEAP32[$bk580>>2] = $p$1;
   $fd581 = ((($p$1)) + 8|0);
   HEAP32[$fd581>>2] = $p$1;
  } else {
   $48 = HEAP32[$arrayidx567>>2]|0;
   $cmp584 = ($I534$0|0)==(31);
   $shr586 = $I534$0 >>> 1;
   $sub589 = (25 - ($shr586))|0;
   $cond = $cmp584 ? 0 : $sub589;
   $shl590 = $psize$2 << $cond;
   $K583$0 = $shl590;$T$0 = $48;
   while(1) {
    $head591 = ((($T$0)) + 4|0);
    $49 = HEAP32[$head591>>2]|0;
    $and592 = $49 & -8;
    $cmp593 = ($and592|0)==($psize$2|0);
    if ($cmp593) {
     label = 73;
     break;
    }
    $shr597 = $K583$0 >>> 31;
    $arrayidx599 = (((($T$0)) + 16|0) + ($shr597<<2)|0);
    $shl600 = $K583$0 << 1;
    $50 = HEAP32[$arrayidx599>>2]|0;
    $cmp601 = ($50|0)==(0|0);
    if ($cmp601) {
     label = 72;
     break;
    } else {
     $K583$0 = $shl600;$T$0 = $50;
    }
   }
   if ((label|0) == 72) {
    HEAP32[$arrayidx599>>2] = $p$1;
    $parent610 = ((($p$1)) + 24|0);
    HEAP32[$parent610>>2] = $T$0;
    $bk611 = ((($p$1)) + 12|0);
    HEAP32[$bk611>>2] = $p$1;
    $fd612 = ((($p$1)) + 8|0);
    HEAP32[$fd612>>2] = $p$1;
    break;
   }
   else if ((label|0) == 73) {
    $fd620 = ((($T$0)) + 8|0);
    $51 = HEAP32[$fd620>>2]|0;
    $bk631 = ((($51)) + 12|0);
    HEAP32[$bk631>>2] = $p$1;
    HEAP32[$fd620>>2] = $p$1;
    $fd633 = ((($p$1)) + 8|0);
    HEAP32[$fd633>>2] = $51;
    $bk634 = ((($p$1)) + 12|0);
    HEAP32[$bk634>>2] = $T$0;
    $parent635 = ((($p$1)) + 24|0);
    HEAP32[$parent635>>2] = 0;
    break;
   }
  }
 } while(0);
 $52 = HEAP32[(94600)>>2]|0;
 $dec = (($52) + -1)|0;
 HEAP32[(94600)>>2] = $dec;
 $cmp640 = ($dec|0)==(0);
 if ($cmp640) {
  $sp$0$in$i = (95024);
 } else {
  return;
 }
 while(1) {
  $sp$0$i = HEAP32[$sp$0$in$i>>2]|0;
  $cmp$i = ($sp$0$i|0)==(0|0);
  $next4$i = ((($sp$0$i)) + 8|0);
  if ($cmp$i) {
   break;
  } else {
   $sp$0$in$i = $next4$i;
  }
 }
 HEAP32[(94600)>>2] = -1;
 return;
}
function _calloc($n_elements,$elem_size) {
 $n_elements = $n_elements|0;
 $elem_size = $elem_size|0;
 var $0 = 0, $and6 = 0, $call = 0, $cmp = 0, $cmp1 = 0, $cmp4 = 0, $cmp7 = 0, $div = 0, $head = 0, $mul = 0, $mul$ = 0, $or = 0, $req$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($n_elements|0)==(0);
 if ($cmp) {
  $req$0 = 0;
 } else {
  $mul = Math_imul($elem_size, $n_elements)|0;
  $or = $elem_size | $n_elements;
  $tobool = ($or>>>0)>(65535);
  if ($tobool) {
   $div = (($mul>>>0) / ($n_elements>>>0))&-1;
   $cmp1 = ($div|0)==($elem_size|0);
   $mul$ = $cmp1 ? $mul : -1;
   $req$0 = $mul$;
  } else {
   $req$0 = $mul;
  }
 }
 $call = (_malloc($req$0)|0);
 $cmp4 = ($call|0)==(0|0);
 if ($cmp4) {
  return ($call|0);
 }
 $head = ((($call)) + -4|0);
 $0 = HEAP32[$head>>2]|0;
 $and6 = $0 & 3;
 $cmp7 = ($and6|0)==(0);
 if ($cmp7) {
  return ($call|0);
 }
 _memset(($call|0),0,($req$0|0))|0;
 return ($call|0);
}
function _emscripten_get_global_libc() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (95064|0);
}
function ___stdio_close($f) {
 $f = $f|0;
 var $0 = 0, $call = 0, $call1 = 0, $call2 = 0, $fd = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $fd = ((($f)) + 60|0);
 $0 = HEAP32[$fd>>2]|0;
 $call = (_dummy_570($0)|0);
 HEAP32[$vararg_buffer>>2] = $call;
 $call1 = (___syscall6(6,($vararg_buffer|0))|0);
 $call2 = (___syscall_ret($call1)|0);
 STACKTOP = sp;return ($call2|0);
}
function ___stdio_write($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $add = 0, $add$ptr = 0, $add$ptr32 = 0, $buf8 = 0, $buf_size = 0, $call = 0, $call40 = 0;
 var $call7 = 0, $call741 = 0, $call746 = 0, $cmp = 0, $cmp12 = 0, $cmp17 = 0, $cmp24 = 0, $cmp42 = 0, $cnt$0 = 0, $dec = 0, $fd = 0, $incdec$ptr = 0, $iov$043 = 0, $iov$1 = 0, $iov_base2 = 0, $iov_len = 0, $iov_len19 = 0, $iov_len23 = 0, $iov_len3 = 0, $iov_len36 = 0;
 var $iovcnt$045 = 0, $iovcnt$1 = 0, $iovs = 0, $or = 0, $rem$044 = 0, $retval$0 = 0, $sub = 0, $sub$ptr$sub = 0, $sub21 = 0, $sub28 = 0, $sub37 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, $wbase = 0, $wend = 0, $wend14 = 0;
 var $wpos = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $iovs = sp + 32|0;
 $wbase = ((($f)) + 28|0);
 $0 = HEAP32[$wbase>>2]|0;
 HEAP32[$iovs>>2] = $0;
 $iov_len = ((($iovs)) + 4|0);
 $wpos = ((($f)) + 20|0);
 $1 = HEAP32[$wpos>>2]|0;
 $sub$ptr$sub = (($1) - ($0))|0;
 HEAP32[$iov_len>>2] = $sub$ptr$sub;
 $iov_base2 = ((($iovs)) + 8|0);
 HEAP32[$iov_base2>>2] = $buf;
 $iov_len3 = ((($iovs)) + 12|0);
 HEAP32[$iov_len3>>2] = $len;
 $add = (($sub$ptr$sub) + ($len))|0;
 $fd = ((($f)) + 60|0);
 $2 = HEAP32[$fd>>2]|0;
 $3 = $iovs;
 HEAP32[$vararg_buffer>>2] = $2;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $3;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 2;
 $call40 = (___syscall146(146,($vararg_buffer|0))|0);
 $call741 = (___syscall_ret($call40)|0);
 $cmp42 = ($add|0)==($call741|0);
 L1: do {
  if ($cmp42) {
   label = 3;
  } else {
   $call746 = $call741;$iov$043 = $iovs;$iovcnt$045 = 2;$rem$044 = $add;
   while(1) {
    $cmp12 = ($call746|0)<(0);
    if ($cmp12) {
     break;
    }
    $sub21 = (($rem$044) - ($call746))|0;
    $iov_len23 = ((($iov$043)) + 4|0);
    $8 = HEAP32[$iov_len23>>2]|0;
    $cmp24 = ($call746>>>0)>($8>>>0);
    $incdec$ptr = ((($iov$043)) + 8|0);
    $iov$1 = $cmp24 ? $incdec$ptr : $iov$043;
    $dec = $cmp24 << 31 >> 31;
    $iovcnt$1 = (($dec) + ($iovcnt$045))|0;
    $sub28 = $cmp24 ? $8 : 0;
    $cnt$0 = (($call746) - ($sub28))|0;
    $9 = HEAP32[$iov$1>>2]|0;
    $add$ptr32 = (($9) + ($cnt$0)|0);
    HEAP32[$iov$1>>2] = $add$ptr32;
    $iov_len36 = ((($iov$1)) + 4|0);
    $10 = HEAP32[$iov_len36>>2]|0;
    $sub37 = (($10) - ($cnt$0))|0;
    HEAP32[$iov_len36>>2] = $sub37;
    $11 = HEAP32[$fd>>2]|0;
    $12 = $iov$1;
    HEAP32[$vararg_buffer3>>2] = $11;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $12;
    $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
    HEAP32[$vararg_ptr7>>2] = $iovcnt$1;
    $call = (___syscall146(146,($vararg_buffer3|0))|0);
    $call7 = (___syscall_ret($call)|0);
    $cmp = ($sub21|0)==($call7|0);
    if ($cmp) {
     label = 3;
     break L1;
    } else {
     $call746 = $call7;$iov$043 = $iov$1;$iovcnt$045 = $iovcnt$1;$rem$044 = $sub21;
    }
   }
   $wend14 = ((($f)) + 16|0);
   HEAP32[$wend14>>2] = 0;
   HEAP32[$wbase>>2] = 0;
   HEAP32[$wpos>>2] = 0;
   $6 = HEAP32[$f>>2]|0;
   $or = $6 | 32;
   HEAP32[$f>>2] = $or;
   $cmp17 = ($iovcnt$045|0)==(2);
   if ($cmp17) {
    $retval$0 = 0;
   } else {
    $iov_len19 = ((($iov$043)) + 4|0);
    $7 = HEAP32[$iov_len19>>2]|0;
    $sub = (($len) - ($7))|0;
    $retval$0 = $sub;
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $buf8 = ((($f)) + 44|0);
  $4 = HEAP32[$buf8>>2]|0;
  $buf_size = ((($f)) + 48|0);
  $5 = HEAP32[$buf_size>>2]|0;
  $add$ptr = (($4) + ($5)|0);
  $wend = ((($f)) + 16|0);
  HEAP32[$wend>>2] = $add$ptr;
  HEAP32[$wbase>>2] = $4;
  HEAP32[$wpos>>2] = $4;
  $retval$0 = $len;
 }
 STACKTOP = sp;return ($retval$0|0);
}
function ___stdio_seek($f,$off,$whence) {
 $f = $f|0;
 $off = $off|0;
 $whence = $whence|0;
 var $$pre = 0, $0 = 0, $1 = 0, $2 = 0, $call = 0, $call1 = 0, $cmp = 0, $fd = 0, $ret = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $ret = sp + 20|0;
 $fd = ((($f)) + 60|0);
 $0 = HEAP32[$fd>>2]|0;
 $1 = $ret;
 HEAP32[$vararg_buffer>>2] = $0;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 0;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $off;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $1;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $whence;
 $call = (___syscall140(140,($vararg_buffer|0))|0);
 $call1 = (___syscall_ret($call)|0);
 $cmp = ($call1|0)<(0);
 if ($cmp) {
  HEAP32[$ret>>2] = -1;
  $2 = -1;
 } else {
  $$pre = HEAP32[$ret>>2]|0;
  $2 = $$pre;
 }
 STACKTOP = sp;return ($2|0);
}
function ___syscall_ret($r) {
 $r = $r|0;
 var $call = 0, $cmp = 0, $retval$0 = 0, $sub = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($r>>>0)>(4294963200);
 if ($cmp) {
  $sub = (0 - ($r))|0;
  $call = (___errno_location()|0);
  HEAP32[$call>>2] = $sub;
  $retval$0 = -1;
 } else {
  $retval$0 = $r;
 }
 return ($retval$0|0);
}
function ___errno_location() {
 var $call = 0, $errno_val = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (___pthread_self_103()|0);
 $errno_val = ((($call)) + 64|0);
 return ($errno_val|0);
}
function ___pthread_self_103() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_pthread_self()|0);
 return ($call|0);
}
function _pthread_self() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (11304|0);
}
function _dummy_570($fd) {
 $fd = $fd|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($fd|0);
}
function ___stdout_write($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, $1 = 0, $2 = 0, $and = 0, $call = 0, $call3 = 0, $fd = 0, $lbf = 0, $tobool = 0, $tobool2 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $write = 0, $wsz = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $wsz = sp + 16|0;
 $write = ((($f)) + 36|0);
 HEAP32[$write>>2] = 1;
 $0 = HEAP32[$f>>2]|0;
 $and = $0 & 64;
 $tobool = ($and|0)==(0);
 if ($tobool) {
  $fd = ((($f)) + 60|0);
  $1 = HEAP32[$fd>>2]|0;
  $2 = $wsz;
  HEAP32[$vararg_buffer>>2] = $1;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 21523;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $2;
  $call = (___syscall54(54,($vararg_buffer|0))|0);
  $tobool2 = ($call|0)==(0);
  if (!($tobool2)) {
   $lbf = ((($f)) + 75|0);
   HEAP8[$lbf>>0] = -1;
  }
 }
 $call3 = (___stdio_write($f,$buf,$len)|0);
 STACKTOP = sp;return ($call3|0);
}
function _tolower($c) {
 $c = $c|0;
 var $call = 0, $or = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_isupper($c)|0);
 $tobool = ($call|0)==(0);
 $or = $c | 32;
 $retval$0 = $tobool ? $c : $or;
 return ($retval$0|0);
}
function _isupper($c) {
 $c = $c|0;
 var $cmp = 0, $conv = 0, $sub = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $sub = (($c) + -65)|0;
 $cmp = ($sub>>>0)<(26);
 $conv = $cmp&1;
 return ($conv|0);
}
function _strcmp($l,$r) {
 $l = $l|0;
 $r = $r|0;
 var $$lcssa = 0, $$lcssa6 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $cmp = 0, $cmp7 = 0, $conv5 = 0, $conv6 = 0, $incdec$ptr = 0, $incdec$ptr4 = 0, $l$addr$010 = 0, $or$cond = 0, $or$cond9 = 0, $r$addr$011 = 0, $sub = 0, $tobool = 0, $tobool8 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$l>>0]|0;
 $1 = HEAP8[$r>>0]|0;
 $cmp7 = ($0<<24>>24)!=($1<<24>>24);
 $tobool8 = ($0<<24>>24)==(0);
 $or$cond9 = $tobool8 | $cmp7;
 if ($or$cond9) {
  $$lcssa = $1;$$lcssa6 = $0;
 } else {
  $l$addr$010 = $l;$r$addr$011 = $r;
  while(1) {
   $incdec$ptr = ((($l$addr$010)) + 1|0);
   $incdec$ptr4 = ((($r$addr$011)) + 1|0);
   $2 = HEAP8[$incdec$ptr>>0]|0;
   $3 = HEAP8[$incdec$ptr4>>0]|0;
   $cmp = ($2<<24>>24)!=($3<<24>>24);
   $tobool = ($2<<24>>24)==(0);
   $or$cond = $tobool | $cmp;
   if ($or$cond) {
    $$lcssa = $3;$$lcssa6 = $2;
    break;
   } else {
    $l$addr$010 = $incdec$ptr;$r$addr$011 = $incdec$ptr4;
   }
  }
 }
 $conv5 = $$lcssa6&255;
 $conv6 = $$lcssa&255;
 $sub = (($conv5) - ($conv6))|0;
 return ($sub|0);
}
function _sprintf($s,$fmt,$varargs) {
 $s = $s|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $ap = 0, $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $call = (_vsprintf($s,$fmt,$ap)|0);
 STACKTOP = sp;return ($call|0);
}
function _vsprintf($s,$fmt,$ap) {
 $s = $s|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_vsnprintf($s,2147483647,$fmt,$ap)|0);
 return ($call|0);
}
function _vsnprintf($s,$n,$fmt,$ap) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $0 = 0, $1 = 0, $add$ptr = 0, $arrayidx = 0, $b = 0, $buf = 0, $buf_size = 0, $call = 0, $call10 = 0, $cmp = 0, $cmp16 = 0, $cmp4 = 0, $f = 0, $n$addr$0 = 0, $retval$0 = 0, $s$addr$0 = 0, $sub = 0, $sub$ptr$rhs$cast = 0, $sub17 = 0, $sub3 = 0;
 var $sub3$n$addr$0 = 0, $tobool = 0, $tobool11 = 0, $wbase = 0, $wend = 0, $wpos = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $b = sp + 124|0;
 $f = sp;
 dest=$f; src=11676; stop=dest+124|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $sub = (($n) + -1)|0;
 $cmp = ($sub>>>0)>(2147483646);
 if ($cmp) {
  $tobool = ($n|0)==(0);
  if ($tobool) {
   $n$addr$0 = 1;$s$addr$0 = $b;
   label = 4;
  } else {
   $call = (___errno_location()|0);
   HEAP32[$call>>2] = 75;
   $retval$0 = -1;
  }
 } else {
  $n$addr$0 = $n;$s$addr$0 = $s;
  label = 4;
 }
 if ((label|0) == 4) {
  $sub$ptr$rhs$cast = $s$addr$0;
  $sub3 = (-2 - ($sub$ptr$rhs$cast))|0;
  $cmp4 = ($n$addr$0>>>0)>($sub3>>>0);
  $sub3$n$addr$0 = $cmp4 ? $sub3 : $n$addr$0;
  $buf_size = ((($f)) + 48|0);
  HEAP32[$buf_size>>2] = $sub3$n$addr$0;
  $wpos = ((($f)) + 20|0);
  HEAP32[$wpos>>2] = $s$addr$0;
  $buf = ((($f)) + 44|0);
  HEAP32[$buf>>2] = $s$addr$0;
  $add$ptr = (($s$addr$0) + ($sub3$n$addr$0)|0);
  $wend = ((($f)) + 16|0);
  HEAP32[$wend>>2] = $add$ptr;
  $wbase = ((($f)) + 28|0);
  HEAP32[$wbase>>2] = $add$ptr;
  $call10 = (_vfprintf($f,$fmt,$ap)|0);
  $tobool11 = ($sub3$n$addr$0|0)==(0);
  if ($tobool11) {
   $retval$0 = $call10;
  } else {
   $0 = HEAP32[$wpos>>2]|0;
   $1 = HEAP32[$wend>>2]|0;
   $cmp16 = ($0|0)==($1|0);
   $sub17 = $cmp16 << 31 >> 31;
   $arrayidx = (($0) + ($sub17)|0);
   HEAP8[$arrayidx>>0] = 0;
   $retval$0 = $call10;
  }
 }
 STACKTOP = sp;return ($retval$0|0);
}
function _vfprintf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$call21 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $add$ptr = 0, $and = 0, $and11 = 0, $and36 = 0, $ap2 = 0, $buf = 0, $buf_size = 0, $call = 0, $call21 = 0, $call2130 = 0, $call6 = 0;
 var $cmp = 0, $cmp5 = 0, $cmp7 = 0, $cond = 0, $internal_buf = 0, $lock = 0, $mode = 0, $nl_arg = 0, $nl_type = 0, $or = 0, $ret$1 = 0, $ret$1$ = 0, $retval$0 = 0, $tobool = 0, $tobool22 = 0, $tobool26 = 0, $tobool37 = 0, $tobool41 = 0, $vacopy_currentptr = 0, $wbase = 0;
 var $wend = 0, $wpos = 0, $write = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $ap2 = sp + 120|0;
 $nl_type = sp + 80|0;
 $nl_arg = sp;
 $internal_buf = sp + 136|0;
 dest=$nl_type; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$ap>>2]|0;
 HEAP32[$ap2>>2] = $vacopy_currentptr;
 $call = (_printf_core(0,$fmt,$ap2,$nl_arg,$nl_type)|0);
 $cmp = ($call|0)<(0);
 if ($cmp) {
  $retval$0 = -1;
 } else {
  $lock = ((($f)) + 76|0);
  $0 = HEAP32[$lock>>2]|0;
  $cmp5 = ($0|0)>(-1);
  if ($cmp5) {
   $call6 = (___lockfile($f)|0);
   $cond = $call6;
  } else {
   $cond = 0;
  }
  $1 = HEAP32[$f>>2]|0;
  $and = $1 & 32;
  $mode = ((($f)) + 74|0);
  $2 = HEAP8[$mode>>0]|0;
  $cmp7 = ($2<<24>>24)<(1);
  if ($cmp7) {
   $and11 = $1 & -33;
   HEAP32[$f>>2] = $and11;
  }
  $buf_size = ((($f)) + 48|0);
  $3 = HEAP32[$buf_size>>2]|0;
  $tobool = ($3|0)==(0);
  if ($tobool) {
   $buf = ((($f)) + 44|0);
   $4 = HEAP32[$buf>>2]|0;
   HEAP32[$buf>>2] = $internal_buf;
   $wbase = ((($f)) + 28|0);
   HEAP32[$wbase>>2] = $internal_buf;
   $wpos = ((($f)) + 20|0);
   HEAP32[$wpos>>2] = $internal_buf;
   HEAP32[$buf_size>>2] = 80;
   $add$ptr = ((($internal_buf)) + 80|0);
   $wend = ((($f)) + 16|0);
   HEAP32[$wend>>2] = $add$ptr;
   $call21 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
   $tobool22 = ($4|0)==(0|0);
   if ($tobool22) {
    $ret$1 = $call21;
   } else {
    $write = ((($f)) + 36|0);
    $5 = HEAP32[$write>>2]|0;
    (FUNCTION_TABLE_iiii[$5 & 7]($f,0,0)|0);
    $6 = HEAP32[$wpos>>2]|0;
    $tobool26 = ($6|0)==(0|0);
    $$call21 = $tobool26 ? -1 : $call21;
    HEAP32[$buf>>2] = $4;
    HEAP32[$buf_size>>2] = 0;
    HEAP32[$wend>>2] = 0;
    HEAP32[$wbase>>2] = 0;
    HEAP32[$wpos>>2] = 0;
    $ret$1 = $$call21;
   }
  } else {
   $call2130 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
   $ret$1 = $call2130;
  }
  $7 = HEAP32[$f>>2]|0;
  $and36 = $7 & 32;
  $tobool37 = ($and36|0)==(0);
  $ret$1$ = $tobool37 ? $ret$1 : -1;
  $or = $7 | $and;
  HEAP32[$f>>2] = $or;
  $tobool41 = ($cond|0)==(0);
  if (!($tobool41)) {
   ___unlockfile($f);
  }
  $retval$0 = $ret$1$;
 }
 STACKTOP = sp;return ($retval$0|0);
}
function _printf_core($f,$fmt,$ap,$nl_arg,$nl_type) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 $nl_arg = $nl_arg|0;
 $nl_type = $nl_type|0;
 var $$ = 0, $$$ = 0, $$194$ = 0, $$197 = 0, $$add$ptr258 = 0, $$l10n$0 = 0, $$lcssa199 = 0, $$pre = 0, $$pre247 = 0, $$pre248 = 0, $$pre248$pre = 0, $$pre249 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0.0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $a$0 = 0, $a$0$add$ptr206 = 0, $a$1 = 0, $a$2 = 0, $add = 0, $add$ptr = 0, $add$ptr139 = 0, $add$ptr206 = 0, $add$ptr258 = 0, $add$ptr341 = 0, $add$ptr360 = 0, $add$ptr43 = 0, $add$ptr43$arrayidx31 = 0, $add$ptr474 = 0, $add$ptr88 = 0, $add270 = 0, $add323 = 0;
 var $add396 = 0, $add413 = 0, $add442 = 0, $and = 0, $and211 = 0, $and215 = 0, $and217 = 0, $and220 = 0, $and250 = 0, $and255 = 0, $and264 = 0, $and290 = 0, $and295 = 0, $and310 = 0, $and310$fl$4 = 0, $arg = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0;
 var $argpos$0 = 0, $arrayidx114 = 0, $arrayidx119 = 0, $arrayidx124 = 0, $arrayidx132 = 0, $arrayidx16 = 0, $arrayidx174 = 0, $arrayidx193 = 0, $arrayidx31 = 0, $arrayidx35 = 0, $arrayidx371 = 0, $arrayidx470 = 0, $arrayidx482 = 0, $arrayidx68 = 0, $arrayidx73 = 0, $arrayidx81 = 0, $buf = 0, $call = 0, $call104 = 0, $call160 = 0;
 var $call345 = 0, $call346 = 0, $call357 = 0, $call385 = 0, $call412 = 0, $call430 = 0, $cmp = 0, $cmp1 = 0, $cmp105 = 0, $cmp111 = 0, $cmp116 = 0, $cmp126 = 0, $cmp13 = 0, $cmp166 = 0, $cmp177 = 0, $cmp18 = 0, $cmp182 = 0, $cmp185 = 0, $cmp212 = 0, $cmp241 = 0;
 var $cmp271 = 0, $cmp307 = 0, $cmp324 = 0, $cmp37 = 0, $cmp378 = 0, $cmp378227 = 0, $cmp386 = 0, $cmp391 = 0, $cmp398 = 0, $cmp405 = 0, $cmp405237 = 0, $cmp414 = 0, $cmp422 = 0, $cmp435 = 0, $cmp443 = 0, $cmp467 = 0, $cmp479 = 0, $cmp50 = 0, $cmp50217 = 0, $cmp65 = 0;
 var $cmp75 = 0, $cmp97 = 0, $cnt$0 = 0, $cnt$1 = 0, $cond149 = 0, $cond246 = 0, $cond355 = 0, $cond427 = 0, $conv120 = 0, $conv134 = 0, $conv164 = 0, $conv172 = 0, $conv175 = 0, $conv208 = 0, $conv230 = 0, $conv233 = 0, $conv32 = 0, $conv48 = 0, $conv48215 = 0, $conv69 = 0;
 var $conv83 = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $fl$0$lcssa = 0, $fl$0219 = 0, $fl$1 = 0, $fl$1$and220 = 0, $fl$3 = 0, $fl$4 = 0, $fl$6 = 0, $i$0$lcssa = 0, $i$0$lcssa256 = 0;
 var $i$0229 = 0, $i$1238 = 0, $i$2210 = 0, $i$3207 = 0, $i137 = 0, $i86 = 0, $inc = 0, $inc489 = 0, $incdec$ptr = 0, $incdec$ptr159 = 0, $incdec$ptr171 = 0, $incdec$ptr23 = 0, $incdec$ptr384 = 0, $incdec$ptr411 = 0, $incdec$ptr62 = 0, $isdigit = 0, $isdigit188 = 0, $isdigit190 = 0, $isdigittmp = 0, $isdigittmp$ = 0;
 var $isdigittmp187 = 0, $isdigittmp189 = 0, $l$0 = 0, $l$1228 = 0, $l$2 = 0, $l10n$0 = 0, $l10n$0$phi = 0, $l10n$1 = 0, $l10n$2 = 0, $l10n$3 = 0, $lnot = 0, $lnot$ext = 0, $lnot484 = 0, $mb = 0, $narrow = 0, $or = 0, $or$cond = 0, $or$cond192 = 0, $or$cond193 = 0, $or$cond195 = 0;
 var $or100 = 0, $or100$fl$0 = 0, $or247 = 0, $p$0 = 0, $p$0$p$0$add270 = 0, $p$1 = 0, $p$2 = 0, $p$2$add323 = 0, $p$2$add323$p$2 = 0, $p$3 = 0, $p$4253 = 0, $p$5 = 0, $pl$0 = 0, $pl$1 = 0, $pl$2 = 0, $prefix$0 = 0, $prefix$1 = 0, $prefix$2 = 0, $retval$0 = 0, $s = 0;
 var $shl = 0, $shr = 0, $st$0 = 0, $storemerge = 0, $storemerge186218 = 0, $storemerge191 = 0, $sub = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$lhs$cast318 = 0, $sub$ptr$lhs$cast362 = 0, $sub$ptr$lhs$cast432 = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$rhs$cast268 = 0, $sub$ptr$rhs$cast319 = 0, $sub$ptr$rhs$cast363 = 0, $sub$ptr$rhs$cast433 = 0, $sub$ptr$sub = 0, $sub$ptr$sub269 = 0, $sub$ptr$sub320 = 0, $sub$ptr$sub364 = 0;
 var $sub$ptr$sub434 = 0, $sub$ptr$sub434$p$5 = 0, $sub101 = 0, $sub101$w$0 = 0, $sub135 = 0, $sub165 = 0, $sub173 = 0, $sub176 = 0, $sub390 = 0, $sub49 = 0, $sub49216 = 0, $sub49220 = 0, $sub84 = 0, $t$0 = 0, $t$1 = 0, $tobool = 0, $tobool141 = 0, $tobool179 = 0, $tobool209 = 0, $tobool218 = 0;
 var $tobool25 = 0, $tobool256 = 0, $tobool265 = 0, $tobool28 = 0, $tobool291 = 0, $tobool296 = 0, $tobool315 = 0, $tobool350 = 0, $tobool358 = 0, $tobool381 = 0, $tobool408 = 0, $tobool460 = 0, $tobool463 = 0, $tobool471 = 0, $tobool55 = 0, $tobool90 = 0, $trunc = 0, $w$0 = 0, $w$1 = 0, $w$2 = 0;
 var $wc = 0, $ws$0230 = 0, $ws$1239 = 0, $xor = 0, $xor450 = 0, $xor458 = 0, $z$0$lcssa = 0, $z$0212 = 0, $z$1 = 0, $z$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $s = sp + 16|0;
 $arg = sp;
 $buf = sp + 24|0;
 $wc = sp + 8|0;
 $mb = sp + 20|0;
 HEAP32[$s>>2] = $fmt;
 $tobool25 = ($f|0)!=(0|0);
 $add$ptr206 = ((($buf)) + 40|0);
 $sub$ptr$lhs$cast318 = $add$ptr206;
 $add$ptr341 = ((($buf)) + 39|0);
 $arrayidx371 = ((($wc)) + 4|0);
 $1 = $fmt;$cnt$0 = 0;$l$0 = 0;$l10n$0 = 0;
 L1: while(1) {
  $cmp = ($cnt$0|0)>(-1);
  do {
   if ($cmp) {
    $sub = (2147483647 - ($cnt$0))|0;
    $cmp1 = ($l$0|0)>($sub|0);
    if ($cmp1) {
     $call = (___errno_location()|0);
     HEAP32[$call>>2] = 75;
     $cnt$1 = -1;
     break;
    } else {
     $add = (($l$0) + ($cnt$0))|0;
     $cnt$1 = $add;
     break;
    }
   } else {
    $cnt$1 = $cnt$0;
   }
  } while(0);
  $0 = HEAP8[$1>>0]|0;
  $tobool = ($0<<24>>24)==(0);
  if ($tobool) {
   label = 87;
   break;
  } else {
   $2 = $0;$3 = $1;
  }
  L9: while(1) {
   switch ($2<<24>>24) {
   case 37:  {
    $4 = $3;$z$0212 = $3;
    label = 9;
    break L9;
    break;
   }
   case 0:  {
    $7 = $3;$z$0$lcssa = $3;
    break L9;
    break;
   }
   default: {
   }
   }
   $incdec$ptr = ((($3)) + 1|0);
   HEAP32[$s>>2] = $incdec$ptr;
   $$pre = HEAP8[$incdec$ptr>>0]|0;
   $2 = $$pre;$3 = $incdec$ptr;
  }
  L12: do {
   if ((label|0) == 9) {
    while(1) {
     label = 0;
     $arrayidx16 = ((($4)) + 1|0);
     $5 = HEAP8[$arrayidx16>>0]|0;
     $cmp18 = ($5<<24>>24)==(37);
     if (!($cmp18)) {
      $7 = $4;$z$0$lcssa = $z$0212;
      break L12;
     }
     $incdec$ptr23 = ((($z$0212)) + 1|0);
     $add$ptr = ((($4)) + 2|0);
     HEAP32[$s>>2] = $add$ptr;
     $6 = HEAP8[$add$ptr>>0]|0;
     $cmp13 = ($6<<24>>24)==(37);
     if ($cmp13) {
      $4 = $add$ptr;$z$0212 = $incdec$ptr23;
      label = 9;
     } else {
      $7 = $add$ptr;$z$0$lcssa = $incdec$ptr23;
      break;
     }
    }
   }
  } while(0);
  $sub$ptr$lhs$cast = $z$0$lcssa;
  $sub$ptr$rhs$cast = $1;
  $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
  if ($tobool25) {
   _out($f,$1,$sub$ptr$sub);
  }
  $tobool28 = ($sub$ptr$sub|0)==(0);
  if (!($tobool28)) {
   $l10n$0$phi = $l10n$0;$1 = $7;$cnt$0 = $cnt$1;$l$0 = $sub$ptr$sub;$l10n$0 = $l10n$0$phi;
   continue;
  }
  $arrayidx31 = ((($7)) + 1|0);
  $8 = HEAP8[$arrayidx31>>0]|0;
  $conv32 = $8 << 24 >> 24;
  $isdigittmp = (($conv32) + -48)|0;
  $isdigit = ($isdigittmp>>>0)<(10);
  if ($isdigit) {
   $arrayidx35 = ((($7)) + 2|0);
   $9 = HEAP8[$arrayidx35>>0]|0;
   $cmp37 = ($9<<24>>24)==(36);
   $add$ptr43 = ((($7)) + 3|0);
   $add$ptr43$arrayidx31 = $cmp37 ? $add$ptr43 : $arrayidx31;
   $$l10n$0 = $cmp37 ? 1 : $l10n$0;
   $isdigittmp$ = $cmp37 ? $isdigittmp : -1;
   $argpos$0 = $isdigittmp$;$l10n$1 = $$l10n$0;$storemerge = $add$ptr43$arrayidx31;
  } else {
   $argpos$0 = -1;$l10n$1 = $l10n$0;$storemerge = $arrayidx31;
  }
  HEAP32[$s>>2] = $storemerge;
  $10 = HEAP8[$storemerge>>0]|0;
  $conv48215 = $10 << 24 >> 24;
  $sub49216 = (($conv48215) + -32)|0;
  $cmp50217 = ($sub49216>>>0)<(32);
  L24: do {
   if ($cmp50217) {
    $149 = $10;$fl$0219 = 0;$storemerge186218 = $storemerge;$sub49220 = $sub49216;
    while(1) {
     $shl = 1 << $sub49220;
     $and = $shl & 75913;
     $tobool55 = ($and|0)==(0);
     if ($tobool55) {
      $$lcssa199 = $149;$12 = $storemerge186218;$fl$0$lcssa = $fl$0219;
      break L24;
     }
     $or = $shl | $fl$0219;
     $incdec$ptr62 = ((($storemerge186218)) + 1|0);
     HEAP32[$s>>2] = $incdec$ptr62;
     $11 = HEAP8[$incdec$ptr62>>0]|0;
     $conv48 = $11 << 24 >> 24;
     $sub49 = (($conv48) + -32)|0;
     $cmp50 = ($sub49>>>0)<(32);
     if ($cmp50) {
      $149 = $11;$fl$0219 = $or;$storemerge186218 = $incdec$ptr62;$sub49220 = $sub49;
     } else {
      $$lcssa199 = $11;$12 = $incdec$ptr62;$fl$0$lcssa = $or;
      break;
     }
    }
   } else {
    $$lcssa199 = $10;$12 = $storemerge;$fl$0$lcssa = 0;
   }
  } while(0);
  $cmp65 = ($$lcssa199<<24>>24)==(42);
  if ($cmp65) {
   $arrayidx68 = ((($12)) + 1|0);
   $13 = HEAP8[$arrayidx68>>0]|0;
   $conv69 = $13 << 24 >> 24;
   $isdigittmp189 = (($conv69) + -48)|0;
   $isdigit190 = ($isdigittmp189>>>0)<(10);
   if ($isdigit190) {
    $arrayidx73 = ((($12)) + 2|0);
    $14 = HEAP8[$arrayidx73>>0]|0;
    $cmp75 = ($14<<24>>24)==(36);
    if ($cmp75) {
     $arrayidx81 = (($nl_type) + ($isdigittmp189<<2)|0);
     HEAP32[$arrayidx81>>2] = 10;
     $15 = HEAP8[$arrayidx68>>0]|0;
     $conv83 = $15 << 24 >> 24;
     $sub84 = (($conv83) + -48)|0;
     $i86 = (($nl_arg) + ($sub84<<3)|0);
     $16 = $i86;
     $17 = $16;
     $18 = HEAP32[$17>>2]|0;
     $19 = (($16) + 4)|0;
     $20 = $19;
     $21 = HEAP32[$20>>2]|0;
     $add$ptr88 = ((($12)) + 3|0);
     $l10n$2 = 1;$storemerge191 = $add$ptr88;$w$0 = $18;
    } else {
     label = 23;
    }
   } else {
    label = 23;
   }
   if ((label|0) == 23) {
    label = 0;
    $tobool90 = ($l10n$1|0)==(0);
    if (!($tobool90)) {
     $retval$0 = -1;
     break;
    }
    if ($tobool25) {
     $arglist_current = HEAP32[$ap>>2]|0;
     $22 = $arglist_current;
     $23 = ((0) + 4|0);
     $expanded4 = $23;
     $expanded = (($expanded4) - 1)|0;
     $24 = (($22) + ($expanded))|0;
     $25 = ((0) + 4|0);
     $expanded8 = $25;
     $expanded7 = (($expanded8) - 1)|0;
     $expanded6 = $expanded7 ^ -1;
     $26 = $24 & $expanded6;
     $27 = $26;
     $28 = HEAP32[$27>>2]|0;
     $arglist_next = ((($27)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next;
     $l10n$2 = 0;$storemerge191 = $arrayidx68;$w$0 = $28;
    } else {
     $l10n$2 = 0;$storemerge191 = $arrayidx68;$w$0 = 0;
    }
   }
   HEAP32[$s>>2] = $storemerge191;
   $cmp97 = ($w$0|0)<(0);
   $or100 = $fl$0$lcssa | 8192;
   $sub101 = (0 - ($w$0))|0;
   $or100$fl$0 = $cmp97 ? $or100 : $fl$0$lcssa;
   $sub101$w$0 = $cmp97 ? $sub101 : $w$0;
   $30 = $storemerge191;$fl$1 = $or100$fl$0;$l10n$3 = $l10n$2;$w$1 = $sub101$w$0;
  } else {
   $call104 = (_getint($s)|0);
   $cmp105 = ($call104|0)<(0);
   if ($cmp105) {
    $retval$0 = -1;
    break;
   }
   $$pre247 = HEAP32[$s>>2]|0;
   $30 = $$pre247;$fl$1 = $fl$0$lcssa;$l10n$3 = $l10n$1;$w$1 = $call104;
  }
  $29 = HEAP8[$30>>0]|0;
  $cmp111 = ($29<<24>>24)==(46);
  do {
   if ($cmp111) {
    $arrayidx114 = ((($30)) + 1|0);
    $31 = HEAP8[$arrayidx114>>0]|0;
    $cmp116 = ($31<<24>>24)==(42);
    if (!($cmp116)) {
     $incdec$ptr159 = ((($30)) + 1|0);
     HEAP32[$s>>2] = $incdec$ptr159;
     $call160 = (_getint($s)|0);
     $$pre248$pre = HEAP32[$s>>2]|0;
     $$pre248 = $$pre248$pre;$p$0 = $call160;
     break;
    }
    $arrayidx119 = ((($30)) + 2|0);
    $32 = HEAP8[$arrayidx119>>0]|0;
    $conv120 = $32 << 24 >> 24;
    $isdigittmp187 = (($conv120) + -48)|0;
    $isdigit188 = ($isdigittmp187>>>0)<(10);
    if ($isdigit188) {
     $arrayidx124 = ((($30)) + 3|0);
     $33 = HEAP8[$arrayidx124>>0]|0;
     $cmp126 = ($33<<24>>24)==(36);
     if ($cmp126) {
      $arrayidx132 = (($nl_type) + ($isdigittmp187<<2)|0);
      HEAP32[$arrayidx132>>2] = 10;
      $34 = HEAP8[$arrayidx119>>0]|0;
      $conv134 = $34 << 24 >> 24;
      $sub135 = (($conv134) + -48)|0;
      $i137 = (($nl_arg) + ($sub135<<3)|0);
      $35 = $i137;
      $36 = $35;
      $37 = HEAP32[$36>>2]|0;
      $38 = (($35) + 4)|0;
      $39 = $38;
      $40 = HEAP32[$39>>2]|0;
      $add$ptr139 = ((($30)) + 4|0);
      HEAP32[$s>>2] = $add$ptr139;
      $$pre248 = $add$ptr139;$p$0 = $37;
      break;
     }
    }
    $tobool141 = ($l10n$3|0)==(0);
    if (!($tobool141)) {
     $retval$0 = -1;
     break L1;
    }
    if ($tobool25) {
     $arglist_current2 = HEAP32[$ap>>2]|0;
     $41 = $arglist_current2;
     $42 = ((0) + 4|0);
     $expanded11 = $42;
     $expanded10 = (($expanded11) - 1)|0;
     $43 = (($41) + ($expanded10))|0;
     $44 = ((0) + 4|0);
     $expanded15 = $44;
     $expanded14 = (($expanded15) - 1)|0;
     $expanded13 = $expanded14 ^ -1;
     $45 = $43 & $expanded13;
     $46 = $45;
     $47 = HEAP32[$46>>2]|0;
     $arglist_next3 = ((($46)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next3;
     $cond149 = $47;
    } else {
     $cond149 = 0;
    }
    HEAP32[$s>>2] = $arrayidx119;
    $$pre248 = $arrayidx119;$p$0 = $cond149;
   } else {
    $$pre248 = $30;$p$0 = -1;
   }
  } while(0);
  $49 = $$pre248;$st$0 = 0;
  while(1) {
   $48 = HEAP8[$49>>0]|0;
   $conv164 = $48 << 24 >> 24;
   $sub165 = (($conv164) + -65)|0;
   $cmp166 = ($sub165>>>0)>(57);
   if ($cmp166) {
    $retval$0 = -1;
    break L1;
   }
   $incdec$ptr171 = ((($49)) + 1|0);
   HEAP32[$s>>2] = $incdec$ptr171;
   $50 = HEAP8[$49>>0]|0;
   $conv172 = $50 << 24 >> 24;
   $sub173 = (($conv172) + -65)|0;
   $arrayidx174 = ((17281 + (($st$0*58)|0)|0) + ($sub173)|0);
   $51 = HEAP8[$arrayidx174>>0]|0;
   $conv175 = $51&255;
   $sub176 = (($conv175) + -1)|0;
   $cmp177 = ($sub176>>>0)<(8);
   if ($cmp177) {
    $49 = $incdec$ptr171;$st$0 = $conv175;
   } else {
    break;
   }
  }
  $tobool179 = ($51<<24>>24)==(0);
  if ($tobool179) {
   $retval$0 = -1;
   break;
  }
  $cmp182 = ($51<<24>>24)==(19);
  $cmp185 = ($argpos$0|0)>(-1);
  do {
   if ($cmp182) {
    if ($cmp185) {
     $retval$0 = -1;
     break L1;
    } else {
     label = 49;
    }
   } else {
    if ($cmp185) {
     $arrayidx193 = (($nl_type) + ($argpos$0<<2)|0);
     HEAP32[$arrayidx193>>2] = $conv175;
     $52 = (($nl_arg) + ($argpos$0<<3)|0);
     $53 = $52;
     $54 = $53;
     $55 = HEAP32[$54>>2]|0;
     $56 = (($53) + 4)|0;
     $57 = $56;
     $58 = HEAP32[$57>>2]|0;
     $59 = $arg;
     $60 = $59;
     HEAP32[$60>>2] = $55;
     $61 = (($59) + 4)|0;
     $62 = $61;
     HEAP32[$62>>2] = $58;
     label = 49;
     break;
    }
    if (!($tobool25)) {
     $retval$0 = 0;
     break L1;
    }
    _pop_arg($arg,$conv175,$ap);
   }
  } while(0);
  if ((label|0) == 49) {
   label = 0;
   if (!($tobool25)) {
    $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
    continue;
   }
  }
  $63 = HEAP8[$49>>0]|0;
  $conv208 = $63 << 24 >> 24;
  $tobool209 = ($st$0|0)!=(0);
  $and211 = $conv208 & 15;
  $cmp212 = ($and211|0)==(3);
  $or$cond192 = $tobool209 & $cmp212;
  $and215 = $conv208 & -33;
  $t$0 = $or$cond192 ? $and215 : $conv208;
  $and217 = $fl$1 & 8192;
  $tobool218 = ($and217|0)==(0);
  $and220 = $fl$1 & -65537;
  $fl$1$and220 = $tobool218 ? $fl$1 : $and220;
  L71: do {
   switch ($t$0|0) {
   case 110:  {
    $trunc = $st$0&255;
    switch ($trunc<<24>>24) {
    case 0:  {
     $70 = HEAP32[$arg>>2]|0;
     HEAP32[$70>>2] = $cnt$1;
     $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 1:  {
     $71 = HEAP32[$arg>>2]|0;
     HEAP32[$71>>2] = $cnt$1;
     $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 2:  {
     $72 = ($cnt$1|0)<(0);
     $73 = $72 << 31 >> 31;
     $74 = HEAP32[$arg>>2]|0;
     $75 = $74;
     $76 = $75;
     HEAP32[$76>>2] = $cnt$1;
     $77 = (($75) + 4)|0;
     $78 = $77;
     HEAP32[$78>>2] = $73;
     $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 3:  {
     $conv230 = $cnt$1&65535;
     $79 = HEAP32[$arg>>2]|0;
     HEAP16[$79>>1] = $conv230;
     $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 4:  {
     $conv233 = $cnt$1&255;
     $80 = HEAP32[$arg>>2]|0;
     HEAP8[$80>>0] = $conv233;
     $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 6:  {
     $81 = HEAP32[$arg>>2]|0;
     HEAP32[$81>>2] = $cnt$1;
     $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 7:  {
     $82 = ($cnt$1|0)<(0);
     $83 = $82 << 31 >> 31;
     $84 = HEAP32[$arg>>2]|0;
     $85 = $84;
     $86 = $85;
     HEAP32[$86>>2] = $cnt$1;
     $87 = (($85) + 4)|0;
     $88 = $87;
     HEAP32[$88>>2] = $83;
     $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    default: {
     $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = 0;$l10n$0 = $l10n$3;
     continue L1;
    }
    }
    break;
   }
   case 112:  {
    $cmp241 = ($p$0>>>0)>(8);
    $cond246 = $cmp241 ? $p$0 : 8;
    $or247 = $fl$1$and220 | 8;
    $fl$3 = $or247;$p$1 = $cond246;$t$1 = 120;
    label = 61;
    break;
   }
   case 88: case 120:  {
    $fl$3 = $fl$1$and220;$p$1 = $p$0;$t$1 = $t$0;
    label = 61;
    break;
   }
   case 111:  {
    $99 = $arg;
    $100 = $99;
    $101 = HEAP32[$100>>2]|0;
    $102 = (($99) + 4)|0;
    $103 = $102;
    $104 = HEAP32[$103>>2]|0;
    $105 = (_fmt_o($101,$104,$add$ptr206)|0);
    $and264 = $fl$1$and220 & 8;
    $tobool265 = ($and264|0)==(0);
    $sub$ptr$rhs$cast268 = $105;
    $sub$ptr$sub269 = (($sub$ptr$lhs$cast318) - ($sub$ptr$rhs$cast268))|0;
    $cmp271 = ($p$0|0)>($sub$ptr$sub269|0);
    $add270 = (($sub$ptr$sub269) + 1)|0;
    $106 = $tobool265 | $cmp271;
    $p$0$p$0$add270 = $106 ? $p$0 : $add270;
    $125 = $101;$127 = $104;$a$0 = $105;$fl$4 = $fl$1$and220;$p$2 = $p$0$p$0$add270;$pl$1 = 0;$prefix$1 = 17745;
    label = 67;
    break;
   }
   case 105: case 100:  {
    $107 = $arg;
    $108 = $107;
    $109 = HEAP32[$108>>2]|0;
    $110 = (($107) + 4)|0;
    $111 = $110;
    $112 = HEAP32[$111>>2]|0;
    $113 = ($112|0)<(0);
    if ($113) {
     $114 = (_i64Subtract(0,0,($109|0),($112|0))|0);
     $115 = tempRet0;
     $116 = $arg;
     $117 = $116;
     HEAP32[$117>>2] = $114;
     $118 = (($116) + 4)|0;
     $119 = $118;
     HEAP32[$119>>2] = $115;
     $121 = $114;$122 = $115;$pl$0 = 1;$prefix$0 = 17745;
     label = 66;
     break L71;
    } else {
     $and290 = $fl$1$and220 & 2048;
     $tobool291 = ($and290|0)==(0);
     $and295 = $fl$1$and220 & 1;
     $tobool296 = ($and295|0)==(0);
     $$ = $tobool296 ? 17745 : (17747);
     $$$ = $tobool291 ? $$ : (17746);
     $120 = $fl$1$and220 & 2049;
     $narrow = ($120|0)!=(0);
     $$194$ = $narrow&1;
     $121 = $109;$122 = $112;$pl$0 = $$194$;$prefix$0 = $$$;
     label = 66;
     break L71;
    }
    break;
   }
   case 117:  {
    $64 = $arg;
    $65 = $64;
    $66 = HEAP32[$65>>2]|0;
    $67 = (($64) + 4)|0;
    $68 = $67;
    $69 = HEAP32[$68>>2]|0;
    $121 = $66;$122 = $69;$pl$0 = 0;$prefix$0 = 17745;
    label = 66;
    break;
   }
   case 99:  {
    $129 = $arg;
    $130 = $129;
    $131 = HEAP32[$130>>2]|0;
    $132 = (($129) + 4)|0;
    $133 = $132;
    $134 = HEAP32[$133>>2]|0;
    $135 = $131&255;
    HEAP8[$add$ptr341>>0] = $135;
    $a$2 = $add$ptr341;$fl$6 = $and220;$p$5 = 1;$pl$2 = 0;$prefix$2 = 17745;$z$2 = $add$ptr206;
    break;
   }
   case 109:  {
    $call345 = (___errno_location()|0);
    $136 = HEAP32[$call345>>2]|0;
    $call346 = (_strerror($136)|0);
    $a$1 = $call346;
    label = 71;
    break;
   }
   case 115:  {
    $137 = HEAP32[$arg>>2]|0;
    $tobool350 = ($137|0)!=(0|0);
    $cond355 = $tobool350 ? $137 : 17755;
    $a$1 = $cond355;
    label = 71;
    break;
   }
   case 67:  {
    $138 = $arg;
    $139 = $138;
    $140 = HEAP32[$139>>2]|0;
    $141 = (($138) + 4)|0;
    $142 = $141;
    $143 = HEAP32[$142>>2]|0;
    HEAP32[$wc>>2] = $140;
    HEAP32[$arrayidx371>>2] = 0;
    HEAP32[$arg>>2] = $wc;
    $150 = $wc;$p$4253 = -1;
    label = 75;
    break;
   }
   case 83:  {
    $$pre249 = HEAP32[$arg>>2]|0;
    $cmp378227 = ($p$0|0)==(0);
    if ($cmp378227) {
     _pad_684($f,32,$w$1,0,$fl$1$and220);
     $i$0$lcssa256 = 0;
     label = 84;
    } else {
     $150 = $$pre249;$p$4253 = $p$0;
     label = 75;
    }
    break;
   }
   case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
    $146 = +HEAPF64[$arg>>3];
    $call430 = (_fmt_fp($f,$146,$w$1,$p$0,$fl$1$and220,$t$0)|0);
    $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = $call430;$l10n$0 = $l10n$3;
    continue L1;
    break;
   }
   default: {
    $a$2 = $1;$fl$6 = $fl$1$and220;$p$5 = $p$0;$pl$2 = 0;$prefix$2 = 17745;$z$2 = $add$ptr206;
   }
   }
  } while(0);
  L95: do {
   if ((label|0) == 61) {
    label = 0;
    $89 = $arg;
    $90 = $89;
    $91 = HEAP32[$90>>2]|0;
    $92 = (($89) + 4)|0;
    $93 = $92;
    $94 = HEAP32[$93>>2]|0;
    $and250 = $t$1 & 32;
    $95 = (_fmt_x($91,$94,$add$ptr206,$and250)|0);
    $96 = ($91|0)==(0);
    $97 = ($94|0)==(0);
    $98 = $96 & $97;
    $and255 = $fl$3 & 8;
    $tobool256 = ($and255|0)==(0);
    $or$cond193 = $tobool256 | $98;
    $shr = $t$1 >> 4;
    $add$ptr258 = (17745 + ($shr)|0);
    $$add$ptr258 = $or$cond193 ? 17745 : $add$ptr258;
    $$197 = $or$cond193 ? 0 : 2;
    $125 = $91;$127 = $94;$a$0 = $95;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = $$197;$prefix$1 = $$add$ptr258;
    label = 67;
   }
   else if ((label|0) == 66) {
    label = 0;
    $123 = (_fmt_u($121,$122,$add$ptr206)|0);
    $125 = $121;$127 = $122;$a$0 = $123;$fl$4 = $fl$1$and220;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
    label = 67;
   }
   else if ((label|0) == 71) {
    label = 0;
    $call357 = (_memchr($a$1,0,$p$0)|0);
    $tobool358 = ($call357|0)==(0|0);
    $sub$ptr$lhs$cast362 = $call357;
    $sub$ptr$rhs$cast363 = $a$1;
    $sub$ptr$sub364 = (($sub$ptr$lhs$cast362) - ($sub$ptr$rhs$cast363))|0;
    $add$ptr360 = (($a$1) + ($p$0)|0);
    $p$3 = $tobool358 ? $p$0 : $sub$ptr$sub364;
    $z$1 = $tobool358 ? $add$ptr360 : $call357;
    $a$2 = $a$1;$fl$6 = $and220;$p$5 = $p$3;$pl$2 = 0;$prefix$2 = 17745;$z$2 = $z$1;
   }
   else if ((label|0) == 75) {
    label = 0;
    $i$0229 = 0;$l$1228 = 0;$ws$0230 = $150;
    while(1) {
     $144 = HEAP32[$ws$0230>>2]|0;
     $tobool381 = ($144|0)==(0);
     if ($tobool381) {
      $i$0$lcssa = $i$0229;$l$2 = $l$1228;
      break;
     }
     $call385 = (_wctomb($mb,$144)|0);
     $cmp386 = ($call385|0)<(0);
     $sub390 = (($p$4253) - ($i$0229))|0;
     $cmp391 = ($call385>>>0)>($sub390>>>0);
     $or$cond195 = $cmp386 | $cmp391;
     if ($or$cond195) {
      $i$0$lcssa = $i$0229;$l$2 = $call385;
      break;
     }
     $incdec$ptr384 = ((($ws$0230)) + 4|0);
     $add396 = (($call385) + ($i$0229))|0;
     $cmp378 = ($p$4253>>>0)>($add396>>>0);
     if ($cmp378) {
      $i$0229 = $add396;$l$1228 = $call385;$ws$0230 = $incdec$ptr384;
     } else {
      $i$0$lcssa = $add396;$l$2 = $call385;
      break;
     }
    }
    $cmp398 = ($l$2|0)<(0);
    if ($cmp398) {
     $retval$0 = -1;
     break L1;
    }
    _pad_684($f,32,$w$1,$i$0$lcssa,$fl$1$and220);
    $cmp405237 = ($i$0$lcssa|0)==(0);
    if ($cmp405237) {
     $i$0$lcssa256 = 0;
     label = 84;
    } else {
     $i$1238 = 0;$ws$1239 = $150;
     while(1) {
      $145 = HEAP32[$ws$1239>>2]|0;
      $tobool408 = ($145|0)==(0);
      if ($tobool408) {
       $i$0$lcssa256 = $i$0$lcssa;
       label = 84;
       break L95;
      }
      $call412 = (_wctomb($mb,$145)|0);
      $add413 = (($call412) + ($i$1238))|0;
      $cmp414 = ($add413|0)>($i$0$lcssa|0);
      if ($cmp414) {
       $i$0$lcssa256 = $i$0$lcssa;
       label = 84;
       break L95;
      }
      $incdec$ptr411 = ((($ws$1239)) + 4|0);
      _out($f,$mb,$call412);
      $cmp405 = ($add413>>>0)<($i$0$lcssa>>>0);
      if ($cmp405) {
       $i$1238 = $add413;$ws$1239 = $incdec$ptr411;
      } else {
       $i$0$lcssa256 = $i$0$lcssa;
       label = 84;
       break;
      }
     }
    }
   }
  } while(0);
  if ((label|0) == 67) {
   label = 0;
   $cmp307 = ($p$2|0)>(-1);
   $and310 = $fl$4 & -65537;
   $and310$fl$4 = $cmp307 ? $and310 : $fl$4;
   $124 = ($125|0)!=(0);
   $126 = ($127|0)!=(0);
   $128 = $124 | $126;
   $tobool315 = ($p$2|0)!=(0);
   $or$cond = $tobool315 | $128;
   $sub$ptr$rhs$cast319 = $a$0;
   $sub$ptr$sub320 = (($sub$ptr$lhs$cast318) - ($sub$ptr$rhs$cast319))|0;
   $lnot = $128 ^ 1;
   $lnot$ext = $lnot&1;
   $add323 = (($lnot$ext) + ($sub$ptr$sub320))|0;
   $cmp324 = ($p$2|0)>($add323|0);
   $p$2$add323 = $cmp324 ? $p$2 : $add323;
   $p$2$add323$p$2 = $or$cond ? $p$2$add323 : $p$2;
   $a$0$add$ptr206 = $or$cond ? $a$0 : $add$ptr206;
   $a$2 = $a$0$add$ptr206;$fl$6 = $and310$fl$4;$p$5 = $p$2$add323$p$2;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $add$ptr206;
  }
  else if ((label|0) == 84) {
   label = 0;
   $xor = $fl$1$and220 ^ 8192;
   _pad_684($f,32,$w$1,$i$0$lcssa256,$xor);
   $cmp422 = ($w$1|0)>($i$0$lcssa256|0);
   $cond427 = $cmp422 ? $w$1 : $i$0$lcssa256;
   $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = $cond427;$l10n$0 = $l10n$3;
   continue;
  }
  $sub$ptr$lhs$cast432 = $z$2;
  $sub$ptr$rhs$cast433 = $a$2;
  $sub$ptr$sub434 = (($sub$ptr$lhs$cast432) - ($sub$ptr$rhs$cast433))|0;
  $cmp435 = ($p$5|0)<($sub$ptr$sub434|0);
  $sub$ptr$sub434$p$5 = $cmp435 ? $sub$ptr$sub434 : $p$5;
  $add442 = (($sub$ptr$sub434$p$5) + ($pl$2))|0;
  $cmp443 = ($w$1|0)<($add442|0);
  $w$2 = $cmp443 ? $add442 : $w$1;
  _pad_684($f,32,$w$2,$add442,$fl$6);
  _out($f,$prefix$2,$pl$2);
  $xor450 = $fl$6 ^ 65536;
  _pad_684($f,48,$w$2,$add442,$xor450);
  _pad_684($f,48,$sub$ptr$sub434$p$5,$sub$ptr$sub434,0);
  _out($f,$a$2,$sub$ptr$sub434);
  $xor458 = $fl$6 ^ 8192;
  _pad_684($f,32,$w$2,$add442,$xor458);
  $1 = $incdec$ptr171;$cnt$0 = $cnt$1;$l$0 = $w$2;$l10n$0 = $l10n$3;
 }
 L114: do {
  if ((label|0) == 87) {
   $tobool460 = ($f|0)==(0|0);
   if ($tobool460) {
    $tobool463 = ($l10n$0|0)==(0);
    if ($tobool463) {
     $retval$0 = 0;
    } else {
     $i$2210 = 1;
     while(1) {
      $arrayidx470 = (($nl_type) + ($i$2210<<2)|0);
      $147 = HEAP32[$arrayidx470>>2]|0;
      $tobool471 = ($147|0)==(0);
      if ($tobool471) {
       $i$3207 = $i$2210;
       break;
      }
      $add$ptr474 = (($nl_arg) + ($i$2210<<3)|0);
      _pop_arg($add$ptr474,$147,$ap);
      $inc = (($i$2210) + 1)|0;
      $cmp467 = ($inc|0)<(10);
      if ($cmp467) {
       $i$2210 = $inc;
      } else {
       $retval$0 = 1;
       break L114;
      }
     }
     while(1) {
      $arrayidx482 = (($nl_type) + ($i$3207<<2)|0);
      $148 = HEAP32[$arrayidx482>>2]|0;
      $lnot484 = ($148|0)==(0);
      $inc489 = (($i$3207) + 1)|0;
      if (!($lnot484)) {
       $retval$0 = -1;
       break L114;
      }
      $cmp479 = ($inc489|0)<(10);
      if ($cmp479) {
       $i$3207 = $inc489;
      } else {
       $retval$0 = 1;
       break;
      }
     }
    }
   } else {
    $retval$0 = $cnt$1;
   }
  }
 } while(0);
 STACKTOP = sp;return ($retval$0|0);
}
function ___lockfile($f) {
 $f = $f|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function ___unlockfile($f) {
 $f = $f|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _out($f,$s,$l) {
 $f = $f|0;
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $and = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$f>>2]|0;
 $and = $0 & 32;
 $tobool = ($and|0)==(0);
 if ($tobool) {
  (___fwritex($s,$l,$f)|0);
 }
 return;
}
function _getint($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $add = 0, $conv = 0, $conv4 = 0, $i$0$lcssa = 0, $i$07 = 0, $incdec$ptr = 0, $isdigit = 0, $isdigit6 = 0, $isdigittmp = 0, $isdigittmp5 = 0, $isdigittmp8 = 0, $mul = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$s>>2]|0;
 $1 = HEAP8[$0>>0]|0;
 $conv4 = $1 << 24 >> 24;
 $isdigittmp5 = (($conv4) + -48)|0;
 $isdigit6 = ($isdigittmp5>>>0)<(10);
 if ($isdigit6) {
  $2 = $0;$i$07 = 0;$isdigittmp8 = $isdigittmp5;
  while(1) {
   $mul = ($i$07*10)|0;
   $add = (($isdigittmp8) + ($mul))|0;
   $incdec$ptr = ((($2)) + 1|0);
   HEAP32[$s>>2] = $incdec$ptr;
   $3 = HEAP8[$incdec$ptr>>0]|0;
   $conv = $3 << 24 >> 24;
   $isdigittmp = (($conv) + -48)|0;
   $isdigit = ($isdigittmp>>>0)<(10);
   if ($isdigit) {
    $2 = $incdec$ptr;$i$07 = $add;$isdigittmp8 = $isdigittmp;
   } else {
    $i$0$lcssa = $add;
    break;
   }
  }
 } else {
  $i$0$lcssa = 0;
 }
 return ($i$0$lcssa|0);
}
function _pop_arg($arg,$type,$ap) {
 $arg = $arg|0;
 $type = $type|0;
 $ap = $ap|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0, $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current5 = 0;
 var $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $cmp = 0, $conv16 = 0, $conv22$mask = 0, $conv28 = 0, $conv34$mask = 0, $expanded = 0, $expanded28 = 0, $expanded30 = 0, $expanded31 = 0;
 var $expanded32 = 0, $expanded34 = 0, $expanded35 = 0, $expanded37 = 0, $expanded38 = 0, $expanded39 = 0, $expanded41 = 0, $expanded42 = 0, $expanded44 = 0, $expanded45 = 0, $expanded46 = 0, $expanded48 = 0, $expanded49 = 0, $expanded51 = 0, $expanded52 = 0, $expanded53 = 0, $expanded55 = 0, $expanded56 = 0, $expanded58 = 0, $expanded59 = 0;
 var $expanded60 = 0, $expanded62 = 0, $expanded63 = 0, $expanded65 = 0, $expanded66 = 0, $expanded67 = 0, $expanded69 = 0, $expanded70 = 0, $expanded72 = 0, $expanded73 = 0, $expanded74 = 0, $expanded76 = 0, $expanded77 = 0, $expanded79 = 0, $expanded80 = 0, $expanded81 = 0, $expanded83 = 0, $expanded84 = 0, $expanded86 = 0, $expanded87 = 0;
 var $expanded88 = 0, $expanded90 = 0, $expanded91 = 0, $expanded93 = 0, $expanded94 = 0, $expanded95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($type>>>0)>(20);
 L1: do {
  if (!($cmp)) {
   do {
    switch ($type|0) {
    case 9:  {
     $arglist_current = HEAP32[$ap>>2]|0;
     $0 = $arglist_current;
     $1 = ((0) + 4|0);
     $expanded28 = $1;
     $expanded = (($expanded28) - 1)|0;
     $2 = (($0) + ($expanded))|0;
     $3 = ((0) + 4|0);
     $expanded32 = $3;
     $expanded31 = (($expanded32) - 1)|0;
     $expanded30 = $expanded31 ^ -1;
     $4 = $2 & $expanded30;
     $5 = $4;
     $6 = HEAP32[$5>>2]|0;
     $arglist_next = ((($5)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next;
     HEAP32[$arg>>2] = $6;
     break L1;
     break;
    }
    case 10:  {
     $arglist_current2 = HEAP32[$ap>>2]|0;
     $7 = $arglist_current2;
     $8 = ((0) + 4|0);
     $expanded35 = $8;
     $expanded34 = (($expanded35) - 1)|0;
     $9 = (($7) + ($expanded34))|0;
     $10 = ((0) + 4|0);
     $expanded39 = $10;
     $expanded38 = (($expanded39) - 1)|0;
     $expanded37 = $expanded38 ^ -1;
     $11 = $9 & $expanded37;
     $12 = $11;
     $13 = HEAP32[$12>>2]|0;
     $arglist_next3 = ((($12)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next3;
     $14 = ($13|0)<(0);
     $15 = $14 << 31 >> 31;
     $16 = $arg;
     $17 = $16;
     HEAP32[$17>>2] = $13;
     $18 = (($16) + 4)|0;
     $19 = $18;
     HEAP32[$19>>2] = $15;
     break L1;
     break;
    }
    case 11:  {
     $arglist_current5 = HEAP32[$ap>>2]|0;
     $20 = $arglist_current5;
     $21 = ((0) + 4|0);
     $expanded42 = $21;
     $expanded41 = (($expanded42) - 1)|0;
     $22 = (($20) + ($expanded41))|0;
     $23 = ((0) + 4|0);
     $expanded46 = $23;
     $expanded45 = (($expanded46) - 1)|0;
     $expanded44 = $expanded45 ^ -1;
     $24 = $22 & $expanded44;
     $25 = $24;
     $26 = HEAP32[$25>>2]|0;
     $arglist_next6 = ((($25)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next6;
     $27 = $arg;
     $28 = $27;
     HEAP32[$28>>2] = $26;
     $29 = (($27) + 4)|0;
     $30 = $29;
     HEAP32[$30>>2] = 0;
     break L1;
     break;
    }
    case 12:  {
     $arglist_current8 = HEAP32[$ap>>2]|0;
     $31 = $arglist_current8;
     $32 = ((0) + 8|0);
     $expanded49 = $32;
     $expanded48 = (($expanded49) - 1)|0;
     $33 = (($31) + ($expanded48))|0;
     $34 = ((0) + 8|0);
     $expanded53 = $34;
     $expanded52 = (($expanded53) - 1)|0;
     $expanded51 = $expanded52 ^ -1;
     $35 = $33 & $expanded51;
     $36 = $35;
     $37 = $36;
     $38 = $37;
     $39 = HEAP32[$38>>2]|0;
     $40 = (($37) + 4)|0;
     $41 = $40;
     $42 = HEAP32[$41>>2]|0;
     $arglist_next9 = ((($36)) + 8|0);
     HEAP32[$ap>>2] = $arglist_next9;
     $43 = $arg;
     $44 = $43;
     HEAP32[$44>>2] = $39;
     $45 = (($43) + 4)|0;
     $46 = $45;
     HEAP32[$46>>2] = $42;
     break L1;
     break;
    }
    case 13:  {
     $arglist_current11 = HEAP32[$ap>>2]|0;
     $47 = $arglist_current11;
     $48 = ((0) + 4|0);
     $expanded56 = $48;
     $expanded55 = (($expanded56) - 1)|0;
     $49 = (($47) + ($expanded55))|0;
     $50 = ((0) + 4|0);
     $expanded60 = $50;
     $expanded59 = (($expanded60) - 1)|0;
     $expanded58 = $expanded59 ^ -1;
     $51 = $49 & $expanded58;
     $52 = $51;
     $53 = HEAP32[$52>>2]|0;
     $arglist_next12 = ((($52)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next12;
     $conv16 = $53&65535;
     $54 = $conv16 << 16 >> 16;
     $55 = ($54|0)<(0);
     $56 = $55 << 31 >> 31;
     $57 = $arg;
     $58 = $57;
     HEAP32[$58>>2] = $54;
     $59 = (($57) + 4)|0;
     $60 = $59;
     HEAP32[$60>>2] = $56;
     break L1;
     break;
    }
    case 14:  {
     $arglist_current14 = HEAP32[$ap>>2]|0;
     $61 = $arglist_current14;
     $62 = ((0) + 4|0);
     $expanded63 = $62;
     $expanded62 = (($expanded63) - 1)|0;
     $63 = (($61) + ($expanded62))|0;
     $64 = ((0) + 4|0);
     $expanded67 = $64;
     $expanded66 = (($expanded67) - 1)|0;
     $expanded65 = $expanded66 ^ -1;
     $65 = $63 & $expanded65;
     $66 = $65;
     $67 = HEAP32[$66>>2]|0;
     $arglist_next15 = ((($66)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next15;
     $conv22$mask = $67 & 65535;
     $68 = $arg;
     $69 = $68;
     HEAP32[$69>>2] = $conv22$mask;
     $70 = (($68) + 4)|0;
     $71 = $70;
     HEAP32[$71>>2] = 0;
     break L1;
     break;
    }
    case 15:  {
     $arglist_current17 = HEAP32[$ap>>2]|0;
     $72 = $arglist_current17;
     $73 = ((0) + 4|0);
     $expanded70 = $73;
     $expanded69 = (($expanded70) - 1)|0;
     $74 = (($72) + ($expanded69))|0;
     $75 = ((0) + 4|0);
     $expanded74 = $75;
     $expanded73 = (($expanded74) - 1)|0;
     $expanded72 = $expanded73 ^ -1;
     $76 = $74 & $expanded72;
     $77 = $76;
     $78 = HEAP32[$77>>2]|0;
     $arglist_next18 = ((($77)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next18;
     $conv28 = $78&255;
     $79 = $conv28 << 24 >> 24;
     $80 = ($79|0)<(0);
     $81 = $80 << 31 >> 31;
     $82 = $arg;
     $83 = $82;
     HEAP32[$83>>2] = $79;
     $84 = (($82) + 4)|0;
     $85 = $84;
     HEAP32[$85>>2] = $81;
     break L1;
     break;
    }
    case 16:  {
     $arglist_current20 = HEAP32[$ap>>2]|0;
     $86 = $arglist_current20;
     $87 = ((0) + 4|0);
     $expanded77 = $87;
     $expanded76 = (($expanded77) - 1)|0;
     $88 = (($86) + ($expanded76))|0;
     $89 = ((0) + 4|0);
     $expanded81 = $89;
     $expanded80 = (($expanded81) - 1)|0;
     $expanded79 = $expanded80 ^ -1;
     $90 = $88 & $expanded79;
     $91 = $90;
     $92 = HEAP32[$91>>2]|0;
     $arglist_next21 = ((($91)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next21;
     $conv34$mask = $92 & 255;
     $93 = $arg;
     $94 = $93;
     HEAP32[$94>>2] = $conv34$mask;
     $95 = (($93) + 4)|0;
     $96 = $95;
     HEAP32[$96>>2] = 0;
     break L1;
     break;
    }
    case 17:  {
     $arglist_current23 = HEAP32[$ap>>2]|0;
     $97 = $arglist_current23;
     $98 = ((0) + 8|0);
     $expanded84 = $98;
     $expanded83 = (($expanded84) - 1)|0;
     $99 = (($97) + ($expanded83))|0;
     $100 = ((0) + 8|0);
     $expanded88 = $100;
     $expanded87 = (($expanded88) - 1)|0;
     $expanded86 = $expanded87 ^ -1;
     $101 = $99 & $expanded86;
     $102 = $101;
     $103 = +HEAPF64[$102>>3];
     $arglist_next24 = ((($102)) + 8|0);
     HEAP32[$ap>>2] = $arglist_next24;
     HEAPF64[$arg>>3] = $103;
     break L1;
     break;
    }
    case 18:  {
     $arglist_current26 = HEAP32[$ap>>2]|0;
     $104 = $arglist_current26;
     $105 = ((0) + 8|0);
     $expanded91 = $105;
     $expanded90 = (($expanded91) - 1)|0;
     $106 = (($104) + ($expanded90))|0;
     $107 = ((0) + 8|0);
     $expanded95 = $107;
     $expanded94 = (($expanded95) - 1)|0;
     $expanded93 = $expanded94 ^ -1;
     $108 = $106 & $expanded93;
     $109 = $108;
     $110 = +HEAPF64[$109>>3];
     $arglist_next27 = ((($109)) + 8|0);
     HEAP32[$ap>>2] = $arglist_next27;
     HEAPF64[$arg>>3] = $110;
     break L1;
     break;
    }
    default: {
     break L1;
    }
    }
   } while(0);
  }
 } while(0);
 return;
}
function _fmt_x($0,$1,$s,$lower) {
 $0 = $0|0;
 $1 = $1|0;
 $s = $s|0;
 $lower = $lower|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $arrayidx = 0, $conv1 = 0, $conv4 = 0, $idxprom = 0, $incdec$ptr = 0, $or = 0, $s$addr$0$lcssa = 0, $s$addr$06 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0);
 $3 = ($1|0)==(0);
 $4 = $2 & $3;
 if ($4) {
  $s$addr$0$lcssa = $s;
 } else {
  $5 = $0;$7 = $1;$s$addr$06 = $s;
  while(1) {
   $idxprom = $5 & 15;
   $arrayidx = (17797 + ($idxprom)|0);
   $6 = HEAP8[$arrayidx>>0]|0;
   $conv4 = $6&255;
   $or = $conv4 | $lower;
   $conv1 = $or&255;
   $incdec$ptr = ((($s$addr$06)) + -1|0);
   HEAP8[$incdec$ptr>>0] = $conv1;
   $8 = (_bitshift64Lshr(($5|0),($7|0),4)|0);
   $9 = tempRet0;
   $10 = ($8|0)==(0);
   $11 = ($9|0)==(0);
   $12 = $10 & $11;
   if ($12) {
    $s$addr$0$lcssa = $incdec$ptr;
    break;
   } else {
    $5 = $8;$7 = $9;$s$addr$06 = $incdec$ptr;
   }
  }
 }
 return ($s$addr$0$lcssa|0);
}
function _fmt_o($0,$1,$s) {
 $0 = $0|0;
 $1 = $1|0;
 $s = $s|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $conv = 0, $incdec$ptr = 0, $s$addr$0$lcssa = 0, $s$addr$06 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0);
 $3 = ($1|0)==(0);
 $4 = $2 & $3;
 if ($4) {
  $s$addr$0$lcssa = $s;
 } else {
  $6 = $0;$8 = $1;$s$addr$06 = $s;
  while(1) {
   $5 = $6&255;
   $7 = $5 & 7;
   $conv = $7 | 48;
   $incdec$ptr = ((($s$addr$06)) + -1|0);
   HEAP8[$incdec$ptr>>0] = $conv;
   $9 = (_bitshift64Lshr(($6|0),($8|0),3)|0);
   $10 = tempRet0;
   $11 = ($9|0)==(0);
   $12 = ($10|0)==(0);
   $13 = $11 & $12;
   if ($13) {
    $s$addr$0$lcssa = $incdec$ptr;
    break;
   } else {
    $6 = $9;$8 = $10;$s$addr$06 = $incdec$ptr;
   }
  }
 }
 return ($s$addr$0$lcssa|0);
}
function _fmt_u($0,$1,$s) {
 $0 = $0|0;
 $1 = $1|0;
 $s = $s|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $add5 = 0, $conv = 0;
 var $conv6 = 0, $div9 = 0, $incdec$ptr = 0, $incdec$ptr7 = 0, $rem4 = 0, $s$addr$0$lcssa = 0, $s$addr$013 = 0, $s$addr$1$lcssa = 0, $s$addr$19 = 0, $tobool8 = 0, $x$addr$0$lcssa$off0 = 0, $y$010 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1>>>0)>(0);
 $3 = ($0>>>0)>(4294967295);
 $4 = ($1|0)==(0);
 $5 = $4 & $3;
 $6 = $2 | $5;
 if ($6) {
  $7 = $0;$8 = $1;$s$addr$013 = $s;
  while(1) {
   $9 = (___uremdi3(($7|0),($8|0),10,0)|0);
   $10 = tempRet0;
   $11 = $9&255;
   $conv = $11 | 48;
   $incdec$ptr = ((($s$addr$013)) + -1|0);
   HEAP8[$incdec$ptr>>0] = $conv;
   $12 = (___udivdi3(($7|0),($8|0),10,0)|0);
   $13 = tempRet0;
   $14 = ($8>>>0)>(9);
   $15 = ($7>>>0)>(4294967295);
   $16 = ($8|0)==(9);
   $17 = $16 & $15;
   $18 = $14 | $17;
   if ($18) {
    $7 = $12;$8 = $13;$s$addr$013 = $incdec$ptr;
   } else {
    break;
   }
  }
  $s$addr$0$lcssa = $incdec$ptr;$x$addr$0$lcssa$off0 = $12;
 } else {
  $s$addr$0$lcssa = $s;$x$addr$0$lcssa$off0 = $0;
 }
 $tobool8 = ($x$addr$0$lcssa$off0|0)==(0);
 if ($tobool8) {
  $s$addr$1$lcssa = $s$addr$0$lcssa;
 } else {
  $s$addr$19 = $s$addr$0$lcssa;$y$010 = $x$addr$0$lcssa$off0;
  while(1) {
   $rem4 = (($y$010>>>0) % 10)&-1;
   $add5 = $rem4 | 48;
   $conv6 = $add5&255;
   $incdec$ptr7 = ((($s$addr$19)) + -1|0);
   HEAP8[$incdec$ptr7>>0] = $conv6;
   $div9 = (($y$010>>>0) / 10)&-1;
   $19 = ($y$010>>>0)<(10);
   if ($19) {
    $s$addr$1$lcssa = $incdec$ptr7;
    break;
   } else {
    $s$addr$19 = $incdec$ptr7;$y$010 = $div9;
   }
  }
 }
 return ($s$addr$1$lcssa|0);
}
function _strerror($e) {
 $e = $e|0;
 var $0 = 0, $call = 0, $call1 = 0, $locale = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (___pthread_self_104()|0);
 $locale = ((($call)) + 188|0);
 $0 = HEAP32[$locale>>2]|0;
 $call1 = (___strerror_l($e,$0)|0);
 return ($call1|0);
}
function _memchr($src,$c,$n) {
 $src = $src|0;
 $c = $c|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $and = 0, $and15 = 0, $and16 = 0, $and39 = 0, $cmp = 0, $cmp11 = 0, $cmp1132 = 0, $cmp28 = 0, $cmp8 = 0, $cond = 0, $conv1 = 0, $dec = 0;
 var $dec34 = 0, $incdec$ptr = 0, $incdec$ptr21 = 0, $incdec$ptr33 = 0, $lnot = 0, $mul = 0, $n$addr$0$lcssa = 0, $n$addr$0$lcssa52 = 0, $n$addr$043 = 0, $n$addr$1$lcssa = 0, $n$addr$133 = 0, $n$addr$227 = 0, $n$addr$3 = 0, $neg = 0, $or$cond = 0, $or$cond42 = 0, $s$0$lcssa = 0, $s$0$lcssa53 = 0, $s$044 = 0, $s$128 = 0;
 var $s$2 = 0, $sub = 0, $sub22 = 0, $tobool = 0, $tobool2 = 0, $tobool2$lcssa = 0, $tobool241 = 0, $tobool25 = 0, $tobool2526 = 0, $tobool36 = 0, $tobool40 = 0, $w$0$lcssa = 0, $w$034 = 0, $xor = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $conv1 = $c & 255;
 $0 = $src;
 $and39 = $0 & 3;
 $tobool40 = ($and39|0)!=(0);
 $tobool241 = ($n|0)!=(0);
 $or$cond42 = $tobool241 & $tobool40;
 L1: do {
  if ($or$cond42) {
   $1 = $c&255;
   $n$addr$043 = $n;$s$044 = $src;
   while(1) {
    $2 = HEAP8[$s$044>>0]|0;
    $cmp = ($2<<24>>24)==($1<<24>>24);
    if ($cmp) {
     $n$addr$0$lcssa52 = $n$addr$043;$s$0$lcssa53 = $s$044;
     label = 6;
     break L1;
    }
    $incdec$ptr = ((($s$044)) + 1|0);
    $dec = (($n$addr$043) + -1)|0;
    $3 = $incdec$ptr;
    $and = $3 & 3;
    $tobool = ($and|0)!=(0);
    $tobool2 = ($dec|0)!=(0);
    $or$cond = $tobool2 & $tobool;
    if ($or$cond) {
     $n$addr$043 = $dec;$s$044 = $incdec$ptr;
    } else {
     $n$addr$0$lcssa = $dec;$s$0$lcssa = $incdec$ptr;$tobool2$lcssa = $tobool2;
     label = 5;
     break;
    }
   }
  } else {
   $n$addr$0$lcssa = $n;$s$0$lcssa = $src;$tobool2$lcssa = $tobool241;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  if ($tobool2$lcssa) {
   $n$addr$0$lcssa52 = $n$addr$0$lcssa;$s$0$lcssa53 = $s$0$lcssa;
   label = 6;
  } else {
   $n$addr$3 = 0;$s$2 = $s$0$lcssa;
  }
 }
 L8: do {
  if ((label|0) == 6) {
   $4 = HEAP8[$s$0$lcssa53>>0]|0;
   $5 = $c&255;
   $cmp8 = ($4<<24>>24)==($5<<24>>24);
   if ($cmp8) {
    $n$addr$3 = $n$addr$0$lcssa52;$s$2 = $s$0$lcssa53;
   } else {
    $mul = Math_imul($conv1, 16843009)|0;
    $cmp1132 = ($n$addr$0$lcssa52>>>0)>(3);
    L11: do {
     if ($cmp1132) {
      $n$addr$133 = $n$addr$0$lcssa52;$w$034 = $s$0$lcssa53;
      while(1) {
       $6 = HEAP32[$w$034>>2]|0;
       $xor = $6 ^ $mul;
       $sub = (($xor) + -16843009)|0;
       $neg = $xor & -2139062144;
       $and15 = $neg ^ -2139062144;
       $and16 = $and15 & $sub;
       $lnot = ($and16|0)==(0);
       if (!($lnot)) {
        break;
       }
       $incdec$ptr21 = ((($w$034)) + 4|0);
       $sub22 = (($n$addr$133) + -4)|0;
       $cmp11 = ($sub22>>>0)>(3);
       if ($cmp11) {
        $n$addr$133 = $sub22;$w$034 = $incdec$ptr21;
       } else {
        $n$addr$1$lcssa = $sub22;$w$0$lcssa = $incdec$ptr21;
        label = 11;
        break L11;
       }
      }
      $n$addr$227 = $n$addr$133;$s$128 = $w$034;
     } else {
      $n$addr$1$lcssa = $n$addr$0$lcssa52;$w$0$lcssa = $s$0$lcssa53;
      label = 11;
     }
    } while(0);
    if ((label|0) == 11) {
     $tobool2526 = ($n$addr$1$lcssa|0)==(0);
     if ($tobool2526) {
      $n$addr$3 = 0;$s$2 = $w$0$lcssa;
      break;
     } else {
      $n$addr$227 = $n$addr$1$lcssa;$s$128 = $w$0$lcssa;
     }
    }
    while(1) {
     $7 = HEAP8[$s$128>>0]|0;
     $cmp28 = ($7<<24>>24)==($5<<24>>24);
     if ($cmp28) {
      $n$addr$3 = $n$addr$227;$s$2 = $s$128;
      break L8;
     }
     $incdec$ptr33 = ((($s$128)) + 1|0);
     $dec34 = (($n$addr$227) + -1)|0;
     $tobool25 = ($dec34|0)==(0);
     if ($tobool25) {
      $n$addr$3 = 0;$s$2 = $incdec$ptr33;
      break;
     } else {
      $n$addr$227 = $dec34;$s$128 = $incdec$ptr33;
     }
    }
   }
  }
 } while(0);
 $tobool36 = ($n$addr$3|0)!=(0);
 $cond = $tobool36 ? $s$2 : 0;
 return ($cond|0);
}
function _pad_684($f,$c,$w,$l,$fl) {
 $f = $f|0;
 $c = $c|0;
 $w = $w|0;
 $l = $l|0;
 $fl = $fl|0;
 var $0 = 0, $1 = 0, $2 = 0, $and = 0, $cmp = 0, $cmp3 = 0, $cmp38 = 0, $cond = 0, $l$addr$0$lcssa = 0, $l$addr$09 = 0, $or$cond = 0, $pad = 0, $sub = 0, $sub6 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0;
 $pad = sp;
 $and = $fl & 73728;
 $tobool = ($and|0)==(0);
 $cmp = ($w|0)>($l|0);
 $or$cond = $cmp & $tobool;
 if ($or$cond) {
  $sub = (($w) - ($l))|0;
  $0 = ($sub>>>0)<(256);
  $cond = $0 ? $sub : 256;
  _memset(($pad|0),($c|0),($cond|0))|0;
  $cmp38 = ($sub>>>0)>(255);
  if ($cmp38) {
   $1 = (($w) - ($l))|0;
   $l$addr$09 = $sub;
   while(1) {
    _out($f,$pad,256);
    $sub6 = (($l$addr$09) + -256)|0;
    $cmp3 = ($sub6>>>0)>(255);
    if ($cmp3) {
     $l$addr$09 = $sub6;
    } else {
     break;
    }
   }
   $2 = $1 & 255;
   $l$addr$0$lcssa = $2;
  } else {
   $l$addr$0$lcssa = $sub;
  }
  _out($f,$pad,$l$addr$0$lcssa);
 }
 STACKTOP = sp;return;
}
function _wctomb($s,$wc) {
 $s = $s|0;
 $wc = $wc|0;
 var $call = 0, $retval$0 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $tobool = ($s|0)==(0|0);
 if ($tobool) {
  $retval$0 = 0;
 } else {
  $call = (_wcrtomb($s,$wc,0)|0);
  $retval$0 = $call;
 }
 return ($retval$0|0);
}
function _fmt_fp($f,$y,$w,$p,$fl,$t) {
 $f = $f|0;
 $y = +$y;
 $w = $w|0;
 $p = $p|0;
 $fl = $fl|0;
 $t = $t|0;
 var $$ = 0, $$$ = 0, $$$405 = 0.0, $$394$ = 0, $$397 = 0.0, $$405 = 0.0, $$p = 0, $$p$inc468 = 0, $$pr = 0, $$pr407 = 0, $$pre = 0, $$pre487 = 0, $$sub514 = 0, $$sub562 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, $a$1$lcssa = 0, $a$1476 = 0, $a$2$ph = 0, $a$3$lcssa = 0, $a$3466 = 0, $a$5$lcssa = 0, $a$5448 = 0, $a$6 = 0, $a$8 = 0;
 var $a$9$ph = 0, $add = 0, $add$ptr213 = 0, $add$ptr311 = 0, $add$ptr311$z$4 = 0, $add$ptr354 = 0, $add$ptr358 = 0, $add$ptr373 = 0, $add$ptr442 = 0, $add$ptr442$z$3 = 0, $add$ptr65 = 0, $add$ptr671 = 0, $add$ptr742 = 0, $add$ptr756 = 0, $add113 = 0, $add150 = 0, $add150$pn = 0, $add165 = 0, $add273 = 0, $add275 = 0;
 var $add284 = 0, $add313 = 0, $add355 = 0, $add410 = 0.0, $add414 = 0, $add477$neg = 0, $add561 = 0, $add608 = 0, $add612 = 0, $add620 = 0, $add653 = 0, $add653$sink406 = 0, $add67 = 0, $add737 = 0, $add810 = 0, $add87 = 0.0, $add90 = 0.0, $and = 0, $and12 = 0, $and134 = 0;
 var $and282 = 0, $and36 = 0, $and379 = 0, $and45 = 0, $and483 = 0, $and610$pre$phiZ2D = 0, $and62 = 0, $arraydecay208$add$ptr213 = 0, $arrayidx = 0, $arrayidx117 = 0, $arrayidx251 = 0, $arrayidx453 = 0, $arrayidx489 = 0, $big = 0, $buf = 0, $call55 = 0.0, $carry$0471 = 0, $carry262$0462 = 0, $cmp103 = 0, $cmp127 = 0;
 var $cmp147 = 0, $cmp205 = 0, $cmp225 = 0, $cmp225474 = 0, $cmp235 = 0, $cmp235470 = 0, $cmp249 = 0, $cmp259 = 0, $cmp259464 = 0, $cmp277 = 0, $cmp277460 = 0, $cmp299 = 0, $cmp308 = 0, $cmp315 = 0, $cmp324 = 0, $cmp324456 = 0, $cmp333 = 0, $cmp338 = 0, $cmp350 = 0, $cmp363452 = 0;
 var $cmp374 = 0, $cmp38 = 0, $cmp385 = 0, $cmp390 = 0, $cmp403 = 0, $cmp411 = 0, $cmp416 = 0, $cmp416446 = 0, $cmp420 = 0, $cmp433 = 0, $cmp433442 = 0, $cmp443 = 0, $cmp450 = 0, $cmp450$lcssa = 0, $cmp470 = 0, $cmp473 = 0, $cmp495 = 0, $cmp495438 = 0, $cmp505 = 0, $cmp528 = 0;
 var $cmp577 = 0, $cmp59 = 0, $cmp614 = 0, $cmp617 = 0, $cmp623 = 0, $cmp636 = 0, $cmp636433 = 0, $cmp660 = 0, $cmp665 = 0, $cmp673 = 0, $cmp678 = 0, $cmp678419 = 0, $cmp68 = 0, $cmp686 = 0, $cmp707 = 0, $cmp707414 = 0, $cmp710 = 0, $cmp710415 = 0, $cmp722 = 0, $cmp722411 = 0;
 var $cmp745 = 0, $cmp748 = 0, $cmp748427 = 0, $cmp760 = 0, $cmp765 = 0, $cmp770 = 0, $cmp770423 = 0, $cmp777 = 0, $cmp790 = 0, $cmp818 = 0, $cmp82 = 0, $cmp94 = 0, $cond = 0, $cond100 = 0, $cond233 = 0, $cond271 = 0, $cond304 = 0, $cond43 = 0, $cond629 = 0, $cond732 = 0;
 var $cond800 = 0, $conv111 = 0, $conv114 = 0, $conv116 = 0, $conv118393 = 0, $conv121 = 0, $conv123 = 0.0, $conv216 = 0, $conv218 = 0.0, $conv644 = 0, $conv646 = 0, $d$0 = 0, $d$0469 = 0, $d$0472 = 0, $d$1461 = 0, $d$4 = 0, $d$5422 = 0, $d$6416 = 0, $d$7428 = 0, $dec = 0;
 var $dec476 = 0, $dec481 = 0, $dec78 = 0, $div274 = 0, $div356 = 0, $div378 = 0, $div384 = 0, $e$0458 = 0, $e$1 = 0, $e$2444 = 0, $e$4 = 0, $e$5$ph = 0, $e2 = 0, $ebuf0 = 0, $estr$0 = 0, $estr$1$lcssa = 0, $estr$1434 = 0, $estr$2 = 0, $exitcond = 0, $i$0457 = 0;
 var $i$1$lcssa = 0, $i$1453 = 0, $i$2443 = 0, $i$3439 = 0, $inc = 0, $inc425 = 0, $inc438 = 0, $inc468 = 0, $inc500 = 0, $incdec$ptr106 = 0, $incdec$ptr112 = 0, $incdec$ptr115 = 0, $incdec$ptr122 = 0, $incdec$ptr137 = 0, $incdec$ptr217 = 0, $incdec$ptr246 = 0, $incdec$ptr288 = 0, $incdec$ptr292 = 0, $incdec$ptr292$a$3 = 0, $incdec$ptr292$a$3492 = 0;
 var $incdec$ptr292$a$3494 = 0, $incdec$ptr292491 = 0, $incdec$ptr296 = 0, $incdec$ptr419 = 0, $incdec$ptr419$sink$lcssa = 0, $incdec$ptr419$sink447 = 0, $incdec$ptr423 = 0, $incdec$ptr639 = 0, $incdec$ptr645 = 0, $incdec$ptr647 = 0, $incdec$ptr681 = 0, $incdec$ptr689 = 0, $incdec$ptr698 = 0, $incdec$ptr725 = 0, $incdec$ptr734 = 0, $incdec$ptr763 = 0, $incdec$ptr773 = 0, $incdec$ptr776 = 0, $incdec$ptr808 = 0, $j$0 = 0;
 var $j$0451 = 0, $j$0454 = 0, $j$1440 = 0, $j$2 = 0, $l$0 = 0, $l$1 = 0, $land$ext$neg = 0, $lnot = 0, $lnot455 = 0, $lor$ext = 0, $mul = 0.0, $mul125 = 0.0, $mul202 = 0.0, $mul220 = 0.0, $mul286 = 0, $mul322 = 0, $mul328 = 0, $mul335 = 0, $mul349 = 0, $mul367 = 0;
 var $mul406 = 0.0, $mul406$$397 = 0.0, $mul407 = 0.0, $mul407$$$405 = 0.0, $mul431 = 0, $mul437 = 0, $mul499 = 0, $mul513 = 0, $mul80 = 0.0, $narrow = 0, $not$tobool341 = 0, $notlhs = 0, $notrhs = 0, $or = 0, $or$cond = 0, $or$cond1$not = 0, $or$cond2 = 0, $or$cond395 = 0, $or$cond396 = 0, $or$cond398 = 0;
 var $or$cond402 = 0, $or120 = 0, $or504 = 0, $or613 = 0, $p$addr$2 = 0, $p$addr$2$$sub514399 = 0, $p$addr$2$$sub562400 = 0, $p$addr$3 = 0, $p$addr$4$lcssa = 0, $p$addr$4417 = 0, $p$addr$5$lcssa = 0, $p$addr$5429 = 0, $pl$0 = 0, $prefix$0 = 0, $prefix$0$add$ptr65 = 0, $r$0$a$9 = 0, $re$1410 = 0, $rem360 = 0, $rem370 = 0, $rem494 = 0;
 var $rem494437 = 0, $round$0409 = 0.0, $round377$1 = 0.0, $s$0 = 0, $s$1 = 0, $s35$0 = 0, $s668$0420 = 0, $s668$1 = 0, $s715$0$lcssa = 0, $s715$0412 = 0, $s753$0 = 0, $s753$1424 = 0, $s753$2 = 0, $scevgep483 = 0, $scevgep483484 = 0, $shl280 = 0, $shr283 = 0, $shr285 = 0, $small$1 = 0.0, $sub = 0.0;
 var $sub$ptr$div = 0, $sub$ptr$div321 = 0, $sub$ptr$div347 = 0, $sub$ptr$div430 = 0, $sub$ptr$div511 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$lhs$cast143 = 0, $sub$ptr$lhs$cast151 = 0, $sub$ptr$lhs$cast305 = 0, $sub$ptr$lhs$cast318 = 0, $sub$ptr$lhs$cast344 = 0, $sub$ptr$lhs$cast508 = 0, $sub$ptr$lhs$cast633 = 0, $sub$ptr$lhs$cast694 = 0, $sub$ptr$lhs$cast787 = 0, $sub$ptr$lhs$cast811 = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$rhs$cast152 = 0, $sub$ptr$rhs$cast306 = 0, $sub$ptr$rhs$cast319 = 0;
 var $sub$ptr$rhs$cast428 = 0, $sub$ptr$rhs$cast634 = 0, $sub$ptr$rhs$cast634431 = 0, $sub$ptr$rhs$cast649 = 0, $sub$ptr$rhs$cast695 = 0, $sub$ptr$rhs$cast788 = 0, $sub$ptr$rhs$cast812 = 0, $sub$ptr$sub = 0, $sub$ptr$sub145 = 0, $sub$ptr$sub153 = 0, $sub$ptr$sub307 = 0, $sub$ptr$sub320 = 0, $sub$ptr$sub346 = 0, $sub$ptr$sub429 = 0, $sub$ptr$sub510 = 0, $sub$ptr$sub635 = 0, $sub$ptr$sub635432 = 0, $sub$ptr$sub650 = 0, $sub$ptr$sub650$pn = 0, $sub$ptr$sub696 = 0;
 var $sub$ptr$sub789 = 0, $sub$ptr$sub813 = 0, $sub124 = 0.0, $sub146 = 0, $sub181 = 0, $sub203 = 0, $sub219 = 0.0, $sub256 = 0, $sub264 = 0, $sub281 = 0, $sub336 = 0, $sub343 = 0, $sub357 = 0, $sub409 = 0, $sub478 = 0, $sub480 = 0, $sub514 = 0, $sub562 = 0, $sub626$le = 0, $sub735 = 0;
 var $sub74 = 0, $sub806 = 0, $sub85 = 0.0, $sub86 = 0.0, $sub88 = 0.0, $sub91 = 0.0, $sub97 = 0, $t$addr$0 = 0, $t$addr$1 = 0, $tobool13 = 0, $tobool135 = 0, $tobool139 = 0, $tobool140 = 0, $tobool222 = 0, $tobool244 = 0, $tobool290 = 0, $tobool290490 = 0, $tobool294 = 0, $tobool341 = 0, $tobool37 = 0;
 var $tobool371 = 0, $tobool380 = 0, $tobool400 = 0, $tobool484 = 0, $tobool490 = 0, $tobool56 = 0, $tobool63 = 0, $tobool76 = 0, $tobool76488 = 0, $tobool781 = 0, $tobool79 = 0, $tobool9 = 0, $w$add653 = 0, $xor = 0, $xor167 = 0, $xor186 = 0, $xor655 = 0, $xor816 = 0, $y$addr$0 = 0.0, $y$addr$1 = 0.0;
 var $y$addr$2 = 0.0, $y$addr$3 = 0.0, $y$addr$4 = 0.0, $z$0 = 0, $z$1$lcssa = 0, $z$1475 = 0, $z$2 = 0, $z$3$lcssa = 0, $z$3465 = 0, $z$4 = 0, $z$7 = 0, $z$7$add$ptr742 = 0, $z$7$ph = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560|0;
 $big = sp + 8|0;
 $e2 = sp;
 $buf = sp + 524|0;
 $sub$ptr$rhs$cast = $buf;
 $ebuf0 = sp + 512|0;
 HEAP32[$e2>>2] = 0;
 $arrayidx = ((($ebuf0)) + 12|0);
 (___DOUBLE_BITS_685($y)|0);
 $0 = tempRet0;
 $1 = ($0|0)<(0);
 if ($1) {
  $sub = -$y;
  $pl$0 = 1;$prefix$0 = 17762;$y$addr$0 = $sub;
 } else {
  $and = $fl & 2048;
  $tobool9 = ($and|0)==(0);
  $and12 = $fl & 1;
  $tobool13 = ($and12|0)==(0);
  $$ = $tobool13 ? (17763) : (17768);
  $$$ = $tobool9 ? $$ : (17765);
  $2 = $fl & 2049;
  $narrow = ($2|0)!=(0);
  $$394$ = $narrow&1;
  $pl$0 = $$394$;$prefix$0 = $$$;$y$addr$0 = $y;
 }
 (___DOUBLE_BITS_685($y$addr$0)|0);
 $3 = tempRet0;
 $4 = $3 & 2146435072;
 $5 = ($4>>>0)<(2146435072);
 $6 = (0)<(0);
 $7 = ($4|0)==(2146435072);
 $8 = $7 & $6;
 $9 = $5 | $8;
 do {
  if ($9) {
   $call55 = (+_frexpl($y$addr$0,$e2));
   $mul = $call55 * 2.0;
   $tobool56 = $mul != 0.0;
   if ($tobool56) {
    $10 = HEAP32[$e2>>2]|0;
    $dec = (($10) + -1)|0;
    HEAP32[$e2>>2] = $dec;
   }
   $or = $t | 32;
   $cmp59 = ($or|0)==(97);
   if ($cmp59) {
    $and62 = $t & 32;
    $tobool63 = ($and62|0)==(0);
    $add$ptr65 = ((($prefix$0)) + 9|0);
    $prefix$0$add$ptr65 = $tobool63 ? $prefix$0 : $add$ptr65;
    $add67 = $pl$0 | 2;
    $11 = ($p>>>0)>(11);
    $sub74 = (12 - ($p))|0;
    $tobool76488 = ($sub74|0)==(0);
    $tobool76 = $11 | $tobool76488;
    do {
     if ($tobool76) {
      $y$addr$1 = $mul;
     } else {
      $re$1410 = $sub74;$round$0409 = 8.0;
      while(1) {
       $dec78 = (($re$1410) + -1)|0;
       $mul80 = $round$0409 * 16.0;
       $tobool79 = ($dec78|0)==(0);
       if ($tobool79) {
        break;
       } else {
        $re$1410 = $dec78;$round$0409 = $mul80;
       }
      }
      $12 = HEAP8[$prefix$0$add$ptr65>>0]|0;
      $cmp82 = ($12<<24>>24)==(45);
      if ($cmp82) {
       $sub85 = -$mul;
       $sub86 = $sub85 - $mul80;
       $add87 = $mul80 + $sub86;
       $sub88 = -$add87;
       $y$addr$1 = $sub88;
       break;
      } else {
       $add90 = $mul + $mul80;
       $sub91 = $add90 - $mul80;
       $y$addr$1 = $sub91;
       break;
      }
     }
    } while(0);
    $13 = HEAP32[$e2>>2]|0;
    $cmp94 = ($13|0)<(0);
    $sub97 = (0 - ($13))|0;
    $cond100 = $cmp94 ? $sub97 : $13;
    $14 = ($cond100|0)<(0);
    $15 = $14 << 31 >> 31;
    $16 = (_fmt_u($cond100,$15,$arrayidx)|0);
    $cmp103 = ($16|0)==($arrayidx|0);
    if ($cmp103) {
     $incdec$ptr106 = ((($ebuf0)) + 11|0);
     HEAP8[$incdec$ptr106>>0] = 48;
     $estr$0 = $incdec$ptr106;
    } else {
     $estr$0 = $16;
    }
    $17 = $13 >> 31;
    $18 = $17 & 2;
    $19 = (($18) + 43)|0;
    $conv111 = $19&255;
    $incdec$ptr112 = ((($estr$0)) + -1|0);
    HEAP8[$incdec$ptr112>>0] = $conv111;
    $add113 = (($t) + 15)|0;
    $conv114 = $add113&255;
    $incdec$ptr115 = ((($estr$0)) + -2|0);
    HEAP8[$incdec$ptr115>>0] = $conv114;
    $notrhs = ($p|0)<(1);
    $and134 = $fl & 8;
    $tobool135 = ($and134|0)==(0);
    $s$0 = $buf;$y$addr$2 = $y$addr$1;
    while(1) {
     $conv116 = (~~(($y$addr$2)));
     $arrayidx117 = (17797 + ($conv116)|0);
     $20 = HEAP8[$arrayidx117>>0]|0;
     $conv118393 = $20&255;
     $or120 = $conv118393 | $and62;
     $conv121 = $or120&255;
     $incdec$ptr122 = ((($s$0)) + 1|0);
     HEAP8[$s$0>>0] = $conv121;
     $conv123 = (+($conv116|0));
     $sub124 = $y$addr$2 - $conv123;
     $mul125 = $sub124 * 16.0;
     $sub$ptr$lhs$cast = $incdec$ptr122;
     $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
     $cmp127 = ($sub$ptr$sub|0)==(1);
     if ($cmp127) {
      $notlhs = $mul125 == 0.0;
      $or$cond1$not = $notrhs & $notlhs;
      $or$cond = $tobool135 & $or$cond1$not;
      if ($or$cond) {
       $s$1 = $incdec$ptr122;
      } else {
       $incdec$ptr137 = ((($s$0)) + 2|0);
       HEAP8[$incdec$ptr122>>0] = 46;
       $s$1 = $incdec$ptr137;
      }
     } else {
      $s$1 = $incdec$ptr122;
     }
     $tobool139 = $mul125 != 0.0;
     if ($tobool139) {
      $s$0 = $s$1;$y$addr$2 = $mul125;
     } else {
      break;
     }
    }
    $tobool140 = ($p|0)!=(0);
    $sub$ptr$rhs$cast152 = $incdec$ptr115;
    $sub$ptr$lhs$cast151 = $arrayidx;
    $sub$ptr$lhs$cast143 = $s$1;
    $sub$ptr$sub145 = (($sub$ptr$lhs$cast143) - ($sub$ptr$rhs$cast))|0;
    $sub$ptr$sub153 = (($sub$ptr$lhs$cast151) - ($sub$ptr$rhs$cast152))|0;
    $sub146 = (($sub$ptr$sub145) + -2)|0;
    $cmp147 = ($sub146|0)<($p|0);
    $or$cond395 = $tobool140 & $cmp147;
    $add150 = (($p) + 2)|0;
    $add150$pn = $or$cond395 ? $add150 : $sub$ptr$sub145;
    $l$0 = (($sub$ptr$sub153) + ($add67))|0;
    $add165 = (($l$0) + ($add150$pn))|0;
    _pad_684($f,32,$w,$add165,$fl);
    _out($f,$prefix$0$add$ptr65,$add67);
    $xor167 = $fl ^ 65536;
    _pad_684($f,48,$w,$add165,$xor167);
    _out($f,$buf,$sub$ptr$sub145);
    $sub181 = (($add150$pn) - ($sub$ptr$sub145))|0;
    _pad_684($f,48,$sub181,0,0);
    _out($f,$incdec$ptr115,$sub$ptr$sub153);
    $xor186 = $fl ^ 8192;
    _pad_684($f,32,$w,$add165,$xor186);
    $add653$sink406 = $add165;
    break;
   }
   $cmp68 = ($p|0)<(0);
   $$p = $cmp68 ? 6 : $p;
   if ($tobool56) {
    $mul202 = $mul * 268435456.0;
    $21 = HEAP32[$e2>>2]|0;
    $sub203 = (($21) + -28)|0;
    HEAP32[$e2>>2] = $sub203;
    $$pr = $sub203;$y$addr$3 = $mul202;
   } else {
    $$pre = HEAP32[$e2>>2]|0;
    $$pr = $$pre;$y$addr$3 = $mul;
   }
   $cmp205 = ($$pr|0)<(0);
   $add$ptr213 = ((($big)) + 288|0);
   $arraydecay208$add$ptr213 = $cmp205 ? $big : $add$ptr213;
   $y$addr$4 = $y$addr$3;$z$0 = $arraydecay208$add$ptr213;
   while(1) {
    $conv216 = (~~(($y$addr$4))>>>0);
    HEAP32[$z$0>>2] = $conv216;
    $incdec$ptr217 = ((($z$0)) + 4|0);
    $conv218 = (+($conv216>>>0));
    $sub219 = $y$addr$4 - $conv218;
    $mul220 = $sub219 * 1.0E+9;
    $tobool222 = $mul220 != 0.0;
    if ($tobool222) {
     $y$addr$4 = $mul220;$z$0 = $incdec$ptr217;
    } else {
     break;
    }
   }
   $cmp225474 = ($$pr|0)>(0);
   if ($cmp225474) {
    $23 = $$pr;$a$1476 = $arraydecay208$add$ptr213;$z$1475 = $incdec$ptr217;
    while(1) {
     $22 = ($23|0)<(29);
     $cond233 = $22 ? $23 : 29;
     $d$0469 = ((($z$1475)) + -4|0);
     $cmp235470 = ($d$0469>>>0)<($a$1476>>>0);
     if ($cmp235470) {
      $a$2$ph = $a$1476;
     } else {
      $carry$0471 = 0;$d$0472 = $d$0469;
      while(1) {
       $24 = HEAP32[$d$0472>>2]|0;
       $25 = (_bitshift64Shl(($24|0),0,($cond233|0))|0);
       $26 = tempRet0;
       $27 = (_i64Add(($25|0),($26|0),($carry$0471|0),0)|0);
       $28 = tempRet0;
       $29 = (___uremdi3(($27|0),($28|0),1000000000,0)|0);
       $30 = tempRet0;
       HEAP32[$d$0472>>2] = $29;
       $31 = (___udivdi3(($27|0),($28|0),1000000000,0)|0);
       $32 = tempRet0;
       $d$0 = ((($d$0472)) + -4|0);
       $cmp235 = ($d$0>>>0)<($a$1476>>>0);
       if ($cmp235) {
        break;
       } else {
        $carry$0471 = $31;$d$0472 = $d$0;
       }
      }
      $tobool244 = ($31|0)==(0);
      if ($tobool244) {
       $a$2$ph = $a$1476;
      } else {
       $incdec$ptr246 = ((($a$1476)) + -4|0);
       HEAP32[$incdec$ptr246>>2] = $31;
       $a$2$ph = $incdec$ptr246;
      }
     }
     $z$2 = $z$1475;
     while(1) {
      $cmp249 = ($z$2>>>0)>($a$2$ph>>>0);
      if (!($cmp249)) {
       break;
      }
      $arrayidx251 = ((($z$2)) + -4|0);
      $33 = HEAP32[$arrayidx251>>2]|0;
      $lnot = ($33|0)==(0);
      if ($lnot) {
       $z$2 = $arrayidx251;
      } else {
       break;
      }
     }
     $34 = HEAP32[$e2>>2]|0;
     $sub256 = (($34) - ($cond233))|0;
     HEAP32[$e2>>2] = $sub256;
     $cmp225 = ($sub256|0)>(0);
     if ($cmp225) {
      $23 = $sub256;$a$1476 = $a$2$ph;$z$1475 = $z$2;
     } else {
      $$pr407 = $sub256;$a$1$lcssa = $a$2$ph;$z$1$lcssa = $z$2;
      break;
     }
    }
   } else {
    $$pr407 = $$pr;$a$1$lcssa = $arraydecay208$add$ptr213;$z$1$lcssa = $incdec$ptr217;
   }
   $cmp259464 = ($$pr407|0)<(0);
   if ($cmp259464) {
    $add273 = (($$p) + 25)|0;
    $div274 = (($add273|0) / 9)&-1;
    $add275 = (($div274) + 1)|0;
    $cmp299 = ($or|0)==(102);
    $35 = $$pr407;$a$3466 = $a$1$lcssa;$z$3465 = $z$1$lcssa;
    while(1) {
     $sub264 = (0 - ($35))|0;
     $36 = ($sub264|0)<(9);
     $cond271 = $36 ? $sub264 : 9;
     $cmp277460 = ($a$3466>>>0)<($z$3465>>>0);
     if ($cmp277460) {
      $shl280 = 1 << $cond271;
      $sub281 = (($shl280) + -1)|0;
      $shr285 = 1000000000 >>> $cond271;
      $carry262$0462 = 0;$d$1461 = $a$3466;
      while(1) {
       $38 = HEAP32[$d$1461>>2]|0;
       $and282 = $38 & $sub281;
       $shr283 = $38 >>> $cond271;
       $add284 = (($shr283) + ($carry262$0462))|0;
       HEAP32[$d$1461>>2] = $add284;
       $mul286 = Math_imul($and282, $shr285)|0;
       $incdec$ptr288 = ((($d$1461)) + 4|0);
       $cmp277 = ($incdec$ptr288>>>0)<($z$3465>>>0);
       if ($cmp277) {
        $carry262$0462 = $mul286;$d$1461 = $incdec$ptr288;
       } else {
        break;
       }
      }
      $39 = HEAP32[$a$3466>>2]|0;
      $tobool290 = ($39|0)==(0);
      $incdec$ptr292 = ((($a$3466)) + 4|0);
      $incdec$ptr292$a$3 = $tobool290 ? $incdec$ptr292 : $a$3466;
      $tobool294 = ($mul286|0)==(0);
      if ($tobool294) {
       $incdec$ptr292$a$3494 = $incdec$ptr292$a$3;$z$4 = $z$3465;
      } else {
       $incdec$ptr296 = ((($z$3465)) + 4|0);
       HEAP32[$z$3465>>2] = $mul286;
       $incdec$ptr292$a$3494 = $incdec$ptr292$a$3;$z$4 = $incdec$ptr296;
      }
     } else {
      $37 = HEAP32[$a$3466>>2]|0;
      $tobool290490 = ($37|0)==(0);
      $incdec$ptr292491 = ((($a$3466)) + 4|0);
      $incdec$ptr292$a$3492 = $tobool290490 ? $incdec$ptr292491 : $a$3466;
      $incdec$ptr292$a$3494 = $incdec$ptr292$a$3492;$z$4 = $z$3465;
     }
     $cond304 = $cmp299 ? $arraydecay208$add$ptr213 : $incdec$ptr292$a$3494;
     $sub$ptr$lhs$cast305 = $z$4;
     $sub$ptr$rhs$cast306 = $cond304;
     $sub$ptr$sub307 = (($sub$ptr$lhs$cast305) - ($sub$ptr$rhs$cast306))|0;
     $sub$ptr$div = $sub$ptr$sub307 >> 2;
     $cmp308 = ($sub$ptr$div|0)>($add275|0);
     $add$ptr311 = (($cond304) + ($add275<<2)|0);
     $add$ptr311$z$4 = $cmp308 ? $add$ptr311 : $z$4;
     $40 = HEAP32[$e2>>2]|0;
     $add313 = (($40) + ($cond271))|0;
     HEAP32[$e2>>2] = $add313;
     $cmp259 = ($add313|0)<(0);
     if ($cmp259) {
      $35 = $add313;$a$3466 = $incdec$ptr292$a$3494;$z$3465 = $add$ptr311$z$4;
     } else {
      $a$3$lcssa = $incdec$ptr292$a$3494;$z$3$lcssa = $add$ptr311$z$4;
      break;
     }
    }
   } else {
    $a$3$lcssa = $a$1$lcssa;$z$3$lcssa = $z$1$lcssa;
   }
   $cmp315 = ($a$3$lcssa>>>0)<($z$3$lcssa>>>0);
   $sub$ptr$lhs$cast318 = $arraydecay208$add$ptr213;
   if ($cmp315) {
    $sub$ptr$rhs$cast319 = $a$3$lcssa;
    $sub$ptr$sub320 = (($sub$ptr$lhs$cast318) - ($sub$ptr$rhs$cast319))|0;
    $sub$ptr$div321 = $sub$ptr$sub320 >> 2;
    $mul322 = ($sub$ptr$div321*9)|0;
    $41 = HEAP32[$a$3$lcssa>>2]|0;
    $cmp324456 = ($41>>>0)<(10);
    if ($cmp324456) {
     $e$1 = $mul322;
    } else {
     $e$0458 = $mul322;$i$0457 = 10;
     while(1) {
      $mul328 = ($i$0457*10)|0;
      $inc = (($e$0458) + 1)|0;
      $cmp324 = ($41>>>0)<($mul328>>>0);
      if ($cmp324) {
       $e$1 = $inc;
       break;
      } else {
       $e$0458 = $inc;$i$0457 = $mul328;
      }
     }
    }
   } else {
    $e$1 = 0;
   }
   $cmp333 = ($or|0)!=(102);
   $mul335 = $cmp333 ? $e$1 : 0;
   $sub336 = (($$p) - ($mul335))|0;
   $cmp338 = ($or|0)==(103);
   $tobool341 = ($$p|0)!=(0);
   $42 = $tobool341 & $cmp338;
   $land$ext$neg = $42 << 31 >> 31;
   $sub343 = (($sub336) + ($land$ext$neg))|0;
   $sub$ptr$lhs$cast344 = $z$3$lcssa;
   $sub$ptr$sub346 = (($sub$ptr$lhs$cast344) - ($sub$ptr$lhs$cast318))|0;
   $sub$ptr$div347 = $sub$ptr$sub346 >> 2;
   $43 = ($sub$ptr$div347*9)|0;
   $mul349 = (($43) + -9)|0;
   $cmp350 = ($sub343|0)<($mul349|0);
   if ($cmp350) {
    $add$ptr354 = ((($arraydecay208$add$ptr213)) + 4|0);
    $add355 = (($sub343) + 9216)|0;
    $div356 = (($add355|0) / 9)&-1;
    $sub357 = (($div356) + -1024)|0;
    $add$ptr358 = (($add$ptr354) + ($sub357<<2)|0);
    $rem360 = (($add355|0) % 9)&-1;
    $j$0451 = (($rem360) + 1)|0;
    $cmp363452 = ($j$0451|0)<(9);
    if ($cmp363452) {
     $i$1453 = 10;$j$0454 = $j$0451;
     while(1) {
      $mul367 = ($i$1453*10)|0;
      $j$0 = (($j$0454) + 1)|0;
      $exitcond = ($j$0|0)==(9);
      if ($exitcond) {
       $i$1$lcssa = $mul367;
       break;
      } else {
       $i$1453 = $mul367;$j$0454 = $j$0;
      }
     }
    } else {
     $i$1$lcssa = 10;
    }
    $44 = HEAP32[$add$ptr358>>2]|0;
    $rem370 = (($44>>>0) % ($i$1$lcssa>>>0))&-1;
    $tobool371 = ($rem370|0)==(0);
    $add$ptr373 = ((($add$ptr358)) + 4|0);
    $cmp374 = ($add$ptr373|0)==($z$3$lcssa|0);
    $or$cond396 = $cmp374 & $tobool371;
    if ($or$cond396) {
     $a$8 = $a$3$lcssa;$d$4 = $add$ptr358;$e$4 = $e$1;
    } else {
     $div378 = (($44>>>0) / ($i$1$lcssa>>>0))&-1;
     $and379 = $div378 & 1;
     $tobool380 = ($and379|0)==(0);
     $$397 = $tobool380 ? 9007199254740992.0 : 9007199254740994.0;
     $div384 = (($i$1$lcssa|0) / 2)&-1;
     $cmp385 = ($rem370>>>0)<($div384>>>0);
     $cmp390 = ($rem370|0)==($div384|0);
     $or$cond398 = $cmp374 & $cmp390;
     $$405 = $or$cond398 ? 1.0 : 1.5;
     $$$405 = $cmp385 ? 0.5 : $$405;
     $tobool400 = ($pl$0|0)==(0);
     if ($tobool400) {
      $round377$1 = $$397;$small$1 = $$$405;
     } else {
      $45 = HEAP8[$prefix$0>>0]|0;
      $cmp403 = ($45<<24>>24)==(45);
      $mul406 = -$$397;
      $mul407 = -$$$405;
      $mul406$$397 = $cmp403 ? $mul406 : $$397;
      $mul407$$$405 = $cmp403 ? $mul407 : $$$405;
      $round377$1 = $mul406$$397;$small$1 = $mul407$$$405;
     }
     $sub409 = (($44) - ($rem370))|0;
     HEAP32[$add$ptr358>>2] = $sub409;
     $add410 = $round377$1 + $small$1;
     $cmp411 = $add410 != $round377$1;
     if ($cmp411) {
      $add414 = (($sub409) + ($i$1$lcssa))|0;
      HEAP32[$add$ptr358>>2] = $add414;
      $cmp416446 = ($add414>>>0)>(999999999);
      if ($cmp416446) {
       $a$5448 = $a$3$lcssa;$incdec$ptr419$sink447 = $add$ptr358;
       while(1) {
        $incdec$ptr419 = ((($incdec$ptr419$sink447)) + -4|0);
        HEAP32[$incdec$ptr419$sink447>>2] = 0;
        $cmp420 = ($incdec$ptr419>>>0)<($a$5448>>>0);
        if ($cmp420) {
         $incdec$ptr423 = ((($a$5448)) + -4|0);
         HEAP32[$incdec$ptr423>>2] = 0;
         $a$6 = $incdec$ptr423;
        } else {
         $a$6 = $a$5448;
        }
        $46 = HEAP32[$incdec$ptr419>>2]|0;
        $inc425 = (($46) + 1)|0;
        HEAP32[$incdec$ptr419>>2] = $inc425;
        $cmp416 = ($inc425>>>0)>(999999999);
        if ($cmp416) {
         $a$5448 = $a$6;$incdec$ptr419$sink447 = $incdec$ptr419;
        } else {
         $a$5$lcssa = $a$6;$incdec$ptr419$sink$lcssa = $incdec$ptr419;
         break;
        }
       }
      } else {
       $a$5$lcssa = $a$3$lcssa;$incdec$ptr419$sink$lcssa = $add$ptr358;
      }
      $sub$ptr$rhs$cast428 = $a$5$lcssa;
      $sub$ptr$sub429 = (($sub$ptr$lhs$cast318) - ($sub$ptr$rhs$cast428))|0;
      $sub$ptr$div430 = $sub$ptr$sub429 >> 2;
      $mul431 = ($sub$ptr$div430*9)|0;
      $47 = HEAP32[$a$5$lcssa>>2]|0;
      $cmp433442 = ($47>>>0)<(10);
      if ($cmp433442) {
       $a$8 = $a$5$lcssa;$d$4 = $incdec$ptr419$sink$lcssa;$e$4 = $mul431;
      } else {
       $e$2444 = $mul431;$i$2443 = 10;
       while(1) {
        $mul437 = ($i$2443*10)|0;
        $inc438 = (($e$2444) + 1)|0;
        $cmp433 = ($47>>>0)<($mul437>>>0);
        if ($cmp433) {
         $a$8 = $a$5$lcssa;$d$4 = $incdec$ptr419$sink$lcssa;$e$4 = $inc438;
         break;
        } else {
         $e$2444 = $inc438;$i$2443 = $mul437;
        }
       }
      }
     } else {
      $a$8 = $a$3$lcssa;$d$4 = $add$ptr358;$e$4 = $e$1;
     }
    }
    $add$ptr442 = ((($d$4)) + 4|0);
    $cmp443 = ($z$3$lcssa>>>0)>($add$ptr442>>>0);
    $add$ptr442$z$3 = $cmp443 ? $add$ptr442 : $z$3$lcssa;
    $a$9$ph = $a$8;$e$5$ph = $e$4;$z$7$ph = $add$ptr442$z$3;
   } else {
    $a$9$ph = $a$3$lcssa;$e$5$ph = $e$1;$z$7$ph = $z$3$lcssa;
   }
   $z$7 = $z$7$ph;
   while(1) {
    $cmp450 = ($z$7>>>0)>($a$9$ph>>>0);
    if (!($cmp450)) {
     $cmp450$lcssa = 0;
     break;
    }
    $arrayidx453 = ((($z$7)) + -4|0);
    $48 = HEAP32[$arrayidx453>>2]|0;
    $lnot455 = ($48|0)==(0);
    if ($lnot455) {
     $z$7 = $arrayidx453;
    } else {
     $cmp450$lcssa = 1;
     break;
    }
   }
   $sub626$le = (0 - ($e$5$ph))|0;
   do {
    if ($cmp338) {
     $not$tobool341 = $tobool341 ^ 1;
     $inc468 = $not$tobool341&1;
     $$p$inc468 = (($inc468) + ($$p))|0;
     $cmp470 = ($$p$inc468|0)>($e$5$ph|0);
     $cmp473 = ($e$5$ph|0)>(-5);
     $or$cond2 = $cmp470 & $cmp473;
     if ($or$cond2) {
      $dec476 = (($t) + -1)|0;
      $add477$neg = (($$p$inc468) + -1)|0;
      $sub478 = (($add477$neg) - ($e$5$ph))|0;
      $p$addr$2 = $sub478;$t$addr$0 = $dec476;
     } else {
      $sub480 = (($t) + -2)|0;
      $dec481 = (($$p$inc468) + -1)|0;
      $p$addr$2 = $dec481;$t$addr$0 = $sub480;
     }
     $and483 = $fl & 8;
     $tobool484 = ($and483|0)==(0);
     if ($tobool484) {
      if ($cmp450$lcssa) {
       $arrayidx489 = ((($z$7)) + -4|0);
       $49 = HEAP32[$arrayidx489>>2]|0;
       $tobool490 = ($49|0)==(0);
       if ($tobool490) {
        $j$2 = 9;
       } else {
        $rem494437 = (($49>>>0) % 10)&-1;
        $cmp495438 = ($rem494437|0)==(0);
        if ($cmp495438) {
         $i$3439 = 10;$j$1440 = 0;
         while(1) {
          $mul499 = ($i$3439*10)|0;
          $inc500 = (($j$1440) + 1)|0;
          $rem494 = (($49>>>0) % ($mul499>>>0))&-1;
          $cmp495 = ($rem494|0)==(0);
          if ($cmp495) {
           $i$3439 = $mul499;$j$1440 = $inc500;
          } else {
           $j$2 = $inc500;
           break;
          }
         }
        } else {
         $j$2 = 0;
        }
       }
      } else {
       $j$2 = 9;
      }
      $or504 = $t$addr$0 | 32;
      $cmp505 = ($or504|0)==(102);
      $sub$ptr$lhs$cast508 = $z$7;
      $sub$ptr$sub510 = (($sub$ptr$lhs$cast508) - ($sub$ptr$lhs$cast318))|0;
      $sub$ptr$div511 = $sub$ptr$sub510 >> 2;
      $50 = ($sub$ptr$div511*9)|0;
      $mul513 = (($50) + -9)|0;
      if ($cmp505) {
       $sub514 = (($mul513) - ($j$2))|0;
       $51 = ($sub514|0)>(0);
       $$sub514 = $51 ? $sub514 : 0;
       $cmp528 = ($p$addr$2|0)<($$sub514|0);
       $p$addr$2$$sub514399 = $cmp528 ? $p$addr$2 : $$sub514;
       $and610$pre$phiZ2D = 0;$p$addr$3 = $p$addr$2$$sub514399;$t$addr$1 = $t$addr$0;
       break;
      } else {
       $add561 = (($mul513) + ($e$5$ph))|0;
       $sub562 = (($add561) - ($j$2))|0;
       $52 = ($sub562|0)>(0);
       $$sub562 = $52 ? $sub562 : 0;
       $cmp577 = ($p$addr$2|0)<($$sub562|0);
       $p$addr$2$$sub562400 = $cmp577 ? $p$addr$2 : $$sub562;
       $and610$pre$phiZ2D = 0;$p$addr$3 = $p$addr$2$$sub562400;$t$addr$1 = $t$addr$0;
       break;
      }
     } else {
      $and610$pre$phiZ2D = $and483;$p$addr$3 = $p$addr$2;$t$addr$1 = $t$addr$0;
     }
    } else {
     $$pre487 = $fl & 8;
     $and610$pre$phiZ2D = $$pre487;$p$addr$3 = $$p;$t$addr$1 = $t;
    }
   } while(0);
   $53 = $p$addr$3 | $and610$pre$phiZ2D;
   $54 = ($53|0)!=(0);
   $lor$ext = $54&1;
   $or613 = $t$addr$1 | 32;
   $cmp614 = ($or613|0)==(102);
   if ($cmp614) {
    $cmp617 = ($e$5$ph|0)>(0);
    $add620 = $cmp617 ? $e$5$ph : 0;
    $estr$2 = 0;$sub$ptr$sub650$pn = $add620;
   } else {
    $cmp623 = ($e$5$ph|0)<(0);
    $cond629 = $cmp623 ? $sub626$le : $e$5$ph;
    $55 = ($cond629|0)<(0);
    $56 = $55 << 31 >> 31;
    $57 = (_fmt_u($cond629,$56,$arrayidx)|0);
    $sub$ptr$lhs$cast633 = $arrayidx;
    $sub$ptr$rhs$cast634431 = $57;
    $sub$ptr$sub635432 = (($sub$ptr$lhs$cast633) - ($sub$ptr$rhs$cast634431))|0;
    $cmp636433 = ($sub$ptr$sub635432|0)<(2);
    if ($cmp636433) {
     $estr$1434 = $57;
     while(1) {
      $incdec$ptr639 = ((($estr$1434)) + -1|0);
      HEAP8[$incdec$ptr639>>0] = 48;
      $sub$ptr$rhs$cast634 = $incdec$ptr639;
      $sub$ptr$sub635 = (($sub$ptr$lhs$cast633) - ($sub$ptr$rhs$cast634))|0;
      $cmp636 = ($sub$ptr$sub635|0)<(2);
      if ($cmp636) {
       $estr$1434 = $incdec$ptr639;
      } else {
       $estr$1$lcssa = $incdec$ptr639;
       break;
      }
     }
    } else {
     $estr$1$lcssa = $57;
    }
    $58 = $e$5$ph >> 31;
    $59 = $58 & 2;
    $60 = (($59) + 43)|0;
    $conv644 = $60&255;
    $incdec$ptr645 = ((($estr$1$lcssa)) + -1|0);
    HEAP8[$incdec$ptr645>>0] = $conv644;
    $conv646 = $t$addr$1&255;
    $incdec$ptr647 = ((($estr$1$lcssa)) + -2|0);
    HEAP8[$incdec$ptr647>>0] = $conv646;
    $sub$ptr$rhs$cast649 = $incdec$ptr647;
    $sub$ptr$sub650 = (($sub$ptr$lhs$cast633) - ($sub$ptr$rhs$cast649))|0;
    $estr$2 = $incdec$ptr647;$sub$ptr$sub650$pn = $sub$ptr$sub650;
   }
   $add608 = (($pl$0) + 1)|0;
   $add612 = (($add608) + ($p$addr$3))|0;
   $l$1 = (($add612) + ($lor$ext))|0;
   $add653 = (($l$1) + ($sub$ptr$sub650$pn))|0;
   _pad_684($f,32,$w,$add653,$fl);
   _out($f,$prefix$0,$pl$0);
   $xor655 = $fl ^ 65536;
   _pad_684($f,48,$w,$add653,$xor655);
   if ($cmp614) {
    $cmp660 = ($a$9$ph>>>0)>($arraydecay208$add$ptr213>>>0);
    $r$0$a$9 = $cmp660 ? $arraydecay208$add$ptr213 : $a$9$ph;
    $add$ptr671 = ((($buf)) + 9|0);
    $sub$ptr$lhs$cast694 = $add$ptr671;
    $incdec$ptr689 = ((($buf)) + 8|0);
    $d$5422 = $r$0$a$9;
    while(1) {
     $61 = HEAP32[$d$5422>>2]|0;
     $62 = (_fmt_u($61,0,$add$ptr671)|0);
     $cmp673 = ($d$5422|0)==($r$0$a$9|0);
     if ($cmp673) {
      $cmp686 = ($62|0)==($add$ptr671|0);
      if ($cmp686) {
       HEAP8[$incdec$ptr689>>0] = 48;
       $s668$1 = $incdec$ptr689;
      } else {
       $s668$1 = $62;
      }
     } else {
      $cmp678419 = ($62>>>0)>($buf>>>0);
      if ($cmp678419) {
       $63 = $62;
       $64 = (($63) - ($sub$ptr$rhs$cast))|0;
       _memset(($buf|0),48,($64|0))|0;
       $s668$0420 = $62;
       while(1) {
        $incdec$ptr681 = ((($s668$0420)) + -1|0);
        $cmp678 = ($incdec$ptr681>>>0)>($buf>>>0);
        if ($cmp678) {
         $s668$0420 = $incdec$ptr681;
        } else {
         $s668$1 = $incdec$ptr681;
         break;
        }
       }
      } else {
       $s668$1 = $62;
      }
     }
     $sub$ptr$rhs$cast695 = $s668$1;
     $sub$ptr$sub696 = (($sub$ptr$lhs$cast694) - ($sub$ptr$rhs$cast695))|0;
     _out($f,$s668$1,$sub$ptr$sub696);
     $incdec$ptr698 = ((($d$5422)) + 4|0);
     $cmp665 = ($incdec$ptr698>>>0)>($arraydecay208$add$ptr213>>>0);
     if ($cmp665) {
      break;
     } else {
      $d$5422 = $incdec$ptr698;
     }
    }
    $65 = ($53|0)==(0);
    if (!($65)) {
     _out($f,17813,1);
    }
    $cmp707414 = ($incdec$ptr698>>>0)<($z$7>>>0);
    $cmp710415 = ($p$addr$3|0)>(0);
    $66 = $cmp707414 & $cmp710415;
    if ($66) {
     $d$6416 = $incdec$ptr698;$p$addr$4417 = $p$addr$3;
     while(1) {
      $67 = HEAP32[$d$6416>>2]|0;
      $68 = (_fmt_u($67,0,$add$ptr671)|0);
      $cmp722411 = ($68>>>0)>($buf>>>0);
      if ($cmp722411) {
       $69 = $68;
       $70 = (($69) - ($sub$ptr$rhs$cast))|0;
       _memset(($buf|0),48,($70|0))|0;
       $s715$0412 = $68;
       while(1) {
        $incdec$ptr725 = ((($s715$0412)) + -1|0);
        $cmp722 = ($incdec$ptr725>>>0)>($buf>>>0);
        if ($cmp722) {
         $s715$0412 = $incdec$ptr725;
        } else {
         $s715$0$lcssa = $incdec$ptr725;
         break;
        }
       }
      } else {
       $s715$0$lcssa = $68;
      }
      $71 = ($p$addr$4417|0)<(9);
      $cond732 = $71 ? $p$addr$4417 : 9;
      _out($f,$s715$0$lcssa,$cond732);
      $incdec$ptr734 = ((($d$6416)) + 4|0);
      $sub735 = (($p$addr$4417) + -9)|0;
      $cmp707 = ($incdec$ptr734>>>0)<($z$7>>>0);
      $cmp710 = ($p$addr$4417|0)>(9);
      $72 = $cmp707 & $cmp710;
      if ($72) {
       $d$6416 = $incdec$ptr734;$p$addr$4417 = $sub735;
      } else {
       $p$addr$4$lcssa = $sub735;
       break;
      }
     }
    } else {
     $p$addr$4$lcssa = $p$addr$3;
    }
    $add737 = (($p$addr$4$lcssa) + 9)|0;
    _pad_684($f,48,$add737,9,0);
   } else {
    $add$ptr742 = ((($a$9$ph)) + 4|0);
    $z$7$add$ptr742 = $cmp450$lcssa ? $z$7 : $add$ptr742;
    $cmp748427 = ($p$addr$3|0)>(-1);
    if ($cmp748427) {
     $add$ptr756 = ((($buf)) + 9|0);
     $tobool781 = ($and610$pre$phiZ2D|0)==(0);
     $sub$ptr$lhs$cast787 = $add$ptr756;
     $73 = (0 - ($sub$ptr$rhs$cast))|0;
     $incdec$ptr763 = ((($buf)) + 8|0);
     $d$7428 = $a$9$ph;$p$addr$5429 = $p$addr$3;
     while(1) {
      $74 = HEAP32[$d$7428>>2]|0;
      $75 = (_fmt_u($74,0,$add$ptr756)|0);
      $cmp760 = ($75|0)==($add$ptr756|0);
      if ($cmp760) {
       HEAP8[$incdec$ptr763>>0] = 48;
       $s753$0 = $incdec$ptr763;
      } else {
       $s753$0 = $75;
      }
      $cmp765 = ($d$7428|0)==($a$9$ph|0);
      do {
       if ($cmp765) {
        $incdec$ptr776 = ((($s753$0)) + 1|0);
        _out($f,$s753$0,1);
        $cmp777 = ($p$addr$5429|0)<(1);
        $or$cond402 = $tobool781 & $cmp777;
        if ($or$cond402) {
         $s753$2 = $incdec$ptr776;
         break;
        }
        _out($f,17813,1);
        $s753$2 = $incdec$ptr776;
       } else {
        $cmp770423 = ($s753$0>>>0)>($buf>>>0);
        if (!($cmp770423)) {
         $s753$2 = $s753$0;
         break;
        }
        $scevgep483 = (($s753$0) + ($73)|0);
        $scevgep483484 = $scevgep483;
        _memset(($buf|0),48,($scevgep483484|0))|0;
        $s753$1424 = $s753$0;
        while(1) {
         $incdec$ptr773 = ((($s753$1424)) + -1|0);
         $cmp770 = ($incdec$ptr773>>>0)>($buf>>>0);
         if ($cmp770) {
          $s753$1424 = $incdec$ptr773;
         } else {
          $s753$2 = $incdec$ptr773;
          break;
         }
        }
       }
      } while(0);
      $sub$ptr$rhs$cast788 = $s753$2;
      $sub$ptr$sub789 = (($sub$ptr$lhs$cast787) - ($sub$ptr$rhs$cast788))|0;
      $cmp790 = ($p$addr$5429|0)>($sub$ptr$sub789|0);
      $cond800 = $cmp790 ? $sub$ptr$sub789 : $p$addr$5429;
      _out($f,$s753$2,$cond800);
      $sub806 = (($p$addr$5429) - ($sub$ptr$sub789))|0;
      $incdec$ptr808 = ((($d$7428)) + 4|0);
      $cmp745 = ($incdec$ptr808>>>0)<($z$7$add$ptr742>>>0);
      $cmp748 = ($sub806|0)>(-1);
      $76 = $cmp745 & $cmp748;
      if ($76) {
       $d$7428 = $incdec$ptr808;$p$addr$5429 = $sub806;
      } else {
       $p$addr$5$lcssa = $sub806;
       break;
      }
     }
    } else {
     $p$addr$5$lcssa = $p$addr$3;
    }
    $add810 = (($p$addr$5$lcssa) + 18)|0;
    _pad_684($f,48,$add810,18,0);
    $sub$ptr$lhs$cast811 = $arrayidx;
    $sub$ptr$rhs$cast812 = $estr$2;
    $sub$ptr$sub813 = (($sub$ptr$lhs$cast811) - ($sub$ptr$rhs$cast812))|0;
    _out($f,$estr$2,$sub$ptr$sub813);
   }
   $xor816 = $fl ^ 8192;
   _pad_684($f,32,$w,$add653,$xor816);
   $add653$sink406 = $add653;
  } else {
   $and36 = $t & 32;
   $tobool37 = ($and36|0)!=(0);
   $cond = $tobool37 ? 17781 : 17785;
   $cmp38 = ($y$addr$0 != $y$addr$0) | (0.0 != 0.0);
   $cond43 = $tobool37 ? 17789 : 17793;
   $s35$0 = $cmp38 ? $cond43 : $cond;
   $add = (($pl$0) + 3)|0;
   $and45 = $fl & -65537;
   _pad_684($f,32,$w,$add,$and45);
   _out($f,$prefix$0,$pl$0);
   _out($f,$s35$0,3);
   $xor = $fl ^ 8192;
   _pad_684($f,32,$w,$add,$xor);
   $add653$sink406 = $add;
  }
 } while(0);
 $cmp818 = ($add653$sink406|0)<($w|0);
 $w$add653 = $cmp818 ? $w : $add653$sink406;
 STACKTOP = sp;return ($w$add653|0);
}
function ___DOUBLE_BITS_685($__f) {
 $__f = +$__f;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $__f;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 tempRet0 = ($1);
 return ($0|0);
}
function _frexpl($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $call = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (+_frexp($x,$e));
 return (+$call);
}
function _frexp($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $call = 0.0, $conv = 0, $mul = 0.0, $retval$0 = 0.0, $storemerge = 0, $sub = 0, $sub8 = 0, $tobool1 = 0, $trunc$clear = 0, $x$addr$0 = 0.0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $2 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $3 = tempRet0;
 $4 = $2&65535;
 $trunc$clear = $4 & 2047;
 switch ($trunc$clear<<16>>16) {
 case 0:  {
  $tobool1 = $x != 0.0;
  if ($tobool1) {
   $mul = $x * 1.8446744073709552E+19;
   $call = (+_frexp($mul,$e));
   $5 = HEAP32[$e>>2]|0;
   $sub = (($5) + -64)|0;
   $storemerge = $sub;$x$addr$0 = $call;
  } else {
   $storemerge = 0;$x$addr$0 = $x;
  }
  HEAP32[$e>>2] = $storemerge;
  $retval$0 = $x$addr$0;
  break;
 }
 case 2047:  {
  $retval$0 = $x;
  break;
 }
 default: {
  $conv = $2 & 2047;
  $sub8 = (($conv) + -1022)|0;
  HEAP32[$e>>2] = $sub8;
  $6 = $1 & -2146435073;
  $7 = $6 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $7;$8 = +HEAPF64[tempDoublePtr>>3];
  $retval$0 = $8;
 }
 }
 return (+$retval$0);
}
function _wcrtomb($s,$wc,$st) {
 $s = $s|0;
 $wc = $wc|0;
 $st = $st|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $and = 0, $and32 = 0, $and36 = 0, $and49 = 0, $and54 = 0, $and58 = 0, $call = 0, $call10 = 0, $call66 = 0, $cmp = 0, $cmp14 = 0, $cmp21 = 0, $cmp24 = 0, $cmp41 = 0, $cmp7 = 0, $conv = 0;
 var $conv12 = 0, $conv17 = 0, $conv19 = 0, $conv29 = 0, $conv34 = 0, $conv38 = 0, $conv46 = 0, $conv51 = 0, $conv56 = 0, $conv60 = 0, $incdec$ptr = 0, $incdec$ptr30 = 0, $incdec$ptr35 = 0, $incdec$ptr47 = 0, $incdec$ptr52 = 0, $incdec$ptr57 = 0, $locale = 0, $not$tobool2 = 0, $or = 0, $or$cond = 0;
 var $or18 = 0, $or28 = 0, $or33 = 0, $or37 = 0, $or45 = 0, $or50 = 0, $or55 = 0, $or59 = 0, $retval$0 = 0, $shr2729 = 0, $shr3130 = 0, $shr32 = 0, $shr4426 = 0, $shr4827 = 0, $shr5328 = 0, $sub40 = 0, $tobool = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $tobool = ($s|0)==(0|0);
 do {
  if ($tobool) {
   $retval$0 = 1;
  } else {
   $cmp = ($wc>>>0)<(128);
   if ($cmp) {
    $conv = $wc&255;
    HEAP8[$s>>0] = $conv;
    $retval$0 = 1;
    break;
   }
   $call = (___pthread_self_431()|0);
   $locale = ((($call)) + 188|0);
   $0 = HEAP32[$locale>>2]|0;
   $1 = HEAP32[$0>>2]|0;
   $not$tobool2 = ($1|0)==(0|0);
   if ($not$tobool2) {
    $2 = $wc & -128;
    $cmp7 = ($2|0)==(57216);
    if ($cmp7) {
     $conv12 = $wc&255;
     HEAP8[$s>>0] = $conv12;
     $retval$0 = 1;
     break;
    } else {
     $call10 = (___errno_location()|0);
     HEAP32[$call10>>2] = 84;
     $retval$0 = -1;
     break;
    }
   }
   $cmp14 = ($wc>>>0)<(2048);
   if ($cmp14) {
    $shr32 = $wc >>> 6;
    $or = $shr32 | 192;
    $conv17 = $or&255;
    $incdec$ptr = ((($s)) + 1|0);
    HEAP8[$s>>0] = $conv17;
    $and = $wc & 63;
    $or18 = $and | 128;
    $conv19 = $or18&255;
    HEAP8[$incdec$ptr>>0] = $conv19;
    $retval$0 = 2;
    break;
   }
   $cmp21 = ($wc>>>0)<(55296);
   $3 = $wc & -8192;
   $cmp24 = ($3|0)==(57344);
   $or$cond = $cmp21 | $cmp24;
   if ($or$cond) {
    $shr2729 = $wc >>> 12;
    $or28 = $shr2729 | 224;
    $conv29 = $or28&255;
    $incdec$ptr30 = ((($s)) + 1|0);
    HEAP8[$s>>0] = $conv29;
    $shr3130 = $wc >>> 6;
    $and32 = $shr3130 & 63;
    $or33 = $and32 | 128;
    $conv34 = $or33&255;
    $incdec$ptr35 = ((($s)) + 2|0);
    HEAP8[$incdec$ptr30>>0] = $conv34;
    $and36 = $wc & 63;
    $or37 = $and36 | 128;
    $conv38 = $or37&255;
    HEAP8[$incdec$ptr35>>0] = $conv38;
    $retval$0 = 3;
    break;
   }
   $sub40 = (($wc) + -65536)|0;
   $cmp41 = ($sub40>>>0)<(1048576);
   if ($cmp41) {
    $shr4426 = $wc >>> 18;
    $or45 = $shr4426 | 240;
    $conv46 = $or45&255;
    $incdec$ptr47 = ((($s)) + 1|0);
    HEAP8[$s>>0] = $conv46;
    $shr4827 = $wc >>> 12;
    $and49 = $shr4827 & 63;
    $or50 = $and49 | 128;
    $conv51 = $or50&255;
    $incdec$ptr52 = ((($s)) + 2|0);
    HEAP8[$incdec$ptr47>>0] = $conv51;
    $shr5328 = $wc >>> 6;
    $and54 = $shr5328 & 63;
    $or55 = $and54 | 128;
    $conv56 = $or55&255;
    $incdec$ptr57 = ((($s)) + 3|0);
    HEAP8[$incdec$ptr52>>0] = $conv56;
    $and58 = $wc & 63;
    $or59 = $and58 | 128;
    $conv60 = $or59&255;
    HEAP8[$incdec$ptr57>>0] = $conv60;
    $retval$0 = 4;
    break;
   } else {
    $call66 = (___errno_location()|0);
    HEAP32[$call66>>2] = 84;
    $retval$0 = -1;
    break;
   }
  }
 } while(0);
 return ($retval$0|0);
}
function ___pthread_self_431() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_pthread_self()|0);
 return ($call|0);
}
function ___pthread_self_104() {
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (_pthread_self()|0);
 return ($call|0);
}
function ___strerror_l($e,$loc) {
 $e = $e|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, $2 = 0, $arrayidx = 0, $arrayidx15 = 0, $call = 0, $cmp = 0, $conv = 0, $dec = 0, $i$012 = 0, $i$111 = 0, $inc = 0, $incdec$ptr = 0, $s$0$lcssa = 0, $s$010 = 0, $s$1 = 0, $tobool = 0, $tobool5 = 0, $tobool59 = 0, $tobool8 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $i$012 = 0;
 while(1) {
  $arrayidx = (17815 + ($i$012)|0);
  $0 = HEAP8[$arrayidx>>0]|0;
  $conv = $0&255;
  $cmp = ($conv|0)==($e|0);
  if ($cmp) {
   label = 2;
   break;
  }
  $inc = (($i$012) + 1)|0;
  $tobool = ($inc|0)==(87);
  if ($tobool) {
   $i$111 = 87;$s$010 = 17903;
   label = 5;
   break;
  } else {
   $i$012 = $inc;
  }
 }
 if ((label|0) == 2) {
  $tobool59 = ($i$012|0)==(0);
  if ($tobool59) {
   $s$0$lcssa = 17903;
  } else {
   $i$111 = $i$012;$s$010 = 17903;
   label = 5;
  }
 }
 if ((label|0) == 5) {
  while(1) {
   label = 0;
   $s$1 = $s$010;
   while(1) {
    $1 = HEAP8[$s$1>>0]|0;
    $tobool8 = ($1<<24>>24)==(0);
    $incdec$ptr = ((($s$1)) + 1|0);
    if ($tobool8) {
     break;
    } else {
     $s$1 = $incdec$ptr;
    }
   }
   $dec = (($i$111) + -1)|0;
   $tobool5 = ($dec|0)==(0);
   if ($tobool5) {
    $s$0$lcssa = $incdec$ptr;
    break;
   } else {
    $i$111 = $dec;$s$010 = $incdec$ptr;
    label = 5;
   }
  }
 }
 $arrayidx15 = ((($loc)) + 20|0);
 $2 = HEAP32[$arrayidx15>>2]|0;
 $call = (___lctrans($s$0$lcssa,$2)|0);
 return ($call|0);
}
function ___lctrans($msg,$lm) {
 $msg = $msg|0;
 $lm = $lm|0;
 var $call = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $call = (___lctrans_impl($msg,$lm)|0);
 return ($call|0);
}
function ___lctrans_impl($msg,$lm) {
 $msg = $msg|0;
 $lm = $lm|0;
 var $0 = 0, $1 = 0, $call = 0, $cond = 0, $map_size = 0, $tobool = 0, $tobool1 = 0, $trans$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $tobool = ($lm|0)==(0|0);
 if ($tobool) {
  $trans$0 = 0;
 } else {
  $0 = HEAP32[$lm>>2]|0;
  $map_size = ((($lm)) + 4|0);
  $1 = HEAP32[$map_size>>2]|0;
  $call = (___mo_lookup($0,$1,$msg)|0);
  $trans$0 = $call;
 }
 $tobool1 = ($trans$0|0)!=(0|0);
 $cond = $tobool1 ? $trans$0 : $msg;
 return ($cond|0);
}
function ___mo_lookup($p,$size,$s) {
 $p = $p|0;
 $size = $size|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $add = 0, $add$ptr = 0, $add$ptr65 = 0, $add$ptr65$ = 0, $add16 = 0, $add23 = 0, $add31 = 0, $add42 = 0, $add49 = 0, $add59 = 0;
 var $arrayidx = 0, $arrayidx1 = 0, $arrayidx17 = 0, $arrayidx24 = 0, $arrayidx3 = 0, $arrayidx32 = 0, $arrayidx43 = 0, $arrayidx50 = 0, $arrayidx60 = 0, $b$0 = 0, $b$1 = 0, $call = 0, $call18 = 0, $call2 = 0, $call25 = 0, $call36 = 0, $call4 = 0, $call44 = 0, $call51 = 0, $cmp = 0;
 var $cmp10 = 0, $cmp26 = 0, $cmp29 = 0, $cmp52 = 0, $cmp56 = 0, $cmp6 = 0, $cmp67 = 0, $cmp71 = 0, $div = 0, $div12 = 0, $div13 = 0, $div14 = 0, $mul = 0, $mul15 = 0, $n$0 = 0, $n$1 = 0, $or = 0, $or$cond = 0, $or$cond66 = 0, $or$cond67 = 0;
 var $rem = 0, $retval$4 = 0, $sub = 0, $sub28 = 0, $sub5 = 0, $sub55 = 0, $sub79 = 0, $tobool = 0, $tobool33 = 0, $tobool37 = 0, $tobool62 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$p>>2]|0;
 $sub = (($0) + 1794895138)|0;
 $arrayidx = ((($p)) + 8|0);
 $1 = HEAP32[$arrayidx>>2]|0;
 $call = (_swapc($1,$sub)|0);
 $arrayidx1 = ((($p)) + 12|0);
 $2 = HEAP32[$arrayidx1>>2]|0;
 $call2 = (_swapc($2,$sub)|0);
 $arrayidx3 = ((($p)) + 16|0);
 $3 = HEAP32[$arrayidx3>>2]|0;
 $call4 = (_swapc($3,$sub)|0);
 $div = $size >>> 2;
 $cmp = ($call>>>0)<($div>>>0);
 L1: do {
  if ($cmp) {
   $mul = $call << 2;
   $sub5 = (($size) - ($mul))|0;
   $cmp6 = ($call2>>>0)<($sub5>>>0);
   $cmp10 = ($call4>>>0)<($sub5>>>0);
   $or$cond = $cmp6 & $cmp10;
   if ($or$cond) {
    $or = $call4 | $call2;
    $rem = $or & 3;
    $tobool = ($rem|0)==(0);
    if ($tobool) {
     $div12 = $call2 >>> 2;
     $div13 = $call4 >>> 2;
     $b$0 = 0;$n$0 = $call;
     while(1) {
      $div14 = $n$0 >>> 1;
      $add = (($b$0) + ($div14))|0;
      $mul15 = $add << 1;
      $add16 = (($mul15) + ($div12))|0;
      $arrayidx17 = (($p) + ($add16<<2)|0);
      $4 = HEAP32[$arrayidx17>>2]|0;
      $call18 = (_swapc($4,$sub)|0);
      $add23 = (($add16) + 1)|0;
      $arrayidx24 = (($p) + ($add23<<2)|0);
      $5 = HEAP32[$arrayidx24>>2]|0;
      $call25 = (_swapc($5,$sub)|0);
      $cmp26 = ($call25>>>0)<($size>>>0);
      $sub28 = (($size) - ($call25))|0;
      $cmp29 = ($call18>>>0)<($sub28>>>0);
      $or$cond66 = $cmp26 & $cmp29;
      if (!($or$cond66)) {
       $retval$4 = 0;
       break L1;
      }
      $add31 = (($call25) + ($call18))|0;
      $arrayidx32 = (($p) + ($add31)|0);
      $6 = HEAP8[$arrayidx32>>0]|0;
      $tobool33 = ($6<<24>>24)==(0);
      if (!($tobool33)) {
       $retval$4 = 0;
       break L1;
      }
      $add$ptr = (($p) + ($call25)|0);
      $call36 = (_strcmp($s,$add$ptr)|0);
      $tobool37 = ($call36|0)==(0);
      if ($tobool37) {
       break;
      }
      $cmp67 = ($n$0|0)==(1);
      $cmp71 = ($call36|0)<(0);
      $sub79 = (($n$0) - ($div14))|0;
      $n$1 = $cmp71 ? $div14 : $sub79;
      $b$1 = $cmp71 ? $b$0 : $add;
      if ($cmp67) {
       $retval$4 = 0;
       break L1;
      } else {
       $b$0 = $b$1;$n$0 = $n$1;
      }
     }
     $add42 = (($mul15) + ($div13))|0;
     $arrayidx43 = (($p) + ($add42<<2)|0);
     $7 = HEAP32[$arrayidx43>>2]|0;
     $call44 = (_swapc($7,$sub)|0);
     $add49 = (($add42) + 1)|0;
     $arrayidx50 = (($p) + ($add49<<2)|0);
     $8 = HEAP32[$arrayidx50>>2]|0;
     $call51 = (_swapc($8,$sub)|0);
     $cmp52 = ($call51>>>0)<($size>>>0);
     $sub55 = (($size) - ($call51))|0;
     $cmp56 = ($call44>>>0)<($sub55>>>0);
     $or$cond67 = $cmp52 & $cmp56;
     if ($or$cond67) {
      $add$ptr65 = (($p) + ($call51)|0);
      $add59 = (($call51) + ($call44))|0;
      $arrayidx60 = (($p) + ($add59)|0);
      $9 = HEAP8[$arrayidx60>>0]|0;
      $tobool62 = ($9<<24>>24)==(0);
      $add$ptr65$ = $tobool62 ? $add$ptr65 : 0;
      $retval$4 = $add$ptr65$;
     } else {
      $retval$4 = 0;
     }
    } else {
     $retval$4 = 0;
    }
   } else {
    $retval$4 = 0;
   }
  } else {
   $retval$4 = 0;
  }
 } while(0);
 return ($retval$4|0);
}
function _swapc($x,$c) {
 $x = $x|0;
 $c = $c|0;
 var $or5 = 0, $tobool = 0, $x$or5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $tobool = ($c|0)==(0);
 $or5 = (_llvm_bswap_i32(($x|0))|0);
 $x$or5 = $tobool ? $x : $or5;
 return ($x$or5|0);
}
function ___fwritex($s,$l,$f) {
 $s = $s|0;
 $l = $l|0;
 $f = $f|0;
 var $$pre = 0, $$pre33 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $add = 0, $add$ptr = 0, $add$ptr26 = 0, $arrayidx = 0, $call = 0, $call16 = 0, $call4 = 0;
 var $cmp = 0, $cmp11 = 0, $cmp17 = 0, $cmp6 = 0, $i$0 = 0, $i$1 = 0, $l$addr$0 = 0, $l$addr$1 = 0, $lbf = 0, $retval$1 = 0, $s$addr$1 = 0, $sub = 0, $sub$ptr$sub = 0, $tobool = 0, $tobool1 = 0, $tobool9 = 0, $wend = 0, $wpos = 0, $write = 0, $write15 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $wend = ((($f)) + 16|0);
 $0 = HEAP32[$wend>>2]|0;
 $tobool = ($0|0)==(0|0);
 if ($tobool) {
  $call = (___towrite($f)|0);
  $tobool1 = ($call|0)==(0);
  if ($tobool1) {
   $$pre = HEAP32[$wend>>2]|0;
   $3 = $$pre;
   label = 5;
  } else {
   $retval$1 = 0;
  }
 } else {
  $1 = $0;
  $3 = $1;
  label = 5;
 }
 L5: do {
  if ((label|0) == 5) {
   $wpos = ((($f)) + 20|0);
   $2 = HEAP32[$wpos>>2]|0;
   $sub$ptr$sub = (($3) - ($2))|0;
   $cmp = ($sub$ptr$sub>>>0)<($l>>>0);
   $4 = $2;
   if ($cmp) {
    $write = ((($f)) + 36|0);
    $5 = HEAP32[$write>>2]|0;
    $call4 = (FUNCTION_TABLE_iiii[$5 & 7]($f,$s,$l)|0);
    $retval$1 = $call4;
    break;
   }
   $lbf = ((($f)) + 75|0);
   $6 = HEAP8[$lbf>>0]|0;
   $cmp6 = ($6<<24>>24)>(-1);
   L10: do {
    if ($cmp6) {
     $i$0 = $l;
     while(1) {
      $tobool9 = ($i$0|0)==(0);
      if ($tobool9) {
       $9 = $4;$i$1 = 0;$l$addr$1 = $l;$s$addr$1 = $s;
       break L10;
      }
      $sub = (($i$0) + -1)|0;
      $arrayidx = (($s) + ($sub)|0);
      $7 = HEAP8[$arrayidx>>0]|0;
      $cmp11 = ($7<<24>>24)==(10);
      if ($cmp11) {
       break;
      } else {
       $i$0 = $sub;
      }
     }
     $write15 = ((($f)) + 36|0);
     $8 = HEAP32[$write15>>2]|0;
     $call16 = (FUNCTION_TABLE_iiii[$8 & 7]($f,$s,$i$0)|0);
     $cmp17 = ($call16>>>0)<($i$0>>>0);
     if ($cmp17) {
      $retval$1 = $call16;
      break L5;
     }
     $add$ptr = (($s) + ($i$0)|0);
     $l$addr$0 = (($l) - ($i$0))|0;
     $$pre33 = HEAP32[$wpos>>2]|0;
     $9 = $$pre33;$i$1 = $i$0;$l$addr$1 = $l$addr$0;$s$addr$1 = $add$ptr;
    } else {
     $9 = $4;$i$1 = 0;$l$addr$1 = $l;$s$addr$1 = $s;
    }
   } while(0);
   _memcpy(($9|0),($s$addr$1|0),($l$addr$1|0))|0;
   $10 = HEAP32[$wpos>>2]|0;
   $add$ptr26 = (($10) + ($l$addr$1)|0);
   HEAP32[$wpos>>2] = $add$ptr26;
   $add = (($i$1) + ($l$addr$1))|0;
   $retval$1 = $add;
  }
 } while(0);
 return ($retval$1|0);
}
function ___towrite($f) {
 $f = $f|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $add$ptr = 0, $and = 0, $buf = 0, $buf_size = 0, $conv = 0, $conv3 = 0, $mode = 0, $or = 0, $or5 = 0, $rend = 0, $retval$0 = 0, $rpos = 0, $sub = 0, $tobool = 0, $wbase = 0, $wend = 0;
 var $wpos = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $mode = ((($f)) + 74|0);
 $0 = HEAP8[$mode>>0]|0;
 $conv = $0 << 24 >> 24;
 $sub = (($conv) + 255)|0;
 $or = $sub | $conv;
 $conv3 = $or&255;
 HEAP8[$mode>>0] = $conv3;
 $1 = HEAP32[$f>>2]|0;
 $and = $1 & 8;
 $tobool = ($and|0)==(0);
 if ($tobool) {
  $rend = ((($f)) + 8|0);
  HEAP32[$rend>>2] = 0;
  $rpos = ((($f)) + 4|0);
  HEAP32[$rpos>>2] = 0;
  $buf = ((($f)) + 44|0);
  $2 = HEAP32[$buf>>2]|0;
  $wbase = ((($f)) + 28|0);
  HEAP32[$wbase>>2] = $2;
  $wpos = ((($f)) + 20|0);
  HEAP32[$wpos>>2] = $2;
  $buf_size = ((($f)) + 48|0);
  $3 = HEAP32[$buf_size>>2]|0;
  $add$ptr = (($2) + ($3)|0);
  $wend = ((($f)) + 16|0);
  HEAP32[$wend>>2] = $add$ptr;
  $retval$0 = 0;
 } else {
  $or5 = $1 | 32;
  HEAP32[$f>>2] = $or5;
  $retval$0 = -1;
 }
 return ($retval$0|0);
}
function _sn_write($f,$s,$l) {
 $f = $f|0;
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $2 = 0, $add$ptr = 0, $cmp = 0, $l$sub$ptr$sub = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $wend = 0, $wpos = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $wend = ((($f)) + 16|0);
 $0 = HEAP32[$wend>>2]|0;
 $wpos = ((($f)) + 20|0);
 $1 = HEAP32[$wpos>>2]|0;
 $sub$ptr$rhs$cast = $1;
 $sub$ptr$sub = (($0) - ($sub$ptr$rhs$cast))|0;
 $cmp = ($sub$ptr$sub>>>0)>($l>>>0);
 $l$sub$ptr$sub = $cmp ? $l : $sub$ptr$sub;
 _memcpy(($1|0),($s|0),($l$sub$ptr$sub|0))|0;
 $2 = HEAP32[$wpos>>2]|0;
 $add$ptr = (($2) + ($l$sub$ptr$sub)|0);
 HEAP32[$wpos>>2] = $add$ptr;
 return ($l|0);
}
function _qsort($base,$nel,$width,$cmp) {
 $base = $base|0;
 $nel = $nel|0;
 $width = $width|0;
 $cmp = $cmp|0;
 var $$pre$pre = 0, $$pre61 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $4$phi = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $add = 0, $add$ptr = 0;
 var $add$ptr1 = 0, $add$ptr33 = 0, $add$ptr55 = 0, $add$ptr57 = 0, $add$ptr65 = 0, $add14 = 0, $add47 = 0, $add59 = 0, $add6 = 0, $and = 0, $arrayidx = 0, $arrayidx16 = 0, $arrayidx40 = 0, $arrayidx53 = 0, $arrayidx7 = 0, $call = 0, $cmp11 = 0, $cmp17 = 0, $cmp24 = 0, $cmp37 = 0;
 var $cmp39 = 0, $cmp41 = 0, $cmp43 = 0, $cmp8 = 0, $cmp9 = 0, $cmp955 = 0, $head$0$lcssa = 0, $head$056 = 0, $head$1 = 0, $i$0 = 0, $idx$neg = 0, $idx$neg54 = 0, $inc = 0, $lp = 0, $mul = 0, $or = 0, $or$cond = 0, $or63 = 0, $p = 0, $pshift$0$lcssa = 0;
 var $pshift$057 = 0, $pshift$1 = 0, $pshift$2 = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $sub15 = 0, $sub50 = 0, $tobool = 0, $xor = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0;
 $lp = sp + 8|0;
 $p = sp;
 $mul = Math_imul($width, $nel)|0;
 $0 = $p;
 $1 = $0;
 HEAP32[$1>>2] = 1;
 $2 = (($0) + 4)|0;
 $3 = $2;
 HEAP32[$3>>2] = 0;
 $tobool = ($mul|0)==(0);
 L1: do {
  if (!($tobool)) {
   $idx$neg = (0 - ($width))|0;
   $arrayidx = ((($lp)) + 4|0);
   HEAP32[$arrayidx>>2] = $width;
   HEAP32[$lp>>2] = $width;
   $4 = $width;$5 = $width;$i$0 = 2;
   while(1) {
    $add = (($4) + ($width))|0;
    $add6 = (($add) + ($5))|0;
    $arrayidx7 = (($lp) + ($i$0<<2)|0);
    HEAP32[$arrayidx7>>2] = $add6;
    $cmp8 = ($add6>>>0)<($mul>>>0);
    $inc = (($i$0) + 1)|0;
    if ($cmp8) {
     $4$phi = $5;$5 = $add6;$i$0 = $inc;$4 = $4$phi;
    } else {
     break;
    }
   }
   $add$ptr = (($base) + ($mul)|0);
   $add$ptr1 = (($add$ptr) + ($idx$neg)|0);
   $cmp955 = ($add$ptr1>>>0)>($base>>>0);
   if ($cmp955) {
    $sub$ptr$lhs$cast = $add$ptr1;
    $6 = 1;$head$056 = $base;$pshift$057 = 1;
    while(1) {
     $and = $6 & 3;
     $cmp11 = ($and|0)==(3);
     do {
      if ($cmp11) {
       _sift($head$056,$width,$cmp,$pshift$057,$lp);
       _shr($p,2);
       $add14 = (($pshift$057) + 2)|0;
       $pshift$1 = $add14;
      } else {
       $sub15 = (($pshift$057) + -1)|0;
       $arrayidx16 = (($lp) + ($sub15<<2)|0);
       $7 = HEAP32[$arrayidx16>>2]|0;
       $sub$ptr$rhs$cast = $head$056;
       $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
       $cmp17 = ($7>>>0)<($sub$ptr$sub>>>0);
       if ($cmp17) {
        _sift($head$056,$width,$cmp,$pshift$057,$lp);
       } else {
        _trinkle($head$056,$width,$cmp,$p,$pshift$057,0,$lp);
       }
       $cmp24 = ($pshift$057|0)==(1);
       if ($cmp24) {
        _shl($p,1);
        $pshift$1 = 0;
        break;
       } else {
        _shl($p,$sub15);
        $pshift$1 = 1;
        break;
       }
      }
     } while(0);
     $8 = HEAP32[$p>>2]|0;
     $or = $8 | 1;
     HEAP32[$p>>2] = $or;
     $add$ptr33 = (($head$056) + ($width)|0);
     $cmp9 = ($add$ptr33>>>0)<($add$ptr1>>>0);
     if ($cmp9) {
      $6 = $or;$head$056 = $add$ptr33;$pshift$057 = $pshift$1;
     } else {
      $14 = $or;$head$0$lcssa = $add$ptr33;$pshift$0$lcssa = $pshift$1;
      break;
     }
    }
   } else {
    $14 = 1;$head$0$lcssa = $base;$pshift$0$lcssa = 1;
   }
   _trinkle($head$0$lcssa,$width,$cmp,$p,$pshift$0$lcssa,0,$lp);
   $arrayidx40 = ((($p)) + 4|0);
   $9 = $14;$head$1 = $head$0$lcssa;$pshift$2 = $pshift$0$lcssa;
   while(1) {
    $cmp37 = ($pshift$2|0)==(1);
    $cmp39 = ($9|0)==(1);
    $or$cond = $cmp37 & $cmp39;
    if ($or$cond) {
     $10 = HEAP32[$arrayidx40>>2]|0;
     $cmp41 = ($10|0)==(0);
     if ($cmp41) {
      break L1;
     }
    } else {
     $cmp43 = ($pshift$2|0)<(2);
     if (!($cmp43)) {
      _shl($p,2);
      $sub50 = (($pshift$2) + -2)|0;
      $11 = HEAP32[$p>>2]|0;
      $xor = $11 ^ 7;
      HEAP32[$p>>2] = $xor;
      _shr($p,1);
      $arrayidx53 = (($lp) + ($sub50<<2)|0);
      $12 = HEAP32[$arrayidx53>>2]|0;
      $idx$neg54 = (0 - ($12))|0;
      $add$ptr55 = (($head$1) + ($idx$neg54)|0);
      $add$ptr57 = (($add$ptr55) + ($idx$neg)|0);
      $add59 = (($pshift$2) + -1)|0;
      _trinkle($add$ptr57,$width,$cmp,$p,$add59,1,$lp);
      _shl($p,1);
      $13 = HEAP32[$p>>2]|0;
      $or63 = $13 | 1;
      HEAP32[$p>>2] = $or63;
      $add$ptr65 = (($head$1) + ($idx$neg)|0);
      _trinkle($add$ptr65,$width,$cmp,$p,$sub50,1,$lp);
      $9 = $or63;$head$1 = $add$ptr65;$pshift$2 = $sub50;
      continue;
     }
    }
    $call = (_pntz($p)|0);
    _shr($p,$call);
    $add47 = (($call) + ($pshift$2))|0;
    $$pre$pre = HEAP32[$p>>2]|0;
    $$pre61 = (($head$1) + ($idx$neg)|0);
    $9 = $$pre$pre;$head$1 = $$pre61;$pshift$2 = $add47;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function _sift($head,$width,$cmp,$pshift,$lp) {
 $head = $head|0;
 $width = $width|0;
 $cmp = $cmp|0;
 $pshift = $pshift|0;
 $lp = $lp|0;
 var $$pre = 0, $0 = 0, $1 = 0, $add$ptr = 0, $add$ptr6 = 0, $ar = 0, $arrayidx15 = 0, $arrayidx4 = 0, $call = 0, $call10 = 0, $call12 = 0, $cmp1 = 0, $cmp11 = 0, $cmp121 = 0, $cmp13 = 0, $cmp8 = 0, $head$addr$0$be = 0, $head$addr$023 = 0, $i$0$lcssa = 0, $i$024 = 0;
 var $idx$neg = 0, $idx$neg5 = 0, $inc = 0, $pshift$addr$0$be = 0, $pshift$addr$022 = 0, $sub = 0, $sub16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $ar = sp;
 HEAP32[$ar>>2] = $head;
 $cmp121 = ($pshift|0)>(1);
 L1: do {
  if ($cmp121) {
   $idx$neg = (0 - ($width))|0;
   $1 = $head;$head$addr$023 = $head;$i$024 = 1;$pshift$addr$022 = $pshift;
   while(1) {
    $add$ptr = (($head$addr$023) + ($idx$neg)|0);
    $sub = (($pshift$addr$022) + -2)|0;
    $arrayidx4 = (($lp) + ($sub<<2)|0);
    $0 = HEAP32[$arrayidx4>>2]|0;
    $idx$neg5 = (0 - ($0))|0;
    $add$ptr6 = (($add$ptr) + ($idx$neg5)|0);
    $call = (FUNCTION_TABLE_iii[$cmp & 1]($1,$add$ptr6)|0);
    $cmp8 = ($call|0)>(-1);
    if ($cmp8) {
     $call10 = (FUNCTION_TABLE_iii[$cmp & 1]($1,$add$ptr)|0);
     $cmp11 = ($call10|0)>(-1);
     if ($cmp11) {
      $i$0$lcssa = $i$024;
      break L1;
     }
    }
    $call12 = (FUNCTION_TABLE_iii[$cmp & 1]($add$ptr6,$add$ptr)|0);
    $cmp13 = ($call12|0)>(-1);
    $inc = (($i$024) + 1)|0;
    $arrayidx15 = (($ar) + ($i$024<<2)|0);
    if ($cmp13) {
     HEAP32[$arrayidx15>>2] = $add$ptr6;
     $sub16 = (($pshift$addr$022) + -1)|0;
     $head$addr$0$be = $add$ptr6;$pshift$addr$0$be = $sub16;
    } else {
     HEAP32[$arrayidx15>>2] = $add$ptr;
     $head$addr$0$be = $add$ptr;$pshift$addr$0$be = $sub;
    }
    $cmp1 = ($pshift$addr$0$be|0)>(1);
    if (!($cmp1)) {
     $i$0$lcssa = $inc;
     break L1;
    }
    $$pre = HEAP32[$ar>>2]|0;
    $1 = $$pre;$head$addr$023 = $head$addr$0$be;$i$024 = $inc;$pshift$addr$022 = $pshift$addr$0$be;
   }
  } else {
   $i$0$lcssa = 1;
  }
 } while(0);
 _cycle($width,$ar,$i$0$lcssa);
 STACKTOP = sp;return;
}
function _shr($p,$n) {
 $p = $p|0;
 $n = $n|0;
 var $$pre = 0, $$pre11 = 0, $0 = 0, $1 = 0, $2 = 0, $arrayidx = 0, $cmp = 0, $n$addr$0 = 0, $or = 0, $shl = 0, $shr = 0, $shr8 = 0, $sub = 0, $sub5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($n>>>0)>(31);
 $arrayidx = ((($p)) + 4|0);
 if ($cmp) {
  $sub = (($n) + -32)|0;
  $0 = HEAP32[$arrayidx>>2]|0;
  HEAP32[$p>>2] = $0;
  HEAP32[$arrayidx>>2] = 0;
  $1 = $0;$2 = 0;$n$addr$0 = $sub;
 } else {
  $$pre = HEAP32[$p>>2]|0;
  $$pre11 = HEAP32[$arrayidx>>2]|0;
  $1 = $$pre;$2 = $$pre11;$n$addr$0 = $n;
 }
 $shr = $1 >>> $n$addr$0;
 $sub5 = (32 - ($n$addr$0))|0;
 $shl = $2 << $sub5;
 $or = $shl | $shr;
 HEAP32[$p>>2] = $or;
 $shr8 = $2 >>> $n$addr$0;
 HEAP32[$arrayidx>>2] = $shr8;
 return;
}
function _trinkle($head,$width,$cmp,$pp,$pshift,$trusty,$lp) {
 $head = $head|0;
 $width = $width|0;
 $cmp = $cmp|0;
 $pp = $pp|0;
 $pshift = $pshift|0;
 $trusty = $trusty|0;
 $lp = $lp|0;
 var $$pre = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $add = 0, $add$ptr = 0, $add$ptr15 = 0, $add$ptr20 = 0, $add$ptr65 = 0, $add$ptr72 = 0, $ar = 0, $arrayidx18 = 0, $arrayidx2 = 0, $arrayidx28 = 0;
 var $arrayidx3 = 0, $arrayidx9 = 0, $arrayidx963 = 0, $call = 0, $call21 = 0, $call23 = 0, $call29 = 0, $call66 = 0, $cmp11 = 0, $cmp1167 = 0, $cmp12 = 0, $cmp22 = 0, $cmp24 = 0, $cmp6 = 0, $cmp638 = 0, $cmp8 = 0, $cmp839 = 0, $head$addr$0$lcssa = 0, $head$addr$032 = 0, $head$addr$04368 = 0;
 var $head$addr$04368$phi = 0, $i$0$lcssa = 0, $i$034 = 0, $i$04269 = 0, $idx$neg = 0, $idx$neg14 = 0, $idx$neg19 = 0, $idx$neg64 = 0, $inc = 0, $or$cond = 0, $p = 0, $phitmp = 0, $pshift$addr$0$lcssa = 0, $pshift$addr$036 = 0, $pshift$addr$04170 = 0, $sub = 0, $tobool31 = 0, $trusty$addr$0$lcssa = 0, $trusty$addr$04071 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $p = sp + 232|0;
 $ar = sp;
 $0 = HEAP32[$pp>>2]|0;
 HEAP32[$p>>2] = $0;
 $arrayidx2 = ((($pp)) + 4|0);
 $1 = HEAP32[$arrayidx2>>2]|0;
 $arrayidx3 = ((($p)) + 4|0);
 HEAP32[$arrayidx3>>2] = $1;
 HEAP32[$ar>>2] = $head;
 $cmp638 = ($0|0)!=(1);
 $cmp839 = ($1|0)!=(0);
 $2 = $cmp638 | $cmp839;
 L1: do {
  if ($2) {
   $idx$neg14 = (0 - ($width))|0;
   $arrayidx963 = (($lp) + ($pshift<<2)|0);
   $3 = HEAP32[$arrayidx963>>2]|0;
   $idx$neg64 = (0 - ($3))|0;
   $add$ptr65 = (($head) + ($idx$neg64)|0);
   $call66 = (FUNCTION_TABLE_iii[$cmp & 1]($add$ptr65,$head)|0);
   $cmp1167 = ($call66|0)<(1);
   if ($cmp1167) {
    $head$addr$0$lcssa = $head;$i$0$lcssa = 1;$pshift$addr$0$lcssa = $pshift;$trusty$addr$0$lcssa = $trusty;
    label = 9;
   } else {
    $phitmp = ($trusty|0)==(0);
    $add$ptr72 = $add$ptr65;$head$addr$04368 = $head;$i$04269 = 1;$pshift$addr$04170 = $pshift;$trusty$addr$04071 = $phitmp;
    while(1) {
     $cmp12 = ($pshift$addr$04170|0)>(1);
     $or$cond = $trusty$addr$04071 & $cmp12;
     if ($or$cond) {
      $add$ptr15 = (($head$addr$04368) + ($idx$neg14)|0);
      $sub = (($pshift$addr$04170) + -2)|0;
      $arrayidx18 = (($lp) + ($sub<<2)|0);
      $4 = HEAP32[$arrayidx18>>2]|0;
      $call21 = (FUNCTION_TABLE_iii[$cmp & 1]($add$ptr15,$add$ptr72)|0);
      $cmp22 = ($call21|0)>(-1);
      if ($cmp22) {
       $head$addr$032 = $head$addr$04368;$i$034 = $i$04269;$pshift$addr$036 = $pshift$addr$04170;
       label = 10;
       break L1;
      }
      $idx$neg19 = (0 - ($4))|0;
      $add$ptr20 = (($add$ptr15) + ($idx$neg19)|0);
      $call23 = (FUNCTION_TABLE_iii[$cmp & 1]($add$ptr20,$add$ptr72)|0);
      $cmp24 = ($call23|0)>(-1);
      if ($cmp24) {
       $head$addr$032 = $head$addr$04368;$i$034 = $i$04269;$pshift$addr$036 = $pshift$addr$04170;
       label = 10;
       break L1;
      }
     }
     $inc = (($i$04269) + 1)|0;
     $arrayidx28 = (($ar) + ($i$04269<<2)|0);
     HEAP32[$arrayidx28>>2] = $add$ptr72;
     $call29 = (_pntz($p)|0);
     _shr($p,$call29);
     $add = (($call29) + ($pshift$addr$04170))|0;
     $5 = HEAP32[$p>>2]|0;
     $cmp6 = ($5|0)!=(1);
     $6 = HEAP32[$arrayidx3>>2]|0;
     $cmp8 = ($6|0)!=(0);
     $7 = $cmp6 | $cmp8;
     if (!($7)) {
      $head$addr$032 = $add$ptr72;$i$034 = $inc;$pshift$addr$036 = $add;
      label = 10;
      break L1;
     }
     $$pre = HEAP32[$ar>>2]|0;
     $arrayidx9 = (($lp) + ($add<<2)|0);
     $8 = HEAP32[$arrayidx9>>2]|0;
     $idx$neg = (0 - ($8))|0;
     $add$ptr = (($add$ptr72) + ($idx$neg)|0);
     $call = (FUNCTION_TABLE_iii[$cmp & 1]($add$ptr,$$pre)|0);
     $cmp11 = ($call|0)<(1);
     if ($cmp11) {
      $head$addr$0$lcssa = $add$ptr72;$i$0$lcssa = $inc;$pshift$addr$0$lcssa = $add;$trusty$addr$0$lcssa = 0;
      label = 9;
      break;
     } else {
      $head$addr$04368$phi = $add$ptr72;$add$ptr72 = $add$ptr;$i$04269 = $inc;$pshift$addr$04170 = $add;$trusty$addr$04071 = 1;$head$addr$04368 = $head$addr$04368$phi;
     }
    }
   }
  } else {
   $head$addr$0$lcssa = $head;$i$0$lcssa = 1;$pshift$addr$0$lcssa = $pshift;$trusty$addr$0$lcssa = $trusty;
   label = 9;
  }
 } while(0);
 if ((label|0) == 9) {
  $tobool31 = ($trusty$addr$0$lcssa|0)==(0);
  if ($tobool31) {
   $head$addr$032 = $head$addr$0$lcssa;$i$034 = $i$0$lcssa;$pshift$addr$036 = $pshift$addr$0$lcssa;
   label = 10;
  }
 }
 if ((label|0) == 10) {
  _cycle($width,$ar,$i$034);
  _sift($head$addr$032,$width,$cmp,$pshift$addr$036,$lp);
 }
 STACKTOP = sp;return;
}
function _shl($p,$n) {
 $p = $p|0;
 $n = $n|0;
 var $$pre = 0, $$pre11 = 0, $0 = 0, $1 = 0, $2 = 0, $arrayidx1 = 0, $cmp = 0, $n$addr$0 = 0, $or = 0, $shl = 0, $shl8 = 0, $shr = 0, $sub = 0, $sub5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($n>>>0)>(31);
 $arrayidx1 = ((($p)) + 4|0);
 if ($cmp) {
  $sub = (($n) + -32)|0;
  $0 = HEAP32[$p>>2]|0;
  HEAP32[$arrayidx1>>2] = $0;
  HEAP32[$p>>2] = 0;
  $1 = $0;$2 = 0;$n$addr$0 = $sub;
 } else {
  $$pre = HEAP32[$arrayidx1>>2]|0;
  $$pre11 = HEAP32[$p>>2]|0;
  $1 = $$pre;$2 = $$pre11;$n$addr$0 = $n;
 }
 $shl = $1 << $n$addr$0;
 $sub5 = (32 - ($n$addr$0))|0;
 $shr = $2 >>> $sub5;
 $or = $shr | $shl;
 HEAP32[$arrayidx1>>2] = $or;
 $shl8 = $2 << $n$addr$0;
 HEAP32[$p>>2] = $shl8;
 return;
}
function _pntz($p) {
 $p = $p|0;
 var $$add = 0, $0 = 0, $1 = 0, $add = 0, $arrayidx1 = 0, $call = 0, $call2 = 0, $cmp = 0, $cmp3 = 0, $sub = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$p>>2]|0;
 $sub = (($0) + -1)|0;
 $call = (_a_ctz_l_737($sub)|0);
 $cmp = ($call|0)==(0);
 if ($cmp) {
  $arrayidx1 = ((($p)) + 4|0);
  $1 = HEAP32[$arrayidx1>>2]|0;
  $call2 = (_a_ctz_l_737($1)|0);
  $add = (($call2) + 32)|0;
  $cmp3 = ($call2|0)==(0);
  $$add = $cmp3 ? 0 : $add;
  return ($$add|0);
 } else {
  return ($call|0);
 }
 return (0)|0;
}
function _a_ctz_l_737($x) {
 $x = $x|0;
 var $and = 0, $and4 = 0, $cmp = 0, $inc = 0, $lnot = 0, $lnot5 = 0, $nTrailingZeros$07 = 0, $retval$0 = 0, $shr = 0, $x$addr$06 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $cmp = ($x|0)==(0);
 if ($cmp) {
  $retval$0 = 32;
 } else {
  $and4 = $x & 1;
  $lnot5 = ($and4|0)==(0);
  if ($lnot5) {
   $nTrailingZeros$07 = 0;$x$addr$06 = $x;
   while(1) {
    $inc = (($nTrailingZeros$07) + 1)|0;
    $shr = $x$addr$06 >>> 1;
    $and = $shr & 1;
    $lnot = ($and|0)==(0);
    if ($lnot) {
     $nTrailingZeros$07 = $inc;$x$addr$06 = $shr;
    } else {
     $retval$0 = $inc;
     break;
    }
   }
  } else {
   $retval$0 = 0;
  }
 }
 return ($retval$0|0);
}
function _cycle($width,$ar,$n) {
 $width = $width|0;
 $ar = $ar|0;
 $n = $n|0;
 var $$pre = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $add = 0, $add$ptr = 0, $arrayidx = 0, $arrayidx7 = 0, $arrayidx8 = 0, $cmp = 0, $cond = 0, $exitcond = 0, $i$022 = 0, $sub = 0, $tmp = 0, $tobool = 0, $tobool23 = 0;
 var $width$addr$024 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0;
 $tmp = sp;
 $cmp = ($n|0)<(2);
 L1: do {
  if (!($cmp)) {
   $arrayidx = (($ar) + ($n<<2)|0);
   HEAP32[$arrayidx>>2] = $tmp;
   $tobool23 = ($width|0)==(0);
   if (!($tobool23)) {
    $2 = $tmp;$width$addr$024 = $width;
    while(1) {
     $0 = ($width$addr$024>>>0)<(256);
     $cond = $0 ? $width$addr$024 : 256;
     $1 = HEAP32[$ar>>2]|0;
     _memcpy(($2|0),($1|0),($cond|0))|0;
     $i$022 = 0;
     while(1) {
      $arrayidx7 = (($ar) + ($i$022<<2)|0);
      $3 = HEAP32[$arrayidx7>>2]|0;
      $add = (($i$022) + 1)|0;
      $arrayidx8 = (($ar) + ($add<<2)|0);
      $4 = HEAP32[$arrayidx8>>2]|0;
      _memcpy(($3|0),($4|0),($cond|0))|0;
      $5 = HEAP32[$arrayidx7>>2]|0;
      $add$ptr = (($5) + ($cond)|0);
      HEAP32[$arrayidx7>>2] = $add$ptr;
      $exitcond = ($add|0)==($n|0);
      if ($exitcond) {
       break;
      } else {
       $i$022 = $add;
      }
     }
     $sub = (($width$addr$024) - ($cond))|0;
     $tobool = ($sub|0)==(0);
     if ($tobool) {
      break L1;
     }
     $$pre = HEAP32[$arrayidx>>2]|0;
     $2 = $$pre;$width$addr$024 = $sub;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function _strlen($s) {
 $s = $s|0;
 var $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $and = 0, $and3 = 0, $incdec$ptr = 0, $incdec$ptr1323 = 0, $incdec$ptr7 = 0, $lnot = 0, $neg = 0, $rem = 0, $rem13 = 0, $s$addr$0$lcssa = 0, $s$addr$015 = 0, $s$addr$1$lcssa = 0;
 var $sub = 0, $sub$ptr$lhs$cast15 = 0, $sub$ptr$lhs$cast15$sink = 0, $sub$ptr$sub17 = 0, $tobool = 0, $tobool1 = 0, $tobool10 = 0, $tobool1021 = 0, $tobool14 = 0, $w$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $s;
 $rem13 = $0 & 3;
 $tobool14 = ($rem13|0)==(0);
 L1: do {
  if ($tobool14) {
   $s$addr$0$lcssa = $s;
   label = 4;
  } else {
   $5 = $0;$s$addr$015 = $s;
   while(1) {
    $1 = HEAP8[$s$addr$015>>0]|0;
    $tobool1 = ($1<<24>>24)==(0);
    if ($tobool1) {
     $sub$ptr$lhs$cast15$sink = $5;
     break L1;
    }
    $incdec$ptr = ((($s$addr$015)) + 1|0);
    $2 = $incdec$ptr;
    $rem = $2 & 3;
    $tobool = ($rem|0)==(0);
    if ($tobool) {
     $s$addr$0$lcssa = $incdec$ptr;
     label = 4;
     break;
    } else {
     $5 = $2;$s$addr$015 = $incdec$ptr;
    }
   }
  }
 } while(0);
 if ((label|0) == 4) {
  $w$0 = $s$addr$0$lcssa;
  while(1) {
   $3 = HEAP32[$w$0>>2]|0;
   $sub = (($3) + -16843009)|0;
   $neg = $3 & -2139062144;
   $and = $neg ^ -2139062144;
   $and3 = $and & $sub;
   $lnot = ($and3|0)==(0);
   $incdec$ptr7 = ((($w$0)) + 4|0);
   if ($lnot) {
    $w$0 = $incdec$ptr7;
   } else {
    break;
   }
  }
  $4 = $3&255;
  $tobool1021 = ($4<<24>>24)==(0);
  if ($tobool1021) {
   $s$addr$1$lcssa = $w$0;
  } else {
   $$pn = $w$0;
   while(1) {
    $incdec$ptr1323 = ((($$pn)) + 1|0);
    $$pre = HEAP8[$incdec$ptr1323>>0]|0;
    $tobool10 = ($$pre<<24>>24)==(0);
    if ($tobool10) {
     $s$addr$1$lcssa = $incdec$ptr1323;
     break;
    } else {
     $$pn = $incdec$ptr1323;
    }
   }
  }
  $sub$ptr$lhs$cast15 = $s$addr$1$lcssa;
  $sub$ptr$lhs$cast15$sink = $sub$ptr$lhs$cast15;
 }
 $sub$ptr$sub17 = (($sub$ptr$lhs$cast15$sink) - ($0))|0;
 return ($sub$ptr$sub17|0);
}
function _log10($x) {
 $x = +$x;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0.0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $add = 0, $add35 = 0;
 var $add36 = 0, $add46 = 0.0, $add51 = 0.0, $add53 = 0.0, $add56 = 0.0, $add58 = 0.0, $add60 = 0.0, $add62 = 0.0, $add70 = 0.0, $add72 = 0.0, $add77 = 0.0, $add79 = 0.0, $add81 = 0.0, $add82 = 0.0, $add84 = 0.0, $add85 = 0.0, $add86 = 0.0, $and = 0, $cmp = 0, $cmp19 = 0;
 var $cmp23 = 0, $conv74 = 0.0, $div = 0.0, $div11 = 0.0, $div47 = 0.0, $hx$0 = 0, $k$0 = 0, $mul = 0.0, $mul14 = 0.0, $mul44 = 0.0, $mul45 = 0.0, $mul48 = 0.0, $mul49 = 0.0, $mul50 = 0.0, $mul52 = 0.0, $mul54 = 0.0, $mul55 = 0.0, $mul57 = 0.0, $mul59 = 0.0, $mul61 = 0.0;
 var $mul71 = 0.0, $mul73 = 0.0, $mul75 = 0.0, $mul76 = 0.0, $mul78 = 0.0, $mul80 = 0.0, $or$cond = 0, $or$cond73 = 0, $retval$0 = 0.0, $shr33 = 0, $sub = 0.0, $sub43 = 0.0, $sub63 = 0.0, $sub68 = 0.0, $sub69 = 0.0, $sub83 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $cmp = ($1>>>0)<(1048576);
 $2 = ($1|0)<(0);
 $or$cond = $2 | $cmp;
 do {
  if ($or$cond) {
   $3 = $1 & 2147483647;
   $4 = ($0|0)==(0);
   $5 = ($3|0)==(0);
   $6 = $4 & $5;
   if ($6) {
    $mul = $x * $x;
    $div = -1.0 / $mul;
    $retval$0 = $div;
    break;
   }
   if ($2) {
    $sub = $x - $x;
    $div11 = $sub / 0.0;
    $retval$0 = $div11;
    break;
   } else {
    $mul14 = $x * 18014398509481984.0;
    HEAPF64[tempDoublePtr>>3] = $mul14;$7 = HEAP32[tempDoublePtr>>2]|0;
    $8 = HEAP32[tempDoublePtr+4>>2]|0;
    $12 = $7;$17 = $8;$hx$0 = $8;$k$0 = -1077;
    label = 9;
    break;
   }
  } else {
   $cmp19 = ($1>>>0)>(2146435071);
   if ($cmp19) {
    $retval$0 = $x;
   } else {
    $cmp23 = ($1|0)==(1072693248);
    $9 = ($0|0)==(0);
    $10 = (0)==(0);
    $11 = $9 & $10;
    $or$cond73 = $11 & $cmp23;
    if ($or$cond73) {
     $retval$0 = 0.0;
    } else {
     $12 = $0;$17 = $1;$hx$0 = $1;$k$0 = -1023;
     label = 9;
    }
   }
  }
 } while(0);
 if ((label|0) == 9) {
  $add = (($hx$0) + 614242)|0;
  $shr33 = $add >>> 20;
  $add35 = (($k$0) + ($shr33))|0;
  $and = $add & 1048575;
  $add36 = (($and) + 1072079006)|0;
  HEAP32[tempDoublePtr>>2] = $12;HEAP32[tempDoublePtr+4>>2] = $add36;$13 = +HEAPF64[tempDoublePtr>>3];
  $sub43 = $13 + -1.0;
  $mul44 = $sub43 * 0.5;
  $mul45 = $sub43 * $mul44;
  $add46 = $sub43 + 2.0;
  $div47 = $sub43 / $add46;
  $mul48 = $div47 * $div47;
  $mul49 = $mul48 * $mul48;
  $mul50 = $mul49 * 0.15313837699209373;
  $add51 = $mul50 + 0.22222198432149784;
  $mul52 = $mul49 * $add51;
  $add53 = $mul52 + 0.39999999999409419;
  $mul54 = $mul49 * $add53;
  $mul55 = $mul49 * 0.14798198605116586;
  $add56 = $mul55 + 0.1818357216161805;
  $mul57 = $mul49 * $add56;
  $add58 = $mul57 + 0.28571428743662391;
  $mul59 = $mul49 * $add58;
  $add60 = $mul59 + 0.66666666666667351;
  $mul61 = $mul48 * $add60;
  $add62 = $mul54 + $mul61;
  $sub63 = $sub43 - $mul45;
  HEAPF64[tempDoublePtr>>3] = $sub63;$14 = HEAP32[tempDoublePtr>>2]|0;
  $15 = HEAP32[tempDoublePtr+4>>2]|0;
  HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $15;$16 = +HEAPF64[tempDoublePtr>>3];
  $sub68 = $sub43 - $16;
  $sub69 = $sub68 - $mul45;
  $add70 = $mul45 + $add62;
  $mul71 = $div47 * $add70;
  $add72 = $sub69 + $mul71;
  $mul73 = $16 * 0.43429448187816888;
  $conv74 = (+($add35|0));
  $mul75 = $conv74 * 0.30102999566361177;
  $mul76 = $conv74 * 3.6942390771589308E-13;
  $add77 = $16 + $add72;
  $mul78 = $add77 * 2.5082946711645275E-11;
  $add79 = $mul76 + $mul78;
  $mul80 = $add72 * 0.43429448187816888;
  $add81 = $mul80 + $add79;
  $add82 = $mul75 + $mul73;
  $sub83 = $mul75 - $add82;
  $add84 = $mul73 + $sub83;
  $add85 = $add84 + $add81;
  $add86 = $add82 + $add85;
  $retval$0 = $add86;
 }
 return (+$retval$0);
}
function ___ofl_lock() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___lock((95128|0));
 return (95136|0);
}
function ___ofl_unlock() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___unlock((95128|0));
 return;
}
function _fflush($f) {
 $f = $f|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $call = 0, $call1 = 0, $call11 = 0, $call118 = 0, $call17 = 0, $call23 = 0, $call7 = 0, $cmp = 0, $cmp15 = 0, $cmp21 = 0, $cond10 = 0, $cond20 = 0, $f$addr$0 = 0, $f$addr$019 = 0;
 var $f$addr$022 = 0, $lock = 0, $lock14 = 0, $next = 0, $or = 0, $phitmp = 0, $r$0$lcssa = 0, $r$021 = 0, $r$1 = 0, $retval$0 = 0, $tobool = 0, $tobool12 = 0, $tobool1220 = 0, $tobool25 = 0, $tobool5 = 0, $wbase = 0, $wpos = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $tobool = ($f|0)==(0|0);
 do {
  if ($tobool) {
   $1 = HEAP32[2918]|0;
   $tobool5 = ($1|0)==(0|0);
   if ($tobool5) {
    $cond10 = 0;
   } else {
    $2 = HEAP32[2918]|0;
    $call7 = (_fflush($2)|0);
    $cond10 = $call7;
   }
   $call11 = (___ofl_lock()|0);
   $f$addr$019 = HEAP32[$call11>>2]|0;
   $tobool1220 = ($f$addr$019|0)==(0|0);
   if ($tobool1220) {
    $r$0$lcssa = $cond10;
   } else {
    $f$addr$022 = $f$addr$019;$r$021 = $cond10;
    while(1) {
     $lock14 = ((($f$addr$022)) + 76|0);
     $3 = HEAP32[$lock14>>2]|0;
     $cmp15 = ($3|0)>(-1);
     if ($cmp15) {
      $call17 = (___lockfile($f$addr$022)|0);
      $cond20 = $call17;
     } else {
      $cond20 = 0;
     }
     $wpos = ((($f$addr$022)) + 20|0);
     $4 = HEAP32[$wpos>>2]|0;
     $wbase = ((($f$addr$022)) + 28|0);
     $5 = HEAP32[$wbase>>2]|0;
     $cmp21 = ($4>>>0)>($5>>>0);
     if ($cmp21) {
      $call23 = (___fflush_unlocked($f$addr$022)|0);
      $or = $call23 | $r$021;
      $r$1 = $or;
     } else {
      $r$1 = $r$021;
     }
     $tobool25 = ($cond20|0)==(0);
     if (!($tobool25)) {
      ___unlockfile($f$addr$022);
     }
     $next = ((($f$addr$022)) + 56|0);
     $f$addr$0 = HEAP32[$next>>2]|0;
     $tobool12 = ($f$addr$0|0)==(0|0);
     if ($tobool12) {
      $r$0$lcssa = $r$1;
      break;
     } else {
      $f$addr$022 = $f$addr$0;$r$021 = $r$1;
     }
    }
   }
   ___ofl_unlock();
   $retval$0 = $r$0$lcssa;
  } else {
   $lock = ((($f)) + 76|0);
   $0 = HEAP32[$lock>>2]|0;
   $cmp = ($0|0)>(-1);
   if (!($cmp)) {
    $call118 = (___fflush_unlocked($f)|0);
    $retval$0 = $call118;
    break;
   }
   $call = (___lockfile($f)|0);
   $phitmp = ($call|0)==(0);
   $call1 = (___fflush_unlocked($f)|0);
   if ($phitmp) {
    $retval$0 = $call1;
   } else {
    ___unlockfile($f);
    $retval$0 = $call1;
   }
  }
 } while(0);
 return ($retval$0|0);
}
function ___fflush_unlocked($f) {
 $f = $f|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $cmp = 0, $cmp4 = 0, $rend = 0, $retval$0 = 0, $rpos = 0, $seek = 0, $sub$ptr$lhs$cast = 0, $sub$ptr$rhs$cast = 0, $sub$ptr$sub = 0, $tobool = 0, $wbase = 0, $wend = 0, $wpos = 0;
 var $write = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $wpos = ((($f)) + 20|0);
 $0 = HEAP32[$wpos>>2]|0;
 $wbase = ((($f)) + 28|0);
 $1 = HEAP32[$wbase>>2]|0;
 $cmp = ($0>>>0)>($1>>>0);
 if ($cmp) {
  $write = ((($f)) + 36|0);
  $2 = HEAP32[$write>>2]|0;
  (FUNCTION_TABLE_iiii[$2 & 7]($f,0,0)|0);
  $3 = HEAP32[$wpos>>2]|0;
  $tobool = ($3|0)==(0|0);
  if ($tobool) {
   $retval$0 = -1;
  } else {
   label = 3;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $rpos = ((($f)) + 4|0);
  $4 = HEAP32[$rpos>>2]|0;
  $rend = ((($f)) + 8|0);
  $5 = HEAP32[$rend>>2]|0;
  $cmp4 = ($4>>>0)<($5>>>0);
  if ($cmp4) {
   $sub$ptr$lhs$cast = $4;
   $sub$ptr$rhs$cast = $5;
   $sub$ptr$sub = (($sub$ptr$lhs$cast) - ($sub$ptr$rhs$cast))|0;
   $seek = ((($f)) + 40|0);
   $6 = HEAP32[$seek>>2]|0;
   (FUNCTION_TABLE_iiii[$6 & 7]($f,$sub$ptr$sub,1)|0);
  }
  $wend = ((($f)) + 16|0);
  HEAP32[$wend>>2] = 0;
  HEAP32[$wbase>>2] = 0;
  HEAP32[$wpos>>2] = 0;
  HEAP32[$rend>>2] = 0;
  HEAP32[$rpos>>2] = 0;
  $retval$0 = 0;
 }
 return ($retval$0|0);
}
function runPostSets() {
}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var end = 0, aligned_end = 0, block_aligned_end = 0, value4 = 0;
    end = (ptr + num)|0;

    value = value & 0xff;
    if ((num|0) >= 67 /* 64 bytes for an unrolled loop + 3 bytes for unaligned head*/) {
      while ((ptr&3) != 0) {
        HEAP8[((ptr)>>0)]=value;
        ptr = (ptr+1)|0;
      }

      aligned_end = (end & -4)|0;
      block_aligned_end = (aligned_end - 64)|0;
      value4 = value | (value << 8) | (value << 16) | (value << 24);

      while((ptr|0) <= (block_aligned_end|0)) {
        HEAP32[((ptr)>>2)]=value4;
        HEAP32[(((ptr)+(4))>>2)]=value4;
        HEAP32[(((ptr)+(8))>>2)]=value4;
        HEAP32[(((ptr)+(12))>>2)]=value4;
        HEAP32[(((ptr)+(16))>>2)]=value4;
        HEAP32[(((ptr)+(20))>>2)]=value4;
        HEAP32[(((ptr)+(24))>>2)]=value4;
        HEAP32[(((ptr)+(28))>>2)]=value4;
        HEAP32[(((ptr)+(32))>>2)]=value4;
        HEAP32[(((ptr)+(36))>>2)]=value4;
        HEAP32[(((ptr)+(40))>>2)]=value4;
        HEAP32[(((ptr)+(44))>>2)]=value4;
        HEAP32[(((ptr)+(48))>>2)]=value4;
        HEAP32[(((ptr)+(52))>>2)]=value4;
        HEAP32[(((ptr)+(56))>>2)]=value4;
        HEAP32[(((ptr)+(60))>>2)]=value4;
        ptr = (ptr + 64)|0;
      }

      while ((ptr|0) < (aligned_end|0) ) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    // The remaining bytes.
    while ((ptr|0) < (end|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (end-num)|0;
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    var aligned_dest_end = 0;
    var block_aligned_dest_end = 0;
    var dest_end = 0;
    // Test against a benchmarked cutoff limit for when HEAPU8.set() becomes faster to use.
    if ((num|0) >=
      8192
    ) {
      return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    }

    ret = dest|0;
    dest_end = (dest + num)|0;
    if ((dest&3) == (src&3)) {
      // The initial unaligned < 4-byte front.
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      aligned_dest_end = (dest_end & -4)|0;
      block_aligned_dest_end = (aligned_dest_end - 64)|0;
      while ((dest|0) <= (block_aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        HEAP32[(((dest)+(4))>>2)]=((HEAP32[(((src)+(4))>>2)])|0);
        HEAP32[(((dest)+(8))>>2)]=((HEAP32[(((src)+(8))>>2)])|0);
        HEAP32[(((dest)+(12))>>2)]=((HEAP32[(((src)+(12))>>2)])|0);
        HEAP32[(((dest)+(16))>>2)]=((HEAP32[(((src)+(16))>>2)])|0);
        HEAP32[(((dest)+(20))>>2)]=((HEAP32[(((src)+(20))>>2)])|0);
        HEAP32[(((dest)+(24))>>2)]=((HEAP32[(((src)+(24))>>2)])|0);
        HEAP32[(((dest)+(28))>>2)]=((HEAP32[(((src)+(28))>>2)])|0);
        HEAP32[(((dest)+(32))>>2)]=((HEAP32[(((src)+(32))>>2)])|0);
        HEAP32[(((dest)+(36))>>2)]=((HEAP32[(((src)+(36))>>2)])|0);
        HEAP32[(((dest)+(40))>>2)]=((HEAP32[(((src)+(40))>>2)])|0);
        HEAP32[(((dest)+(44))>>2)]=((HEAP32[(((src)+(44))>>2)])|0);
        HEAP32[(((dest)+(48))>>2)]=((HEAP32[(((src)+(48))>>2)])|0);
        HEAP32[(((dest)+(52))>>2)]=((HEAP32[(((src)+(52))>>2)])|0);
        HEAP32[(((dest)+(56))>>2)]=((HEAP32[(((src)+(56))>>2)])|0);
        HEAP32[(((dest)+(60))>>2)]=((HEAP32[(((src)+(60))>>2)])|0);
        dest = (dest+64)|0;
        src = (src+64)|0;
      }
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    } else {
      // In the unaligned copy case, unroll a bit as well.
      aligned_dest_end = (dest_end - 4)|0;
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        HEAP8[(((dest)+(1))>>0)]=((HEAP8[(((src)+(1))>>0)])|0);
        HEAP8[(((dest)+(2))>>0)]=((HEAP8[(((src)+(2))>>0)])|0);
        HEAP8[(((dest)+(3))>>0)]=((HEAP8[(((src)+(3))>>0)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    }
    // The remaining unaligned < 4 byte tail.
    while ((dest|0) < (dest_end|0)) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
    }
    return ret|0;
}
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    $rem = $rem | 0;
    var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
    $n_sroa_0_0_extract_trunc = $a$0;
    $n_sroa_1_4_extract_shift$0 = $a$1;
    $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
    $d_sroa_0_0_extract_trunc = $b$0;
    $d_sroa_1_4_extract_shift$0 = $b$1;
    $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
    if (($n_sroa_1_4_extract_trunc | 0) == 0) {
      $4 = ($rem | 0) != 0;
      if (($d_sroa_1_4_extract_trunc | 0) == 0) {
        if ($4) {
          HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$4) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
    $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
    do {
      if (($d_sroa_0_0_extract_trunc | 0) == 0) {
        if ($17) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
            HEAP32[$rem + 4 >> 2] = 0;
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        if (($n_sroa_0_0_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0;
            HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
        if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0 | $a$0 & -1;
            HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
          }
          $_0$1 = 0;
          $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($51 >>> 0 <= 30) {
          $57 = $51 + 1 | 0;
          $58 = 31 - $51 | 0;
          $sr_1_ph = $57;
          $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$17) {
          $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
          $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          if ($119 >>> 0 <= 31) {
            $125 = $119 + 1 | 0;
            $126 = 31 - $119 | 0;
            $130 = $119 - 31 >> 31;
            $sr_1_ph = $125;
            $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
            $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
            $q_sroa_0_1_ph = 0;
            $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
            break;
          }
          if (($rem | 0) == 0) {
            $_0$1 = 0;
            $_0$0 = 0;
            return (tempRet0 = $_0$1, $_0$0) | 0;
          }
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
        if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
          $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
          $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          $89 = 64 - $88 | 0;
          $91 = 32 - $88 | 0;
          $92 = $91 >> 31;
          $95 = $88 - 32 | 0;
          $105 = $95 >> 31;
          $sr_1_ph = $88;
          $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
          $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
          $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
          $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
          break;
        }
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
          HEAP32[$rem + 4 >> 2] = 0;
        }
        if (($d_sroa_0_0_extract_trunc | 0) == 1) {
          $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$0 = 0 | $a$0 & -1;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        } else {
          $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
          $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
          $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
      }
    } while (0);
    if (($sr_1_ph | 0) == 0) {
      $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
      $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
      $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
      $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = 0;
    } else {
      $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
      $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
      $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
      $137$1 = tempRet0;
      $q_sroa_1_1198 = $q_sroa_1_1_ph;
      $q_sroa_0_1199 = $q_sroa_0_1_ph;
      $r_sroa_1_1200 = $r_sroa_1_1_ph;
      $r_sroa_0_1201 = $r_sroa_0_1_ph;
      $sr_1202 = $sr_1_ph;
      $carry_0203 = 0;
      while (1) {
        $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
        $149 = $carry_0203 | $q_sroa_0_1199 << 1;
        $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
        $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
        _i64Subtract($137$0 | 0, $137$1 | 0, $r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0) | 0;
        $150$1 = tempRet0;
        $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
        $152 = $151$0 & 1;
        $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0, $151$0 & $d_sroa_0_0_insert_insert99$0 | 0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1 | 0) | 0;
        $r_sroa_0_0_extract_trunc = $154$0;
        $r_sroa_1_4_extract_trunc = tempRet0;
        $155 = $sr_1202 - 1 | 0;
        if (($155 | 0) == 0) {
          break;
        } else {
          $q_sroa_1_1198 = $147;
          $q_sroa_0_1199 = $149;
          $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
          $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
          $sr_1202 = $155;
          $carry_0203 = $152;
        }
      }
      $q_sroa_1_1_lcssa = $147;
      $q_sroa_0_1_lcssa = $149;
      $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
      $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = $152;
    }
    $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
    $q_sroa_0_0_insert_ext75$1 = 0;
    $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
    if (($rem | 0) != 0) {
      HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
      HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
    }
    $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
    $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $1$0 = 0;
    $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
    return $1$0 | 0;
}
function _sbrk(increment) {
    increment = increment|0;
    var oldDynamicTop = 0;
    var oldDynamicTopOnChange = 0;
    var newDynamicTop = 0;
    var totalMemory = 0;
    increment = ((increment + 15) & -16)|0;
    oldDynamicTop = HEAP32[DYNAMICTOP_PTR>>2]|0;
    newDynamicTop = oldDynamicTop + increment | 0;

    if (((increment|0) > 0 & (newDynamicTop|0) < (oldDynamicTop|0)) // Detect and fail if we would wrap around signed 32-bit int.
      | (newDynamicTop|0) < 0) { // Also underflow, sbrk() should be able to be used to subtract.
      abortOnCannotGrowMemory()|0;
      ___setErrNo(12);
      return -1;
    }

    HEAP32[DYNAMICTOP_PTR>>2] = newDynamicTop;
    totalMemory = getTotalMemory()|0;
    if ((newDynamicTop|0) > (totalMemory|0)) {
      if ((enlargeMemory()|0) == 0) {
        HEAP32[DYNAMICTOP_PTR>>2] = oldDynamicTop;
        ___setErrNo(12);
        return -1;
      }
    }
    return oldDynamicTop|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $rem = 0, __stackBase__ = 0;
    __stackBase__ = STACKTOP;
    STACKTOP = STACKTOP + 16 | 0;
    $rem = __stackBase__ | 0;
    ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
    STACKTOP = __stackBase__;
    return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function _llvm_bswap_i32(x) {
    x = x|0;
    return (((x&0xff)<<24) | (((x>>8)&0xff)<<16) | (((x>>16)&0xff)<<8) | (x>>>24))|0;
}
function _llvm_bswap_i16(x) {
    x = x|0;
    return (((x&0xff)<<8) | ((x>>8)&0xff))|0;
}

  
function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&7](a1|0,a2|0,a3|0)|0;
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&3](a1|0,a2|0);
}


function dynCall_ii(index,a1) {
  index = index|0;
  a1=a1|0;
  return FUNCTION_TABLE_ii[index&1](a1|0)|0;
}


function dynCall_iiiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return FUNCTION_TABLE_iiiii[index&7](a1|0,a2|0,a3|0,a4|0)|0;
}


function dynCall_iii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return FUNCTION_TABLE_iii[index&1](a1|0,a2|0)|0;
}


function dynCall_viiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  FUNCTION_TABLE_viiii[index&7](a1|0,a2|0,a3|0,a4|0);
}

function b0(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; abort(0);return 0;
}
function b1(p0,p1) {
 p0 = p0|0;p1 = p1|0; abort(1);
}
function b2(p0) {
 p0 = p0|0; abort(2);return 0;
}
function b3(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; abort(3);return 0;
}
function b4(p0,p1) {
 p0 = p0|0;p1 = p1|0; abort(4);return 0;
}
function b5(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; abort(5);
}
function _init_xrpow_core_sse__wrapper(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; _init_xrpow_core_sse(p0|0,p1|0,p2|0,p3|0);
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiii = [b0,___stdio_write,___stdio_seek,___stdout_write,_sn_write,_choose_table_nonMMX,b0,b0];
var FUNCTION_TABLE_vii = [b1,_fht,_lame_report_def,b1];
var FUNCTION_TABLE_ii = [b2,___stdio_close];
var FUNCTION_TABLE_iiiii = [b3,_count_bit_null,_count_bit_noESC,_count_bit_noESC_from2,_count_bit_noESC_from3,b3,b3,b3];
var FUNCTION_TABLE_iii = [b4,_floatcompare];
var FUNCTION_TABLE_viiii = [b5,_VBR_new_iteration_loop,_VBR_old_iteration_loop,_CBR_iteration_loop,_ABR_iteration_loop,_init_xrpow_core_c,_init_xrpow_core_sse__wrapper,b5];

  return { stackSave: stackSave, getTempRet0: getTempRet0, _memset: _memset, setThrew: setThrew, _lame_init: _lame_init, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, _fflush: _fflush, _lame_set_num_channels: _lame_set_num_channels, _llvm_cttz_i32: _llvm_cttz_i32, _sbrk: _sbrk, _memcpy: _memcpy, _llvm_bswap_i32: _llvm_bswap_i32, _lame_init_params: _lame_init_params, _lame_encode_flush: _lame_encode_flush, _lame_set_mode: _lame_set_mode, stackAlloc: stackAlloc, _i64Subtract: _i64Subtract, _lame_set_brate: _lame_set_brate, ___udivmoddi4: ___udivmoddi4, setTempRet0: setTempRet0, _i64Add: _i64Add, _llvm_bswap_i16: _llvm_bswap_i16, _emscripten_get_global_libc: _emscripten_get_global_libc, _lame_encode_buffer_ieee_float: _lame_encode_buffer_ieee_float, ___udivdi3: ___udivdi3, ___errno_location: ___errno_location, _free: _free, runPostSets: runPostSets, _lame_close: _lame_close, _lame_set_in_samplerate: _lame_set_in_samplerate, establishStackSpace: establishStackSpace, ___uremdi3: ___uremdi3, stackRestore: stackRestore, _malloc: _malloc, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiii: dynCall_iiii, dynCall_vii: dynCall_vii, dynCall_ii: dynCall_ii, dynCall_iiiii: dynCall_iiiii, dynCall_iii: dynCall_iii, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);

var stackSave = Module["stackSave"] = asm["stackSave"];
var getTempRet0 = Module["getTempRet0"] = asm["getTempRet0"];
var _memset = Module["_memset"] = asm["_memset"];
var setThrew = Module["setThrew"] = asm["setThrew"];
var _lame_init = Module["_lame_init"] = asm["_lame_init"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var _fflush = Module["_fflush"] = asm["_fflush"];
var _lame_set_num_channels = Module["_lame_set_num_channels"] = asm["_lame_set_num_channels"];
var _llvm_cttz_i32 = Module["_llvm_cttz_i32"] = asm["_llvm_cttz_i32"];
var _sbrk = Module["_sbrk"] = asm["_sbrk"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _llvm_bswap_i32 = Module["_llvm_bswap_i32"] = asm["_llvm_bswap_i32"];
var _lame_init_params = Module["_lame_init_params"] = asm["_lame_init_params"];
var _lame_encode_flush = Module["_lame_encode_flush"] = asm["_lame_encode_flush"];
var _lame_set_mode = Module["_lame_set_mode"] = asm["_lame_set_mode"];
var stackAlloc = Module["stackAlloc"] = asm["stackAlloc"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _lame_set_brate = Module["_lame_set_brate"] = asm["_lame_set_brate"];
var ___udivmoddi4 = Module["___udivmoddi4"] = asm["___udivmoddi4"];
var setTempRet0 = Module["setTempRet0"] = asm["setTempRet0"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _llvm_bswap_i16 = Module["_llvm_bswap_i16"] = asm["_llvm_bswap_i16"];
var _emscripten_get_global_libc = Module["_emscripten_get_global_libc"] = asm["_emscripten_get_global_libc"];
var _lame_encode_buffer_ieee_float = Module["_lame_encode_buffer_ieee_float"] = asm["_lame_encode_buffer_ieee_float"];
var ___udivdi3 = Module["___udivdi3"] = asm["___udivdi3"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var _free = Module["_free"] = asm["_free"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var _lame_close = Module["_lame_close"] = asm["_lame_close"];
var _lame_set_in_samplerate = Module["_lame_set_in_samplerate"] = asm["_lame_set_in_samplerate"];
var establishStackSpace = Module["establishStackSpace"] = asm["establishStackSpace"];
var ___uremdi3 = Module["___uremdi3"] = asm["___uremdi3"];
var stackRestore = Module["stackRestore"] = asm["stackRestore"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
;
Runtime.stackAlloc = Module['stackAlloc'];
Runtime.stackSave = Module['stackSave'];
Runtime.stackRestore = Module['stackRestore'];
Runtime.establishStackSpace = Module['establishStackSpace'];
Runtime.setTempRet0 = Module['setTempRet0'];
Runtime.getTempRet0 = Module['getTempRet0'];


// === Auto-generated postamble setup entry stuff ===

Module['asm'] = asm;






/**
 * @constructor
 * @extends {Error}
 */
function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);


  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      var toLog = e;
      if (e && typeof e === 'object' && e.stack) {
        toLog = [e, e.stack];
      }
      Module.printErr('exception thrown: ' + toLog);
      Module['quit'](1, e);
    }
  } finally {
    calledMain = true;
  }
}




/** @type {function(Array=)} */
function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    return;
  }


  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return;

    ensureInitRuntime();

    preMain();


    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    return;
  }

  if (Module['noExitRuntime']) {
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    process['exit'](status);
  }
  Module['quit'](status, new ExitStatus(status));
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (Module['onAbort']) {
    Module['onAbort'](what);
  }

  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}





// {{MODULE_ADDITIONS}}



  var NUM_CH = 2,
      HEAPU8 = Module.HEAPU8,
      malloc = Module._malloc,
      free = Module._free,
      lame_init = Module._lame_init,
      lame_set_mode = Module._lame_set_mode,
      lame_set_num_channels = Module._lame_set_num_channels,
      lame_set_in_samplerate = Module._lame_set_in_samplerate,
      lame_set_brate = Module._lame_set_brate,
      lame_init_params = Module._lame_init_params,
      lame_encode_buffer_ieee_float = Module._lame_encode_buffer_ieee_float,
      lame_encode_flush = Module._lame_encode_flush,
      lame_close = Module._lame_close;

  var Encoder = function(sampleRate, bitRate) {
    this.gfp = lame_init();
    lame_set_mode(this.gfp, 1/*JOINT_STEREO*/);
    lame_set_num_channels(this.gfp, NUM_CH);
    lame_set_in_samplerate(this.gfp, sampleRate);
    lame_set_brate(this.gfp, bitRate);
    lame_init_params(this.gfp);
    this.allocBuffers(8192);
    this.mp3Buffers = [];
  };

  Encoder.prototype.encode = function(buffers) {
    var length = buffers[0].length;
    if (length > this.srcLen) {
      this.freeBuffers();
      this.allocBuffers(length);
    }
    for (var ch = 0; ch < NUM_CH; ++ch)
      this.srcBuf[ch].set(buffers[ch]);
    var nBytes = lame_encode_buffer_ieee_float(
      this.gfp, this.srcPtr[0], this.srcPtr[1], length,
      this.dstPtr, this.dstSz);
    this.mp3Buffers.push(new Uint8Array(this.dstBuf.subarray(0, nBytes)));
  };

  Encoder.prototype.finish = function(mimeType) {
    var nBytes = lame_encode_flush(this.gfp, this.dstPtr, this.dstSz);
    this.mp3Buffers.push(new Uint8Array(this.dstBuf.subarray(0, nBytes)));
    var blob = new Blob(this.mp3Buffers, {type: mimeType || 'audio/mpeg'});
    this.cleanup();
    return blob;
  };

  Encoder.prototype.cancel = Encoder.prototype.cleanup = function() {
    lame_close(this.gfp);
    delete this.gfp;
    delete this.mp3Buffers;
    this.freeBuffers();
  };

  Encoder.prototype.allocBuffers = function(srcLen) {
    this.srcLen = srcLen;
    this.srcPtr = [];
    this.srcBuf = [];
    for (var ch = 0; ch < NUM_CH; ++ch) {
      this.srcPtr[ch] = malloc(this.srcLen * 4);
      this.srcBuf[ch] = new Float32Array(HEAPU8.buffer,
                                         this.srcPtr[ch], this.srcLen);
    }
    this.dstSz = Math.ceil(1.25 * this.srcLen) + 7200;  // see lame.h
    this.dstPtr = malloc(this.dstSz);
    this.dstBuf = new Uint8Array(HEAPU8.buffer, this.dstPtr, this.dstSz);
  };

  Encoder.prototype.freeBuffers = function() {
    delete this.dstBuf;
    delete this.srcBuf;
    free(this.dstPtr);
    for (var ch = 0; ch < NUM_CH; ++ch)
      free(this.srcPtr[ch]);
    delete this.dstPtr;
    delete this.srcPtr;
  };

  if (typeof Module.onReady === 'function') {
    if (Module.calledRun) {
      Module.onReady(Module);
    } else {
      Module.addOnPostRun(Module.onReady);
    }
  }
  return Encoder;
}
